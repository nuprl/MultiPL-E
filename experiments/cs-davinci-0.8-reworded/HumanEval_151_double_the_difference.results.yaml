language: cs
name: HumanEval_151_double_the_difference
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // Declare a local variable\
    \ to store the sum of squares of all odd\n        // numbers in the input list.\
    \ Assign it the value 0.\n        long oddSquaresSum = 0;\n        // Iterate\
    \ over each element in the input list.\n        foreach (var val in lst) {\n \
    \           // Check if this element is positive integer.\n            if (val\
    \ > 0 && (long)val == val) {\n                // Check if this element is odd.\n\
    \                if ((long)val % 2 != 0) {\n                    // Square this\
    \ element and add the square to the variable storing\n                    // the\
    \ sum of squares of all odd numbers.\n                    oddSquaresSum += (long)val\
    \ * (long)val;\n                }\n            }\n        }\n        // Return\
    \ the sum of squares of all odd numbers in the input list.\n        return oddSquaresSum;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f - (long)f == 0 && f > 0) {\n \
    \               sum += (long)f * (long)f;\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaf0c936d84b463b8d20c6469b1449c8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaf0c936d84b463b8d20c6469b1449c8>:0 \n"
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        if (lst.Count == 0) {\n\
    \            return 0L;\n        }\n        BigInteger sum = BigInteger.Zero;\n\
    \        foreach (float x in lst) {\n            if (Math.Abs(x) == (long)Math.Abs(x)\
    \ && Math.Abs(x) % 2 == 1) {\n                sum += (long)x * (long)x;\n    \
    \        }\n        }\n        return (long)sum * 2L;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new List<float>()))\
    \ == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c89a34703134ea1a4d8a862abf043f3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c89a34703134ea1a4d8a862abf043f3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x % 2 == 1 && x > 0) {\n       \
    \         sum += (long)x * (long)x;\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // insert your code here\n\
    \        int sumOfOddSquares = 0;\n        for (int i = 0; i < lst.Count; i++)\
    \ {\n            if (lst[i] % 2 == 1 && lst[i] > 0) {\n                sumOfOddSquares\
    \ += (int)lst[i] * (int)lst[i];\n            }\n        }\n        return sumOfOddSquares;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ long count = 0;\n        foreach (float x in lst) {\n            if (x < 0)\
    \ {\n                continue;\n            }\n            if (x % 1 != 0) {\n\
    \                continue;\n            }\n            sum += (long)x;\n     \
    \       count += 1;\n        }\n        if (count == 0) {\n            return\
    \ 0;\n        }\n        return sum / count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <25fe1bcab684448f817c7183ed57fa59>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <25fe1bcab684448f817c7183ed57fa59>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015755
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        throw new NotImplementedException();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00006] in <174a017578b34cbe9a614e0978a37b97>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00006]\
    \ in <174a017578b34cbe9a614e0978a37b97>:0 \n"
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        var sum = (new List<long>(new\
    \ long[]{(long)0L}));\n        foreach (var x in lst) {\n            if ((((x\
    \ % (long)1L) == (long)0L) && (x > (long)0L))) {\n                sum = (new List<long>(new\
    \ long[]{(sum[(int)(0L)] + (((long)x * (long)x)))}));\n            }\n       \
    \ }\n        return (sum[(int)(0L)]);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4f49b218a5564e7eac166bb79371d09a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4f49b218a5564e7eac166bb79371d09a>:0 \n"
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        var r = 0L;\n        foreach\
    \ (var v in lst) {\n            if (v > 0 && v % 2 == 1) {\n                r\
    \ += (long)v * (long)v;\n            }\n        }\n        return 2 * r;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0e5fcb6bb0e348b3aa05a43b057dc65f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0e5fcb6bb0e348b3aa05a43b057dc65f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long res = 0;\n       \
    \ foreach (float i in lst) {\n            if (i >= 0 && Math.Floor(i) == i) {\n\
    \                if (i % 2 != 0) {\n                    res += (long)Math.Pow(i,\
    \ 2);\n                }\n            }\n        }\n        return res;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long oddSum = 0;\n    \
    \    long evenSum = 0;\n        foreach (float i in lst) {\n            if (i\
    \ % 2 == 0) {\n                evenSum += i * i;\n            } else {\n     \
    \           oddSum += i * i;\n            }\n        }\n        return 2 * (oddSum\
    \ - evenSum);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbaw7d8sg.cs(25,17): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpbaw7d8sg.cs(27,17): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        List<long> lst2 = new List<long>();\n\
    \        foreach (var i in lst) {\n            if (i > 0 && i == (long)i) {\n\
    \                lst2.Add((long)i);\n            }\n        }\n        long max\
    \ = 0;\n        long min = 0;\n        foreach (var i in lst2) {\n           \
    \ if (i % 2 == 1) {\n                max += i * i;\n            }\n          \
    \  else {\n                min += i * i;\n            }\n        }\n        return\
    \ 2 * (max - min);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ed6c146b19e14d4590024b9ffc3f3517>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ed6c146b19e14d4590024b9ffc3f3517>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015755
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // >>> DoubleTheDifference\
    \ = lambda lst: (sum(((i*i) for i in lst if (((i>=0) and (i==int(i))) and (i%2==1)))))*2\n\
    \        // https://docs.python.org/3/reference/expressions.html#binary-arithmetic-operations\n\
    \        return lst.Where(x => x >= 0 && x == (long)x && x % 2 == 1).Select(x\
    \ => x * x).Sum() * 2;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvu5hrk7z.cs(23,16): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015755
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return SumOfSquaresOfOdd(lst)\
    \ - SquareOfSumOfOdd(lst);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp53fznpi1.cs(21,16): error CS0103: The name ''SumOfSquaresOfOdd'' does
    not exist in the current context

    /tmp/tmp53fznpi1.cs(21,41): error CS0103: The name ''SquareOfSumOfOdd'' does not
    exist in the current context

    '
  timestamp: 1660015755
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // return ListFns.Sum(ListFns.Map(((Func<long,\
    \ long>)(x => x * x)), ListFns.Filter(((Func<long, bool>)(x => x % 2L == 1L)),\
    \ ListFns.Map(((Func<float, long>)(x => x >= 0L && (x - (long)x) == 0L ? (long)x\
    \ : 0L)), lst))));\n        return ListFns.Sum(ListFns.Map(((Func<long, long>)(x\
    \ => x * x)), ListFns.Filter(((Func<long, bool>)(x => x % 2L == 1L)), ListFns.Map(((Func<float,\
    \ long>)(x => x >= 0L && (x - (long)x) == 0L ? (long)x : 0L)), lst))));\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp462hv0as.cs(22,16): error CS0103: The name ''ListFns'' does not exist
    in the current context

    /tmp/tmp462hv0as.cs(22,28): error CS0103: The name ''ListFns'' does not exist
    in the current context

    /tmp/tmp462hv0as.cs(22,74): error CS0103: The name ''ListFns'' does not exist
    in the current context

    /tmp/tmp462hv0as.cs(22,130): error CS0103: The name ''ListFns'' does not exist
    in the current context

    '
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long acc = (long)0L;\n\
    \        foreach (float n in lst) {\n            if (n % (long)2L == (long)1L\
    \ && n >= (long)0L) {\n                long nn = (long)n;\n                acc\
    \ += nn * nn;\n            }\n        }\n        return acc;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // Replace the following\
    \ line with your code\n        long sum = 0;\n        foreach (float i in lst)\
    \ {\n            if (i % 2 == 1) {\n                sum += (long)i * (long)i;\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new List<float>()))\
    \ == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long ret = 0;\n       \
    \ foreach (float i in lst) {\n            if (i > 0 && (int)i % 2 == 1) {\n  \
    \              ret += (long)i * (long)i;\n            }\n        }\n        return\
    \ ret;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n      List<long> lst1 = lst.Where(x\
    \ => x % 1 == 0).Where(x => x >= 0).Select(x => (long)x).ToList();\n      long\
    \ sum = 0;\n      long sum_even = 0;\n      long sum_odd = 0;\n      foreach (long\
    \ x in lst1) {\n        sum = sum + x;\n        if (x % 2 == 0) {\n          sum_even\
    \ = sum_even + x;\n        } else {\n          sum_odd = sum_odd + x;\n      \
    \  }\n      }\n      long square_sum_even = sum_even * sum_even;\n      long square_sum_odd\
    \ = sum_odd * sum_odd;\n      long diff = square_sum_even - square_sum_odd;\n\
    \      long result = diff * 2;\n      return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new List<float>()))\
    \ == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cb0825f274f743848db71192a134dd48>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cb0825f274f743848db71192a134dd48>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float n in lst) {\n            if (n % 2 == 1 && n > 0) {\n       \
    \         sum += (long) (n * n);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long result = 0;\n    \
    \    // ...\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ae8277f7ef5243f89f181f1bda22d390>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ae8277f7ef5243f89f181f1bda22d390>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015755
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num % 2 == 1) {\n            \
    \    sum += num * num;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvuh6e5sk.cs(24,17): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        Debug.Assert(lst != null);\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b72a8e51e14947489899774c7a726636>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b72a8e51e14947489899774c7a726636>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long difference = 0;\n\
    \        foreach (float item in lst) {\n            if (item == (long)item &&\
    \ item >= 0 && item % 2 != 0) {\n                difference += (long)Math.Pow(item,\
    \ 2);\n            }\n        }\n        return difference * 2;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fbb8a662b1b74a5d8259a967a03e4b4c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fbb8a662b1b74a5d8259a967a03e4b4c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long ret = 0;\n       \
    \ for (int i = 0; i < lst.Count; i++) {\n            float v = lst[i];\n     \
    \       if (v >= 0) {\n                int v2 = (int)v;\n                if (v2\
    \ == v) {\n                    if (v2 % 2 == 1) {\n                        ret\
    \ += v2 * v2;\n                    }\n                }\n            }\n     \
    \   }\n        return ret;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // >>> from collections\
    \ import Counter\n        // >>> c=Counter([1,1,2,2,2,2,3,3,3,4,4,4,4,4,5,5,5,5,5,5])\n\
    \        // >>> print(c)\n        // Counter({4: 5, 5: 6, 2: 4, 3: 3, 1: 2})\n\
    \        // >>> print(c.values())\n        // dict_values([2, 4, 3, 5, 6])\n \
    \       // >>> print(c.keys())\n        // dict_keys([1, 2, 3, 4, 5])\n      \
    \  // >>> print(c.most_common(3))\n        // [(4, 5), (5, 6), (2, 4)]\n     \
    \   // >>> sum(x**2 for x in lst if x%2==1)\n        // --- press CTRL+C to exit\
    \ ---\n        // >>> sum(x**2 for x in lst if x%2==1)\n        // --- press CTRL+C\
    \ to exit ---\n        // >>> sum(x**2 for x in lst if x%2==1)\n        // ---\
    \ press CTRL+C to exit ---\n        // >>> sum(x**2 for x in lst if x%2==1)\n\
    \        // --- press CTRL+C to exit ---\n        // >>> sum(x**2 for x in lst\
    \ if x%2==1)\n        // --- press CTRL+C to exit ---\n        // >>> sum(x**2\
    \ for x in lst if x%2==1)\n        // --- press CTRL+C to exit ---\n        //\
    \ >>> sum(x**2 for x in lst if x%2==1)\n        // --- press CTRL+C to exit ---\n\
    \        // >>> sum(x**2 for x in lst if x%2==1)\n        // --- press CTRL+C\
    \ to exit ---\n        // >>> sum(x**2 for x in lst if x%2==1)\n        // ---\
    \ press CTRL+C to exit ---\n        // >>> sum(x**2 for x in lst if x%2==1)\n\
    \        // --- press CTRL+C to exit ---\n        // >>> sum(x**2 for x in lst\
    \ if x%\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph8x8mef8.cs(20,24): error CS0161: ''Problem.DoubleTheDifference(List<float>)'':
    not all code paths return a value

    '
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sumOfOddSquares =\
    \ 0;\n        int i = 0;\n        while (i < lst.Count) {\n            float elem\
    \ = lst[i];\n            if (((elem % 2L) == 0L) || (elem < 0L)) {\n         \
    \       lst.RemoveAt(i);\n            } else {\n                sumOfOddSquares\
    \ += (long)(elem * elem);\n                i += 1;\n            }\n        }\n\
    \        return 2L * sumOfOddSquares;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e2780cc2de684079933b7fe955fd2c88>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e2780cc2de684079933b7fe955fd2c88>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return (long)0L;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17819e356fc94f7f94d7b547f344fa95>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17819e356fc94f7f94d7b547f344fa95>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return (long)lst.Where(x\
    \ => x % 2 == 1).Sum(x => x * x);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // Your code goes here\n\
    \        if (lst.Count == 0) {\n            return 0;\n        }\n        long\
    \ sum = 0;\n        foreach (var e in lst) {\n            if (e % 2 == 1) {\n\
    \                sum += (long)e * (long)e;\n            }\n        }\n       \
    \ return sum * 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <def5df041fcc48999ab5fb407d431254>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <def5df041fcc48999ab5fb407d431254>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return lst.Sum(n => (long)Math.Pow(n,\
    \ 2)) ;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <043c4a7ab93447158a9c9c12b8ef3764>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <043c4a7ab93447158a9c9c12b8ef3764>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return (long)lst.Where(x\
    \ => (x % 2 == 1) && (x > 0) && (x % 1 == 0)).Select(x => x * x).Sum();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ bool first = true;\n        foreach (var num in lst) {\n            if (num\
    \ < 0 || num % 1 != 0) {\n                continue;\n            }\n         \
    \   var n = (long)num;\n            if (n % 2 == 0) {\n                if (first)\
    \ {\n                    sum = 0;\n                    first = false;\n      \
    \          }\n                sum = sum - n * n;\n            } else {\n     \
    \           sum = sum + n * n;\n            }\n        }\n        return sum *\
    \ 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6458986f56e84cfab4044c1263c00f2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6458986f56e84cfab4044c1263c00f2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return (long) (2 * lst.Where(e\
    \ => e % 2 == 1).Select(e => e * e).Sum());\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <722bf8e0950e4ac59c86fe81a8f9f5de>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <722bf8e0950e4ac59c86fe81a8f9f5de>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // Your code goes here.\n\
    \        return (long)0L;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88322ed2c1b745218cd8410baa7acd1c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88322ed2c1b745218cd8410baa7acd1c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ long sumOfSquares = 0;\n        foreach (float num in lst) {\n            if\
    \ (num < 0) {\n                continue;\n            }\n            long numAsLong\
    \ = (long)num;\n            if (numAsLong == num) {\n                sum += numAsLong;\n\
    \                sumOfSquares += numAsLong * numAsLong;\n            }\n     \
    \   }\n        return sumOfSquares - sum * sum;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new List<float>()))\
    \ == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9791069599654a4d9130320ffb0802c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9791069599654a4d9130320ffb0802c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return 42L;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c7473fe283374530a8f808c513182a20>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c7473fe283374530a8f808c513182a20>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        var oddSquares = lst.Select(e\
    \ => e)\n                            .Where(e => e % 2 == 1 || e % 2 == -1)\n\
    \                            .Select(e => (long)e * (long)e);\n        var evenSquares\
    \ = lst.Select(e => e)\n                             .Where(e => e % 2 == 0)\n\
    \                             .Select(e => (long)e * (long)e);\n        return\
    \ Enumerable.Sum(oddSquares) - Enumerable.Sum(evenSquares);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <587d84a8148a4c2ba83294e5eb6026da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <587d84a8148a4c2ba83294e5eb6026da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015756
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long t1 = 0;\n        long\
    \ t2 = 0;\n        long t3 = 0;\n        long t4 = 0;\n        long t5 = 0;\n\
    \        long t6 = 0;\n        long t7 = 0;\n        long t8 = 0;\n        long\
    \ t9 = 0;\n        long t10 = 0;\n        long t11 = 0;\n        long t12 = 0;\n\
    \        long t13 = 0;\n        long t14 = 0;\n        long t15 = 0;\n       \
    \ long t16 = 0;\n        long t17 = 0;\n        long t18 = 0;\n        long t19\
    \ = 0;\n        long t20 = 0;\n        long t21 = 0;\n        long t22 = 0;\n\
    \        long t23 = 0;\n        long t24 = 0;\n        long t25 = 0;\n       \
    \ long t26 = 0;\n        long t27 = 0;\n        long t28 = 0;\n        long t29\
    \ = 0;\n        long t30 = 0;\n        long t31 = 0;\n        long t32 = 0;\n\
    \        long t33 = 0;\n        long t34 = 0;\n        long t35 = 0;\n       \
    \ long t36 = 0;\n        long t37 = 0;\n        long t38 = 0;\n        long t39\
    \ = 0;\n        long t40 = 0;\n        long t41 = 0;\n        long t42 = 0;\n\
    \        long t43 = 0;\n        long t44 = 0;\n        long t45 = 0;\n       \
    \ long t46 = 0;\n        long t47 = 0;\n        long t48 = 0;\n        long t49\
    \ = 0;\n        long t50 = 0;\n        long t51 = 0;\n        long t52 = 0;\n\
    \        long t53 = 0;\n        long t54 = 0;\n        long t55 = 0;\n       \
    \ long t56 = 0;\n        long t57 = 0;\n        long t58 = 0;\n        long t59\
    \ = 0;\n        long t60 = 0;\n        long t61 = 0;\n        long t62 = 0;\n\
    \        long t63 = 0;\n        long t64 = 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa5w23q1p.cs(21,14): warning CS0219: The variable ''t1'' is assigned but
    its value is never used

    /tmp/tmpa5w23q1p.cs(22,14): warning CS0219: The variable ''t2'' is assigned but
    its value is never used

    /tmp/tmpa5w23q1p.cs(23,14): warning CS0219: The variable ''t3'' is assigned but
    its value is never used

    /tmp/tmpa5w23q1p.cs(24,14): warning CS0219: The variable ''t4'' is assigned but
    its value is never used

    /tmp/tmpa5w23q1p.cs(25,14): warning CS0219: The variable ''t5'' is assigned but
    its value is never used

    /tmp/tmpa5w23q1p.cs(26,14): warning CS0219: The variable ''t6'' is assigned but
    its value is never used

    /tmp/tmpa5w23q1p.cs(27,14): warning CS0219: The variable ''t7'' is assigned but
    its value is never used

    /tmp/tmpa5w23q1p.cs(28,14): warning CS0219: The variable ''t8'' is assigned but
    its value is never used

    /tmp/tmpa5w23q1p.cs(29,14): warning CS0219: The variable ''t9'' is assigned but
    its value is never used

    /tmp/tmpa5w23q1p.cs(30,14): warning CS0219: The variable ''t10'' is assigned but
    its value is never used

    /tmp/tmpa5w23q1p.cs(31,14): warning CS0219: The variable ''t11'' is assigned but
    its value is never used

    /tmp/tmpa5w23q1p.cs(32,14): warning CS0219: The variable ''t12'' is assigned but
    its value is never used

    /tmp/tmpa5w23q1p.cs(33,14): warning CS0219: The variable ''t13'' is assigned but
    its value is never used

    /tmp/tmpa5w23q1p.cs(34,14): warning CS0219: The variable ''t14'' is assigned but
    its value is never used

    /tmp/tmpa5w23q1p.cs(35,14): warning CS0219: The variable ''t15'' is assigned but
    its value is never used

    /tmp/tmpa5w23q1p.cs(36,14): warning CS0219: The variable ''t16'' is assigned but
    its value is never used

    /tmp/tmpa5w23q1p.cs(37,14): warning CS0219: The variable ''t17'' is assigned but
    its value is never used

    /tmp/tmpa5w23q1p.cs(38,14): warning CS0219: The variable ''t18'' is assigned but
    its value is never used

    /tmp/tmpa5w23q1p.cs(39,14): warning CS0219: The variable ''t19'' is assigned b'
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ for (int i = 0; i < lst.Count; i++) {\n            if (((int)lst[i]) % 2 ==\
    \ 1) {\n                sum += (((int)lst[i]) * ((int)lst[i]));\n            }\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum_of_odd_squares\
    \ = 0;\n        foreach (float elt in lst) {\n            if (elt == (float)Math.Floor(elt)\
    \ && elt >= 0 && elt % 2 == 1) {\n                sum_of_odd_squares += (long)Math.Pow(elt,\
    \ 2);\n            }\n        }\n        return 2 * sum_of_odd_squares;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <924e0ed47897412ca51effd1757b63c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <924e0ed47897412ca51effd1757b63c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return (long)lst.Where(item\
    \ => item > 0 && (long)item % 2 == 1).Sum(item => Math.Pow(item, 2));\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015756
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // Insert your code here.\
    \ Read input using 'Console.ReadLine()' and print output using 'Console.WriteLine()'.\n\
    \        throw new NotImplementedException();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00006] in <4994056d0f4a4650a876bb9892fdeb0f>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00006]\
    \ in <4994056d0f4a4650a876bb9892fdeb0f>:0 \n"
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return 1;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b1bf4cc7b72945aca4c08031016c9542>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b1bf4cc7b72945aca4c08031016c9542>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015756
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return (from float v in\
    \ lst where v > 0 && v == (long)v && v % 2 == 1 select v * v).Sum();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvkw7_cd5.cs(21,16): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long result = 0;\n    \
    \    foreach (long i in lst) {\n            if (i > 0 && i % 2 == 1) {\n     \
    \           result += i * i;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        if (lst.Count == 0) {\n\
    \            return 0;\n        }\n        else {\n            long OddTotal =\
    \ 0;\n            long EvenTotal = 0;\n            for (int i = 0; i < lst.Count;\
    \ i++) {\n                if (lst[i] % 2 == 0) {\n                    EvenTotal\
    \ += (long) lst[i] * (long) lst[i];\n                }\n                else {\n\
    \                    OddTotal += (long) lst[i] * (long) lst[i];\n            \
    \    }\n            }\n            return OddTotal * 2 - EvenTotal;\n        }\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cdfb280ae0484f80867139f62985f982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cdfb280ae0484f80867139f62985f982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        List<float> new_lst = new\
    \ List<float>();\n        foreach (float e in lst) {\n            if (e > 0 &&\
    \ Math.Floor(e) == e) {\n                new_lst.Add(e);\n            }\n    \
    \    }\n        int count = 0;\n        foreach (float e in new_lst) {\n     \
    \       if (e % 2 == 1) {\n                count += 1;\n            }\n      \
    \  }\n        return count;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <79099a81a5df46b4ab360e5d69d33f7d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <79099a81a5df46b4ab360e5d69d33f7d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        int sum = 0;\n        foreach\
    \ (int i in lst) {\n            if (i % 2 == 1) {\n                sum += i *\
    \ i;\n            }\n        }\n        return sum * 2;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new List<float>()))\
    \ == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7369f5e8818c4308a121fffff709056d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7369f5e8818c4308a121fffff709056d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015756
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        if (lst.Count < 1) {\n\
    \            return 0L;\n        } else {\n            long sumSquaresOfOddNumbers\
    \ = 0L;\n            foreach (var number in lst) {\n                if (number\
    \ >= 0L && number % 2L == 1L) {\n                    sumSquaresOfOddNumbers +=\
    \ number * number;\n                }\n            }\n            return sumSquaresOfOddNumbers\
    \ * 2L;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwssdh1hw.cs(27,21): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015756
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        throw new NotImplementedException();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00006] in <174a017578b34cbe9a614e0978a37b97>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00006]\
    \ in <174a017578b34cbe9a614e0978a37b97>:0 \n"
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // return 0;\n        long\
    \ sumOfEvenSquares = 0;\n        long sumOfOddSquares = 0;\n        for (int i\
    \ = 0; i < lst.Count; i++) {\n            if (lst[i] % 2 == 0) {\n           \
    \     sumOfEvenSquares += (long)Math.Pow(lst[i], 2);\n            } else {\n \
    \               sumOfOddSquares += (long)Math.Pow(lst[i], 2);\n            }\n\
    \        }\n        return 2 * (sumOfOddSquares - sumOfEvenSquares);\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3df3cbd5f40446f5b5498029abc34f70>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3df3cbd5f40446f5b5498029abc34f70>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015756
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return lst.Select(e =>\
    \ e * e)\n                  .Where(e => e % 2 == 1)\n                  .Sum();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpriqbrkmc.cs(21,16): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        //TODO: Implement your\
    \ solution here\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5b99f761977f492f95ee1f57eb11c53b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5b99f761977f492f95ee1f57eb11c53b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015756
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        var tempList = new List<float>();\n\
    \        foreach (var num in lst) {\n            if (IsInt(num) && IsOdd(num)\
    \ && IsPositive(num)) {\n                tempList.Add(num);\n            }\n \
    \       }\n        var sumOfSquares = tempList.Sum(x => x * x);\n        return\
    \ sumOfSquares;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdjgsi5m7.cs(23,17): error CS0103: The name ''IsInt'' does not exist in
    the current context

    /tmp/tmpdjgsi5m7.cs(23,31): error CS0103: The name ''IsOdd'' does not exist in
    the current context

    /tmp/tmpdjgsi5m7.cs(23,45): error CS0103: The name ''IsPositive'' does not exist
    in the current context

    /tmp/tmpdjgsi5m7.cs(28,16): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        if ((lst == null)) {\n\
    \            throw new ArgumentNullException(\"lst\");\n        }\n        float\
    \ temp = 0;\n        for (int i = 0; (i) < (lst.Count); i++) {\n            if\
    \ (((lst[i]) % (2L)) == (1L)) {\n                temp = ((temp) + ((lst[i]) *\
    \ (lst[i])));\n            }\n        }\n        return ((long)(temp));\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015756
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        var squares = lst.Select(x\
    \ => x * x).Where(x => x > 0 && (int)x == x).ToList();\n        long sumOfSquares\
    \ = squares.Sum();\n        long difference = squares.Count() * (squares.Count()\
    \ - 1);\n        return 2 * difference * sumOfSquares;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new List<float>()))\
    \ == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0v7bj5og.cs(22,29): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015756
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        //return Enumerable.Range(0,\
    \ lst.Count).Select((i) => {\n        //    return (long)Math.Pow(lst[i], 2);\n\
    \        //}).Sum();\n        return lst.Select((i) => {\n            return Math.Pow(i,\
    \ 2);\n        }).Sum();\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd6ay7gqb.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long counter = 0;\n   \
    \     foreach (var v in lst) {\n            if (v % 1 == 0 && v > 0) {\n     \
    \           counter += (long)v * (long)v;\n            }\n        }\n        return\
    \ counter;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <87344781d5d241529fc303c153529822>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <87344781d5d241529fc303c153529822>:0 \n"
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015755
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        Func<float, long> square\
    \ = (num) => {\n            return (long)(num * num);\n        };\n        Func<float,\
    \ long> doubleIfOdd = (num) => {\n            return (num % 2) == 0 ? square(num)\
    \ : 2 * square(num);\n        };\n        Func<long, long, long> add = (a, b)\
    \ => {\n            return a + b;\n        };\n        return lst.Where(num =>\
    \ num % 1 == 0 && num >= 0).Select(doubleIfOdd).Aggregate(add);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains\
    \ no elements\n  at System.Linq.Enumerable.Aggregate[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source, System.Func`3[T1,T2,TResult] func) [0x00030] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.DoubleTheDifference (System.Collections.Generic.List`1[T] lst)\
    \ [0x00084] in <e77a72e58142424a99cbe9f17b4bf2a0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00006] in <e77a72e58142424a99cbe9f17b4bf2a0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.InvalidOperationException: Sequence contains no elements\n\
    \  at System.Linq.Enumerable.Aggregate[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source, System.Func`3[T1,T2,TResult] func) [0x00030] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.DoubleTheDifference (System.Collections.Generic.List`1[T] lst)\
    \ [0x00084] in <e77a72e58142424a99cbe9f17b4bf2a0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00006] in <e77a72e58142424a99cbe9f17b4bf2a0>:0 \n"
  stdout: ''
  timestamp: 1660015756
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        throw new Exception(\"\
    Not implemented\");\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.Exception: Not implemented\n  at Problem.Main\
    \ (System.String[] args) [0x00006] in <8171f88490a54f6aaa85998c11ad5aea>:0 \n\
    [ERROR] FATAL UNHANDLED EXCEPTION: System.Exception: Not implemented\n  at Problem.Main\
    \ (System.String[] args) [0x00006] in <8171f88490a54f6aaa85998c11ad5aea>:0 \n"
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        int i = 0;\n        long\
    \ sum = 0;\n        while ((i < lst.Count)) {\n            float f = lst[i];\n\
    \            float f_squared = (f * f);\n            if (((!((f < 0L)) && ((f\
    \ % 1L) == 0L)) && ((f % 2L) == 1L))) {\n                sum = (sum + ((long)f_squared));\n\
    \            }\n            i = (i + 1);\n        }\n        return (sum * 2L);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <84a6b74f219246f4bd7f50f27a640ef2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <84a6b74f219246f4bd7f50f27a640ef2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015757
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ for (int i = 0; i < lst.Count; i++) {\n            if (IsOdd((long)lst[i]))\
    \ {\n                sum += (long)Math.Pow(lst[i], 2);\n            }\n      \
    \  }\n        return sum;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptsj75jot.cs(23,17): error CS0103: The name ''IsOdd'' does not exist in
    the current context

    '
  timestamp: 1660015756
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        throw new NotImplementedException();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00006] in <174a017578b34cbe9a614e0978a37b97>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00006]\
    \ in <174a017578b34cbe9a614e0978a37b97>:0 \n"
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        if (lst.Count == 0) {\n\
    \            return 0L;\n        }\n        lst = lst.Select(x => x >= 0f ? x\
    \ : 0f).ToList();\n        return lst.Select(x => (int)x).Sum(x => x * x);\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <224ecb2fcdf846dc9e9997f2fcb7d5ff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <224ecb2fcdf846dc9e9997f2fcb7d5ff>:0 \n"
  stdout: ''
  timestamp: 1660015757
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        throw new NotImplementedException();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00006] in <174a017578b34cbe9a614e0978a37b97>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00006]\
    \ in <174a017578b34cbe9a614e0978a37b97>:0 \n"
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long total = 0;\n     \
    \   for (long i = 0; i < lst.Count; i++) {\n            float item = lst[(int)i];\n\
    \            if (((item % 2L) == 0L) && (item > 0L)) {\n                total\
    \ = (total + ((long)item * (long)item));\n            }\n        }\n        return\
    \ total;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8911bb6446084de2ae4851fc02a48e19>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8911bb6446084de2ae4851fc02a48e19>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        if (lst.Count == 0) {\n\
    \            return 0L;\n        }\n        long diff = 0L;\n        long sum\
    \ = 0L;\n        foreach (var item in lst) {\n            long x = (long)item;\n\
    \            if (x > 0L && x % 2L == 1L) {\n                diff += x * x;\n \
    \           }\n            sum += x;\n        }\n        return diff * 2L - sum\
    \ * sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a12e6f6c85444a259ed832dfb62d971f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a12e6f6c85444a259ed832dfb62d971f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // Your code goes here.\n\
    \        float Sum = 0f;\n        float Sumofsquares = 0f;\n        foreach (float\
    \ i in lst) {\n            if (i < 0 || !i.Equals((long)i)) {\n              \
    \  continue;\n            } else {\n                if (i % 2 == 0) {\n      \
    \              Sum += i;\n                } else {\n                    Sumofsquares\
    \ += (i * i);\n                }\n            }\n        }\n        return (long)(2\
    \ * (Sumofsquares - Sum));\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7133eeae3a6b43deb8c0fa60cfca5e89>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7133eeae3a6b43deb8c0fa60cfca5e89>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015757
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long result = 0;\n    \
    \    foreach (float num in lst) {\n            if (num >= (long)0L && num == (long)num)\
    \ {\n                var x = num % (long)2L;\n                if (x == (long)1L)\
    \ {\n                    long squared = (long)num * (long)num;\n             \
    \       result = result + squared;\n                }\n            }\n       \
    \ }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015757
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long res = 0L;\n      \
    \  long sumPos = 0L;\n        long sumNeg = 0L;\n        foreach (var x in lst)\
    \ {\n            if (x > 0.0f) {\n                sumPos += (long)x;\n       \
    \     }\n            else if (x < 0.0f) {\n                sumNeg += (long)x;\n\
    \            }\n        }\n        res = sumPos - sumNeg;\n        return res\
    \ * 2L;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c8b6393dafc841e299becea579180b27>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c8b6393dafc841e299becea579180b27>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015757
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long diff = 0;\n      \
    \  foreach (float num in lst) {\n            if (num < 0) {\n                continue;\n\
    \            }\n            if (num % 1 != 0) {\n                continue;\n \
    \           }\n            if (num % 2 == 0) {\n                continue;\n  \
    \          }\n            diff += (long) Math.Pow(num, 2);\n        }\n      \
    \  return diff * 2;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <864f6f413155474bb1e4bf2c7b528a9d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <864f6f413155474bb1e4bf2c7b528a9d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015757
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        List<float> lst1 = lst.Where(v\
    \ => v % 1 == 0 && v > 0).ToList();\n        long a = lst1.Where(v => v % 2 ==\
    \ 0).Sum(v => (long)v * (long)v);\n        long b = lst1.Where(v => v % 2 == 1).Sum(v\
    \ => (long)v * (long)v);\n        return (a - b) * 2;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new List<float>()))\
    \ == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <592aa1cf7e52469baf21e703e57366b1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <592aa1cf7e52469baf21e703e57366b1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015757
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long ret = 0;\n       \
    \ foreach (var n in lst) {\n            if (n%2 == 1) {\n                ret +=\
    \ (long)n*(long)n;\n            }\n        }\n        return ret*2;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d644c521bae14171a030bde14c23f7eb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d644c521bae14171a030bde14c23f7eb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015757
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // return 2*sum(sq(x) for\
    \ x in lst if x not in [-2, -1, 0, 1])\n        // return 2*sum(sq(x) for x in\
    \ lst if x in [2, 3])\n        return 2*lst.Select(x => x > 2 ? (long)Math.Pow(x,\
    \ 2) : 0).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2a9f1881b67f44a68469d6a4026172cd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2a9f1881b67f44a68469d6a4026172cd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015757
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long x = 0L;\n        long\
    \ y = 0L;\n        foreach (var element in lst) {\n            if (element % 2L\
    \ == 1L) {\n                y += element * element;\n            }\n         \
    \   else {\n                x += element * element;\n            }\n        }\n\
    \        return 2L * (y - x);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7yf2x7qz.cs(25,17): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp7yf2x7qz.cs(28,17): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015757
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long s = 0L;\n        for\
    \ (long i = 0L; i < lst.Count; i++) {\n            long elem = (long)lst[(int)i];\n\
    \            if (elem == 0L) {\n                continue;\n            }\n   \
    \         else if (elem % 2L == 0L) {\n                s -= elem * elem;\n   \
    \         }\n            else {\n                s += elem * elem;\n         \
    \   }\n        }\n        return s;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b0cb7ccae83b42c5b8c40680d50d1919>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b0cb7ccae83b42c5b8c40680d50d1919>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015757
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // replace this line with\
    \ your code\n        long result = 0;\n        foreach (float i in lst) {\n  \
    \          if (i % 2 == 1 && i > 0) {\n                result += (long)Math.Pow(i,\
    \ 2);\n            }\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new List<float>()))\
    \ == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015757
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // Your code goes here.\n\
    \        return (long)0L;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88322ed2c1b745218cd8410baa7acd1c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88322ed2c1b745218cd8410baa7acd1c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        var list = lst.Select(x\
    \ => Math.Abs(x)).Where(x => Math.Floor(x) == x).Select(x => (long)x).ToList();\n\
    \        var odd = list.Where(x => x % 2 != 0).ToList();\n        var even = list.Where(x\
    \ => x % 2 == 0).ToList();\n        var result = odd.Sum(x => x * x) - even.Sum(x\
    \ => x * x);\n        return result * 2;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d31f62bfcb4b4788885587fbe05a1c68>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d31f62bfcb4b4788885587fbe05a1c68>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015757
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sqsum = 0;\n     \
    \   foreach (float x in lst) {\n            if (x >= 0 && x % 1 == 0 && x % 2\
    \ == 1) {\n                sqsum += (long)x * (long)x;\n            }\n      \
    \  }\n        return 2 * sqsum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1e9e84bd0fb54e088d52666a5ec475be>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1e9e84bd0fb54e088d52666a5ec475be>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015757
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long ret = 0;\n       \
    \ foreach (float f in lst) {\n            if (f < 0) {\n                continue;\n\
    \            }\n            if (f % 1 != 0) {\n                continue;\n   \
    \         }\n            ret += (long)f * (long)f;\n        }\n        return\
    \ ret;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5676f5eb0054a47be80d6144fd7adab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5676f5eb0054a47be80d6144fd7adab>:0 \n"
  stdout: ''
  timestamp: 1660015757
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // Write your code here!\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <952e8316e139462fb5b16d6f6de63ecd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <952e8316e139462fb5b16d6f6de63ecd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015757
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long __retres = 0;\n  \
    \      if (lst.Count != 0) {\n            int __counter = 0;\n            float\
    \ p = 0f;\n            float q = 0f;\n            float r = 0f;\n            foreach\
    \ (float v in lst) {\n                __counter += 1;\n                p = v;\n\
    \                if (((__counter % 2) == 0)) {\n                    q = p;\n \
    \                   if (((((((p - (long)p) == 0.0f) && (p > 0f)) && (p <= 10f))\
    \ && ((q - (long)q) == 0.0f)) && (q > 0f))) {\n                        r = ((q\
    \ - p) * (q - p));\n                        __retres += (long)r;\n           \
    \         }\n                }\n            }\n        }\n        return __retres;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8914dcf101044573bdc9e1acdafab9c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8914dcf101044573bdc9e1acdafab9c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015757
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long total=0;\n       \
    \ foreach(float num in lst) {\n            if(num>=0) {\n                total\
    \ += num*num;\n            }\n        }\n        return total;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9jv74qqb.cs(24,17): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015757
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        BigInteger sum = 0;\n \
    \       foreach (float f in lst) {\n            int i = (int)f;\n            if\
    \ (i % 2 == 1) {\n                sum += (BigInteger)i * i;\n            }\n \
    \       }\n        return (long)sum * 2;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <45d1a1f52be944b6b3e2a8cee14382ca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <45d1a1f52be944b6b3e2a8cee14382ca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015757
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // Time complexity: O(n),\
    \ where n is the length of lst\n        // Space complexity: O(1)\n        long\
    \ res = 0;\n        foreach (float num in lst) {\n            if (num > 0 && num\
    \ % 1 == 0 && num % 2 == 1) {\n                res += (long)num * (long)num;\n\
    \            }\n        }\n        return res;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new List<float>()))\
    \ == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015757
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        var sumOfSquares = (long)\
    \ 0L;\n        foreach (var item in lst) {\n            if (item != (long) 0L\
    \ && (item % (long) 2L) == (long) 1L) {\n                sumOfSquares += (long)\
    \ (item * item);\n            }\n        }\n        return sumOfSquares;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015757
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        List<long> lst_1 = new\
    \ List<long>();\n        for (int i = 0; i < lst.Count; i++) {\n            long\
    \ __lst_1_v__ = 0;\n            if (lst[i] > 0) {\n                __lst_1_v__\
    \ = (long)lst[i];\n            }\n            else {\n                __lst_1_v__\
    \ = 0;\n            }\n            if (__lst_1_v__ % 2 == 1) {\n             \
    \   lst_1.Add(__lst_1_v__);\n            }\n        }\n        long sum = 0;\n\
    \        for (int i = 0; i < lst_1.Count; i++) {\n            sum = sum + lst_1[i]\
    \ * lst_1[i];\n        }\n        return 2 * sum;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new List<float>()))\
    \ == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <86c3964047e14892918d1824f318d0cb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <86c3964047e14892918d1824f318d0cb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015757
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ for (long i = 0; i < lst.Count; i++) {\n            float x = lst[(int)i];\n\
    \            if ((x % 1) == 0 && x > 0) {\n                sum += (long)x * (long)x;\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new List<float>()))\
    \ == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <845c37de4969429d8b3ff860eef05dda>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <845c37de4969429d8b3ff860eef05dda>:0 \n"
  stdout: ''
  timestamp: 1660015757
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        List<float> negativeNumbers\
    \ = new List<float>();\n        List<float> evenNumbers = new List<float>();\n\
    \        foreach (float num in lst) {\n            if (num < 0) {\n          \
    \      negativeNumbers.Add(num);\n            }\n            if (num % 2 == 0)\
    \ {\n                evenNumbers.Add(num);\n            }\n        }\n       \
    \ if (negativeNumbers.Count == 0 && evenNumbers.Count == 0) {\n            return\
    \ 0;\n        }\n        return (long)(2 * (SumOfSquares(evenNumbers) - SumOfSquares(negativeNumbers)));\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4dpdxep6.cs(34,28): error CS0103: The name ''SumOfSquares'' does not exist
    in the current context

    /tmp/tmp4dpdxep6.cs(34,56): error CS0103: The name ''SumOfSquares'' does not exist
    in the current context

    '
  timestamp: 1660015757
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ for (int i = 0; i < lst.Count; i++) {\n            if (lst[i] % 2 == 1) {\n\
    \                sum += (long)lst[i] * (long)lst[i];\n            }\n        }\n\
    \        return 2 * sum;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <12335b3635b94097ba6ba10c299cc99c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <12335b3635b94097ba6ba10c299cc99c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015758
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // Insert your code here.\n\
    \        return 0L;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aab20f5ce1aa4992ae5c07b899cac0d2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aab20f5ce1aa4992ae5c07b899cac0d2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015757
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return lst.Where(num =>\
    \ num % 2 != 0).Sum(num => num * num);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr8xksnbz.cs(21,16): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015757
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return (long)0L;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17819e356fc94f7f94d7b547f344fa95>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17819e356fc94f7f94d7b547f344fa95>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        if (lst.Count() == 0) {\n\
    \            return 0;\n        }\n        else {\n            var x = lst.Where(e\
    \ => (e > 0 && e % 2 == 1 && e == Math.Floor(e))).ToList();\n            var y\
    \ = lst.Where(e => (e < 0 && e % 2 == 1 && e == Math.Floor(e))).ToList();\n  \
    \          return 2 * (x.Sum(i => (long)i * (long)i) - y.Sum(i => (long)i * (long)i));\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13618ea9c9bd4b15926fd1d53289765c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13618ea9c9bd4b15926fd1d53289765c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015758
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        throw new NotImplementedException();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00006] in <174a017578b34cbe9a614e0978a37b97>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00006]\
    \ in <174a017578b34cbe9a614e0978a37b97>:0 \n"
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long ret = 0;\n       \
    \ for (int i = 0; i < lst.Count; i++) {\n            if (lst[i] < 0) {\n     \
    \           continue;\n            }\n            if (lst[i] % 1 != 0) {\n   \
    \             continue;\n            }\n            if (lst[i] % 2 == 0) {\n \
    \               continue;\n            }\n            ret += (long)Math.Pow(lst[i],\
    \ 2);\n        }\n        return ret;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015758
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // insert your code here...\n\
    \        int[] o = new int[lst.Count];\n        int[] e = new int[lst.Count];\n\
    \        int i,j,p;\n        long sum=0;\n        for(i=0;i<lst.Count;i++)\n \
    \       {\n            if(lst[i]<0)\n            {\n                lst[i]=0;\n\
    \            }\n            if(lst[i]%2==0)\n            {\n                e[i]=(int)lst[i];\n\
    \            }\n            else\n            {\n                o[i]=(int)lst[i];\n\
    \            }\n        }\n        for(j=0;j<o.Length;j++)\n        {\n      \
    \      if(o[j]!=0)\n            {\n                sum+=o[j]*o[j];\n         \
    \   }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015758
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015755
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        throw new NotImplementedException();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00006] in <174a017578b34cbe9a614e0978a37b97>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00006]\
    \ in <174a017578b34cbe9a614e0978a37b97>:0 \n"
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        if (lst.Count == 0) {\n\
    \            return 0L;\n        }\n        long diff = 0L;\n        foreach (var\
    \ item in lst) {\n            long cur = 0L;\n            long next = 0L;\n  \
    \          long tmp = 0L;\n            long tmp1 = 0L;\n            long tmp2\
    \ = 0L;\n            cur = (long)Math.Floor((double)item);\n            if (cur\
    \ != item) {\n                continue;\n            }\n            if (cur <\
    \ 0L) {\n                continue;\n            }\n            next = (long)Math.Floor((double)item);\n\
    \            if (next != item) {\n                continue;\n            }\n \
    \           if (next < 0L) {\n                continue;\n            }\n     \
    \       tmp = cur;\n            if (tmp % 2L == 0L) {\n                goto continue_label;\n\
    \            }\n            tmp1 = cur;\n            tmp2 = cur;\n           \
    \ diff = diff + (tmp1 * tmp2);\n            continue_label:;\n        }\n    \
    \    return diff * 2L;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd02de96d870448ba233d301af7d945b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd02de96d870448ba233d301af7d945b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015758
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return (long)Reduce((double)0L,\
    \ 0, lst.Count, lst);\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9f2r24q0.cs(21,22): error CS0103: The name ''Reduce'' does not exist in
    the current context

    '
  timestamp: 1660015758
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // Fill in your code here\
    \ to return the correct value\n        long total=0;\n        foreach(var num\
    \ in lst){\n            int i = Convert.ToInt32(num);\n            if(i >= 0){\n\
    \                if(i % 2 != 0){\n                    total += (i * i);\n    \
    \            }\n            }\n        }\n        return total * 2;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0f260da53f284f95a7a22d961da2f361>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0f260da53f284f95a7a22d961da2f361>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015758
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return lst.Aggregate(0,\
    \ (acc, x) => {\n            if (x % 1 == 0 && x >= 0) {\n                if (x\
    \ % 2 == 1)\n                    return acc + (long)x * (long)x;\n           \
    \     else\n                    return acc;\n            }\n            else\n\
    \                return acc;\n        });\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxssh9die.cs(24,28): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpxssh9die.cs(24,28): error CS1662: Cannot convert lambda expression to
    intended delegate type because some of the return types in the block are not implicitly
    convertible to the delegate return type

    '
  timestamp: 1660015758
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        throw new NotImplementedException();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00006] in <174a017578b34cbe9a614e0978a37b97>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00006]\
    \ in <174a017578b34cbe9a614e0978a37b97>:0 \n"
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        int sum = 0;\n        for\
    \ (int i = 0; i < lst.Count; i++) {\n            if (((((lst[i] - (((int)lst[i])\
    \ + 0.5F)) < 0.001F) && ((lst[i] - (((int)lst[i]) - 0.5F)) > -0.001F)) && (lst[i]\
    \ >= 0))) {\n                if (((int)lst[i]) % 2 != 0) {\n                 \
    \   sum += ((int)lst[i]) * ((int)lst[i]);\n                }\n            }\n\
    \        }\n        return ((long)sum);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015758
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long oddSq = 0;\n     \
    \   foreach (float i in lst) {\n            if (i % 2 == 1 && i > 0) {\n     \
    \           oddSq += (long)i * (long)i;\n            }\n        }\n        return\
    \ oddSq * 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ca126c962a74319aacf795fb5c6866a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ca126c962a74319aacf795fb5c6866a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015758
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        throw new Exception(\"\
    not implemented\");\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.Exception: not implemented\n  at Problem.Main\
    \ (System.String[] args) [0x00006] in <a2c5f730ad324854978cb77f8123fce4>:0 \n\
    [ERROR] FATAL UNHANDLED EXCEPTION: System.Exception: not implemented\n  at Problem.Main\
    \ (System.String[] args) [0x00006] in <a2c5f730ad324854978cb77f8123fce4>:0 \n"
  stdout: ''
  timestamp: 1660015758
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long res = 0;\n       \
    \ foreach (var item in lst) {\n            var temp = (long)item;\n          \
    \  if (temp % 2 == 1 && temp >= 0) {\n                res += temp * temp;\n  \
    \          }\n        }\n        return res;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015758
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        if (lst.Count == 0) {\n\
    \            return 0L;\n        }\n        return 2L * lst.Select(e => new {V\
    \ = e, Odd = (e % 2L) == 1L}).Where(x => x.Odd).Select(e => e.V).Sum();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbg8uvp_r.cs(24,16): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015758
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        var ans = (long)0L;\n \
    \       foreach (var v in lst) {\n            if (v % 2L == 1L) {\n          \
    \      ans += (long)(v * v);\n            }\n        }\n        return ans;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015758
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long result = 0;\n    \
    \    for (int i = 0; i < lst.Count; i++) {\n            float n = lst[i];\n  \
    \          long n2 = (long) n;\n            if (n == n2 && n >= 0L) {\n      \
    \          if (n2 % 2L == 1L) {\n                    long n3 = n2 * n2;\n    \
    \                result = result + n3;\n                }\n            }\n   \
    \     }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015758
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f % 2 == 1 && f > 0) {\n       \
    \         sum += (long)Math.Pow(f, 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015758
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // Insert your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4845d67057a44200ac931e0aa7cf0a71>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4845d67057a44200ac931e0aa7cf0a71>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015758
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        int sum = 0;\n        for\
    \ (int i = 0; i < lst.Count; i++) {\n            if ((lst[i] % 2 == 1) && (lst[i]\
    \ > 0)) {\n                sum += (int)Math.Pow(lst[i], 2);\n            }\n \
    \       }\n        return sum * 2;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0cae702b9a7e485086ac4419adc384a4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0cae702b9a7e485086ac4419adc384a4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015758
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long result = 0;\n    \
    \    foreach (float elem in lst) {\n            if (elem >= (long)0L && elem %\
    \ (long)1L == (long)0L) {\n                long square = (long)elem * (long)elem;\n\
    \                if (square % (long)2L == (long)1L) {\n                    result\
    \ += square;\n                }\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015758
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long result = 0;\n    \
    \    int i = -1;\n        while (i < (lst.Count - 1)) {\n            i = i + 1;\n\
    \            bool isOdd = false;\n            if ((lst[i] % 2) == 1) {\n     \
    \           isOdd = true;\n            }\n            if (((lst[i] % 2) == 0)\
    \ && ((lst[i] % 1) != 0)) {\n                isOdd = true;\n            }\n  \
    \          if (isOdd) {\n                result = result + ((long)Math.Pow(lst[i],\
    \ 2));\n            }\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new List<float>()))\
    \ == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015758
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        throw new NotImplementedException();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00006] in <174a017578b34cbe9a614e0978a37b97>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00006]\
    \ in <174a017578b34cbe9a614e0978a37b97>:0 \n"
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long L = 0L;\n        foreach\
    \ (var elem in lst) {\n            if (elem > 0 && elem == (long)elem) {\n   \
    \             L += (long)elem * (long)elem;\n            }\n        }\n      \
    \  return 2L * L;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a0f185a7e2de4e3aa8b37f9df0a5e521>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a0f185a7e2de4e3aa8b37f9df0a5e521>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015758
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long result = 0;\n    \
    \    foreach (var x in lst) {\n            var a = ((int)x);\n            if (a\
    \ % 2 == 1) {\n                result += a * a;\n            }\n        }\n  \
    \      return result;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015758
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num >= 0) {\n                long\
    \ num_int = (long)num;\n                if (num == num_int) {\n              \
    \      if (num_int % 2 == 1) {\n                        sum += num_int * num_int;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015758
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (Math.Ceiling(item) != item) {\n\
    \                continue;\n            }\n            if (item < 0) {\n     \
    \           continue;\n            }\n            if (item % 2 == 0) {\n     \
    \           continue;\n            }\n            sum += (long)item * (long)item;\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015758
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return lst.Where(x => (((x\
    \ - (long)x) == (long)0L) && (x >= (long)0L))).Where(x => (((long)x % (long)2L)\
    \ == (long)1L)).Select(x => ((long)x * (long)x)).Sum();\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new List<float>()))\
    \ == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015758
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        var sum = 0;\n        foreach\
    \ (var item in lst) {\n            if (item % 2 == 1) {\n                sum +=\
    \ (int) item * (int) item;\n            }\n        }\n        return sum;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015759
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // Find the difference\
    \ between the sum of all the integers and the sum of all\n        // the squares\
    \ of the integers\n        // Sum each element in the list to find the total\n\
    \        int total = 0;\n        // Sum the squares of each element in the list\
    \ to find the square total\n        int square_total = 0;\n        for (int i\
    \ = 0; i < lst.Count; i++) {\n            // If the element is an integer and\
    \ greater than or equal to 0...\n            if (lst[i] % 1 == 0 && lst[i] >=\
    \ 0) {\n                // Add it to the total\n                total += (int)lst[i];\n\
    \                // Add the square of it to the square total\n               \
    \ square_total += (int)Math.Pow(lst[i], 2);\n            }\n        }\n      \
    \  // Find the difference between the sum of all the integers and the sum of all\n\
    \        // the squares of the integers\n        int difference = total - square_total;\n\
    \        // Double the difference\n        int doubled_difference = difference\
    \ * 2;\n        // Return the result\n        return doubled_difference;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <83ed927062c643daa5408550c350d0b7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <83ed927062c643daa5408550c350d0b7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015759
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // your code here\n   \
    \     long res = 0;\n        foreach (long i in lst) {\n            if (i % 2\
    \ == 1) {\n                res += i * i;\n            }\n        }\n        return\
    \ res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015759
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        var filtered = lst.Where(e\
    \ => e > 0 && e == Math.Floor(e));\n        var squares = filtered.Select(e =>\
    \ (long)Math.Pow(e, 2));\n        return squares.Sum();\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new List<float>()))\
    \ == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65b9ef437d6c4d0da012927dc05cc097>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65b9ef437d6c4d0da012927dc05cc097>:0 \n"
  stdout: ''
  timestamp: 1660015759
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // YOUR CODE HERE\n   \
    \     return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <897c6d4af84c4196894d12c8408e6ae9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <897c6d4af84c4196894d12c8408e6ae9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015759
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long ret = 0;\n       \
    \ foreach (float el in lst) {\n            if ((el % 2) == 1) {\n            \
    \    ret += ((long)el * (long)el);\n            }\n        }\n        return ret;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015759
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        var __r = doubleTheDifferenceImpl(lst);\n\
    \        return __r;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo_p4o3d1.cs(21,19): error CS0103: The name ''doubleTheDifferenceImpl''
    does not exist in the current context

    '
  timestamp: 1660015759
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long Result = 0L;\n   \
    \     foreach (long __foreach_var_0 in lst) {\n            var i = __foreach_var_0;\n\
    \            var x = ((long)Math.Ceiling((double)i));\n            if (((i - x)\
    \ == 0L) && ((i % 2L) == 1L)) {\n                Result = (Result + (x * x));\n\
    \            }\n        }\n        return Result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new List<float>()))\
    \ == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015759
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return (long)lst.Where(x\
    \ => x % 1 == 0 && x > 0).Select(x => x * x).Sum();\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new List<float>()))\
    \ == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aa556aef00514b9797dc957af6eb7a4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aa556aef00514b9797dc957af6eb7a4f>:0 \n"
  stdout: ''
  timestamp: 1660015759
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        throw new NotImplementedException();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00006] in <174a017578b34cbe9a614e0978a37b97>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00006]\
    \ in <174a017578b34cbe9a614e0978a37b97>:0 \n"
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return lst.Where(n => n\
    \ == (int)n && n > 0).Select(n => (int)n).Sum(n => n * n);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b5c2d21777274de585cebffb053f05a1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b5c2d21777274de585cebffb053f05a1>:0 \n"
  stdout: ''
  timestamp: 1660015759
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        int i = 0;\n        long\
    \ r = 0;\n        for (int j = 0; j < lst.Count; j++) {\n            float f =\
    \ lst[j];\n            int i2 = (int)f;\n            if (i2 < 0) {\n         \
    \       continue;\n            }\n            if (i2 != f) {\n               \
    \ continue;\n            }\n            i2 = i2 % 2;\n            if (i2 == 0)\
    \ {\n                continue;\n            }\n            r = r + (i2 * i2);\n\
    \            i = i + 1;\n        }\n        r = r * 2;\n        return r;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <00aea7b56c764329abf9c8babd322066>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <00aea7b56c764329abf9c8babd322066>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015759
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        var result = 0L;\n    \
    \    foreach (var number in lst) {\n            if (number > 0 && Math.Floor(number)\
    \ == number) {\n                result += number % 2 == 0 ? number * number :\
    \ number * number * 2;\n            }\n        }\n        return result;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsiruuwa2.cs(24,17): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015759
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum_odd_squares =\
    \ 0;\n        foreach (float item in lst) {\n            if (item > 0 && item\
    \ == Math.Floor(item)) {\n                if (item % 2 > 0) {\n              \
    \      sum_odd_squares += (long)Math.Pow(item, 2);\n                }\n      \
    \      }\n        }\n        return sum_odd_squares * 2;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new List<float>()))\
    \ == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bed9fee7379b4b2580580d759441d9f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bed9fee7379b4b2580580d759441d9f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015759
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // Fill in the missing\
    \ code here.\n        long tempSum = 0;\n        long doubleSum = 0;\n       \
    \ foreach (float number in lst)\n        {\n            if (number % 2 == 1)\n\
    \            {\n                tempSum += (long)number * (long)number;\n    \
    \        }\n        }\n        doubleSum = tempSum * 2;\n        return doubleSum;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <677dd67530a741808b9378770292b06c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <677dd67530a741808b9378770292b06c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015759
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        List<long> _lst = new List<long>();\n\
    \        foreach (var _float in lst) {\n            if (_float >= 0) {\n     \
    \           long intVal = (long) _float;\n                if (intVal == _float)\
    \ {\n                    _lst.Add(intVal);\n                }\n            }\n\
    \        }\n        if (_lst.Count == 0) {\n            return 0;\n        } else\
    \ {\n            long oddSum = 0;\n            long evenSum = 0;\n           \
    \ foreach (var elem in _lst) {\n                if (elem % 2 == 0) {\n       \
    \             evenSum += elem * elem;\n                } else {\n            \
    \        oddSum += elem * elem;\n                }\n            }\n          \
    \  return (oddSum - evenSum) * 2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2fd419b968394066816a536fa1409801>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2fd419b968394066816a536fa1409801>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015759
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // your code here\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6fy0jdhy.cs(20,24): error CS0161: ''Problem.DoubleTheDifference(List<float>)'':
    not all code paths return a value

    '
  timestamp: 1660015759
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (long i in lst) {\n            if (i % 2 == 1) {\n                sum\
    \ += i * i;\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015759
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long result = 0;\n    \
    \    foreach (float x in lst) {\n            if ((x % 2) == 0) {\n           \
    \     result += (long)(Math.Pow(x, 2));\n            }\n        }\n        return\
    \ (result * 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <af215b85b6df4a618b6d885bca860b80>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <af215b85b6df4a618b6d885bca860b80>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015759
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long res = 0;\n       \
    \ for (long i = 0; i < lst.Count; i++) {\n            if (lst[(int)i] < 0L) {\n\
    \                continue;\n            }\n            if (lst[(int)i] % 1L !=\
    \ 0L) {\n                continue;\n            }\n            if (lst[(int)i]\
    \ % 2L == 0L) {\n                continue;\n            }\n            res +=\
    \ (long)Math.Pow(lst[(int)i], 2L);\n        }\n        return 2L * res;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13666057e5c04903b7c01908e61b21cc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13666057e5c04903b7c01908e61b21cc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015759
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // Your code goes here\n\
    \        long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n      \
    \      if (lst[i] > 0 && lst[i] % 1 == 0 && lst[i] % 2 == 1) {\n             \
    \   sum += (long)Math.Pow(lst[i], 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015759
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        int n = 0;\n        foreach\
    \ (var item in lst) {\n            if ((item % 2) == 1) {\n                n =\
    \ n + ((int)Math.Pow(item, 2));\n            }\n        }\n        return (n *\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <215a28d0ab934e749395b32884d948d5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <215a28d0ab934e749395b32884d948d5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015759
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long result = 0;\n    \
    \    foreach (float x in lst) {\n            if (x > 0 && (long)x == x) {\n  \
    \              if (x % 2 != 0) {\n                    result += (long)x * (long)x;\n\
    \                }\n            }\n        }\n        return result * 2;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49c26e87b1394dd48264c2e7f8939080>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49c26e87b1394dd48264c2e7f8939080>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015759
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015755
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x < 0 || Math.Floor(x) != x)\n \
    \               continue;\n            if (x % 2 != 0)\n                sum +=\
    \ x * x;\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpypxg58z0.cs(26,17): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015759
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return (long)lst.Where(x\
    \ => x % 2 == 1 && x > 0 && x == (int)x).Sum(x => Math.Pow(x, 2));\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015759
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        var s = 0L;\n        foreach\
    \ (var i in lst) {\n            if (i % 1 == 0 && i > 0) {\n                s\
    \ += (long)Math.Pow(i, 2);\n            }\n        }\n        return s;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f69268c7a9e14ff78d878cd359fd2a12>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f69268c7a9e14ff78d878cd359fd2a12>:0 \n"
  stdout: ''
  timestamp: 1660015759
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num % 2 == 1 && num > 0) {\n \
    \               sum += (long)Math.Pow(num, 2);\n            }\n        }\n   \
    \     return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015759
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return lst.Select(x =>\
    \ (long)x).Where(x => x % 2 == 1 && x >= 0).Select(x => x * x).Sum();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015760
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015755
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return (from x in lst select\
    \ x).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdiixvs4u.cs(21,16): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015759
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ for (int i = 0; i < lst.Count; i++) {\n            if (lst[i] % 2 == 1) {\n\
    \                sum += lst[i] * lst[i];\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpn_atgp5q.cs(24,17): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015759
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long result = 0;\n    \
    \    foreach (float x in lst) {\n            if (x >= 0 && Math.Floor(x) == x)\
    \ {\n                if (x % 2 != 0) {\n                    result += (long)Math.Pow(x,\
    \ 2);\n                }\n            }\n        }\n        return 2 * result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6a62ba2ad1f94303bc7ff18cf585ed94>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6a62ba2ad1f94303bc7ff18cf585ed94>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015760
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        float sum = 0;\n      \
    \  foreach (var num in lst) {\n            if (num >= 0 && num % 1 == 0 && num\
    \ % 2 == 1) {\n                sum += (float)Math.Pow(num, 2);\n            }\n\
    \        }\n        return 2 * (long)sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dd4c2dc05024445d9da5000d41f6d885>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dd4c2dc05024445d9da5000d41f6d885>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015760
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71c0a75af98473c9e55566eb397071e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float n in lst) {\n            if (n > 0) {\n                sum +=\
    \ (long)n * (long)n;\n            }\n        }\n        return sum;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a1f6a419d5f744739f8617d83e7b957e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a1f6a419d5f744739f8617d83e7b957e>:0 \n"
  stdout: ''
  timestamp: 1660015760
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long o = 0;\n        foreach\
    \ (var x in lst) {\n            if (x >= 0) {\n                var x1 = (long)x;\n\
    \                if (x1 == x) {\n                    if (x1 % 2 == 1) {\n    \
    \                    o += x1 * x1;\n                    }\n                }\n\
    \            }\n        }\n        return o * 2;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new List<float>()))\
    \ == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16986a678ee1438385d349f109e3af6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16986a678ee1438385d349f109e3af6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015760
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ long odd = 0;\n        long even = 0;\n        // iterate through the list and\
    \ check if the number is odd\n        // if it is odd, increment count\n     \
    \   // add the square of number to sum\n        foreach (float num in lst) {\n\
    \            if (num % 2 == 0) {\n                even += 1;\n            } else\
    \ {\n                odd += 1;\n            }\n            if (num > 0) {\n  \
    \              sum += (long)Math.Pow(num, 2);\n            }\n        }\n    \
    \    return sum + (odd * even);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ed4d735028b9425a9442e955b3816019>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ed4d735028b9425a9442e955b3816019>:0 \n"
  stdout: ''
  timestamp: 1660015760
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return (long)Enumerable.Sum(Enumerable.Where(Enumerable.Select<float,\
    \ Tuple<float, float>>(lst, x => Tuple.Create<float, float>(x, x * x)), x => (x.Item1\
    \ % 2L) == (long)1L));\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0x356z5i.cs(21,37): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.IEnumerable<System.Tuple<float,
    float>>'' to ''System.Collections.Generic.IEnumerable<int>''

    '
  timestamp: 1660015760
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum_odd_squares =\
    \ 0;\n        foreach (float el in lst) {\n            if (el % 2 == 1) {\n  \
    \              sum_odd_squares += (long)Math.Pow(el, 2);\n            }\n    \
    \    }\n        return 2 * sum_odd_squares;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a9c7a748c77f460d91ce8a913bdf4622>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a9c7a748c77f460d91ce8a913bdf4622>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015760
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sumofsquareofodds\
    \ = 0L;\n        foreach (var item in lst) {\n            var number = (long)item;\n\
    \            if (number < 0L) {\n                continue;\n            }\n  \
    \          if (number != item) {\n                continue;\n            }\n \
    \           if (number % 2L == 0L) {\n                continue;\n            }\n\
    \            sumofsquareofodds += number * number;\n        }\n        return\
    \ 2L * sumofsquareofodds;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad456a019024a40bcba3d2241a4e588>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad456a019024a40bcba3d2241a4e588>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015760
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        lst = new List<float>(lst);\n\
    \        lst.RemoveAll(x => x < 0);\n        lst.RemoveAll(x => x != Math.Floor(x));\n\
    \        long sum = 0;\n        foreach (var x in lst) {\n            sum += ((long)Math.Pow(x,\
    \ (double)2));\n        }\n        return sum;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new List<float>()))\
    \ == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c3dac5ace5745b4b55807666bea9879>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c3dac5ace5745b4b55807666bea9879>:0 \n"
  stdout: ''
  timestamp: 1660015760
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return lst.Select(x =>\
    \ x).Where(x => ((!(x < (long)0L)) && (Math.Floor(x) == x))).Select(x => x).Where(x\
    \ => ((x % (long)2L) == (long)1L)).Select(x => x).Aggregate(((long)0L), (acc,\
    \ x) => (acc + ((long)Math.Pow(x, (long)2L))));\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new List<float>()))\
    \ == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015760
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ List<long> odd = new List<long>();\n        foreach (var num in lst) {\n   \
    \         if (num % 2 == 1 && num > 0) {\n                odd.Add((long)num);\n\
    \            }\n        }\n        if (odd.Count > 0) {\n            sum = (long)Math.Pow(odd.First(),\
    \ 2);\n            foreach (var num in odd) {\n                if (num != odd.First())\
    \ {\n                    sum -= (long)Math.Pow(num, 2);\n                }\n \
    \           }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <40d25c0b920146c387304d07de1718dd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <40d25c0b920146c387304d07de1718dd>:0 \n"
  stdout: ''
  timestamp: 1660015760
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return SumOfSquaresOfOdd(lst);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgrjiarog.cs(21,16): error CS0103: The name ''SumOfSquaresOfOdd'' does
    not exist in the current context

    '
  timestamp: 1660015760
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        int doubleTheDifferenceVar0\
    \ = 0;\n        float doubleTheDifferenceVar1 = 0;\n        float doubleTheDifferenceVar2\
    \ = 0;\n        float doubleTheDifferenceVar3 = 0;\n        float doubleTheDifferenceVar4\
    \ = 0;\n        float doubleTheDifferenceVar5 = 0;\n        float doubleTheDifferenceVar6\
    \ = 0;\n        float doubleTheDifferenceVar7 = 0;\n        float doubleTheDifferenceVar8\
    \ = 0;\n        float doubleTheDifferenceVar9 = 0;\n        float doubleTheDifferenceVar10\
    \ = 0;\n        int doubleTheDifferenceVar11 = 0;\n        float doubleTheDifferenceVar12\
    \ = 0;\n        float doubleTheDifferenceVar13 = 0;\n        float doubleTheDifferenceVar14\
    \ = 0;\n        float doubleTheDifferenceVar15 = 0;\n        float doubleTheDifferenceVar16\
    \ = 0;\n        float doubleTheDifferenceVar17 = 0;\n        long doubleTheDifferenceVar18\
    \ = 0;\n        long doubleTheDifferenceVar19 = 0;\n        long doubleTheDifferenceVar20\
    \ = 0;\n        long doubleTheDifferenceVar21 = 0;\n        int doubleTheDifferenceVar22\
    \ = 0;\n        int doubleTheDifferenceVar23 = 0;\n        int doubleTheDifferenceVar24\
    \ = 0;\n        long doubleTheDifferenceVar25 = 0;\n        int doubleTheDifferenceVar26\
    \ = 0;\n        int doubleTheDifferenceVar27 = 0;\n        long doubleTheDifferenceVar28\
    \ = 0;\n        long doubleTheDifferenceVar29 = 0;\n        long doubleTheDifferenceVar30\
    \ = 0;\n        long doubleTheDifferenceVar31 = 0;\n        long doubleTheDifferenceVar32\
    \ = 0;\n        int doubleTheDifferenceVar33 = 0;\n        long doubleTheDifferenceVar34\
    \ = 0;\n        long doubleTheDifferenceVar35 = 0;\n        long doubleTheDifferenceVar36\
    \ = 0;\n        long doubleTheDifferenceVar37 = 0;\n        long doubleTheDifferenceVar38\
    \ = 0;\n        long doubleTheDifferenceVar39 = 0;\n        long doubleTheDifferenceVar40\
    \ = 0;\n        long doubleTheDifferenceVar41 = 0;\n        long doubleTheDifferenceVar\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprkqurmdu.cs(63,36): error CS1002: ; expected

    '
  timestamp: 1660015759
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num % 2 != 0 && num >= 0) {\n\
    \                sum += (long)num * (long)num;\n            }\n        }\n   \
    \     return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015760
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return ((new List<long>(SumOfSquaresOfOddNumbers(lst))).Where(((long\
    \ number) => number % (long)2L == (long)1L)).Select(((long number) => number *\
    \ number)).Sum() * (long)2L);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4txzse6z.cs(21,33): error CS0103: The name ''SumOfSquaresOfOddNumbers''
    does not exist in the current context

    '
  timestamp: 1660015760
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long answer = 0;\n    \
    \    foreach (float num in lst) {\n            if (IsOdd(num) && !IsNegative(num))\
    \ {\n                answer += (long)Math.Pow(num, 2);\n            }\n      \
    \  }\n        return answer;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkdzjswq4.cs(23,17): error CS0103: The name ''IsOdd'' does not exist in
    the current context

    /tmp/tmpkdzjswq4.cs(23,32): error CS0103: The name ''IsNegative'' does not exist
    in the current context

    '
  timestamp: 1660015760
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        List<float> lst_odds =\
    \ new List<float>();\n        foreach (var i in lst) {\n            if ((((i ==\
    \ Math.Floor(i)) && (!Double.IsInfinity(i))) && (i >= 0L))) {\n              \
    \  if ((i % 2L) == 1L) {\n                    lst_odds.Add(i);\n             \
    \   }\n            }\n        }\n        return SumOfSquares(lst_odds);\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwuapomwt.cs(29,16): error CS0103: The name ''SumOfSquares'' does not exist
    in the current context

    '
  timestamp: 1660015760
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long temp = 0L;\n     \
    \   long temp_1 = 0L;\n        foreach (var item in lst) {\n            if ((float.IsNaN(item)\
    \ || ((item < (long)0L) || (float.IsInfinity(item) || !(item == Math.Truncate(item))))))\
    \ {\n            }\n            else {\n                if ((((long)item) % (long)2L)\
    \ == (long)0L) {\n                    temp = ((temp * (long)2L) + ((long)item\
    \ * (long)item));\n                }\n                else {\n               \
    \     temp_1 = ((temp_1 * (long)2L) + ((long)item * (long)item));\n          \
    \      }\n            }\n        }\n        return ((temp_1 * (long)2L) - temp);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6cf89a8c2e30447b8c162d256e03b3ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6cf89a8c2e30447b8c162d256e03b3ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015760
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        if (lst.Count == 0)\n \
    \           return 0;\n        int sum = 0;\n        foreach (float item in lst)\
    \ {\n            // TODO: implement\n        }\n        return 2 * sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <82fd7fb9465c467ea79904b23267cf83>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <82fd7fb9465c467ea79904b23267cf83>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015760
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)1L, (long)3L, (long)2L, (long)0L})))\n        //\
    \ (10L)\n        long __return__ = 0L;\n        // DoubleTheDifference((new List<float>(new\
    \ long[]{(long)1L, (long)3L, (long)2L, (long)0L})))\n        long DoubleTheDifference(List<float>\
    \ lst) {\n            long ssq = 0L;\n            foreach (float num in lst) {\n\
    \                if (num == (long)num && num > 0L) {\n                    ssq\
    \ += (long)num * (long)num;\n                }\n            }\n            return\
    \ 2L * ssq;\n        }\n        return __return__;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new List<float>()))\
    \ == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <773060a29b09479f89c8e8266242ae0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <773060a29b09479f89c8e8266242ae0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015760
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long ret = 0;\n       \
    \ foreach (float item in lst) {\n            if (item > 0 && (long)item == item)\
    \ {\n                if (item % 2 != 0) {\n                    ret += (long)item\
    \ * (long)item;\n                }\n            }\n        }\n        return ret\
    \ * 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d433f91e3a304321bcc138604b4bf301>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d433f91e3a304321bcc138604b4bf301>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015760
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // Implement me\n     \
    \   return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959d3fdf085a45399e5e2f6e3fdc2f84>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959d3fdf085a45399e5e2f6e3fdc2f84>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015760
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return (long)0L;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17819e356fc94f7f94d7b547f344fa95>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17819e356fc94f7f94d7b547f344fa95>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long count = 0;\n     \
    \   long n = 0;\n        while ((n < lst.Count)) {\n            {\n          \
    \      long i = n;\n                n = n + 1;\n                float item = lst[(int)i];\n\
    \                if ((item > 0L)) {\n                    {\n                 \
    \       var x = (long)item;\n                        if ((x % 2L) == 1L) {\n \
    \                           count = count + (x * x);\n                       \
    \ }\n                    }\n                }\n            }\n        }\n    \
    \    return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015760
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        //long cnt = 0;\n     \
    \   //long sum = 0;\n        //long i = 0;\n        //long j = 1;\n        //long\
    \ n = 0;\n        //long x = 0;\n        //while ((i) < (lst.Count)) {\n     \
    \   //    x = (long)lst[(int)i];\n        //    if ((j) % (2L) == (1L)) {\n  \
    \      //        sum = (sum) + ((x) * (x));\n        //    }\n        //    j\
    \ = (j) + (1L);\n        //    i = (i) + (1L);\n        //}\n        //return\
    \ sum;\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bb088a3b01894a3889b880a912b542db>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bb088a3b01894a3889b880a912b542db>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015760
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        throw new NotImplementedException();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00006] in <174a017578b34cbe9a614e0978a37b97>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00006]\
    \ in <174a017578b34cbe9a614e0978a37b97>:0 \n"
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long result = 0;\n    \
    \    long sum = 0;\n        foreach (float x in lst) {\n            if (x >= 0\
    \ && (long)x == x) {\n                sum += (long)x;\n                if ((long)x\
    \ % 2 != 0) {\n                    result += (long)x * (long)x;\n            \
    \    }\n            }\n        }\n        if (sum != 0) {\n            result\
    \ *= 2;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fe28e999964942e19778cd9fc63d520d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fe28e999964942e19778cd9fc63d520d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015761
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long l = (long)0L;\n  \
    \      long r = (long)0L;\n        foreach (var x in lst)\n        {\n       \
    \     if (x > (long)0L && x == (long)x)\n            {\n                if (x\
    \ % (long)2L == (long)1L)\n                {\n                    l += (long)x\
    \ * (long)x;\n                }\n                else\n                {\n   \
    \                 r += (long)x * (long)x;\n                }\n\n            }\n\
    \n        }\n        return l - r;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <adacf27e09304e959e54c52a323532de>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <adacf27e09304e959e54c52a323532de>:0 \n"
  stdout: ''
  timestamp: 1660015761
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        Func<double, double> PositiveSquare\
    \ = (input) => input * input;\n        Func<double, bool> PositiveOdd = (input)\
    \ => (input > 0) && (input % 2 == 1);\n        Func<long, bool> Negative = (input)\
    \ => input < 0;\n        List<double> Output = new List<double>();\n        for\
    \ (long i = 0; i < lst.Count; i++) {\n            if (PositiveOdd(lst[(int)i]))\
    \ {\n                Output.Add(PositiveSquare(lst[(int)i]));\n            }\n\
    \        }\n        return (long)Output.Sum();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new List<float>()))\
    \ == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015761
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long result = 0;\n    \
    \    foreach (var e in lst) {\n            if (e > 0 && (long)e == e) {\n    \
    \            if (e % 2 == 1) {\n                    result += e * e;\n       \
    \         }\n            }\n        }\n        return result * 2;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk80uj82d.cs(25,21): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015760
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        //return \n        //return\
    \ new BigInteger(0);\n        //long i = 0;\n        //while (i < lst.Count())\
    \ {\n        //    i = i + 1L;\n        //}\n        return (long)0;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3631ec040ef743319795b7d4060ec86f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3631ec040ef743319795b7d4060ec86f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015761
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        throw new NotImplementedException();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00006] in <174a017578b34cbe9a614e0978a37b97>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00006]\
    \ in <174a017578b34cbe9a614e0978a37b97>:0 \n"
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long res = 0;\n       \
    \ if (lst.Count > 0) {\n            res = (long) (lst[0] * lst[0]);\n        \
    \    lst.RemoveAt(0);\n            if (lst.Count > 0) {\n                res -=\
    \ (long) (lst[0] * lst[0]);\n                lst.RemoveAt(0);\n            }\n\
    \        }\n        return 2 * res;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <583483a493894a16bc91d4d2c41fba45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <583483a493894a16bc91d4d2c41fba45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015761

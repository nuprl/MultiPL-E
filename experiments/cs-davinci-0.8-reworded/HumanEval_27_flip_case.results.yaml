language: cs
name: HumanEval_27_flip_case
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var c in str) {\n            if (c >= 'a' && c <= 'z') {\n                sb.Append((char)(c
    - 'a' + 'A'));\n            } else if (c >= 'A' && c <= 'Z') {\n                sb.Append((char)(c
    - 'A' + 'a'));\n            } else {\n                sb.Append(c);\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string result = \"\";\n
    \       for (int i = 0; i < str.Length; i++) {\n            if (Char.IsUpper(str[i]))\n
    \               result += Char.ToLower(str[i]);\n            else\n                result
    += Char.ToUpper(str[i]);\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] flipped = new
    char[str.Length];\n        for (int i = 0; i < str.Length; i++) {\n            if
    (Char.IsLower(str[i])) {\n                flipped[i] = Char.ToUpper(str[i]);\n
    \           } else {\n                flipped[i] = Char.ToLower(str[i]);\n            }\n
    \       }\n        return new string(flipped);\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return string.Join(\"\",
    str.Select(i => char.IsUpper(i) ? char.ToLower(i) : char.ToUpper(i)));\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return new string(str.Select(x
    => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string s = \"\";\n        for
    (int i = 0; i < str.Length; i++) {\n            if (Char.IsUpper(str[i])) {\n
    \               s += Char.ToLower(str[i]);\n            } else {\n                s
    += Char.ToUpper(str[i]);\n            }\n        }\n        return s;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        // TODO: Implement this
    function so that it passes the test cases.\n        string a = \"\";\n        foreach
    (char x in str) {\n            if (Char.IsUpper(x)) {\n                a += Char.ToLower(x);\n
    \           } else {\n                a += Char.ToUpper(x);\n            }\n        }\n
    \       return a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        // Use Linq to transform
    the input string.\n        return new string(str.Select(s => Char.IsUpper(s) ?
    Char.ToLower(s) : Char.ToUpper(s)).ToArray());\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <99b6c4a8698a40fbb5a0796d35a4aa50>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <99b6c4a8698a40fbb5a0796d35a4aa50>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        StringBuilder sb = new
    StringBuilder();\n        for (int i = 0; i < str.Length; i++) {\n            if
    (Char.IsUpper(str[i])) {\n                sb.Append(Char.ToLower(str[i]));\n            }
    else {\n                sb.Append(Char.ToUpper(str[i]));\n            }\n        }\n
    \       return sb.ToString();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return string.Concat(str.Select(x
    => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)));\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var c in str) {\n            if (char.IsUpper(c))\n                sb.Append(char.ToLower(c));\n
    \           else\n                sb.Append(char.ToUpper(c));\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <99b6c4a8698a40fbb5a0796d35a4aa50>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <99b6c4a8698a40fbb5a0796d35a4aa50>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string result = \"\";\n
    \       for (int i = 0; i < str.Length; i++) {\n            if (Char.IsUpper(str[i]))
    {\n                result += Char.ToLower(str[i]);\n            } else {\n                result
    += Char.ToUpper(str[i]);\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return new string(str.Select(c
    => char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return string.Concat(\n
    \           str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)));\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return string.Concat(str.Select(ch
    => char.IsUpper(ch) ? char.ToLower(ch) : char.ToUpper(ch)));\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        // Fill this in.\n        return
    str;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6bcff6f59ae4051b337ffe626449bad>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6bcff6f59ae4051b337ffe626449bad>:0
    \n"
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return new string(str.Select(c
    => char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] letters = str.ToCharArray();\n
    \       for (int i = 0; i < letters.Length; i++) {\n            char letter =
    letters[i];\n            if (char.IsLower(letter)) {\n                letters[i]
    = char.ToUpper(letter);\n            } else if (char.IsUpper(letter)) {\n                letters[i]
    = char.ToLower(letter);\n            }\n        }\n        return new string(letters);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] c = str.ToCharArray();\n
    \       for (int i = 0; i < c.Length; i++) {\n            c[i] = char.IsUpper(c[i])
    ? char.ToLower(c[i]) : char.ToUpper(c[i]);\n        }\n        return new string(c);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var newStr = new StringBuilder();\n
    \       foreach (var c in str) {\n            if (char.IsUpper(c)) {\n                newStr.Append(char.ToLower(c));\n
    \           } else {\n                newStr.Append(char.ToUpper(c));\n            }\n
    \       }\n        return newStr.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        // TODO: Write your code
    here\n        return str;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0b3f791a1c6a4fc2b75ff6b52eb0e56f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0b3f791a1c6a4fc2b75ff6b52eb0e56f>:0
    \n"
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var ret = new StringBuilder();\n
    \       foreach (var ch in str) {\n            if (Char.IsLower(ch)) {\n                ret.Append(Char.ToUpper(ch));\n
    \           } else {\n                ret.Append(Char.ToLower(ch));\n            }\n
    \       }\n        return ret.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return new string(str.Select(ch
    => Char.IsLower(ch) ? Char.ToUpper(ch) : Char.ToLower(ch)).ToArray());\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] newStr = new char[str.Length];\n
    \       for (int i = 0; i < str.Length; i++) {\n            newStr[i] = (char)(str[i]
    ^ 32);\n        }\n        return new string(newStr);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <55db24d633424931a7b5363c9c5bfc61>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <55db24d633424931a7b5363c9c5bfc61>:0
    \n"
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string result = \"\";\n
    \       for (int i = 0; i < str.Length; i++) {\n            if (char.IsUpper(str[i]))
    {\n                result += char.ToLower(str[i]);\n            } else {\n                result
    += char.ToUpper(str[i]);\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        StringBuilder temp =
    new StringBuilder();\n        // Loop through the length of the string\n        for
    (int i = 0; i < str.Length; i++) {\n            // If the character is lowercase,
    change it to uppercase\n            if (Char.IsLower(str[i]))\n                temp.Append(Char.ToUpper(str[i]));\n
    \           // If the character is uppercase, change it to lowercase\n            else
    if (Char.IsUpper(str[i]))\n                temp.Append(Char.ToLower(str[i]));\n
    \           // Else, keep the character\n            else\n                temp.Append(str[i]);\n
    \       }\n        return temp.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        StringBuilder sb = new
    StringBuilder();\n        foreach (char ch in str) {\n            if (char.IsLower(ch))\n
    \               sb.Append(char.ToUpper(ch));\n            else\n                sb.Append(char.ToLower(ch));\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string flipped = \"\";\n
    \       for (int i = 0; i < str.Length; i++) {\n            char c = str[i];\n
    \           flipped += Char.IsLower(c) ? Char.ToUpper(c) : Char.ToLower(c);\n
    \       }\n        return flipped;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        // For a given string\n
    \       //      FlipCase(\"Hello\")\n        // FlipCase(\"hello\")\n        //
    FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n
    \       // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n
    \       // FlipCase(\"Hello\")\n        //\n        //  ...\n        //\n        //
    FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n
    \       // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n
    \       // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n
    \       // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n
    \       // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n
    \       // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n
    \       // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n
    \       // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n
    \       // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n
    \       // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n
    \       // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n
    \       // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n
    \       // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n
    \       // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n
    \       // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n
    \       // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n
    \       // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n        // FlipCase(\"Hello\")\n
    \       // FlipCase(\"Hello\")\n        // FlipCase\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1942mls0.cs(12,26): error CS0161: ''Problem.FlipCase(string)'': not all
    code paths return a value

    '
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var r = new char[str.Length];\n
    \       for (int i = 0; i < str.Length; i++) {\n            var c = str[i];\n
    \           if (char.IsLower(c)) {\n                r[i] = char.ToUpper(c);\n
    \           } else {\n                r[i] = char.ToLower(c);\n            }\n
    \       }\n        return new string(r);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return new string(str.Select(x
    => {\n            if (char.IsUpper(x)) {\n                return char.ToLower(x);\n
    \           } else {\n                return char.ToUpper(x);\n            }\n
    \       }).ToArray());\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var c in str) {\n            if (c >= 'a' && c <= 'z') {\n                sb.Append((char)(c
    - 'a' + 'A'));\n            } else if (c >= 'A' && c <= 'Z') {\n                sb.Append((char)(c
    - 'A' + 'a'));\n            } else {\n                sb.Append(c);\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string s = \"\";\n        for
    (int i = 0; i < str.Length; i++) {\n            if (Char.IsUpper(str[i])) {\n
    \               s += Char.ToLower(str[i]);\n            } else {\n                s
    += Char.ToUpper(str[i]);\n            }\n        }\n        return s;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        StringBuilder sb = new
    StringBuilder();\n        foreach (char ch in str) {\n            if (char.IsLower(ch))
    {\n                sb.Append(char.ToUpper(ch));\n            } else {\n                sb.Append(char.ToLower(ch));\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return string.Concat(str.Select(x
    => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)));\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        StringBuilder sb = new
    StringBuilder();\n        foreach (char c in str) {\n            if (char.IsUpper(c))
    {\n                sb.Append(char.ToLower(c));\n            } else {\n                sb.Append(char.ToUpper(c));\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string result = \"\";\n
    \       for (int i = 0; i < str.Length; i++) {\n            if (Char.IsUpper(str[i]))
    {\n                result += Char.ToLower(str[i]);\n            } else {\n                result
    += Char.ToUpper(str[i]);\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return new string(str.Select(ch
    => char.IsUpper(ch) ? char.ToLower(ch) : char.ToUpper(ch)).ToArray());\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string result = \"\";\n
    \       foreach (char c in str) {\n            if (char.IsUpper(c)) {\n                result
    += char.ToLower(c);\n            } else {\n                result += char.ToUpper(c);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] new_array = new
    char[str.Length];\n        for (int i = 0; i < str.Length; i++) {\n            char
    ch = str[i];\n            if (char.IsUpper(ch)) {\n                new_array[i]
    = char.ToLower(ch);\n            } else {\n                new_array[i] = char.ToUpper(ch);\n
    \           }\n        }\n        return new string(new_array);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] cStr = str.ToCharArray();\n
    \       for (int i = 0; i < cStr.Length; i++) {\n            if (char.IsUpper(cStr[i]))\n
    \               cStr[i] = char.ToLower(cStr[i]);\n            else\n                cStr[i]
    = char.ToUpper(cStr[i]);\n        }\n        return new string(cStr);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string s = \"\";\n        foreach
    (char c in str) {\n            if (char.IsLower(c)) {\n                s += char.ToUpper(c);\n
    \           } else {\n                s += char.ToLower(c);\n            }\n        }\n
    \       return s;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string output = \"\";\n
    \       for (int i = 0; i < str.Length; i++) {\n            if (str[i] >= 'a'
    && str[i] <= 'z') {\n                output += str[i].ToString().ToUpper();\n
    \           } else if (str[i] >= 'A' && str[i] <= 'Z') {\n                output
    += str[i].ToString().ToLower();\n            } else {\n                output
    += str[i];\n            }\n        }\n        return output;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return new string(str.Select(ch
    => char.IsUpper(ch) ? char.ToLower(ch) : char.ToUpper(ch)).ToArray());\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        throw new NotImplementedException();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation
    is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <45bb46147f73437db437c972e0834e3b>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method
    or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]
    in <45bb46147f73437db437c972e0834e3b>:0 \n"
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return \"\";\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bcbeabfb620744d2b1f8dbe0de6e10b9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bcbeabfb620744d2b1f8dbe0de6e10b9>:0
    \n"
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return str;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1b25fb88765e4402a4ef84239ba9a60f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1b25fb88765e4402a4ef84239ba9a60f>:0
    \n"
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string outStr = \"\";\n
    \       for (int i = 0; i < str.Length; i++) {\n            if (Char.IsUpper(str[i]))
    {\n                outStr += Char.ToLower(str[i]);\n            } else {\n                outStr
    += Char.ToUpper(str[i]);\n            }\n        }\n        return outStr;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        StringBuilder result
    = new StringBuilder();\n        foreach (char c in str) {\n            result.Append(char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c));\n        }\n        return result.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        // !!!: IDK why this
    is necessary, but I'm getting random / unexpected error\n        // with this
    if I don't do this.\n        if (str == null) {\n            return null;\n        }\n
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str.Length;
    i++) {\n            char c = str[i];\n            if (Char.IsUpper(c)) {\n                sb.Append(Char.ToLower(c));\n
    \           } else {\n                sb.Append(Char.ToUpper(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        StringBuilder sb = new
    StringBuilder();\n        for (int i = 0; i < str.Length; i++) {\n            if
    (Char.IsUpper(str[i])) {\n                sb.Append(Char.ToLower(str[i]));\n            }
    else {\n                sb.Append(Char.ToUpper(str[i]));\n            }\n        }\n
    \       return sb.ToString();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return new string(str.Select(s
    => char.IsLower(s) ? char.ToUpper(s) : char.ToLower(s)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return new string(str.Select(ch
    => char.IsUpper(ch) ? char.ToLower(ch) : char.ToUpper(ch)).ToArray());\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] chs = str.ToCharArray();\n
    \       for (int i = 0; i < chs.Length; i++) {\n            if (Char.IsUpper(chs[i]))
    {\n                chs[i] = Char.ToLower(chs[i]);\n            } else {\n                chs[i]
    = Char.ToUpper(chs[i]);\n            }\n        }\n        return new string(chs);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string res = \"\";\n
    \       foreach (char c in str) {\n            res += (char.IsUpper(c)) ? char.ToLower(c)
    : char.ToUpper(c);\n        }\n        return res;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] charArray = str.ToCharArray();\n
    \       for (int i = 0; i < charArray.Length; i++) {\n            if (char.IsUpper(charArray[i]))
    {\n                charArray[i] = char.ToLower(charArray[i]);\n            } else
    if (char.IsLower(charArray[i])) {\n                charArray[i] = char.ToUpper(charArray[i]);\n
    \           }\n        }\n        return new string(charArray);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string result = \"\";\n
    \       foreach (char c in str) {\n            if (Char.IsLower(c)) {\n                result
    += Char.ToUpper(c);\n            } else {\n                result += Char.ToLower(c);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string ans = \"\";\n
    \       for (int i = 0; i < str.Length; i++) {\n            char c = str[i];\n
    \           if (c <= 'Z')\n                ans += (char)('a' + (c - 'A'));\n            else\n
    \               ans += (char)('A' + (c - 'a'));\n        }\n        return ans;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a1a768bc1cc349d183217abeffb7f798>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a1a768bc1cc349d183217abeffb7f798>:0
    \n"
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        StringBuilder sb = new
    StringBuilder();\n        foreach (char c in str) {\n            if (char.IsLower(c))\n
    \               sb.Append(char.ToUpper(c));\n            else\n                sb.Append(char.ToLower(c));\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        StringBuilder sb = new
    StringBuilder();\n        foreach (char c in str) {\n            sb.Append(char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c));\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] arr = str.ToCharArray();\n
    \       for (int i = 0; i < arr.Length; i++) {\n            if (char.IsLower(arr[i]))
    {\n                arr[i] = char.ToUpper(arr[i]);\n            } else if (char.IsUpper(arr[i]))
    {\n                arr[i] = char.ToLower(arr[i]);\n            }\n        }\n
    \       return new string(arr);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        StringBuilder sb = new
    StringBuilder();\n        for (int i = 0; i < str.Length; i++) {\n            char
    c = str[i];\n            if (char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n
    \           } else {\n                sb.Append(char.ToLower(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string result = \"\";\n
    \       for (int i = 0; i < str.Length; i++) {\n            if (Char.IsLower(str[i]))
    {\n                result += Char.ToUpper(str[i]);\n            } else {\n                result
    += Char.ToLower(str[i]);\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return str.ToLower();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4524ba00235f42348de5da6a0d14b1dc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4524ba00235f42348de5da6a0d14b1dc>:0
    \n"
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n
    \           } else {\n                sb.Append(char.ToUpper(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] arr = str.ToCharArray();\n
    \       for (int i = 0; i < arr.Length; i++) {\n            char c = arr[i];\n
    \           if (char.IsUpper(c))\n                arr[i] = char.ToLower(c);\n
    \           else if (char.IsLower(c))\n                arr[i] = char.ToUpper(c);\n
    \       }\n        return new string(arr);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return new string(str.Select(ch
    => char.IsUpper(ch) ? char.ToLower(ch) : char.ToUpper(ch)).ToArray());\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n
    \       for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsUpper(chars[i]))
    {\n                chars[i] = Char.ToLower(chars[i]);\n            } else if (Char.IsLower(chars[i]))
    {\n                chars[i] = Char.ToUpper(chars[i]);\n            }\n        }\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var toReturn = new StringBuilder();\n
    \       foreach (var c in str) {\n            if (Char.IsUpper(c)) {\n                toReturn.Append(Char.ToLower(c));\n
    \           } else {\n                toReturn.Append(Char.ToUpper(c));\n            }\n
    \       }\n        return toReturn.ToString();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        // >>>> Your code here.\n
    \       var sb = new StringBuilder();\n        foreach (var c in str) {\n            sb.Append(char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c));\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return string.Join(\"\",
    str.Select(\n            x => Char.IsLower(x) ? Char.ToUpper(x) : Char.ToLower(x)));\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        StringBuilder strBld
    = new StringBuilder();\n        for (int i = 0; i < str.Length; i++) {\n            char
    c = str[i];\n            if (char.IsUpper(c)) {\n                strBld.Append(char.ToLower(c));\n
    \           } else {\n                strBld.Append(char.ToUpper(c));\n            }\n
    \       }\n        return strBld.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var chars = str.ToCharArray();\n
    \       for (int i = 0; i < chars.Length; i++) {\n            if (char.IsLower(chars[i]))
    {\n                chars[i] = char.ToUpper(chars[i]);\n            } else if (char.IsUpper(chars[i]))
    {\n                chars[i] = char.ToLower(chars[i]);\n            }\n        }\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        // Create an empty string
    to save the new string.\n        string newString = \"\";\n        // Iterate
    through each character in the string.\n        foreach (char character in str)
    {\n            // If the character is lowercase, make it uppercase.\n            if
    (char.IsLower(character)) {\n                newString += char.ToUpper(character);\n
    \           }\n            // Else if the character is uppercase, make it lowercase.\n
    \           else if (char.IsUpper(character)) {\n                newString +=
    char.ToLower(character);\n            }\n            // Else, keep the character
    the same.\n            else {\n                newString += character;\n            }\n
    \       }\n        // Return the new string.\n        return newString;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string ret = \"\";\n
    \       for (int i = 0; i < str.Length; i++) {\n            ret += Char.IsLower(str[i])
    ? Char.ToUpper(str[i]) : Char.ToLower(str[i]);\n        }\n        return ret;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        StringBuilder sb = new
    StringBuilder();\n        foreach (char c in str) {\n            if (char.IsUpper(c))
    {\n                sb.Append(char.ToLower(c));\n            } else {\n                sb.Append(char.ToUpper(c));\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string newStr = \"\";\n
    \       for (int i = 0; i < str.Length; i++) {\n            char c = str[i];\n
    \           if (char.IsUpper(c)) {\n                newStr += char.ToLower(c);\n
    \           } else {\n                newStr += char.ToUpper(c);\n            }\n
    \       }\n        return newStr;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string res = \"\";\n
    \       for (int i = 0; i < str.Length; i++) {\n            if (str[i] >= 'a'
    && str[i] <= 'z')\n                res += (char)(str[i] - 32);\n            else
    if (str[i] >= 'A' && str[i] <= 'Z')\n                res += (char)(str[i] + 32);\n
    \           else\n                res += str[i];\n        }\n        return res;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] c = str.ToCharArray();\n
    \       for (int i = 0; i < c.Length; i++) {\n            c[i] = char.IsUpper(c[i])
    ? char.ToLower(c[i]) : char.ToUpper(c[i]);\n        }\n        return new string(c);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        // str = \"Hello World\";\n
    \       // char[] myChar = str.ToCharArray();\n        // for (int i = 0; i <
    myChar.Length; i++) {\n        //     if (char.IsLower(myChar[i])) {\n        //
    \        myChar[i] = char.ToUpper(myChar[i]);\n        //     } else if (char.IsUpper(myChar[i]))
    {\n        //         myChar[i] = char.ToLower(myChar[i]);\n        //     }\n
    \       // }\n        // return new string(myChar);\n        string ret = \"\";\n
    \       for (int i = 0; i < str.Length; i++) {\n            if (char.IsLower(str[i]))
    {\n                ret += char.ToUpper(str[i]);\n            } else if (char.IsUpper(str[i]))
    {\n                ret += char.ToLower(str[i]);\n            } else {\n                ret
    += str[i];\n            }\n        }\n        return ret;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        StringBuilder sb = new
    StringBuilder();\n        for (int i = 0; i < str.Length; i++) {\n            char
    c = str[i];\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n
    \           } else {\n                sb.Append(char.ToUpper(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return new string(str.Select(x
    => Char.IsLower(x) ? Char.ToUpper(x) : Char.ToLower(x)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string result = \"\";\n
    \       foreach (char c in str) {\n            if (Char.IsLower(c)) {\n                result
    += Char.ToUpper(c);\n            } else {\n                result += Char.ToLower(c);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return \"\";\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bcbeabfb620744d2b1f8dbe0de6e10b9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bcbeabfb620744d2b1f8dbe0de6e10b9>:0
    \n"
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        // return str.Select(c
    => Char.IsLower(c) ? Char.ToUpper(c) : Char.ToLower(c)).Aggregate(\"\", (a, b)
    => a + b);\n        char[] chars = str.ToCharArray();\n        for (int i = 0;
    i < chars.Length; i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]
    = Char.ToUpper(chars[i]);\n            } else {\n                chars[i] = Char.ToLower(chars[i]);\n
    \           }\n        }\n        return new string(chars);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        StringBuilder sb = new
    StringBuilder();\n        for (int i = 0; i < str.Length; i++) {\n            if
    (char.IsUpper(str[i])) {\n                sb.Append(char.ToLower(str[i]));\n            }
    else {\n                sb.Append(char.ToUpper(str[i]));\n            }\n        }\n
    \       return sb.ToString();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string res = \"\";\n
    \       foreach (char c in str) {\n            if (c >= 'a' && c <= 'z')\n                res
    += (char)(c - 'a' + 'A');\n            else if (c >= 'A' && c <= 'Z')\n                res
    += (char)(c - 'A' + 'a');\n            else\n                res += c;\n        }\n
    \       return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] flipped = new
    char[str.Length];\n        for (int i = 0; i < str.Length; i++) {\n            if
    (Char.IsUpper(str[i])) {\n                flipped[i] = Char.ToLower(str[i]);\n
    \           } else {\n                flipped[i] = Char.ToUpper(str[i]);\n            }\n
    \       }\n        return new string(flipped);\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return new string(str.Select(c
    => {\n            if (char.IsUpper(c)) return char.ToLower(c);\n            else
    return char.ToUpper(c);\n        }).ToArray());\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string result = string.Empty;\n
    \       foreach (char c in str) {\n            if (char.IsUpper(c)) {\n                result
    += char.ToLower(c);\n            } else {\n                result += char.ToUpper(c);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return String.Concat(str.Select(x
    => Char.IsUpper(x) ? Char.ToLower(x) : Char.ToUpper(x)));\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] res = new char[str.Length];\n
    \       for (int i = 0; i < str.Length; i++) {\n            res[i] = char.IsLower(str[i])
    ? char.ToUpper(str[i]) : char.ToLower(str[i]);\n        }\n        return new
    string(res);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string str2 = \"\";\n
    \       for (int i = 0; i < str.Length; i++) {\n            if (str[i] == Char.ToLower(str[i]))
    {\n                str2 += Char.ToUpper(str[i]);\n            } else {\n                str2
    += Char.ToLower(str[i]);\n            }\n        }\n        return str2;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        // Write the body of
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <df7fa23fab1948eca71ea4c7a112459e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <df7fa23fab1948eca71ea4c7a112459e>:0
    \n"
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] flipped = new
    char[str.Length];\n        for (int i = 0; i < str.Length; i++) {\n            char
    c = str[i];\n            if (char.IsLower(c)) {\n                flipped[i] =
    char.ToUpper(c);\n            } else {\n                flipped[i] = char.ToLower(c);\n
    \           }\n        }\n        return new string(flipped);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string result = \"\";\n
    \       for (int i = 0; i < str.Length; i++) {\n            if (Char.IsLower(str[i]))
    {\n                result += Char.ToUpper(str[i]);\n            } else {\n                result
    += Char.ToLower(str[i]);\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return string.Join(\"\",
    str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)));\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       for (int i = 0; i < str.Length; i++) {\n            if (char.IsLower(str[i]))
    {\n                sb.Append(char.ToUpper(str[i]));\n            } else {\n                sb.Append(char.ToLower(str[i]));\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        // Go through each character
    in the string\n        string flipped = \"\";\n        for (int i = 0; i < str.Length;
    i++) {\n            // If it's lowercase, make it uppercase.\n            if (Char.IsLower(str[i]))
    {\n                flipped += Char.ToUpper(str[i]);\n            } else {\n                flipped
    += Char.ToLower(str[i]);\n            }\n        }\n        return flipped;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        StringBuilder sb = new
    StringBuilder();\n        foreach (char c in str) {\n            if (char.IsLower(c))
    {\n                sb.Append(char.ToUpper(c));\n            } else {\n                sb.Append(char.ToLower(c));\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string result = \"\";\n
    \       foreach (char c in str) {\n            if (char.IsUpper(c)) {\n                result
    += char.ToLower(c);\n            } else {\n                result += char.ToUpper(c);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        StringBuilder sb = new
    StringBuilder();\n        for (int i = 0; i < str.Length; i++) {\n            if
    (Char.IsLower(str[i])) {\n                sb.Append(Char.ToUpper(str[i]));\n            }
    else {\n                sb.Append(Char.ToLower(str[i]));\n            }\n        }\n
    \       return sb.ToString();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return string.Concat(str.Select(c
    => char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)));\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n
    \       for (int i = 0; i < chars.Length; i++) {\n            char c = chars[i];\n
    \           if (char.IsUpper(c)) {\n                chars[i] = char.ToLower(c);\n
    \           } else if (char.IsLower(c)) {\n                chars[i] = char.ToUpper(c);\n
    \           }\n        }\n        return new string(chars);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        StringBuilder sb = new
    StringBuilder();\n        for (int i = 0; i < str.Length; i++) {\n            char
    c = str[i];\n            if (c >= 'a' && c <= 'z') {\n                sb.Append((char)(c
    - 32));\n            } else if (c >= 'A' && c <= 'Z') {\n                sb.Append((char)(c
    + 32));\n            } else {\n                sb.Append(c);\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var c in str) {\n            sb.Append(char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c));\n        }\n        return sb.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] result = new char[str.Length];\n
    \       for (int i = 0; i < str.Length; i++) {\n            char c = str[i];\n
    \           if (c >= 'a' && c <= 'z') {\n                result[i] = (char)(c
    - 'a' + 'A');\n            } else if (c >= 'A' && c <= 'Z') {\n                result[i]
    = (char)(c - 'A' + 'a');\n            } else {\n                result[i] = c;\n
    \           }\n        }\n        return new string(result);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return new string(str.Select(x
    => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        throw new NotImplementedException();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation
    is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <45bb46147f73437db437c972e0834e3b>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method
    or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]
    in <45bb46147f73437db437c972e0834e3b>:0 \n"
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var ch in str) {\n            sb.Append(char.IsUpper(ch) ? char.ToLower(ch)
    : char.ToUpper(ch));\n        }\n        return sb.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var c in str) {\n            sb.Append(char.IsLower(c) ? char.ToUpper(c)
    : char.ToLower(c));\n        }\n        return sb.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        // convert string to
    char[]\n        char[] chars = str.ToCharArray();\n        // create a loop that
    will go through each character\n        for (int i = 0; i < chars.Length; i++)
    {\n            // if char is uppercase, convert to lowercase\n            if (Char.IsUpper(chars[i]))
    {\n                chars[i] = Char.ToLower(chars[i]);\n            }\n            //
    else, char is lowercase, convert to uppercase\n            else {\n                chars[i]
    = Char.ToUpper(chars[i]);\n            }\n        }\n        // convert back to
    string\n        return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        // Return the flipped
    string.\n        return null;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0000b] in <e7ae9145ef95423f8724beb599440bca>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0000b] in <e7ae9145ef95423f8724beb599440bca>:0
    \n"
  stdout: ''
  timestamp: 1660015778
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        // Write code here\n
    \       return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0000b] in <645f5daff4f24ad596fc3e145178d9c9>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0000b] in <645f5daff4f24ad596fc3e145178d9c9>:0
    \n"
  stdout: ''
  timestamp: 1660015778
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        throw new NotImplementedException();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation
    is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <45bb46147f73437db437c972e0834e3b>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method
    or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]
    in <45bb46147f73437db437c972e0834e3b>:0 \n"
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return str.Select(x =>
    char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ab1ba6c5b86f4b11ad6fc5b240caac88>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ab1ba6c5b86f4b11ad6fc5b240caac88>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return new string(\n
    \           str.Select(x => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray()\n
    \       );\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] output = new char[str.Length];\n
    \       for (int i = 0; i < str.Length; i++) {\n            if (char.IsLower(str[i]))
    {\n                output[i] = char.ToUpper(str[i]);\n            } else {\n                output[i]
    = char.ToLower(str[i]);\n            }\n        }\n        return new string(output);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] result = new char[str.Length];\n
    \       for (int i = 0; i < str.Length; i++) {\n            result[i] = (char)(str[i]
    ^ 32);\n        }\n        return new string(result);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6660f2919ae4493ba7fc93c5cfcddf11>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6660f2919ae4493ba7fc93c5cfcddf11>:0
    \n"
  stdout: ''
  timestamp: 1660015779
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        // TODO\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0000b] in <e72940617471417f8122d1f85f8228af>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0000b] in <e72940617471417f8122d1f85f8228af>:0
    \n"
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return new string(str.Select(c
    => char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        // 1. Convert string
    to array of chars.\n        // 2. Iterate through array of chars.\n        //
    3. Check if each char is UPPERCASE or lowercase.\n        // 4. Flip case.\n        //
    5. Add changed char to string.\n        // 6. Return string.\n        char[] inputArray
    = str.ToCharArray();\n        string result = \"\";\n        foreach (char i in
    inputArray) {\n            if (Char.IsUpper(i)) {\n                result += Char.ToLower(i);\n
    \           } else {\n                result += Char.ToUpper(i);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string newString = \"\";\n
    \       foreach (char x in str) {\n            newString += (Char.IsUpper(x))
    ? Char.ToLower(x) : Char.ToUpper(x);\n        }\n        return newString;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        throw new NotImplementedException();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation
    is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <45bb46147f73437db437c972e0834e3b>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method
    or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]
    in <45bb46147f73437db437c972e0834e3b>:0 \n"
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var arr = str.ToCharArray();\n
    \       for (int i = 0; i < arr.Length; i++) {\n            var c = arr[i];\n
    \           if (c >= 'a' && c <= 'z')\n                arr[i] = (char)(c - ('a'
    - 'A'));\n            else if (c >= 'A' && c <= 'Z')\n                arr[i] =
    (char)(c + ('a' - 'A'));\n        }\n        return new string(arr);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string result = \"\";\n
    \       foreach (char ch in str) {\n            if (Char.IsLower(ch)) {\n                result
    += Char.ToUpper(ch);\n            } else {\n                result += Char.ToLower(ch);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n
    \       for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))
    {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i]))
    {\n                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string flipped = \"\";\n
    \       for (int i = 0; i < str.Length; i++) {\n            if (Char.IsUpper(str[i]))
    {\n                flipped += Char.ToLower(str[i]);\n            } else {\n                flipped
    += Char.ToUpper(str[i]);\n            }\n        }\n        return flipped;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string result = \"\";\n
    \       foreach (char c in str) {\n            // Flip character\n            if
    (Char.IsUpper(c)) {\n                result += Char.ToLower(c);\n            }
    else {\n                result += Char.ToUpper(c);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string result = \"\";\n
    \       for (int i = 0; i < str.Length; i++) {\n            if (Char.IsUpper(str[i]))
    {\n                result += Char.ToLower(str[i]);\n            } else {\n                result
    += Char.ToUpper(str[i]);\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return \"???\";\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c3749feb9ef841a6b7c644f3cbec8eb1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c3749feb9ef841a6b7c644f3cbec8eb1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return \"\";\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bcbeabfb620744d2b1f8dbe0de6e10b9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bcbeabfb620744d2b1f8dbe0de6e10b9>:0
    \n"
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n
    \       for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))
    {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i]))
    {\n                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var result = new StringBuilder();\n
    \       foreach (var ch in str) {\n            if (char.IsLower(ch)) {\n                result.Append(char.ToUpper(ch));\n
    \           } else {\n                result.Append(char.ToLower(ch));\n            }\n
    \       }\n        return result.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return new string(str.Select(x
    => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return str.Select(s =>
    {\n            return (char)((s > 'Z') ? (s - 'a' + 'A') : (s - 'A' + 'a'));\n
    \       }).Aggregate(\"\", (s, c) => s + c);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bbed5c45b03944369d6681d7e5e95a6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bbed5c45b03944369d6681d7e5e95a6c>:0
    \n"
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var n = new StringBuilder();\n
    \       foreach (var c in str)\n            n.Append(char.IsLower(c) ? char.ToUpper(c)
    : char.ToLower(c));\n        return n.ToString();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string newStr = \"\";\n
    \       for (int i = 0; i < str.Length; i++) {\n            if (str[i] >= 65 &&
    str[i] <= 90) {\n                newStr += (char)(str[i] + 32);\n            }
    else if (str[i] >= 97 && str[i] <= 122) {\n                newStr += (char)(str[i]
    - 32);\n            } else {\n                newStr += str[i];\n            }\n
    \       }\n        return newStr;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        // Get a list of all
    the characters in the string.\n        var lst = str.ToList();\n        var outLst
    = new List<char>();\n        foreach (var c in lst) {\n            // Check if
    the current character is uppercase.\n            if (char.IsUpper(c)) {\n                //
    Flip to lowercase.\n                outLst.Add(char.ToLower(c));\n            }
    else {\n                // Flip to uppercase.\n                outLst.Add(char.ToUpper(c));\n
    \           }\n        }\n        // Return the list as a string.\n        return
    new string(outLst.ToArray());\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string output = \"\";\n
    \       foreach (char c in str) {\n            if (Char.IsUpper(c)) {\n                output
    += Char.ToLower(c);\n            } else {\n                output += Char.ToUpper(c);\n
    \           }\n        }\n        return output;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return str.ToLower();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4524ba00235f42348de5da6a0d14b1dc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4524ba00235f42348de5da6a0d14b1dc>:0
    \n"
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n
    \           } else {\n                sb.Append(char.ToUpper(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return new string(str.Select(x
    => char.IsLower(x) ? char.ToUpper(x) : char.ToLower(x)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        StringBuilder stringBuilder
    = new StringBuilder();\n        for (int i = 0; i < str.Length; i++) {\n            if
    (char.IsUpper(str[i])) {\n                stringBuilder.Append(char.ToLower(str[i]));\n
    \           } else {\n                stringBuilder.Append(char.ToUpper(str[i]));\n
    \           }\n        }\n        return stringBuilder.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        StringBuilder sb = new
    StringBuilder();\n        foreach (char c in str) {\n            if (Char.IsUpper(c))
    {\n                sb.Append(Char.ToLower(c));\n            } else {\n                sb.Append(Char.ToUpper(c));\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var result = new StringBuilder();\n
    \       foreach (var ch in str) {\n            result.Append(Char.IsUpper(ch)
    ? Char.ToLower(ch) : Char.ToUpper(ch));\n        }\n        return result.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] flipped = new
    char[str.Length];\n        for (int i = 0; i < str.Length; i++) {\n            flipped[i]
    = char.IsUpper(str[i]) ? char.ToLower(str[i]) : char.ToUpper(str[i]);\n        }\n
    \       return new string(flipped);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return new string(str.Select(c
    => char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string result = \"\";\n
    \       foreach (char c in str) {\n            result += Char.IsLower(c) ? Char.ToUpper(c)
    : Char.ToLower(c);\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var strArray = str.ToCharArray();\n
    \       for (int i = 0; i < strArray.Length; i++) {\n            if (char.IsUpper(strArray[i]))
    {\n                strArray[i] = char.ToLower(strArray[i]);\n            } else
    {\n                strArray[i] = char.ToUpper(strArray[i]);\n            }\n        }\n
    \       return new string(strArray);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        // >>> ord('H')\n        //
    72\n        // >>> ord('h')\n        // 104\n        // >>> chr(72)\n        //
    'H'\n        // >>> chr(104)\n        // 'h'\n        // Create an empty string
    to build the flipped string\n        string flipped = \"\";\n        // Iterate
    through each character in the string\n        foreach (char c in str) {\n            //
    If the character is an uppercase letter\n            if (c >= 'A' && c <= 'Z')
    {\n                // Add the lowercase version of the letter to the string\n
    \               flipped += char.ToLower(c);\n            }\n            // Otherwise,
    if the character is a lowercase letter\n            else if (c >= 'a' && c <=
    'z') {\n                // Add the uppercase version of the letter to the string\n
    \               flipped += char.ToUpper(c);\n            }\n            // Otherwise,
    it's not a letter, so just add it to the string\n            else {\n                flipped
    += c;\n            }\n        }\n        // Return the flipped string\n        return
    flipped;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] characters = str.ToCharArray();\n
    \       for (int i = 0; i < characters.Length; i++) {\n            char c = characters[i];\n
    \           if (char.IsLower(c)) {\n                characters[i] = char.ToUpper(c);\n
    \           } else if (char.IsUpper(c)) {\n                characters[i] = char.ToLower(c);\n
    \           }\n        }\n        return new string(characters);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] res = new char[str.Length];\n
    \       for (int i = 0; i < str.Length; i++) {\n            if (Char.IsUpper(str[i]))
    {\n                res[i] = Char.ToLower(str[i]);\n            } else {\n                res[i]
    = Char.ToUpper(str[i]);\n            }\n        }\n        return new string(res);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n
    \       for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))
    {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i]))
    {\n                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        StringBuilder sb = new
    StringBuilder();\n        for (int i = 0; i < str.Length; i++) {\n            char
    c = str[i];\n            if (char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n
    \           } else {\n                sb.Append(char.ToLower(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string flippedStr = \"\";\n
    \       for (int i = 0; i < str.Length; i++) {\n            // check for lowercase\n
    \           if ((str[i] >= 97) && (str[i] <= 122)) {\n                flippedStr
    += Char.ToUpper(str[i]);\n            }\n            // check for uppercase\n
    \           else if ((str[i] >= 65) && (str[i] <= 90)) {\n                flippedStr
    += Char.ToLower(str[i]);\n            }\n            // if neither lowercase nor
    uppercase, just add character\n            else {\n                flippedStr
    += str[i];\n            }\n        }\n        return flippedStr;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        // O(n)\n        char[]
    chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length; i++) {\n
    \           char c = chars[i];\n            if (char.IsLower(c)) {\n                chars[i]
    = char.ToUpper(c);\n            } else if (char.IsUpper(c)) {\n                chars[i]
    = char.ToLower(c);\n            }\n        }\n        return new string(chars);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] newString = new
    char[str.Length];\n        for (int i = 0; i < str.Length; i++) {\n            if
    (char.IsUpper(str[i])) {\n                newString[i] = char.ToLower(str[i]);\n
    \           } else {\n                newString[i] = char.ToUpper(str[i]);\n            }\n
    \       }\n        return new string(newString);\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string result = \"\";\n
    \       for (int i = 0; i < str.Length; i++) {\n            if (Char.IsLower(str[i]))
    {\n                result += Char.ToUpper(str[i]);\n            } else {\n                result
    += Char.ToLower(str[i]);\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        StringBuilder sb = new
    StringBuilder();\n        foreach (char c in str) {\n            if (char.IsLower(c))
    {\n                sb.Append(char.ToUpper(c));\n            } else {\n                sb.Append(char.ToLower(c));\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015778
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] arr = str.ToCharArray();\n
    \       for (int i = 0; i < arr.Length; i++) {\n            arr[i] = char.IsLower(arr[i])
    ? char.ToUpper(arr[i]) : char.ToLower(arr[i]);\n        }\n        return new
    string(arr);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var charArray = str.ToCharArray();\n
    \       for (int i = 0; i < charArray.Length; i++) {\n            charArray[i]
    = char.IsUpper(charArray[i]) ? char.ToLower(charArray[i]) : char.ToUpper(charArray[i]);\n
    \       }\n        return new string(charArray);\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] res = new char[str.Length];\n
    \       for (int i = 0; i < str.Length; i++) {\n            if (char.IsUpper(str[i]))
    {\n                res[i] = char.ToLower(str[i]);\n            } else {\n                res[i]
    = char.ToUpper(str[i]);\n            }\n        }\n        return new string(res);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return str.ToLower();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4524ba00235f42348de5da6a0d14b1dc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4524ba00235f42348de5da6a0d14b1dc>:0
    \n"
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n
    \           } else {\n                sb.Append(char.ToUpper(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015777
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string flipped = \"\";\n
    \       for (int i = 0; i < str.Length; i++) {\n            if (Char.IsUpper(str[i]))
    {\n                flipped += Char.ToLower(str[i]);\n            } else {\n                flipped
    += Char.ToUpper(str[i]);\n            }\n        }\n        return flipped;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return \"\";\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bcbeabfb620744d2b1f8dbe0de6e10b9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bcbeabfb620744d2b1f8dbe0de6e10b9>:0
    \n"
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        // Declare a stringbuilder
    to build the flipped string.\n        StringBuilder reversed = new StringBuilder();\n
    \       // Loop through each char in the given string.\n        foreach (char
    c in str) {\n            // if char is uppercase, add lowercase char to stringbuilder.\n
    \           if (char.IsUpper(c)) {\n                reversed.Append(char.ToLower(c));\n
    \           }\n            // If char is lowercase, add uppercase char to stringbuilder.\n
    \           else if (char.IsLower(c)) {\n                reversed.Append(char.ToUpper(c));\n
    \           }\n            // Otherwise add the char to the stringbuilder.\n            else
    {\n                reversed.Append(c);\n            }\n        }\n        // return
    the reversed string.\n        return reversed.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return str.Aggregate(new
    StringBuilder(), (x, y) => {\n            if(Char.IsLower(y)) x.Append(Char.ToUpper(y));\n
    \           else x.Append(Char.ToLower(y));\n            return x;\n        }).ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015780
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string result = \"\";\n
    \       foreach (char ch in str) {\n            if (Char.IsLower(ch)) {\n                result
    += Char.ToUpper(ch);\n            } else {\n                result += Char.ToLower(ch);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        throw new NotImplementedException();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation
    is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <45bb46147f73437db437c972e0834e3b>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method
    or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]
    in <45bb46147f73437db437c972e0834e3b>:0 \n"
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string result = \"\";\n
    \       for (int i = 0; i < str.Length; i++) {\n            if (Char.IsUpper(str[i]))
    {\n                result += Char.ToLower(str[i]);\n            } else {\n                result
    += Char.ToUpper(str[i]);\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var result = new StringBuilder();\n
    \       foreach (var c in str) {\n            result.Append(char.IsLower(c) ?
    char.ToUpper(c) : char.ToLower(c));\n        }\n        return result.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        StringBuilder sb = new
    StringBuilder();\n        foreach (char ch in str) {\n            if (Char.IsLower(ch))\n
    \               sb.Append(Char.ToUpper(ch));\n            else\n                sb.Append(Char.ToLower(ch));\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var ch in str) {\n            if (Char.IsLower(ch)) {\n                sb.Append(Char.ToUpper(ch));\n
    \           } else {\n                sb.Append(Char.ToLower(ch));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015780
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string result = \"\";\n
    \       for (int i = 0; i < str.Length; i++) {\n            char ch = str[i];\n
    \           if (Char.IsLower(ch)) {\n                result += Char.ToUpper(ch);\n
    \           } else {\n                result += Char.ToLower(ch);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015780
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return String.Join(\"\",
    str.Select(c => c.ToString().ToUpper() == c.ToString() ? c.ToString().ToLower()
    : c.ToString().ToUpper()));\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015780
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var ch in str) {\n            if (char.IsUpper(ch)) {\n                sb.Append(char.ToLower(ch));\n
    \           } else {\n                sb.Append(char.ToUpper(ch));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015780
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var result = new StringBuilder();\n
    \       foreach (var c in str) {\n            if (char.IsUpper(c))\n                result.Append(char.ToLower(c));\n
    \           else\n                result.Append(char.ToUpper(c));\n        }\n
    \       return result.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015780
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return str.Aggregate(new
    StringBuilder(), (acc, c) => acc.Append(char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c))).ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015780
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string newStr = \"\";\n
    \       for (int i = 0; i < str.Length; i++) {\n            if (str[i] > 64 &&
    str[i] < 91) {\n                newStr += (char)(str[i] + 32);\n            }
    else if (str[i] > 96 && str[i] < 123) {\n                newStr += (char)(str[i]
    - 32);\n            } else {\n                newStr += str[i];\n            }\n
    \       }\n        return newStr;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015780
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        StringBuilder sb = new
    StringBuilder();\n        for (int i = 0; i < str.Length; i++) {\n            if
    (Char.IsUpper(str[i])) {\n                sb.Append(Char.ToLower(str[i]));\n            }
    else {\n                sb.Append(Char.ToUpper(str[i]));\n            }\n        }\n
    \       return sb.ToString();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return new string(\n
    \           str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray()\n
    \       );\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015780
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var c in str) {\n            if (c >= 'a' && c <= 'z') {\n                sb.Append((char)(c
    - 'a' + 'A'));\n            } else if (c >= 'A' && c <= 'Z') {\n                sb.Append((char)(c
    - 'A' + 'a'));\n            } else {\n                sb.Append(c);\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015775
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var ch in str) {\n            sb.Append(char.IsLower(ch) ? char.ToUpper(ch)
    : char.ToLower(ch));\n        }\n        return sb.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015780
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return new string(str.Select(x
    => char.IsLower(x) ? char.ToUpper(x) : char.ToLower(x)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015779
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        StringBuilder sb = new
    StringBuilder();\n        foreach (char c in str) {\n            sb.Append(char.IsLower(c)
    ? char.ToUpper(c) : char.ToLower(c));\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015780
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        return str.Select(ch
    => char.IsUpper(ch) ? char.ToLower(ch) : char.ToUpper(ch)).ToString();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3048236fb23045d981ff90f712da5ac5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3048236fb23045d981ff90f712da5ac5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015780
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        string result = \"\";\n
    \       foreach (char c in str) {\n            if (char.IsUpper(c)) {\n                result
    += char.ToLower(c);\n            } else {\n                result += char.ToUpper(c);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015776
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        char[] c = str.ToCharArray();\n
    \       for (int i = 0; i < c.Length; i++) {\n            if (char.IsUpper(c[i]))
    {\n                c[i] = char.ToLower(c[i]);\n            } else if (char.IsLower(c[i]))
    {\n                c[i] = char.ToUpper(c[i]);\n            }\n        }\n        return
    new string(c);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015780
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        StringBuilder result
    = new StringBuilder();\n        for (int i = 0; i < str.Length; i++) {\n            char
    c = str[i];\n            if (char.IsUpper(c))\n                result.Append(char.ToLower(c));\n
    \           else\n                result.Append(char.ToUpper(c));\n        }\n
    \       return result.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015780
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n
    \   public static string FlipCase(string str) {\n        var newString = \"\";\n
    \       foreach (var c in str) {\n            if (char.IsLower(c)) {\n                newString
    += char.ToUpper(c);\n            } else {\n                newString += char.ToLower(c);\n
    \           }\n        }\n        return newString;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015780

language: cs
name: HumanEval_92_any_int
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // Implement this function\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)\
    \ == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,\
    \ (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,\
    \ (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,\
    \ (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d3b51e7eb52c4eeb86ec24daf43c3a93>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d3b51e7eb52c4eeb86ec24daf43c3a93>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // Enter your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76678410871d42bd94949842f65204ec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76678410871d42bd94949842f65204ec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return x == y + z || y == x + z || z == x + y;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b610df36742446397282668ac7733e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b610df36742446397282668ac7733e1>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // Convert floats to integers.\n        int xn = (int)x;\n        int\
    \ yn = (int)y;\n        int zn = (int)z;\n        // Return whether any of the\
    \ numbers is equal to the sum of the other two.\n        return xn == yn + zn\
    \ || yn == xn + zn || zn == xn + yn;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d0f3aaf95d74be287013ca96ef15570>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if(x == y + z || y == x + z || z == x + y) {\n            if(Math.Floor(x)\
    \ == x && Math.Floor(y) == y && Math.Floor(z) == z) {\n                return\
    \ true;\n            }\n        }\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2dff2054189451696ae62fe54f0676c>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // Convert all values to Int32\n        int x1 = (int)x;\n        int\
    \ y1 = (int)y;\n        int z1 = (int)z;\n        // Check if any of the values\
    \ are equal to the sum of the other two\n        if (x1 == y1 + z1 || y1 == x1\
    \ + z1 || z1 == x1 + y1)\n            return true;\n        else\n           \
    \ return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <07f100e50fca419f8b3c79c895535b70>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (x == y + z || y == x + z || z == x + y) && (x % 1 == 0 && y %\
    \ 1 == 0 && z % 1 == 0);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5abf7b61be844b429d732b43f096c1a6>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return ((x == y + z) || (y == x + z) || (z == x + y)) && x % 1 == 0 &&\
    \ y % 1 == 0 && z % 1 == 0;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n  \
    \  Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f928d0a5634b4bf8b598a4b972402c36>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (x == (y + z) || y == (x + z) || z == (x + y)) && x % 1 == 0 &&\
    \ y % 1 == 0 && z % 1 == 0;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n  \
    \  Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ed1c8a11480441bfa6113eabfe97f0b9>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if (x % 1 == 0 && y % 1 == 0 && z % 1 == 0) {\n            if (x + y\
    \ == z || x + z == y || y + z == x) {\n                return true;\n        \
    \    }\n        }\n        return false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <509e6049586241848157434103605dbe>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        Debug.Assert(x <= y && y <= z);\n        return x + y == z || x + z ==\
    \ y || y + z == x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.AnyInt (System.Single\
    \ x, System.Single y, System.Single z) [0x00000] in <9e1d79f9f8bd4865b0cd480430ec8346>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00000] in <9e1d79f9f8bd4865b0cd480430ec8346>:0\
    \ \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,\
    \ System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.AnyInt (System.Single\
    \ x, System.Single y, System.Single z) [0x00000] in <9e1d79f9f8bd4865b0cd480430ec8346>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00000] in <9e1d79f9f8bd4865b0cd480430ec8346>:0\
    \ \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,\
    \ System.String det"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (int)x + (int)y == (int)z || (int)x + (int)z == (int)y || (int)y\
    \ + (int)z == (int)x;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0dcb286cb4fa4e67b7699a6fc9a2021d>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (x % 1 == 0 && y % 1 == 0 && z % 1 == 0) ? (x + y == z || x +\
    \ z == y || y + z == x) : false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <008d3effcfa14cc39662d33e79b495d9>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (x + y == z || x + z == y || y + z == x) && x == (int)x && y ==\
    \ (int)y && z == (int)z;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <da3ffeb56f184064a232ed6c4865b881>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (long)x + (long)y == (long)z || (long)x + (long)z == (long)y ||\
    \ (long)y + (long)z == (long)x;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n  \
    \  Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cbc5fec0d3174187a36aa181e18a5e37>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return ((int)x + (int)y == (int)z) || ((int)x + (int)z == (int)y) ||\
    \ ((int)y + (int)z == (int)x);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n  \
    \  Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <09324fa9acba45e1acd88edff219563b>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return x == y + z || y == x + z || z == x + y;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b610df36742446397282668ac7733e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b610df36742446397282668ac7733e1>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // Your code here\n        return false;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c03d5d3b1704091b24b9c5a79fe21dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c03d5d3b1704091b24b9c5a79fe21dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // TODO: Implement this function.\n        // Hint: You can use the `Math.Floor`\
    \ function.\n        return false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76b6a73fc82b4250851ba728328bd9ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76b6a73fc82b4250851ba728328bd9ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (x == (y + z) || y == (x + z) || z == (x + y)) && x == Math.Floor(x)\
    \ && y == Math.Floor(y) && z == Math.Floor(z);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1043a3fbf7a945108c4dbaf1a6c0ab4a>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if (x % 1 == 0 && y % 1 == 0 && z % 1 == 0) {\n            int a = (int)x;\n\
    \            int b = (int)y;\n            int c = (int)z;\n            if (a +\
    \ b == c || a + c == b || b + c == a) {\n                return true;\n      \
    \      }\n        }\n        return false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <797363ae88b04fceadbd50dd826ee2e2>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // Put your code here\n        // See comments for debugging help\n \
    \       return (x + y == z || x + z == y || y + z == x) && (int)x == x && (int)y\
    \ == y && (int)z == z;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b946ac92db4492fa5c1172a71a1fcb0>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return false;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <24486fd89e0a4d41852d3f2664315124>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <24486fd89e0a4d41852d3f2664315124>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (((x == (y + z)) || (y == (x + z)) || (z == (x + y))) && ((Int32)x\
    \ == x) && ((Int32)y == y) && ((Int32)z == z));\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8f60959a1134f469b67148665e2dcb4>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        float a = Math.Abs(x);\n        float b = Math.Abs(y);\n        float\
    \ c = Math.Abs(z);\n        if (a - (int)a == 0 && b - (int)b == 0 && c - (int)c\
    \ == 0) {\n            if (a == b + c || b == a + c || c == a + b) {\n       \
    \         return true;\n            }\n        }\n        return false;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <56f76c70aaeb451bb3097ef9691c65a0>:0 \n"
  stdout: ''
  timestamp: 1660015937
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        float[] arr = new float[] { x, y, z };\n        for (int i = 0; i < arr.Length;\
    \ i++) {\n            if (arr[i] % 1 != 0) {\n                return false;\n\
    \            }\n        }\n        Array.Sort(arr);\n        if (arr[2] == arr[0]\
    \ + arr[1]) {\n            return true;\n        }\n        return false;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c31de8bfecdb45e689a665ca2528c589>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c31de8bfecdb45e689a665ca2528c589>:0 \n"
  stdout: ''
  timestamp: 1660015937
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (int)x + (int)y == (int)z || (int)x + (int)z == (int)y || (int)y\
    \ + (int)z == (int)x;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0dcb286cb4fa4e67b7699a6fc9a2021d>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (int)x + (int)y == (int)z || (int)x + (int)z == (int)y || (int)y\
    \ + (int)z == (int)x;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0dcb286cb4fa4e67b7699a6fc9a2021d>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // first check whether all inputs are integers, then check whether any\
    \ equals sum of the others\n        return (x % 1 == 0 && y % 1 == 0 && z % 1\
    \ == 0) ? ((x == y + z) || (y == x + z) || (z == x + y)) : false;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0a8231a2c9644d41886c9a690dea346f>:0 \n"
  stdout: ''
  timestamp: 1660015937
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        var sum = x + y + z;\n        if ((x == sum - y - z) || (y == sum - x\
    \ - z) || (z == sum - x - y)) {\n            return true;\n        }\n       \
    \ return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bfe825b42d9d49298d04fac4cec80461>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bfe825b42d9d49298d04fac4cec80461>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015937
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (Math.Floor(x) + Math.Floor(y) == Math.Floor(z) || Math.Floor(x)\
    \ + Math.Floor(z) == Math.Floor(y) || Math.Floor(y) + Math.Floor(z) == Math.Floor(x));\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e2f8d6848519492f8f1fa844d8f89054>:0 \n"
  stdout: ''
  timestamp: 1660015937
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (x%1==0) && (y%1==0) && (z%1==0) && (x+y==z || x+z==y || y+z==x);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5ae8f0b77dc64d83ac77c1df9ef76774>:0 \n"
  stdout: ''
  timestamp: 1660015937
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        int xr = (int)x;\n        int yr = (int)y;\n        int zr = (int)z;\n\
    \        if ((xr != x) || (yr != y) || (zr != z)) {\n            return false;\n\
    \        }\n        return ((xr == yr + zr) || (xr + yr == zr) || (xr + zr ==\
    \ yr));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <45bb6885f42b407a8f20d6d385493bb6>:0 \n"
  stdout: ''
  timestamp: 1660015937
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // Write your code here\n        var xIsInt = isInt(x);\n        var\
    \ yIsInt = isInt(y);\n        var zIsInt = isInt(z);\n        var onlyInts = xIsInt\
    \ && yIsInt && zIsInt;\n        if (onlyInts) {\n            var oneOf = x + y\
    \ == z || x + z == y || y + z == x;\n            return oneOf;\n        }\n  \
    \      return false;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdovk9dav.cs(23,22): error CS0103: The name ''isInt'' does not exist in
    the current context

    /tmp/tmpdovk9dav.cs(24,22): error CS0103: The name ''isInt'' does not exist in
    the current context

    /tmp/tmpdovk9dav.cs(25,22): error CS0103: The name ''isInt'' does not exist in
    the current context

    '
  timestamp: 1660015937
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (int)x + (int)y == (int)z || (int)x + (int)z == (int)y || (int)y\
    \ + (int)z == (int)x;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0dcb286cb4fa4e67b7699a6fc9a2021d>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        int[] arr = new int[] { (int)x, (int)y, (int)z };\n        int a = arr[0];\n\
    \        int b = arr[1];\n        int c = arr[2];\n        if (a + b == c || a\
    \ + c == b || b + c == a)\n            return true;\n        return false;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <32ef6b3c6835446cbcec9b565a7a6cec>:0 \n"
  stdout: ''
  timestamp: 1660015937
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if ((x + y == z) && (IsInteger(x)) && (IsInteger(y)) && (IsInteger(z)))\n\
    \            return true;\n        if ((x + z == y) && (IsInteger(x)) && (IsInteger(y))\
    \ && (IsInteger(z)))\n            return true;\n        if ((y + z == x) && (IsInteger(x))\
    \ && (IsInteger(y)) && (IsInteger(z)))\n            return true;\n        return\
    \ false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo3zauvpj.cs(22,30): error CS0103: The name ''IsInteger'' does not exist
    in the current context

    /tmp/tmpo3zauvpj.cs(22,48): error CS0103: The name ''IsInteger'' does not exist
    in the current context

    /tmp/tmpo3zauvpj.cs(22,66): error CS0103: The name ''IsInteger'' does not exist
    in the current context

    /tmp/tmpo3zauvpj.cs(24,30): error CS0103: The name ''IsInteger'' does not exist
    in the current context

    /tmp/tmpo3zauvpj.cs(24,48): error CS0103: The name ''IsInteger'' does not exist
    in the current context

    /tmp/tmpo3zauvpj.cs(24,66): error CS0103: The name ''IsInteger'' does not exist
    in the current context

    /tmp/tmpo3zauvpj.cs(26,30): error CS0103: The name ''IsInteger'' does not exist
    in the current context

    /tmp/tmpo3zauvpj.cs(26,48): error CS0103: The name ''IsInteger'' does not exist
    in the current context

    /tmp/tmpo3zauvpj.cs(26,66): error CS0103: The name ''IsInteger'' does not exist
    in the current context

    '
  timestamp: 1660015937
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return ((x + y == z) || (x + z == y) || (y + z == x)) && x % 1 == 0 &&\
    \ y % 1 == 0 && z % 1 == 0;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n  \
    \  Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dec3a59a883e4f6d986b5f6e43c57656>:0 \n"
  stdout: ''
  timestamp: 1660015937
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        bool[] bs = new bool[3];\n        bool[] sum = new bool[3];\n       \
    \ bs[0] = x == Math.Floor(x);\n        bs[1] = y == Math.Floor(y);\n        bs[2]\
    \ = z == Math.Floor(z);\n        sum[0] = x == y + z;\n        sum[1] = y == x\
    \ + z;\n        sum[2] = z == x + y;\n        bool b = false;\n        foreach\
    \ (bool bl in bs) {\n            b = b || bl;\n        }\n        bool s = false;\n\
    \        foreach (bool bl in sum) {\n            s = s || bl;\n        }\n   \
    \     return b && s;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6fd17ddfdb1b4aa8868ea987c8be384d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6fd17ddfdb1b4aa8868ea987c8be384d>:0 \n"
  stdout: ''
  timestamp: 1660015937
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        float[] a = { x, y, z };\n        Array.Sort(a);\n        return Math.Abs(a[2]\
    \ - (a[0] + a[1])) < 1e-5 && x == (int)x && y == (int)y && z == (int)z;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <18d332f1db414763bb345e9c3802d37e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <18d332f1db414763bb345e9c3802d37e>:0 \n"
  stdout: ''
  timestamp: 1660015937
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        int i = (int)x;\n        int j = (int)y;\n        int k = (int)z;\n \
    \       return x == i && y == j && z == k && (i + j == k || i + k == j || j +\
    \ k == i);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <830ba9e0d85b4d2c8d59d128fa3e8a06>:0 \n"
  stdout: ''
  timestamp: 1660015937
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        bool a = (x+y==z) || (x+z==y) || (y+z==x);\n        bool b = x is int\
    \ && y is int && z is int;\n        bool c = (int)x == x && (int)y == y && (int)z\
    \ == z;\n        return a && b && c;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <03ff4af0c4004075bb30c88864b83aa3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <03ff4af0c4004075bb30c88864b83aa3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015937
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        int a = Convert.ToInt32(x);\n        int b = Convert.ToInt32(y);\n  \
    \      int c = Convert.ToInt32(z);\n        return a == b + c || b == a + c ||\
    \ c == a + b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <deffba132c4f4743b75f5f365e533840>:0 \n"
  stdout: ''
  timestamp: 1660015937
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if (Math.Abs(x) == Math.Abs(y) + Math.Abs(z)) {\n            return true;\n\
    \        }\n        if (Math.Abs(y) == Math.Abs(x) + Math.Abs(z)) {\n        \
    \    return true;\n        }\n        if (Math.Abs(z) == Math.Abs(x) + Math.Abs(y))\
    \ {\n            return true;\n        }\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)\
    \ == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,\
    \ (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,\
    \ (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,\
    \ (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2103ba570c24fada2e1538b10296148>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2103ba570c24fada2e1538b10296148>:0 \n"
  stdout: ''
  timestamp: 1660015937
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        double[] args = new double[] { x, y, z };\n        return !args.Any(x\
    \ => (int)x != x) && args.Any(x => x == args.Sum() - x);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <52d5c3fc10cc48e3b2aaca5dde160ae3>:0 \n"
  stdout: ''
  timestamp: 1660015937
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        float x1 = x;\n        float y1 = y;\n        float z1 = z;\n       \
    \ float x2 = x;\n        float y2 = y;\n        float z2 = z;\n        float x3\
    \ = x;\n        float y3 = y;\n        float z3 = z;\n        float x4 = x;\n\
    \        float y4 = y;\n        float z4 = z;\n        float x5 = x;\n       \
    \ float y5 = y;\n        float z5 = z;\n        float x6 = x;\n        float y6\
    \ = y;\n        float z6 = z;\n        float x7 = x;\n        float y7 = y;\n\
    \        float z7 = z;\n        float x8 = x;\n        float y8 = y;\n       \
    \ float z8 = z;\n        float x9 = x;\n        float y9 = y;\n        float z9\
    \ = z;\n        float x10 = x;\n        float y10 = y;\n        float z10 = z;\n\
    \        float x11 = x;\n        float y11 = y;\n        float z11 = z;\n    \
    \    float x12 = x;\n        float y12 = y;\n        float z12 = z;\n        float\
    \ x13 = x;\n        float y13 = y;\n        float z13 = z;\n        float x14\
    \ = x;\n        float y14 = y;\n        float z14 = z;\n        float x15 = x;\n\
    \        float y15 = y;\n        float z15 = z;\n        float x16 = x;\n    \
    \    float y16 = y;\n        float z16 = z;\n        float x17 = x;\n        float\
    \ y17 = y;\n        float z17 = z;\n        float x18 = x;\n        float y18\
    \ = y;\n        float z18 = z;\n        float x19 = x;\n        float y19 = y;\n\
    \        float z19 = z;\n        float x20 = x;\n        float y20 = y;\n    \
    \    float z20 = z;\n        float x21 = x;\n        float y21 = y;\n        float\
    \ z21 = z;\n        float x22 = x;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmw3u_05v.cs(21,24): error CS0161: ''Problem.AnyInt(float, float, float)'':
    not all code paths return a value

    '
  timestamp: 1660015937
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (x % 1 == 0 && y % 1 == 0 && z % 1 == 0) && ((x + y == z) || (x\
    \ + z == y) || (y + z == x));\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n  \
    \  Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <af30b5fd7ed5440292d78f42c65789dc>:0 \n"
  stdout: ''
  timestamp: 1660015937
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return ((x+y)==z || (x+z)==y || (y+z)==x) && (x==(int)x && y==(int)y\
    \ && z==(int)z);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <843fc2ac8a7249e09b13b27051cbc7cb>:0 \n"
  stdout: ''
  timestamp: 1660015937
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if (x + y == z) return true;\n        if (x + z == y) return true;\n\
    \        if (y + z == x) return true;\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)\
    \ == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,\
    \ (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,\
    \ (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,\
    \ (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <af28fe3cdd1e43b4a26c46113d34ddd1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <af28fe3cdd1e43b4a26c46113d34ddd1>:0 \n"
  stdout: ''
  timestamp: 1660015937
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if (Math.Floor(x) == x && Math.Floor(y) == y && Math.Floor(z) == z) {\n\
    \            if (x == y + z || y == x + z || z == x + y) {\n                return\
    \ true;\n            }\n        }\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b1437ece0f1944d1bed5f555c3c58606>:0 \n"
  stdout: ''
  timestamp: 1660015937
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // Your code here\n        if ((x % 1 == 0) && (y % 1 == 0) && (z % 1\
    \ == 0))\n        {\n            if ((x + y == z) || (x + z == y) || (y + z ==\
    \ x))\n            {\n                return true;\n            }\n          \
    \  else\n            {\n                return false;\n            }\n       \
    \ }\n        else\n        {\n            return false;\n        }\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ed4be28c46f74f74afc64c0979502e76>:0 \n"
  stdout: ''
  timestamp: 1660015938
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // 2/3\n        var sum = x + y + z;\n        var xs = x + y;\n     \
    \   var ys = x + z;\n        var zs = y + z;\n        if (xs == z) {\n       \
    \     if (IsInt(xs) && IsInt(y) && IsInt(z)) {\n                return true;\n\
    \            }\n        }\n        if (ys == z) {\n            if (IsInt(ys) &&\
    \ IsInt(x) && IsInt(z)) {\n                return true;\n            }\n     \
    \   }\n        if (zs == x) {\n            if (IsInt(zs) && IsInt(y) && IsInt(x))\
    \ {\n                return true;\n            }\n        }\n        if (zs ==\
    \ y) {\n            if (IsInt(zs) && IsInt(x) && IsInt(y)) {\n               \
    \ return true;\n            }\n        }\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)\
    \ == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,\
    \ (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,\
    \ (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,\
    \ (float)7L) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa1c_rzec.cs(28,17): error CS0103: The name ''IsInt'' does not exist in
    the current context

    /tmp/tmpa1c_rzec.cs(28,30): error CS0103: The name ''IsInt'' does not exist in
    the current context

    /tmp/tmpa1c_rzec.cs(28,42): error CS0103: The name ''IsInt'' does not exist in
    the current context

    /tmp/tmpa1c_rzec.cs(33,17): error CS0103: The name ''IsInt'' does not exist in
    the current context

    /tmp/tmpa1c_rzec.cs(33,30): error CS0103: The name ''IsInt'' does not exist in
    the current context

    /tmp/tmpa1c_rzec.cs(33,42): error CS0103: The name ''IsInt'' does not exist in
    the current context

    /tmp/tmpa1c_rzec.cs(38,17): error CS0103: The name ''IsInt'' does not exist in
    the current context

    /tmp/tmpa1c_rzec.cs(38,30): error CS0103: The name ''IsInt'' does not exist in
    the current context

    /tmp/tmpa1c_rzec.cs(38,42): error CS0103: The name ''IsInt'' does not exist in
    the current context

    /tmp/tmpa1c_rzec.cs(43,17): error CS0103: The name ''IsInt'' does not exist in
    the current context

    /tmp/tmpa1c_rzec.cs(43,30): error CS0103: The name ''IsInt'' does not exist in
    the current context

    /tmp/tmpa1c_rzec.cs(43,42): error CS0103: The name ''IsInt'' does not exist in
    the current context

    '
  timestamp: 1660015937
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return x == y + z || x == y - z || x == z - y;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8eae3662ceaa4a768b67e3e24ca6056f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8eae3662ceaa4a768b67e3e24ca6056f>:0 \n"
  stdout: ''
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return x == y + z || y == x + z || z == x + y;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b610df36742446397282668ac7733e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b610df36742446397282668ac7733e1>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return x == y + z || y == x + z || z == x + y;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b610df36742446397282668ac7733e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b610df36742446397282668ac7733e1>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if ((int)x + (int)y == (int)z) {\n            return true;\n        }\n\
    \        if ((int)x + (int)z == (int)y) {\n            return true;\n        }\n\
    \        if ((int)y + (int)z == (int)x) {\n            return true;\n        }\n\
    \        return false;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6943f6c52ea14a218e8492d563e1088c>:0 \n"
  stdout: ''
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return ((int)x + (int)y == (int)z) || ((int)x + (int)z == (int)y) ||\
    \ ((int)y + (int)z == (int)x);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n  \
    \  Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <09324fa9acba45e1acd88edff219563b>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        float a = x + y;\n        float b = x + z;\n        float c = y + z;\n\
    \        if (x.GetType() == typeof(int) && y.GetType() == typeof(int) && z.GetType()\
    \ == typeof(int))\n        {\n            if (a == z || b == y || c == x)\n  \
    \          {\n                return true;\n            }\n            else\n\
    \            {\n                return false;\n            }\n        }\n    \
    \    else\n        {\n            return false;\n        }\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)\
    \ == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,\
    \ (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,\
    \ (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,\
    \ (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <971b9c65023347ecb54f311f1d93e72d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <971b9c65023347ecb54f311f1d93e72d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return false;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <24486fd89e0a4d41852d3f2664315124>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <24486fd89e0a4d41852d3f2664315124>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return Math.Truncate(x) + Math.Truncate(y) == Math.Truncate(z) || Math.Truncate(x)\
    \ + Math.Truncate(z) == Math.Truncate(y) || Math.Truncate(y) + Math.Truncate(z)\
    \ == Math.Truncate(x);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a70e89b60ca34c4da96aeef66bcc6aae>:0 \n"
  stdout: ''
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (int)x == x && (int)y == y && (int)z == z && (int)x + (int)y ==\
    \ (int)z || (int)x + (int)z == (int)y || (int)y + (int)z == (int)x;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7fc1c194346f45ad8ebcd4e337bf67bd>:0 \n"
  stdout: ''
  timestamp: 1660015938
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        throw new NotImplementedException();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <1657a3aa49aa4e25a02afa23e96e628c>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]\
    \ in <1657a3aa49aa4e25a02afa23e96e628c>:0 \n"
  stdout: ''
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if ((float) (((float) x) + ((float) y)) == z) {\n            return true;\n\
    \        }\n        if ((float) (((float) x) + ((float) z)) == y) {\n        \
    \    return true;\n        }\n        if ((float) (((float) y) + ((float) z))\
    \ == x) {\n            return true;\n        }\n        return false;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <995083ae77154b9f90935e59b97bc59d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <995083ae77154b9f90935e59b97bc59d>:0 \n"
  stdout: ''
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if ( (int)x == (int)y + (int)z) {\n            return true;\n       \
    \ }\n        if ( (int)y == (int)x + (int)z) {\n            return true;\n   \
    \     }\n        if ( (int)z == (int)x + (int)y) {\n            return true;\n\
    \        }\n        return false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b16dd18d8388468bbdde1631ceba96a2>:0 \n"
  stdout: ''
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return ((int)x + (int)y == (int)z) || ((int)x + (int)z == (int)y) ||\
    \ ((int)y + (int)z == (int)x);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n  \
    \  Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <09324fa9acba45e1acd88edff219563b>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if (IsInteger(x) && IsInteger(y) && IsInteger(z)) {\n            return\
    \ ((x + y == z) || (x + z == y) || (y + z == x));\n        }\n        return false;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6jjk_fdr.cs(22,13): error CS0103: The name ''IsInteger'' does not exist
    in the current context

    /tmp/tmp6jjk_fdr.cs(22,29): error CS0103: The name ''IsInteger'' does not exist
    in the current context

    /tmp/tmp6jjk_fdr.cs(22,45): error CS0103: The name ''IsInteger'' does not exist
    in the current context

    '
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // Write your code here\n        // To print results to the standard\
    \ output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"\
    Hello world!\");\n        if (x != Math.Truncate(x) || y != Math.Truncate(y) ||\
    \ z != Math.Truncate(z)) {\n            return false;\n        }\n        if (x\
    \ + y == z || x + z == y || y + z == x) {\n            return true;\n        }\n\
    \        return false;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16305a8fb56346ebaff49fab16bcec9d>:0 \n"
  stdout: ''
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if(x.Equals(Math.Round(x)) && y.Equals(Math.Round(y)) && z.Equals(Math.Round(z)))\
    \ {\n            if(x + y == z || x + z == y || y + z == x) {\n              \
    \  return true;\n            }\n        }\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)\
    \ == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,\
    \ (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,\
    \ (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,\
    \ (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6c6af6a16c1b44a7ad6d1aea103db708>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6c6af6a16c1b44a7ad6d1aea103db708>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if (x == y + z || x == y - z || y == x + z || y == x - z || z == x +\
    \ y || z == x - y)\n            return true;\n        else return false;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5ad252cff0324ac098690023ae85a1cb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5ad252cff0324ac098690023ae85a1cb>:0 \n"
  stdout: ''
  timestamp: 1660015938
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // Write your code here.\n        throw new NotImplementedException();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <f4a91bc47b4947779ebcd2d9257ebdaf>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]\
    \ in <f4a91bc47b4947779ebcd2d9257ebdaf>:0 \n"
  stdout: ''
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // returns true if x is equal to the sum of y and z and x, y, and z are\
    \ all integers\n        // returns false in any other cases\n        return (((int)x\
    \ == (int)y + (int)z) && ((int)x == x) && ((int)y == y) && ((int)z == z));\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e550073325540db9d43d7d45c22f46f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e550073325540db9d43d7d45c22f46f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return ((x.GetType() == typeof(int)) &&\n                (y.GetType()\
    \ == typeof(int)) &&\n                (z.GetType() == typeof(int)) &&\n      \
    \          ((x + y == z) || (x + z == y) || (y + z == x)));\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)\
    \ == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,\
    \ (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,\
    \ (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,\
    \ (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd2d6ca55b7b480f89bd180849cce5e0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd2d6ca55b7b480f89bd180849cce5e0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015938
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (IsInt(x) && IsInt(y) && IsInt(z)) && ((x + y == z) || (x + z\
    \ == y) || (y + z == x));\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6e_rmkb7.cs(22,17): error CS0103: The name ''IsInt'' does not exist in
    the current context

    /tmp/tmp6e_rmkb7.cs(22,29): error CS0103: The name ''IsInt'' does not exist in
    the current context

    /tmp/tmp6e_rmkb7.cs(22,41): error CS0103: The name ''IsInt'' does not exist in
    the current context

    '
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if (x % 1 != 0 || y % 1 != 0 || z % 1 != 0) {\n            return false;\n\
    \        }\n        if (x + y == z || x + z == y || y + z == x) {\n          \
    \  return true;\n        }\n        return false;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3de4f0c6a58e4c408348e6025f18b25a>:0 \n"
  stdout: ''
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return ((int)x + (int)y == (int)z) || ((int)x + (int)z == (int)y) ||\
    \ ((int)y + (int)z == (int)x);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n  \
    \  Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <09324fa9acba45e1acd88edff219563b>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if (x - (long)x != 0) return false;\n        if (y - (long)y != 0) return\
    \ false;\n        if (z - (long)z != 0) return false;\n        if (x + y == z)\
    \ return true;\n        if (x + z == y) return true;\n        if (y + z == x)\
    \ return true;\n        return false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2121cfbef99842c08238286b1c966eb7>:0 \n"
  stdout: ''
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        float[] nums = new float[] { x, y, z };\n        int numNonInts = 0;\n\
    \        foreach (float num in nums) {\n            if (Math.Truncate(num) !=\
    \ num) {\n                numNonInts++;\n            }\n        }\n        if\
    \ (numNonInts > 0) {\n            return false;\n        }\n        float[] sumPossibilities\
    \ = new float[] {\n            x + y,\n            x + z,\n            y + z\n\
    \        };\n        foreach (float sum in sumPossibilities) {\n            if\
    \ (x == sum || y == sum || z == sum) {\n                return true;\n       \
    \     }\n        }\n        return false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27b1395f2c574f46a185a6172ffe6504>:0 \n"
  stdout: ''
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        bool a = x % 1 == 0 && y % 1 == 0 && z % 1 == 0;\n        bool b = x\
    \ == y + z || y == x + z || z == x + y;\n        return a && b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)\
    \ == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,\
    \ (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,\
    \ (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,\
    \ (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c02668d091b74c7f875f2dd3f8f9ceb4>:0 \n"
  stdout: ''
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        float sum = x + y + z;\n        if(x - sum == 0 || y - sum == 0 || z\
    \ - sum == 0) {\n            return true;\n        }\n        return false;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <798c7ad01bb2465dbee26fde9952039d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <798c7ad01bb2465dbee26fde9952039d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // throw new System.NotImplementedException();\n        if (x == (int)x\
    \ && y == (int)y && z == (int)z) {\n            return true;\n        }\n    \
    \    else {\n            return false;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <48333835244d4f92ad30ae646b98c2c5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <48333835244d4f92ad30ae646b98c2c5>:0 \n"
  stdout: ''
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        bool b1 = x == (y + z);\n        bool b2 = y == (x + z);\n        bool\
    \ b3 = z == (x + y);\n        return b1 || b2 || b3;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88c51baaacca4053b9297bdcb56c2405>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88c51baaacca4053b9297bdcb56c2405>:0 \n"
  stdout: ''
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // This is some pointless code that needs refactoring.\n        int a\
    \ = (int)x;\n        int b = (int)y;\n        int c = (int)z;\n        int sum\
    \ = a + b;\n        if (c == sum) {\n            return true;\n        }\n   \
    \     sum = a + c;\n        if (b == sum) {\n            return true;\n      \
    \  }\n        sum = b + c;\n        if (a == sum) {\n            return true;\n\
    \        }\n        return false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7208dc7a99fa43dabbec2917b4b712a4>:0 \n"
  stdout: ''
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (x == (y + z) || y == (x + z) || z == (x + y)) && (int)x == x\
    \ && (int)y == y && (int)z == z;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b744e08076c94e39a28b0ae3e627d745>:0 \n"
  stdout: ''
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return ((x != Math.Round(x)) || (y != Math.Round(y)) || (z != Math.Round(z)))\
    \ ? false : ((x + y == z) || (x + z == y) || (y + z == x));\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)\
    \ == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,\
    \ (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,\
    \ (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,\
    \ (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a7fa4e7f46e741beb2167213f439b673>:0 \n"
  stdout: ''
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        float sum = x + y + z;\n        // try to do a float comparison with\
    \ a float delta\n        float delta = 0.000001f;\n        if (Math.Abs(x - sum)\
    \ < delta) {\n            return true;\n        }\n        if (Math.Abs(y - sum)\
    \ < delta) {\n            return true;\n        }\n        if (Math.Abs(z - sum)\
    \ < delta) {\n            return true;\n        }\n        return false;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <72144e53c3a8420889f0f1ebf213a037>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <72144e53c3a8420889f0f1ebf213a037>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (x % 1 == 0 && y % 1 == 0 && z % 1 == 0) && (x + y == z || x +\
    \ z == y || y + z == x);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <09f15dd88da743a0a77d685a1dc430ca>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (x % 1 == 0) && (y % 1 == 0) && (z % 1 == 0) && (x + y == z ||\
    \ x + z == y || y + z == x);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n  \
    \  Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f4f373e7a8664b4aa7f9850d770c7b44>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return Math.Round(x) + Math.Round(y) == Math.Round(z) || Math.Round(x)\
    \ + Math.Round(z) == Math.Round(y) || Math.Round(y) + Math.Round(z) == Math.Round(x);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2ef7e8a60274695a611b495a6809857>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        var first = (int)x;\n        var second = (int)y;\n        var third\
    \ = (int)z;\n        if (first == second + third || second == first + third ||\
    \ third == first + second)\n            return true;\n        return false;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <00784ca830ac496c8490105266a13f59>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        long xint = (long)x;\n        long yint = (long)y;\n        long zint\
    \ = (long)z;\n        return x == xint && y == yint && z == zint &&\n        \
    \    (xint == yint + zint || yint == xint + zint || zint == xint + yint);\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <62755211fd634b34a7aba0bec0c03f64>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if (x == (y + z) || y == (x + z) || z == (x + y)) {\n            return\
    \ true;\n        }\n        return false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0b66674af0634a81897bf2aee232519f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0b66674af0634a81897bf2aee232519f>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        float result = x + y;\n        if ((int)result == z) {\n            return\
    \ true;\n        } else {\n            result = y + z;\n            if ((int)result\
    \ == x) {\n                return true;\n            } else {\n              \
    \  result = x + z;\n                if ((int)result == y) {\n                \
    \    return true;\n                } else {\n                    return false;\n\
    \                }\n            }\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3d9da4fb4cac455f8361e47ed85fa616>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3d9da4fb4cac455f8361e47ed85fa616>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return Math.Round(x) + Math.Round(y) == Math.Round(z) || Math.Round(x)\
    \ + Math.Round(z) == Math.Round(y) || Math.Round(y) + Math.Round(z) == Math.Round(x);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2ef7e8a60274695a611b495a6809857>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if (Math.Abs(Math.Floor(x) - x) > 0) {\n            return false;\n \
    \       }\n        if (Math.Abs(Math.Floor(y) - y) > 0) {\n            return\
    \ false;\n        }\n        if (Math.Abs(Math.Floor(z) - z) > 0) {\n        \
    \    return false;\n        }\n        if (x == y + z) {\n            return true;\n\
    \        }\n        if (y == x + z) {\n            return true;\n        }\n \
    \       if (z == x + y) {\n            return true;\n        }\n        return\
    \ false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65033bbc768d452999f1c208b8e7342b>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // your code goes here...\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0588a7b246b94c238edcba40c767dc55>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0588a7b246b94c238edcba40c767dc55>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return !(x % 1 != 0 || y % 1 != 0 || z % 1 != 0) && (x + y == z || x\
    \ + z == y || y + z == x);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n  \
    \  Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e3b6eb294b7a48159e0a1e27de0be9e5>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // write your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <99e28b7cda7943eba516b3a8b4d7358e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <99e28b7cda7943eba516b3a8b4d7358e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // Your code here.\n        return (int)x + (int)y == (int)z || (int)x\
    \ + (int)z == (int)y || (int)y + (int)z == (int)x;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6a4e03bee6fa40e381fc4ffabd12fe8b>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        bool result = false;\n        int[] numbers = new int[] { (int)x, (int)y,\
    \ (int)z };\n        int sum = numbers.Sum();\n        foreach (int i in numbers)\
    \ {\n            if (sum == 2 * i) {\n                result = true;\n       \
    \     }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e7bf05e2c9648b0bce468582e7a4064>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if ((int)x + (int)y == (int)z) {\n            return true;\n        }\n\
    \        if ((int)x + (int)z == (int)y) {\n            return true;\n        }\n\
    \        if ((int)y + (int)z == (int)x) {\n            return true;\n        }\n\
    \        return false;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6943f6c52ea14a218e8492d563e1088c>:0 \n"
  stdout: ''
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (x % 1 == 0) && (y % 1 == 0) && (z % 1 == 0) && (x + y == z ||\
    \ x + z == y || y + z == x);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n  \
    \  Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f4f373e7a8664b4aa7f9850d770c7b44>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // Your code\n        throw new NotImplementedException();\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <34f226a983ff4e77a2fb30679fbb500f>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]\
    \ in <34f226a983ff4e77a2fb30679fbb500f>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (x % 1 == 0 && y % 1 == 0 && z % 1 == 0) && (x + y == z || x +\
    \ z == y || y + z == x);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <09f15dd88da743a0a77d685a1dc430ca>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (int)x + (int)y == (int)z || (int)x + (int)z == (int)y || (int)y\
    \ + (int)z == (int)x;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0dcb286cb4fa4e67b7699a6fc9a2021d>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        var xl = (int)x;\n        var yl = (int)y;\n        var zl = (int)z;\n\
    \        if ((x - xl != 0.0) || (y - yl != 0.0) || (z - zl != 0.0)) {\n      \
    \      return false;\n        } else {\n            return (xl == yl + zl) ||\
    \ (yl == xl + zl) || (zl == xl + yl);\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <699652e2b3e642b1a9365a77532bedea>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        bool xint = x - Math.Floor(x) == 0;\n        bool yint = y - Math.Floor(y)\
    \ == 0;\n        bool zint = z - Math.Floor(z) == 0;\n        bool xy = x + y\
    \ == z;\n        bool xz = x + z == y;\n        bool yz = y + z == x;\n      \
    \  return xint && yint && zint && (xy || xz || yz);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1c11c18a02c64741b4681acb3239b7d2>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // Test for non-integers\n        if (Math.Round(x) != x || Math.Round(y)\
    \ != y || Math.Round(z) != z) {\n            return false;\n        }\n      \
    \  float sum = Math.Abs(x + y);\n        return sum == z || sum == x || sum ==\
    \ y;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4ac19b0c39046bf981fbce321ae2e29>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4ac19b0c39046bf981fbce321ae2e29>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return \n            x % 1 == 0 && y % 1 == 0 && z % 1 == 0 &&\n    \
    \        (x + y == z || x + z == y || y + z == x);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <41f9eb14f03644a99933f3ad791750c1>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (x % 1 == 0 && y % 1 == 0 && z % 1 == 0) && (x + y == z || x +\
    \ z == y || y + z == x);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <09f15dd88da743a0a77d685a1dc430ca>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        float xyz = x + y + z;\n        float xy = x + y;\n        float xz =\
    \ x + z;\n        float yz = y + z;\n        if (x == xy + z || y == x + yz ||\
    \ z == xz + y) {\n            return true;\n        }\n        return false;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69bb45989d8d4f6895c7ec9a20d8a97f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69bb45989d8d4f6895c7ec9a20d8a97f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (x == y + z) || (y == x + z) || (z == x + y);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)\
    \ == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,\
    \ (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,\
    \ (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,\
    \ (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c6642e3d831c4eb9bb9e398800e3a250>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c6642e3d831c4eb9bb9e398800e3a250>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if (x < 0) x = -x;\n        if (y < 0) y = -y;\n        if (z < 0) z\
    \ = -z;\n        int xFloor = (int)x;\n        int yFloor = (int)y;\n        int\
    \ zFloor = (int)z;\n        if (xFloor != x) return false;\n        if (yFloor\
    \ != y) return false;\n        if (zFloor != z) return false;\n        if (xFloor\
    \ + yFloor == zFloor) return true;\n        if (xFloor + zFloor == yFloor) return\
    \ true;\n        if (yFloor + zFloor == xFloor) return true;\n        return false;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7f560f26785c4b3c8595a87ef0811a40>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return false;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <24486fd89e0a4d41852d3f2664315124>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <24486fd89e0a4d41852d3f2664315124>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (((int)x + (int)y == (int)z) || ((int)x + (int)z == (int)y) ||\
    \ ((int)y + (int)z == (int)x));\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n  \
    \  Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2d52cbc1f6f54c5daa61114d686db290>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        var x_r = (float)Math.Round(x);\n        var y_r = (float)Math.Round(y);\n\
    \        var z_r = (float)Math.Round(z);\n        return (x_r == y_r + z_r) ||\
    \ (y_r == x_r + z_r) || (z_r == x_r + y_r);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce93a340ad364c0dbc9964c1332313c5>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // implement\n        return (x + y == z || x + z == y || y + z == x)\
    \ && (x == (int)x && y == (int)y && z == (int)z);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <daeaa25fda59479897fd43f848784b0b>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if(Math.Floor(x) == x && Math.Floor(y) == y && Math.Floor(z) == z) {\n\
    \            if(x + y == z || x + z == y || y + z == x)\n                return\
    \ true;\n        }\n        return false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <998e301efa9243a5901fb2e4c111b505>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        var numbers = new [] {x, y, z};\n        return numbers.Any(e => numbers.Where(el\
    \ => el != e).Sum() == e);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n  \
    \  Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6e46dd4b71444ed09aa32dc35ff2a6ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6e46dd4b71444ed09aa32dc35ff2a6ee>:0 \n"
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // Todo: implement the function AnyInt(...)\n        if ((x + y == z)\
    \ || (x + z == y) || (y + z == x))\n        {\n            if ((x % 1 == 0) &&\
    \ (y % 1 == 0) && (z % 1 == 0))\n            {\n                return true;\n\
    \            }\n        }\n        return false;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2887f16cbed546ca99eac4f721ce620b>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (x % 1 == 0 && y % 1 == 0 && z % 1 == 0) && ((x == y + z) || (y\
    \ == x + z) || (z == x + y));\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n  \
    \  Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f74f0f05c74a4ffd95922bbc5ecc6d0e>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if (isInt(x) && isInt(y) && isInt(z)) {\n            if (x == y + z ||\
    \ y == x + z || z == x + y) {\n                return true;\n            }\n \
    \       }\n        return false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk0gpenmx.cs(22,13): error CS0103: The name ''isInt'' does not exist in
    the current context

    /tmp/tmpk0gpenmx.cs(22,25): error CS0103: The name ''isInt'' does not exist in
    the current context

    /tmp/tmpk0gpenmx.cs(22,37): error CS0103: The name ''isInt'' does not exist in
    the current context

    '
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (int)x + (int)y == (int)z || (int)x + (int)z == (int)y || (int)y\
    \ + (int)z == (int)x;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0dcb286cb4fa4e67b7699a6fc9a2021d>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        bool result = false;\n        if ((x % 1) == 0 && (y % 1) == 0 && (z\
    \ % 1) == 0) {\n            result = ((x + y) == z) || ((x + z) == y) || ((y +\
    \ z) == x);\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <525eac4b50a14b8492ac629e1a8a17a9>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return x == y + z || y == x + z || z == x + y ? true : false;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5d160a90f4e649d4872379fab933ac0a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5d160a90f4e649d4872379fab933ac0a>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (x.IsInt() && y.IsInt() && z.IsInt() && (x == y + z || y == x\
    \ + z || z == x + y));\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpeidsqmk9.cs(22,19): error CS1061: ''float'' does not contain a definition
    for ''IsInt'' and no accessible extension method ''IsInt'' accepting a first argument
    of type ''float'' could be found (are you missing a using directive or an assembly
    reference?)

    /tmp/tmpeidsqmk9.cs(22,32): error CS1061: ''float'' does not contain a definition
    for ''IsInt'' and no accessible extension method ''IsInt'' accepting a first argument
    of type ''float'' could be found (are you missing a using directive or an assembly
    reference?)

    /tmp/tmpeidsqmk9.cs(22,45): error CS1061: ''float'' does not contain a definition
    for ''IsInt'' and no accessible extension method ''IsInt'' accepting a first argument
    of type ''float'' could be found (are you missing a using directive or an assembly
    reference?)

    '
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        bool xyz = (x == y + z) || (y == x + z) || (z == x + y);\n        bool\
    \ ints = (Math.Truncate(x) == x) && (Math.Truncate(y) == y) && (Math.Truncate(z)\
    \ == z);\n        return xyz && ints;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cef8e2704db1493aba3618eef64bf2b4>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return ((int)x + (int)y == (int)z) || ((int)x + (int)z == (int)y) ||\
    \ ((int)y + (int)z == (int)x);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n  \
    \  Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <09324fa9acba45e1acd88edff219563b>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        float sum = x + y + z;\n        return ((int)x + (int)y + (int)z == (int)sum)\
    \ && ((int)x + (int)y == (int)sum || (int)x + (int)z == (int)sum || (int)y + (int)z\
    \ == (int)sum);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8863bec8db14269ad03916374c99f9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8863bec8db14269ad03916374c99f9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return ((x == (y + z)) || (y == (x + z)) || (z == (x + y))) && (x % 1\
    \ == 0) && (y % 1 == 0) && (z % 1 == 0);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f009ed2b7f444083b7644ebf7af30130>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        int ix = (int)x;\n        int iy = (int)y;\n        int iz = (int)z;\n\
    \        return ix + iy == iz || ix + iz == iy || iy + iz == ix;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)\
    \ == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,\
    \ (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,\
    \ (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,\
    \ (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e5b75708019a4b89909c88d7c7757b67>:0 \n"
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if (Math.Truncate(x) == x && Math.Truncate(y) == y && Math.Truncate(z)\
    \ == z) {\n            float sum = x + y;\n            if (sum == z) {\n     \
    \           return true;\n            }\n            sum = x + z;\n          \
    \  if (sum == y) {\n                return true;\n            }\n            sum\
    \ = y + z;\n            if (sum == x) {\n                return true;\n      \
    \      }\n        }\n        return false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47383d7198cb499fb2f5d9624545a16f>:0 \n"
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // check if all are integers\n        if (Convert.ToInt32(x) == x &&\
    \ Convert.ToInt32(y) == y && Convert.ToInt32(z) == z) {\n            // check\
    \ if one is equal to the sum of the other two\n            if (Convert.ToInt32(x)\
    \ == Convert.ToInt32(y) + Convert.ToInt32(z) || Convert.ToInt32(y) == Convert.ToInt32(x)\
    \ + Convert.ToInt32(z) || Convert.ToInt32(z) == Convert.ToInt32(x) + Convert.ToInt32(y))\
    \ {\n                return true;\n            }\n        }\n        return false;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <244afe4b5f864550a785511fa40d9e65>:0 \n"
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return x == y + z || x == y - z || x == z - y;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8eae3662ceaa4a768b67e3e24ca6056f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8eae3662ceaa4a768b67e3e24ca6056f>:0 \n"
  stdout: ''
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (Math.Round(x) + Math.Round(y) == Math.Round(z)) || (Math.Round(y)\
    \ + Math.Round(z) == Math.Round(x)) || (Math.Round(z) + Math.Round(x) == Math.Round(y));\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <48347fa9c8bb4df4a2aec36d9290c089>:0 \n"
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (x is int && y is int && z is int) &&\n        (x + y == z ||\
    \ x + z == y || y + z == x);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n  \
    \  Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <56c79473c385476a84f3ba454d411f72>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <56c79473c385476a84f3ba454d411f72>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        float a = x+y;\n        float b = x+z;\n        float c = y+z;\n    \
    \    if ((a%1 == 0) || (b%1 == 0) || (c%1 == 0)){\n            return true;\n\
    \        }\n        else{\n            return false;\n        }\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)\
    \ == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,\
    \ (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,\
    \ (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,\
    \ (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7d6b988b6eee466dbfb4127445f0ce18>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7d6b988b6eee466dbfb4127445f0ce18>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if ((float) Math.Floor(x) == x && (float) Math.Floor(y) == y && (float)\
    \ Math.Floor(z) == z) {\n            return (x == y + z || y == x + z || z ==\
    \ x + y);\n        }\n        return false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <510f0f6d00ff41fb9d8ff3a4f5f84c0a>:0 \n"
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return new[] { x, y, z }.Any(n => !n.Equals((int)n));\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)\
    \ == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,\
    \ (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,\
    \ (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,\
    \ (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <00edb96ea9104a01ae6a6ffe71b01aa4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <00edb96ea9104a01ae6a6ffe71b01aa4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return ((x + y == z) || (x + z == y) || (y + z == x)) && x % 1 == 0 &&\
    \ y % 1 == 0 && z % 1 == 0;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n  \
    \  Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dec3a59a883e4f6d986b5f6e43c57656>:0 \n"
  stdout: ''
  timestamp: 1660015937
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (\n            (int)x + (int)y == (int)z ||\n            (int)x\
    \ + (int)z == (int)y ||\n            (int)y + (int)z == (int)x\n        );\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c5b2adf07e84b58a6bf132db8dfd02d>:0 \n"
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if (x == (y + z) || y == (x + z) || z == (x + y))\n            return\
    \ true;\n        else\n            return false;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <20a51f0d716c47b9a1782f57a6c256f6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <20a51f0d716c47b9a1782f57a6c256f6>:0 \n"
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        int iX = (int)x;\n        int iY = (int)y;\n        int iZ = (int)z;\n\
    \        return ((iX == iY + iZ) || (iY == iX + iZ) || (iZ == iX + iY));\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8c948ff738c469a91d8281a4c138aad>:0 \n"
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        bool result = false;\n        if (x == z + y || x == z - y || x == y\
    \ - z) {\n            result = true;\n        }\n        if (y == z + x || y ==\
    \ z - x || y == x - z) {\n            result = true;\n        }\n        if (z\
    \ == x + y || z == x - y || z == y - x) {\n            result = true;\n      \
    \  }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n  \
    \  Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bdee24a4719b4b46a09d732359f9c1c3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bdee24a4719b4b46a09d732359f9c1c3>:0 \n"
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return ((int)x + (int)y == (int)z)\n            || ((int)x + (int)z ==\
    \ (int)y)\n            || ((int)y + (int)z == (int)x);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28281f0330874d9a9dcb5d55c413f6ed>:0 \n"
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if (x == y + z) {\n            return true;\n        }\n        if (y\
    \ == x + z) {\n            return true;\n        }\n        if (z == x + y) {\n\
    \            return true;\n        }\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)\
    \ == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,\
    \ (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,\
    \ (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,\
    \ (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3ad5f67aba1a4937930031cc66d99c70>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3ad5f67aba1a4937930031cc66d99c70>:0 \n"
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        var sorted = new List<float>() { x, y, z }.OrderBy(n => n).ToList();\n\
    \        return sorted[0] + sorted[1] == sorted[2] && sorted.All(n => (int)n ==\
    \ n);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9dfd7dcbf12a4c25bb44f3cbc5c0615c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9dfd7dcbf12a4c25bb44f3cbc5c0615c>:0 \n"
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return ((int)x == ((int)y + (int)z)) || ((int)y == ((int)x + (int)z))\
    \ || ((int)z == ((int)x + (int)y));\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <07c68f006ce54d1db35327f20bbd4fc2>:0 \n"
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        bool result = false;\n        // Create your code\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <494bc09c2e0242ee8edc1a37eb3bc0e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <494bc09c2e0242ee8edc1a37eb3bc0e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (x == y + z || y == x + z || z == x + y) && Math.Truncate(x) ==\
    \ x && Math.Truncate(y) == y && Math.Truncate(z) == z;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1ada4222edc84e0dbc36dff1133a2e0c>:0 \n"
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // Type your code here\n        return ((int)x + (int)y == (int)z) ||\
    \ ((int)x + (int)z == (int)y) || ((int)y + (int)z == (int)x);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)\
    \ == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,\
    \ (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,\
    \ (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,\
    \ (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <52773d09460e48c4ad864a0a537b1d03>:0 \n"
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return ((int)x + (int)y == (int)z) || ((int)x + (int)z == (int)y) ||\
    \ ((int)y + (int)z == (int)x);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n  \
    \  Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <09324fa9acba45e1acd88edff219563b>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        int[] a = new int[] {(int)x, (int)y, (int)z};\n        int sum = a.Sum();\n\
    \        if (sum % 2 == 0) {\n            int halfSum = sum / 2;\n           \
    \ return (halfSum != a[0] && halfSum != a[1] && halfSum != a[2]);\n        }\n\
    \        return false;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c3ef1203d09c4e8abef358df4f2c6841>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c3ef1203d09c4e8abef358df4f2c6841>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if ((int)x + (int)y == (int)z) {\n            return true;\n        }\n\
    \        if ((int)x + (int)z == (int)y) {\n            return true;\n        }\n\
    \        if ((int)y + (int)z == (int)x) {\n            return true;\n        }\n\
    \        return false;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6943f6c52ea14a218e8492d563e1088c>:0 \n"
  stdout: ''
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return x + y == z || x + z == y || y + z == x;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <360b566722b84a338f38890f2e22451c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <360b566722b84a338f38890f2e22451c>:0 \n"
  stdout: ''
  timestamp: 1660015940
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // Write your code here.\n        throw new NotImplementedException();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <f4a91bc47b4947779ebcd2d9257ebdaf>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]\
    \ in <f4a91bc47b4947779ebcd2d9257ebdaf>:0 \n"
  stdout: ''
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return x == y + z || x == y - z || x == z - y;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8eae3662ceaa4a768b67e3e24ca6056f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8eae3662ceaa4a768b67e3e24ca6056f>:0 \n"
  stdout: ''
  timestamp: 1660015938
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if (Math.Round(x) == x && Math.Round(y) == y && Math.Round(z) == z) {\n\
    \            if (x == y + z || y == x + z || z == x + y) {\n                return\
    \ true;\n            }\n        }\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a1a4cf00f82f45999938ade31db33fe1>:0 \n"
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // put your code here\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6578fa8ca39442868c29d81b668ea90f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6578fa8ca39442868c29d81b668ea90f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        double[] arr = new double[] { x, y, z };\n        arr = arr.OrderBy(i\
    \ => i).ToArray();\n        if (Math.Floor(arr[0]) == arr[0] && Math.Floor(arr[1])\
    \ == arr[1] && Math.Floor(arr[2]) == arr[2]) {\n            return arr[0] + arr[1]\
    \ == arr[2];\n        }\n        return false;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <143ff4c1e3154193a43d615d84ad6024>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <143ff4c1e3154193a43d615d84ad6024>:0 \n"
  stdout: ''
  timestamp: 1660015941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // Your code goes here.\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <54a8357bef7246ad8fed27866bbde8c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <54a8357bef7246ad8fed27866bbde8c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (x % 1 == 0 && y % 1 == 0 && z % 1 == 0) && (x + y == z || x +\
    \ z == y || y + z == x);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <09f15dd88da743a0a77d685a1dc430ca>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // My code:\n        if (Math.Abs(Math.Truncate(x) - x) < 0.00001)\n\
    \            if (Math.Abs(Math.Truncate(y) - y) < 0.00001)\n                if\
    \ (Math.Abs(Math.Truncate(z) - z) < 0.00001)\n                    if (x == y +\
    \ z || y == x + z || z == x + y)\n                        return true;\n     \
    \   return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <64014c717c47494f8805b0953dfc7534>:0 \n"
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return x % 1 == 0 && y % 1 == 0 && z % 1 == 0 && (x + y == z || x + z\
    \ == y || y + z == x);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fe315302f4f043278f8b3cf534f0216b>:0 \n"
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // Your code here\n        return false;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c03d5d3b1704091b24b9c5a79fe21dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c03d5d3b1704091b24b9c5a79fe21dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return x % 1 == 0 && y % 1 == 0 && z % 1 == 0 && (x + y == z || x + z\
    \ == y || y + z == x);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fe315302f4f043278f8b3cf534f0216b>:0 \n"
  stdout: ''
  timestamp: 1660015940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        var epsilon = 0.0001f;\n        var a = Math.Abs(x - (y + z));\n    \
    \    var b = Math.Abs(y - (x + z));\n        var c = Math.Abs(z - (x + y));\n\
    \        return (a < epsilon || b < epsilon || c < epsilon);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)\
    \ == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,\
    \ (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,\
    \ (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,\
    \ (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fd96833b5d75451ea80e35f9b1e975b7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fd96833b5d75451ea80e35f9b1e975b7>:0 \n"
  stdout: ''
  timestamp: 1660015941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if (x % 1 == 0 && y % 1 == 0 && z % 1 == 0) {\n            if (x + y\
    \ == z || x + z == y || y + z == x) {\n                return true;\n        \
    \    }\n        }\n        return false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <509e6049586241848157434103605dbe>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        //TODO: improve this to allow for floating point numbers with no decimals\n\
    \        var c = Convert.ToInt32(x);\n        var a = Convert.ToInt32(y);\n  \
    \      var b = Convert.ToInt32(z);\n        var d = a + b;\n        var e = a\
    \ + c;\n        var f = b + c;\n        if ((d == c) || (e == b) || (f == a))\n\
    \            return true;\n        else\n            return false;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <647ce98b79a14b308aaaf8ee35cab892>:0 \n"
  stdout: ''
  timestamp: 1660015941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // Your code goes here...\n        if (x.GetType() == typeof(int) &&\
    \ y.GetType() == typeof(int) && z.GetType() == typeof(int)) {\n            if\
    \ (x == y + z || x == y - z || x == z - y) {\n                return true;\n \
    \           }\n            else if (y == x + z || y == x - z || y == z - x) {\n\
    \                return true;\n            }\n            else if (z == x + y\
    \ || z == x - y || z == y - x) {\n                return true;\n            }\n\
    \            else {\n                return false;\n            }\n        }\n\
    \        else {\n            return false;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ac0e62cc83d04e64bd1a5365fa5ad370>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ac0e62cc83d04e64bd1a5365fa5ad370>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if ((((int)x) + ((int)y)) == ((int)z)) {\n            return true;\n\
    \        }\n        if ((((int)x) + ((int)z)) == ((int)y)) {\n            return\
    \ true;\n        }\n        if ((((int)y) + ((int)z)) == ((int)x)) {\n       \
    \     return true;\n        }\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f43562711b3c4e1f9469b4c318b2b9b8>:0 \n"
  stdout: ''
  timestamp: 1660015941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        //Type your code here\n        bool x_bool = x == (int)x;\n        bool\
    \ y_bool = y == (int)y;\n        bool z_bool = z == (int)z;\n        bool s_bool\
    \ = x_bool && y_bool && z_bool;\n        float a = Math.Abs(x - y - z);\n    \
    \    float b = Math.Abs(x - z - y);\n        float c = Math.Abs(y - x - z);\n\
    \        float d = Math.Abs(y - z - x);\n        float e = Math.Abs(z - x - y);\n\
    \        float f = Math.Abs(z - y - x);\n        float[] list = { a, b, c, d,\
    \ e, f };\n        float min = (float)list.Min();\n        if (min == 0 && s_bool)\n\
    \            return true;\n        else\n            return false;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c6d0ab3e476e4836aa2504d514316377>:0 \n"
  stdout: ''
  timestamp: 1660015941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (z == (x + y)) && (x % 1 == 0) && (y % 1 == 0) && (z % 1 == 0);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <edabe190653f49778c05b9757d0b7976>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <edabe190653f49778c05b9757d0b7976>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (x + y == z || x + z == y || y + z == x) && (x % 1 == 0 && y %\
    \ 1 == 0 && z % 1 == 0);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <73b6590472164a32a4c8f93fa7eb664b>:0 \n"
  stdout: ''
  timestamp: 1660015941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if ((x == (y + z)) && x == (int)x && y == (int)y && z == (int)z)\n  \
    \          return true;\n        if ((y == (x + z)) && x == (int)x && y == (int)y\
    \ && z == (int)z)\n            return true;\n        if ((z == (x + y)) && x ==\
    \ (int)x && y == (int)y && z == (int)z)\n            return true;\n        return\
    \ false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <24615e1886a24a27959bea7032f4f4ae>:0 \n"
  stdout: ''
  timestamp: 1660015941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if (x == y + z || y == x + z || z == x + y) {\n            return (x\
    \ % 1 == 0 && y % 1 == 0 && z % 1 == 0);\n        }\n        return false;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <32982a1b64534d3bb7f6f18df9fbd7a8>:0 \n"
  stdout: ''
  timestamp: 1660015941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (((x == y + z) || (y == x + z) || (z == x + y)) &&\n         \
    \   (x == (int)x) && (y == (int)y) && (z == (int)z));\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eed222de88424940ad851ca5539152cd>:0 \n"
  stdout: ''
  timestamp: 1660015941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return true;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7c2c009f9ea644e281a3a5843c2600ca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7c2c009f9ea644e281a3a5843c2600ca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if (System.Math.Floor(x) == x && System.Math.Floor(y) == y && System.Math.Floor(z)\
    \ == z) {\n            if (x == y + z || x + y == z || x + z == y) {\n       \
    \         return true;\n            }\n        }\n        return false;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16c3bbdeaec14e26a7c432f1d976124e>:0 \n"
  stdout: ''
  timestamp: 1660015941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if (x == y + z || y == x + z || z == x + y) {\n            return true;\n\
    \        }\n        return false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dac96f0e8f2c415d86a6284e453fed25>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dac96f0e8f2c415d86a6284e453fed25>:0 \n"
  stdout: ''
  timestamp: 1660015941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return x == (y + z) || y == (x + z) || z == (x + y);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)\
    \ == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,\
    \ (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,\
    \ (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,\
    \ (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7e1856bd7934432c8eb3812d31481f21>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7e1856bd7934432c8eb3812d31481f21>:0 \n"
  stdout: ''
  timestamp: 1660015941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // Your code goes here.\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <54a8357bef7246ad8fed27866bbde8c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <54a8357bef7246ad8fed27866bbde8c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015940
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // Return true if integers and one = sum of other two\n        return\
    \ (IsInt(x) && IsInt(y) && IsInt(z) && OneIsSum(x, y, z));\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)\
    \ == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,\
    \ (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,\
    \ (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,\
    \ (float)7L) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprmioh87c.cs(23,17): error CS0103: The name ''IsInt'' does not exist in
    the current context

    /tmp/tmprmioh87c.cs(23,29): error CS0103: The name ''IsInt'' does not exist in
    the current context

    /tmp/tmprmioh87c.cs(23,41): error CS0103: The name ''IsInt'' does not exist in
    the current context

    /tmp/tmprmioh87c.cs(23,53): error CS0103: The name ''OneIsSum'' does not exist
    in the current context

    '
  timestamp: 1660015941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        int a = Convert.ToInt32(x);\n        int b = Convert.ToInt32(y);\n  \
    \      int c = Convert.ToInt32(z);\n        return (x == a && y == b && z == c\
    \ && (a + b == c || a + c == b || b + c == a));\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <077e91982d2940bb974d3661b4f9fb87>:0 \n"
  stdout: ''
  timestamp: 1660015941
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        float[] inputs = new float[] { x, y, z };\n        float value = 0;\n\
    \        foreach (float fl in inputs) {\n            if (!IsInteger(fl)) return\
    \ false;\n            value += fl;\n        }\n        foreach (float fl in inputs)\
    \ {\n            if (fl == value) return true;\n        }\n        return false;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprswwysls.cs(25,18): error CS0103: The name ''IsInteger'' does not exist
    in the current context

    '
  timestamp: 1660015941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (x + y == z || y + z == x || x + z == y) && (x % 1 == 0 && y %\
    \ 1 == 0 && z % 1 == 0);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0fe9ec531d0444ac8f49fd64571156dc>:0 \n"
  stdout: ''
  timestamp: 1660015941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return Int32.TryParse(x.ToString(), out int a) && Int32.TryParse(y.ToString(),\
    \ out int b) && Int32.TryParse(z.ToString(), out int c) && (a == b + c || b ==\
    \ a + c || c == a + b);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4f51fa5360c94cd08d092186c333e5e7>:0 \n"
  stdout: ''
  timestamp: 1660015941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (x%1==0f && y%1==0f && z%1==0f && (x==y+z || y==x+z || z==x+y));\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <97ae370085b44db8b7dc293465a0ff4e>:0 \n"
  stdout: ''
  timestamp: 1660015941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if (x == y + z || y == x + z || z == x + y) {\n            return true;\n\
    \        }\n        return false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dac96f0e8f2c415d86a6284e453fed25>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dac96f0e8f2c415d86a6284e453fed25>:0 \n"
  stdout: ''
  timestamp: 1660015941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if ((int)x == (int)y + (int)z) return true;\n        if ((int)y == (int)x\
    \ + (int)z) return true;\n        if ((int)z == (int)x + (int)y) return true;\n\
    \        return false;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce2cc60e75fc43d99bdd43a4e00a809a>:0 \n"
  stdout: ''
  timestamp: 1660015941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (x + y == z) || (x + z == y) || (y + z == x);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)\
    \ == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,\
    \ (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,\
    \ (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,\
    \ (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4fa92bb4c9864db485d940c73282d53d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4fa92bb4c9864db485d940c73282d53d>:0 \n"
  stdout: ''
  timestamp: 1660015941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (((int)x + (int)y == (int)z) || ((int)x + (int)z == (int)y) ||\
    \ ((int)y + (int)z == (int)x));\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n  \
    \  Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2d52cbc1f6f54c5daa61114d686db290>:0 \n"
  stdout: ''
  timestamp: 1660015939
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (x == (y + z) || y == (x + z) || z == (x + y)) && \n         \
    \      (x == (int)x || y == (int)y || z == (int)z);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7e6369a00ebf43478e0929825292d2d7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7e6369a00ebf43478e0929825292d2d7>:0 \n"
  stdout: ''
  timestamp: 1660015941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (x % 1 == 0 && y % 1 == 0 && z % 1 == 0) &&\n            (x +\
    \ y == z || x + z == y || y + z == x);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <92aca52fa1ba42198480e87cf9b63540>:0 \n"
  stdout: ''
  timestamp: 1660015941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return x + y == z || y + z == x || x + z == y;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f1b3301d405437ea6540ce09d31c214>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f1b3301d405437ea6540ce09d31c214>:0 \n"
  stdout: ''
  timestamp: 1660015942
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if (x % 1 == 0 && y % 1 == 0 && z % 1 == 0) {\n            if (x + y\
    \ == z || x + z == y || y + z == x) {\n                return true;\n        \
    \    }\n        }\n        return false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n\
    \    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),\
    \ (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,\
    \ (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <509e6049586241848157434103605dbe>:0 \n"
  stdout: ''
  timestamp: 1660015936
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        float a = x;\n        float b = y;\n        float c = z;\n        if\
    \ (int.Equals(a, (int)a) || int.Equals(b, (int)b) || int.Equals(c, (int)c)) {\n\
    \            return true;\n        }\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)\
    \ == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,\
    \ (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,\
    \ (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,\
    \ (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f9aed42050a043168d6e483ac2d44eea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f9aed42050a043168d6e483ac2d44eea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015942
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        return (IsInt(x) && IsInt(y) && IsInt(z)) && (IsInt(x + y) || IsInt(x\
    \ + z) || IsInt(y + z));\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),\
    \ (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,\
    \ (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)\
    \ == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n\
    \    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,\
    \ (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,\
    \ (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)\
    \ == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1fe8tjph.cs(22,17): error CS0103: The name ''IsInt'' does not exist in
    the current context

    /tmp/tmp1fe8tjph.cs(22,29): error CS0103: The name ''IsInt'' does not exist in
    the current context

    /tmp/tmp1fe8tjph.cs(22,41): error CS0103: The name ''IsInt'' does not exist in
    the current context

    /tmp/tmp1fe8tjph.cs(22,55): error CS0103: The name ''IsInt'' does not exist in
    the current context

    /tmp/tmp1fe8tjph.cs(22,71): error CS0103: The name ''IsInt'' does not exist in
    the current context

    /tmp/tmp1fe8tjph.cs(22,87): error CS0103: The name ''IsInt'' does not exist in
    the current context

    '
  timestamp: 1660015941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        // your code here\n        return false;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n\
    \    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
    \    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,\
    \ (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3a7efb89d88c4f448b43995a5f46e8fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3a7efb89d88c4f448b43995a5f46e8fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015942
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if(x % 1 == 0 && y % 1 == 0 && z % 1 == 0) {\n            return (x +\
    \ y == z || x + z == y || y + z == x);\n        } else {\n            return false;\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3b620ad52ad1451dbdc8ba11b3b1c8b6>:0 \n"
  stdout: ''
  timestamp: 1660015942
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function that takes 3 numbers.\n    // Returns\
    \ true if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    // Returns false in any other cases.\n    // Examples\n \
    \   // >>> AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>>\
    \ AnyInt((float)3L, (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L,\
    \ (float)-2L, (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n\
    \    // (false)\n    public static bool AnyInt(float x, float y, float z) {\n\
    \        if (((int)x + (int)y == (int)z) || ((int)x + (int)z == (int)y) || ((int)y\
    \ + (int)z == (int)x))\n            return true;\n        return false;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
    \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
    \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f))\
    \ == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
    \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
    \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L,\
    \ (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L)\
    \ == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n\
    \    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5b24fdf640674bc5a3119a7893e870ac>:0 \n"
  stdout: ''
  timestamp: 1660015942

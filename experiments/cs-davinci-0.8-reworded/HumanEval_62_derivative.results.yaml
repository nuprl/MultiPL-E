language: cs
name: HumanEval_62_derivative
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var i = (long)1L;\n        var n = (long)xs.Count();\n        var res = new\
    \ List<long>();\n        while (i < n)\n        {\n            res.Add(xs[(int)(i)]\
    \ * i);\n            i++;\n        }\n\n        return res;\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3e1efcb27e1347eea3c66baa8272891a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3e1efcb27e1347eea3c66baa8272891a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028221
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var i = 1L;\n        var dxs = new List<long>();\n        while (i < len(xs))\n\
    \        {\n            dxs.Add(xs[i] * i);\n            i++;\n        }\n   \
    \     return dxs;\n\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps_ldn7_9.cs(19,20): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmps_ldn7_9.cs(21,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028221
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (long i = (long)1L; i < (long)len(xs);\
    \ i++)\n        {\n            ans.append(xs[i] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnwq42x1f.cs(18,43): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpnwq42x1f.cs(20,27): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpnwq42x1f.cs(20,17): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1660028221
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ys = new List<long>();\n        long x = 1L;\n        foreach\
    \ (var _ in xs) {\n            if (x > 1L) {\n                ys.Add(x * _);\n\
    \            }\n\n            x++;\n\n        }\n        return ys;\n\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8a93afc40707426e88654f936f1f64d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8a93afc40707426e88654f936f1f64d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028221
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> result = new List<long>();\n        for (long i = (long)1L; i\
    \ < (long)xs.Count(); i++) {\n            result.Add(xs[(int)(i)] * i);\n    \
    \    }\n\n        return result;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c323ff32a16f4c9482ff73818fba4bf4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c323ff32a16f4c9482ff73818fba4bf4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028221
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var result = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            result.Add(xs[(int)(i)] * i);\n        }\n\n        return\
    \ result;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <347a709a5a884696a30415d4cf4fcd31>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <347a709a5a884696a30415d4cf4fcd31>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028221
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var result = new List<long>();\n        long i = 1L;\n        while (i <\
    \ (long)xs.Count) {\n            result.Add(xs[(int)(i)] * i);\n            i\
    \ = i + 1L;\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8298bb54adc34dd78e85f1ec2a010445>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8298bb54adc34dd78e85f1ec2a010445>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028221
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ns = new List<long>();\n        for (long i = 1L; i < len(xs); i++) {\n\
    \            var item = xs[i] * i;\n            ns.Add(item);\n        }\n\n \
    \       return ns;\n\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvu325wh_.cs(18,31): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpvu325wh_.cs(19,27): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028221
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> res = new List<long>();\n        for (long i = (long)1L; i < len(xs);\
    \ i++)\n        {\n            res.append(xs[i] * i);\n        }\n\n        return\
    \ res;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxkxko0bh.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpxkxko0bh.cs(20,27): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpxkxko0bh.cs(20,17): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1660028220
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ys = new List<long>();\n        long x = (long)0L;\n        long\
    \ __i = (long)0L;\n        long __y = (long)0L;\n        var __forEndVar0 = len(xs)\
    \ - 1L;\n        for (__i = (long)1L; __i <= __forEndVar0; __i++)\n        {\n\
    \            {\n                x = xs[__i];\n                ys.append(x * __i);\n\
    \            }\n        }\n\n        return ys;\n\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsj8cplqp.cs(21,28): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpsj8cplqp.cs(25,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpsj8cplqp.cs(26,20): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    /tmp/tmpsj8cplqp.cs(20,14): warning CS0219: The variable ''__y'' is assigned but
    its value is never used

    '
  timestamp: 1660028221
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    long n = (long)xs.Count;\n        var rs = new List<long>();\n        for\
    \ (long i = (long)1L; i < n; i++)\n        {\n            rs.Add(xs[(int)(i)]\
    \ * i);\n        }\n        return rs;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c83fcf0663f84bb7bef97b60572f6f9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c83fcf0663f84bb7bef97b60572f6f9c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028221
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var rs = new List<long>();\n        for (long i = (long)1L; i < (long)len(xs);\
    \ i++)\n        {\n            rs.Add(xs[i] * i);\n        }\n\n        return\
    \ rs;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptsrcbpi4.cs(18,43): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmptsrcbpi4.cs(20,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028221
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var res = new List<long>();\n        var i = (long)1L;\n\
    \        while (i < n)\n        {\n            res.Add(xs[i] * i);\n         \
    \   i++;\n        }\n\n        return res;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprpwisdsi.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmprpwisdsi.cs(22,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028221
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = (long)xs.Count();\n        var ans = new List<long>();\n        {\n\
    \            var i__prev1 = i;\n\n            for (var i = (long)1L; i < n; i++)\n\
    \            {\n                ans.Add(xs[i] * i);\n            }\n\n\n     \
    \       i = i__prev1;\n        }\n        return ans;\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpn0za6ozh.cs(20,28): error CS0103: The name ''i'' does not exist in the
    current context

    /tmp/tmpn0za6ozh.cs(24,28): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpn0za6ozh.cs(28,13): error CS0103: The name ''i'' does not exist in the
    current context

    '
  timestamp: 1660028221
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> xs1 = new List<long>();\n        for (long i = 1L; i < (long)xs.Count;\
    \ i++) {\n            xs1.Add(xs[(int)i] * i);\n        }\n        return xs1;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7d3b277a1cd042b7a285f80050080529>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7d3b277a1cd042b7a285f80050080529>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028221
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ret = new List<long>();\n        var n = len(xs);\n        var i = 1L;\n\
    \        while (i < n) {\n            ret.Add(xs[(int)(i)] * i);\n           \
    \ i = i + 1L;\n        }\n\n        return ret;\n\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3pr220d4.cs(18,17): error CS0103: The name ''len'' does not exist in the
    current context

    '
  timestamp: 1660028221
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ans = new List<long>();\n        var n = len(xs);\n        for\
    \ (var i = (long)1L; i < n; i++)\n        {\n            ans.Add(xs[i] * i);\n\
    \        }\n\n        return ans;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp351rizgb.cs(18,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp351rizgb.cs(21,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028221
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    long n = (long)xs.Count;\n        long i = 0L;\n        var ret = new List<long>();\n\
    \        for (i = 0L; i < n - 1L; i++) {\n            ret.Add(xs[(int)(i + 1L)]\
    \ * (i + 1L));\n        }\n\n        return ret;\n\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <71c91660619b4756b49ba6e52f477e50>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <71c91660619b4756b49ba6e52f477e50>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028221
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> result = new List<long>();\n        for (long i = 1L; i < (long)xs.Count;\
    \ i++) {\n            long d = i * xs[(int)i];\n            result.Add(d);\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5acfb551c7f34f73a3f0b62f41b8089c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5acfb551c7f34f73a3f0b62f41b8089c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028221
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    if ((xs.Count == 0L)) {\n            return xs;\n        }\n\n        return\
    \ xs.Skip(1L).Select((_p0, _p1) => (long)_p1 * _p0).ToList();\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp38_zcgki.cs(21,24): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028221
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> res = new List<long>();\n        for (long i = (long)1L; i < len(xs);\
    \ i++)\n        {\n            res.Add(xs[i] * i);\n        }\n\n        return\
    \ res;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpynr20on3.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpynr20on3.cs(20,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028221
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    long len = (long)xs.Count();\n        var ys = new List<long>();\n      \
    \  long i = (long)1L;\n        while (i < len)\n        {\n            ys.Add(xs[(int)(i)]\
    \ * i);\n            i = i + (long)1L;\n        }\n\n        return ys;\n\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <103c858beffd497a840e935a7b7f6837>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <103c858beffd497a840e935a7b7f6837>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028221
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> res = new List<long>();\n        for (long j = 1L; j < xs.Count;\
    \ j++) {\n            res.Add(xs[j] * j);\n        }\n\n        return res;\n\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv6v9a8ae.cs(19,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028221
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var len = xs.Count;\n        var rs = new List<long>();\n        for (var\
    \ i = 0; i < len - 1; i++) {\n            rs.Add(xs[i] * (len - 1 - i));\n   \
    \     }\n        return rs;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b6b1ff0eddb4862adbc15b80b2a17a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b6b1ff0eddb4862adbc15b80b2a17a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028221
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var result = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            result.Add(xs[(int)(i)] * i);\n        }\n\n        return\
    \ result;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <347a709a5a884696a30415d4cf4fcd31>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <347a709a5a884696a30415d4cf4fcd31>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028221
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> r = new List<long>();\n        long c = (long)0L;\n        for\
    \ (long i = (long)1L; i < len(xs); i++)\n        {\n            c = c + i * xs[i];\n\
    \            r.append(c);\n        }\n\n        return r;\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp78ew91ts.cs(19,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp78ew91ts.cs(21,28): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp78ew91ts.cs(22,15): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1660028221
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ans = new List<long>();\n        for (long i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ans.Add(xs[(int)i] * i);\n        }\n\n        return ans;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d6f78f714854e3d95f651e9aec2fd39>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d6f78f714854e3d95f651e9aec2fd39>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028221
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = xs.Count;\n        var n1 = n - 1L;\n        var newxs = new List<long>();\n\
    \        for (long i = 1L; i < n; i++) {\n            newxs.Add(xs[i] * i);\n\
    \        }\n        return newxs;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxs7urwhf.cs(21,26): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028221
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    return xs.Skip(1).Select((__arg1, __arg2) => (__arg1 * (__arg2 + 1L))).ToList();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f1a4db50671f4818b5364d1073b33d57>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f1a4db50671f4818b5364d1073b33d57>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028221
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var rs = new List<long>();\n        for (var i = (long)1L; i < xs.Count;\
    \ i++) {\n            rs.Add(xs[(int)(i)] * i);\n        }\n\n        return rs;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1818bf4bbb984cd5b138d89d8909aec4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1818bf4bbb984cd5b138d89d8909aec4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028221
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> xs__prev1 = xs;\n\n        List<long> result = new List<long>();\n\
    \        xs = xs__prev1;\n\n        for (long i = 1L; i < (long)xs.Count; i++)\n\
    \        {\n            result.Add(i * xs[(int)i]);\n        }\n\n        return\
    \ result;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8106357381724b02ae3565633c2c652a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8106357381724b02ae3565633c2c652a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028221
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (long i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <baac751894134555b968c2d3d8dd7a97>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <baac751894134555b968c2d3d8dd7a97>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028221
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    long len = (long)xs.Count;\n        if (len == 0L) {\n            return\
    \ new List<long>();\n        }\n\n        var ys = new List<long>();\n       \
    \ for (long i = 1L; i < len; i++) {\n            ys.Add(xs[(int)(i)] * i);\n \
    \       }\n        return ys;\n\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d4222adf23c2494fb569a874794f57a9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d4222adf23c2494fb569a874794f57a9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028221
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    long n = (long)xs.Count();\n        var res = new List<long>();\n       \
    \ for (long i = (long)1L; i < n; i++)\n        {\n            res.Add(xs[(int)(i)]\
    \ * i);\n        }\n\n        return res;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <77fb4e21ed6d4c46a3118a770aa5d572>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <77fb4e21ed6d4c46a3118a770aa5d572>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028221
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var t = new List<long>();\n        for (long i = (long)1L; i < len(xs); i++)\n\
    \        {\n            t.Add(i * xs[i]);\n        }\n        return t;\n\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph99m6we6.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmph99m6we6.cs(20,26): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028221
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var res = new List<long>();\n        for (int i = 1; i < xs.Count; i++) {\n\
    \            res.Add(xs[i] * i);\n        }\n        return res;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <38245f3c293a446493f092d5a8182596>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <38245f3c293a446493f092d5a8182596>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028221
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> newList = new List<long>();\n        long x = 0L;\n        long\
    \ i = 1L;\n        foreach (var x0 in xs) {\n            if (i == 1L) {\n    \
    \            x = x0;\n            } else {\n                newList.Add(i * x0);\n\
    \            }\n            i++;\n        }\n        return newList;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fd82640eac734a41a5ca75fb7b8dc380>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fd82640eac734a41a5ca75fb7b8dc380>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028221
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = xs.Skip(1).ToList();\n        for (var i = 0; i < ys.Count; i++)\
    \ {\n            ys[i] *= (i + 1);\n        }\n        return ys;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b1ef2896265345ea9c4e242b578a48ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b1ef2896265345ea9c4e242b578a48ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028222
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> dxs = new List<long>();\n        long i = (long)1L;\n        while\
    \ (i < (long)len(xs))\n        {\n            dxs.append(xs[i] * i);\n       \
    \     i = i + (long)1L;\n        }\n\n        return dxs;\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp26scha5f.cs(19,26): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp26scha5f.cs(21,27): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp26scha5f.cs(21,17): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1660028221
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ys = new List<long>();\n        for (int i = 1; i < (int)xs.Count;\
    \ i++) {\n            ys.Add(xs[i] * i);\n        }\n        return ys;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <33f7dd21d9dc41a48eb0927c40630b5e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <33f7dd21d9dc41a48eb0927c40630b5e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028222
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    return new List<long>(xs.Skip(1).Select((x, y) => (x * (y + 1L))));\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1491b663d85146c1b52be8112eda7962>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1491b663d85146c1b52be8112eda7962>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028222
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    return Enumerable.Range(1L, xs.Count - 1L).Select(__lambda2 => __lambda2\
    \ * xs[__lambda2]).ToList();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_rgpaqy0.cs(17,33): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp_rgpaqy0.cs(17,37): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028221
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> deriv = new List<long>();\n        for (int i = 1; i < len(xs);\
    \ i++) {\n            deriv.Add(xs[i] * i);\n        }\n\n        return deriv;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz09uwc7u.cs(18,29): error CS0103: The name ''len'' does not exist in the
    current context

    '
  timestamp: 1660028221
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    long n = (long)xs.Count();\n        if (n <= (long)1L)\n        {\n     \
    \       return (new List<long>(new long[] { (long)0L }));\n        }\n\n     \
    \   return xs.Select((_p0, _p1) => (long)_p1).Select<long, long>((long i) => i\
    \ * xs[(int)i]).Skip(1).ToList();\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c9d509f3160f4514878cb67ae2c7946a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c9d509f3160f4514878cb67ae2c7946a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028222
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ret = new List<long>();\n        long exponent = 1L;\n       \
    \ long sum = 0L;\n        foreach (var x in xs) {\n            sum += exponent\
    \ * x;\n            exponent++;\n        }\n        return ret;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <74974a33b5a44d738ab5ed1a5dc1a2d5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <74974a33b5a44d738ab5ed1a5dc1a2d5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028222
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var result = new List<long>();\n        for (long i = (long)1L; i < len(xs);\
    \ i++)\n        {\n            result.Add(xs[i] * i);\n        }\n\n        return\
    \ result;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdnet1c5a.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpdnet1c5a.cs(20,27): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028221
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    Debug.Assert(xs.Count > (long)0L);\n        var c = new List<long>();\n \
    \       for (long i = (long)1L; i < len(xs); i++)\n        {\n            c.Add(xs[i]\
    \ * i);\n        }\n\n        return c;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzusyt_no.cs(19,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpzusyt_no.cs(21,22): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028221
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (long i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <baac751894134555b968c2d3d8dd7a97>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <baac751894134555b968c2d3d8dd7a97>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028221
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    return xs.Take(xs.Count - 1L).Select((_p0, _p1) => (long)_p1 * _p0).ToList();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt_v4so47.cs(17,24): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028222
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var us = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            us.Add(xs[(int)(i)] * i);\n        }\n        return us;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b0994908d0d444178731458715933d46>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b0994908d0d444178731458715933d46>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028222
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        long j = 1L;\n        foreach (var x\
    \ in xs) {\n            if (j >= 2L) {\n                ys.Add(j * x);\n     \
    \       }\n            j++;\n        }\n        return ys;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d28e1063bdc4f41b2cc1785fcf33b97>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d28e1063bdc4f41b2cc1785fcf33b97>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028222
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> result = new List<long>();\n        long i = (long)1L;\n     \
    \   while (i < len(xs))\n        {\n            result.append(xs[i] * i);\n  \
    \          i++;\n        }\n\n        return result;\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8v8rdmi1.cs(19,20): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp8v8rdmi1.cs(21,30): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp8v8rdmi1.cs(21,20): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1660028222
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ns = new List<long>();\n        var i = (long)1L;\n        while\
    \ (i < len(xs))\n        {\n            ns.Add(xs[i] * i);\n            i++;\n\
    \        }\n        return ns;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkwxe14ty.cs(19,20): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpkwxe14ty.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028222
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var a = new List<long>();\n        var b = new List<long>();\n        foreach\
    \ (var (i, x) in xs.Select((x, i) => (i, x))) {\n            if (i > 0L) {\n \
    \               a.Add(i * x);\n            }\n\n        }\n        return a;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e4315e76261e4bdea7c4dd3d6b746cae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e4315e76261e4bdea7c4dd3d6b746cae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028222
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ret = new List<long>();\n        foreach (var i in Enumerable.Range(1L,\
    \ xs.Count - 1L)) {\n            ret.Add(xs[i] * i);\n        }\n        return\
    \ ret;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp99ca91u3.cs(18,44): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp99ca91u3.cs(18,48): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028222
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var f = new List<long>();\n        for (var i = (long)1L; i < xs.Count; i++)\
    \ {\n            f.Add(xs[(int)(i)] * i);\n        }\n\n        return f;\n\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61746e8eaacd46eb8226f625422552a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61746e8eaacd46eb8226f625422552a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028222
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        var n = xs.Count;\n        for (var\
    \ i = 1L; i < n; i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n \
    \       return ans;\n\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f9855d017dfe4db6b47b00aef823b447>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f9855d017dfe4db6b47b00aef823b447>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028222
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ans = new List<long>();\n        {\n      \
    \      var i__prev1 = i;\n\n            for (var i = 1L; i < n; i++)\n       \
    \     {\n                ans.Add(xs[i] * i);\n            }\n\n\n            i\
    \ = i__prev1;\n        }\n        return ans;\n\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzjrvx0pq.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpzjrvx0pq.cs(20,28): error CS0103: The name ''i'' does not exist in the
    current context

    /tmp/tmpzjrvx0pq.cs(24,28): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpzjrvx0pq.cs(28,13): error CS0103: The name ''i'' does not exist in the
    current context

    '
  timestamp: 1660028222
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    long[] ys = new long[xs.Count - 1];\n        long n = 0L;\n        foreach\
    \ (var x in xs) {\n            if (n > 0L) {\n                ys[n - 1L] = n *\
    \ x;\n            }\n\n            n++;\n        }\n        return ys.ToList();\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bdc0fb873670408691e6f466c5e24949>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bdc0fb873670408691e6f466c5e24949>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028222
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ys.Add(xs[(int)(i)] * i);\n        }\n\n        return ys;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6518ca8d2400422496c85652179711b1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6518ca8d2400422496c85652179711b1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028222
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    return xs.Skip(1).Select((x, i) => (long)(i + 1L) * x).ToList();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4aa44915dbf34f118abf4b4f324d7760>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4aa44915dbf34f118abf4b4f324d7760>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028222
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    return Enumerable.Range(1L, xs.Count - 1L).Select((__, _) => (xs[_] * _)).ToList();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4b245erv.cs(17,33): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp4b245erv.cs(17,37): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028222
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ys = new List<long>();\n        long i = (long)1L;\n        while\
    \ (i < xs.Count)\n        {\n            ys.Add(xs[(int)(i)] * i);\n         \
    \   i = i + (long)1L;\n        }\n\n        return ys;\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <641ea83c632e4dd7bf32759ca3fa0557>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <641ea83c632e4dd7bf32759ca3fa0557>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028222
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        if (n == 0L)\n        {\n            return new\
    \ List<long>();\n        }\n\n        var ys = make_slice<long>(n - 1L);\n   \
    \     {\n            long i__prev1 = i;\n\n            for (long i = 0L; i < n\
    \ - 1L; i++)\n            {\n                ys[i] = (i + 1L) * xs[i + 1L];\n\
    \            }\n\n\n            i = i__prev1;\n        }\n        return ys;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpibsbaqnn.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpibsbaqnn.cs(23,18): error CS0103: The name ''make_slice'' does not exist
    in the current context

    /tmp/tmpibsbaqnn.cs(25,29): error CS0103: The name ''i'' does not exist in the
    current context

    /tmp/tmpibsbaqnn.cs(29,39): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpibsbaqnn.cs(33,13): error CS0103: The name ''i'' does not exist in the
    current context

    '
  timestamp: 1660028222
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var _ = new List<long>();\n        for (var i = 1L; i < len(xs); i++) {\n\
    \            _.Add(xs[i] * i);\n        }\n        return _;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpakvhebrz.cs(18,30): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpakvhebrz.cs(19,22): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028222
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> res = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            res.Add(xs[i] * i);\n        }\n        return res;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eecbf6d6f0774489b7256fef8a6a1b04>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eecbf6d6f0774489b7256fef8a6a1b04>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028222
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var i = 1L;\n        var ret = new List<long>();\n        while (i < (long)xs.Count)\
    \ {\n            ret.Add(xs[(int)(i)] * i);\n            i++;\n        }\n\n \
    \       return ret;\n\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <624e6b69be3d41469f9b6bb755955130>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <624e6b69be3d41469f9b6bb755955130>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028223
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var rs = new List<long>();\n        long i = (long)1L;\n        foreach (var\
    \ x__prev1 in xs)\n        {\n            var x = x__prev1;\n            if (i\
    \ == (long)xs.Count - 1L)\n            {\n                break;\n           \
    \ }\n\n            rs.Add(i * x);\n            i++;\n\n        }\n        return\
    \ rs;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <21bebcac739c48a6bf19eea78b220705>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <21bebcac739c48a6bf19eea78b220705>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028223
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (long i = (long)1L; i < xs.Count;\
    \ i++)\n        {\n            ys.Add(xs[i] * i);\n        }\n\n        return\
    \ ys;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxle_8_19.cs(20,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028222
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    if (xs.Count == 0L) {\n            return new List<long>();\n        }\n\n\
    \        if (xs.Count == 1L) {\n            return new List<long> { (long)0L };\n\
    \        }\n\n        return new List<long>((new List<long>(xs)).Skip(1L).Select((x,\
    \ i) => (long)((i + 1L) * x)));\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl68d4ahn.cs(25,57): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028222
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> result = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            result.Add(xs[i] * i);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8a440e32cf134bb1aeec1769504b03ff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8a440e32cf134bb1aeec1769504b03ff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028223
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ret = new List<long>();\n        for (long i = (long)1L; i < (long)len(xs);\
    \ i++) {\n            ret.append(xs[i] * i);\n        }\n\n        return ret;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcrd7myhs.cs(18,43): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpcrd7myhs.cs(19,27): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpcrd7myhs.cs(19,17): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1660028222
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var res = new List<long>();\n        {\n            var i__prev1 = i;\n\n\
    \            for (var i = 1L; i < len(xs); i++) {\n                res.Add(xs[i]\
    \ * i);\n            }\n\n\n            i = i__prev1;\n        }\n        return\
    \ res;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpf8wlpmu_.cs(19,28): error CS0103: The name ''i'' does not exist in the
    current context

    /tmp/tmpf8wlpmu_.cs(21,34): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpf8wlpmu_.cs(22,28): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpf8wlpmu_.cs(26,13): error CS0103: The name ''i'' does not exist in the
    current context

    '
  timestamp: 1660028223
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var res = new List<long>();\n        var len = xs.Count;\n        for (var\
    \ i = 1L; i < len; i++) {\n            res.Add(xs[(int)(i)] * i);\n        }\n\
    \        return res;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6028499bd5b64a8080c9c9c4148c7e24>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6028499bd5b64a8080c9c9c4148c7e24>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028223
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ans = new List<long>();\n        long n = (long)xs.Count;\n  \
    \      long i = (long)1L;\n        while (i < n)\n        {\n            ans.Add(xs[(int)(i)]\
    \ * i);\n            i = i + (long)1L;\n        }\n\n        return ans;\n\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b8a582ce86f54d9abaf4a45d8922c785>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b8a582ce86f54d9abaf4a45d8922c785>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028223
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    return xs.Skip(1).Select((x, i) => x * (i + 1)).ToList();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60cd97c19e024285ab82e76b4f5247c8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60cd97c19e024285ab82e76b4f5247c8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028223
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ys.Add(xs[(int)(i)] * i);\n        }\n\n        return ys;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6518ca8d2400422496c85652179711b1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6518ca8d2400422496c85652179711b1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028222
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var xs__1 = new List<long>();\n        {\n            var i__2 = 1L;\n  \
    \          while (true) {\n                var i = i__2;\n                if (!(i\
    \ < len(xs))) {\n                    break;\n                }\n             \
    \   xs__1.append(xs[(int)(i)] * i);\n                i__2 += 1L;\n           \
    \ }\n        }\n        return xs__1;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp49u21979.cs(22,27): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp49u21979.cs(25,23): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1660028223
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        var n = xs.Count;\n        long i =\
    \ 1L;\n        while (i < n)\n        {\n            ans.Add(xs[(int)i] * i);\n\
    \            i++;\n        }\n        return ans;\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5db38e8ff1d34021841244f5347c1ecb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5db38e8ff1d34021841244f5347c1ecb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028223
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        var ys1 = new List<long>();\n       \
    \ ys.Add(0L);\n        ys1.Add(0L);\n        var i = 1L;\n        while (i < xs.Count)\
    \ {\n            ys1.Add(xs[(int)i]);\n            ys.Add(i * xs[(int)i]);\n \
    \           i = i + 1L;\n        }\n        return ys;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <755acf04f6d74f42b2551a4e0fce14a0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <755acf04f6d74f42b2551a4e0fce14a0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028223
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    return xs.Skip(1).Select((_p0, _p1) => (long)(_p1 + 1L)).ToList();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8734a7003ff247e28a479b576edf26c8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8734a7003ff247e28a479b576edf26c8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028223
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    if (xs.Count < 2L) {\n            return new List<long>();\n        }\n\n\
    \        List<long> dxs = new List<long>();\n        long n = (long)1L;\n    \
    \    foreach (var x__prev1 in xs)\n        {\n            var x = x__prev1;\n\
    \            {\n                if (n > 1L)\n                {\n             \
    \       dxs.Add(n * x);\n                }\n\n                n++;\n\n       \
    \     }\n        }\n        return dxs;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f70e88a751e74423b7d4f2542d648e66>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f70e88a751e74423b7d4f2542d648e66>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028223
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    if (xs.Count == 0L) {\n            return new List<long>();\n        }\n\n\
    \        if (xs.Count == 1L) {\n            return new List<long>()\n        \
    \    {\n                (long)0L\n            }\n\n            ;\n        }\n\n\
    \        var n = len(xs);\n        var ys = make_slice<long>(n - 1L);\n      \
    \  var k = (long)1L;\n        foreach (var (__i) in ys)\n        {\n         \
    \   i = __i;\n            ys[i] = xs[i + 1L] * k;\n            k = k + 1L;\n \
    \       }\n        return ys;\n\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3o0ix8d6.cs(33,28): error CS0230: Type and identifier are both required
    in a foreach statement

    '
  timestamp: 1660028222
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ns = new List<long>();\n        var n = xs.Count;\n        for (var i\
    \ = 1L; i < n; i++) {\n            var x = xs[(int)i];\n            var j = i\
    \ - 1L;\n            var y = x * j;\n            ns.Add(y);\n        }\n\n   \
    \     return ns;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f9a3c7ccd68e4806be521fda4b6b8bc2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f9a3c7ccd68e4806be521fda4b6b8bc2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028223
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ys = new List<long>();\n        {\n            var i__prev1 =\
    \ i;\n\n            var i = 1L;\n\n            while (i < len(xs))\n         \
    \   {\n                var (y, ok) = checked.MulInt(i, xs[i]);\n             \
    \   if (!ok)\n                {\n                    break;\n                }\n\
    \n                ys.Add(y);\n                i = i + 1L;\n\n            }\n\n\
    \n            i = i__prev1;\n        }\n        return ys;\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmqqht720.cs(25,38): error CS1003: Syntax error, ''('' expected

    /tmp/tmpmqqht720.cs(25,38): error CS1525: Invalid expression term ''.''

    /tmp/tmpmqqht720.cs(25,55): error CS1026: ) expected

    '
  timestamp: 1660028223
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ns = new List<long>();\n        long n = 0L;\n        long i = 1L;\n\
    \        long x = 0L;\n        for (long x__prev1 = x; x < len(xs); x++)\n   \
    \     {\n            n = xs[x];\n            if (i < len(xs))\n            {\n\
    \                ns.Append(i * n);\n            }\n\n            i++;\n\n    \
    \    }\n\n        return ns;\n\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5d5ix4gn.cs(21,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp5d5ix4gn.cs(23,20): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp5d5ix4gn.cs(24,21): error CS0103: The name ''len'' does not exist in the
    current context

    '
  timestamp: 1660028223
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    return xs.Zip(Enumerable.Range(1L,(xs.Count())), (x, y) => (x * y)).Skip(1).ToList();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp82qfgy9_.cs(17,40): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028223
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (long i = (long)1L; i < (long)len(xs);\
    \ i++)\n        {\n            var y = (long)i * xs[i];\n            ys.append(y);\n\
    \        }\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpojmihl2n.cs(18,43): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpojmihl2n.cs(20,34): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpojmihl2n.cs(21,16): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1660028223
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ans = new List<long>();\n        var i__prev1 = i;\n\n       \
    \ var i = 1L;\n\n        while (i < len(xs))\n        {\n            ans.append(xs[i]\
    \ * i);\n            i = i + 1L;\n        }\n\n\n        i = i__prev1;\n     \
    \   return ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpec6per1e.cs(18,24): error CS0841: Cannot use local variable ''i'' before
    it is declared

    /tmp/tmpec6per1e.cs(22,20): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpec6per1e.cs(24,27): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpec6per1e.cs(24,17): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1660028223
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    return new List<long>(xs.Zip(Enumerable.Range(1L, xs.Count), (x, y) => (x)\
    \ * (y)).Skip(1L));\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph5hj_wqm.cs(17,55): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028223
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    long n = (long)xs.Count() - 1L;\n        List<long> ans = new List<long>();\n\
    \        for (long i = 1L; i <= n; i++) {\n            ans.Add(xs[(int)(i)] *\
    \ i);\n        }\n        return ans;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2d78a5e8dc024c9285a14a7d435adb6d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2d78a5e8dc024c9285a14a7d435adb6d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028223
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    if (xs.Count == 1L) {\n            return (new List<long>(new long[]{(long)0L}));\n\
    \        }\n        List<long> derivative = new List<long>();\n        for (long\
    \ i = 1L; i < len(xs); i++) {\n            derivative.Add(xs[i] * i);\n      \
    \  }\n        return derivative;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx36oz046.cs(21,31): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpx36oz046.cs(22,31): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028223
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = (long)xs.Count;\n        var dxs = new List<long>();\n        for\
    \ (long i = (long)1L; i < n; i++)\n        {\n            dxs.Add(xs[(int)(i)]\
    \ * i);\n        }\n        return dxs;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a7be0a897a2b44f1a8f36300a62227ed>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a7be0a897a2b44f1a8f36300a62227ed>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028223
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var result = new List<long>();\n        for (var i = (long)1L; i < xs.Count;\
    \ i++) {\n            result.Add(xs[(int)(i)] * i);\n        }\n\n        return\
    \ result;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a1eb5e92aa34aba918b82254ae92bfb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a1eb5e92aa34aba918b82254ae92bfb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028223
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ns = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            ns.Add(xs[i] * (long)i);\n        }\n        return ns;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eab3a7facade4dc09dd1c18bb0f15cf1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eab3a7facade4dc09dd1c18bb0f15cf1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028223
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ret = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            ret.Add(xs[i] * i);\n        }\n        return ret;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49bb9244dbc3450fafee1417ce198133>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49bb9244dbc3450fafee1417ce198133>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028223
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ret = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            ret.Add(xs[i] * (long)i);\n        }\n        return ret;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2d95d24648944d3da7327a5e49176f0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2d95d24648944d3da7327a5e49176f0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028223
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ret = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            ret.Add(xs[i] * i);\n        }\n        return ret;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49bb9244dbc3450fafee1417ce198133>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49bb9244dbc3450fafee1417ce198133>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028223
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var result = new List<long>();\n        for (var i = (int)1L; i < len(xs);\
    \ i++) {\n            result.Add(xs[i] * i);\n        }\n\n        return result;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4sbbo4aa.cs(18,35): error CS0103: The name ''len'' does not exist in the
    current context

    '
  timestamp: 1660028223
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    long sz = (long)xs.Count();\n        if (sz == (long)1L) {\n            return\
    \ (new List<long>(new long[] { (long)0L }));\n        }\n\n        List<long>\
    \ res = new List<long>();\n        long i = 1L;\n        while (true) {\n    \
    \        if (!(i < sz))\n            {\n                break;\n            }\n\
    \n            res.Add(xs[i] * i);\n            i++;\n        }\n\n        return\
    \ res;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3qh7tbv7.cs(30,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028223
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        var n = xs.Count;\n        foreach (var\
    \ i in Enumerable.Range(1L, n - 1L)) {\n            var v = xs[(int)i] * i;\n\
    \            ans.Add(v);\n        }\n        return ans;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4izqtkkd.cs(19,44): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp4izqtkkd.cs(19,48): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028223
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    return xs.Zip(Enumerable.Range(1L, xs.Count()), (x, y) => x * y).Skip(1).ToList();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmbut4d3n.cs(17,40): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028223
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> coeffs = new List<long>();\n        long i = 1L;\n        long\
    \ n = 1L;\n        while (i < (long)xs.Count) {\n            coeffs.Add(xs[i]\
    \ * n);\n            i = i + 1L;\n            n = n + 1L;\n        }\n       \
    \ return coeffs;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjvc3udgu.cs(21,27): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028224
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> res = new List<long>();\n        if (xs.Count == 0L) {\n     \
    \       return res;\n        }\n\n        res.Add(xs[1L]);\n        var n = len(xs);\n\
    \        foreach (var (i, _) in Enumerable.Range(1L, n - 2L)) {\n            res.Add(xs[i\
    \ + 1L] * (i + 1L));\n        }\n        return res;\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt75y2pzg.cs(22,20): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpt75y2pzg.cs(23,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpt75y2pzg.cs(24,32): error CS1061: ''int'' does not contain a definition
    for ''Deconstruct'' and no accessible extension method ''Deconstruct'' accepting
    a first argument of type ''int'' could be found (are you missing a using directive
    or an assembly reference?)

    /tmp/tmpt75y2pzg.cs(24,32): error CS8129: No suitable ''Deconstruct'' instance
    or extension method was found for type ''int'', with 2 out parameters and a void
    return type.

    /tmp/tmpt75y2pzg.cs(24,23): error CS8130: Cannot infer the type of implicitly-typed
    deconstruction variable ''i''.

    /tmp/tmpt75y2pzg.cs(24,26): error CS8130: Cannot infer the type of implicitly-typed
    deconstruction variable ''_''.

    /tmp/tmpt75y2pzg.cs(24,26): error CS8183: Cannot infer the type of implicitly-typed
    discard.

    '
  timestamp: 1660028224
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    long n = (long)xs.Count;\n        if (n <= 1L) {\n            return new\
    \ List<long> { (long)0L };\n        }\n\n        var dxs = new List<long>();\n\
    \        for (long i = (long)1L; i < n; i++) {\n            dxs.Add(xs[(int)(i)]\
    \ * i);\n        }\n\n        return dxs;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6050816bbf31434ca327f5de786f03f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6050816bbf31434ca327f5de786f03f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028224
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> v = new List<long>();\n        long n = (long)xs.Count();\n  \
    \      long i = 1L;\n        while (i < n)\n        {\n            v.Add(xs[(int)(i)]\
    \ * i);\n            i = i + 1L;\n        }\n        return v;\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <09c214b6c140459db6ade57a2b5d9259>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <09c214b6c140459db6ade57a2b5d9259>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028224
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (long i = (long)1L; i < (long)len(xs);\
    \ i++)\n        {\n            ys.Add(xs[i] * i);\n        }\n        return ys;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2tjl668m.cs(18,43): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp2tjl668m.cs(20,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028224
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ans = new List<long>();\n        var i = 1L;\n\
    \        while (i < n)\n        {\n            ans.Add(xs[i] * i);\n         \
    \   i++;\n        }\n        return ans;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpubb0ava8.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpubb0ava8.cs(22,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028224
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> a = new List<long>();\n        long i = (long)1L;\n        while\
    \ (i < len(xs))\n        {\n            a.Add(xs[i] * i);\n            i += 1L;\n\
    \        }\n\n        return a;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6059f63k.cs(19,20): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp6059f63k.cs(21,22): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028224
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> zs = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            zs.Add(xs[i] * (long)i);\n        }\n        return zs;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdb678bad2994012949de723ee6650ff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdb678bad2994012949de723ee6650ff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028224
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    if (xs.Count == 1L) {\n            return new List<long>(new long[]{(long)0L});\n\
    \        }\n\n        return new List<long>(xs.Skip(1L).Select((long x, long i)\
    \ => (long)((i + 1L) * x)).ToList());\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkg2kr2d7.cs(21,39): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028224
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var dxs = (new List<long>());\n        var i = (long)0L;\n        while (true)\
    \ {\n            var ok = false;\n            if (i < (long)1L) {\n          \
    \      ok = true;\n            }\n            else {\n                ok = i <\
    \ (long)len(xs);\n            }\n\n            if (!ok)\n            {\n     \
    \           break;\n            }\n\n            var x = xs[(int)(i)];\n     \
    \       x *= i;\n            dxs.Add(x);\n            i++;\n        }\n\n    \
    \    return dxs;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpg6av87uz.cs(25,32): error CS0103: The name ''len'' does not exist in the
    current context

    '
  timestamp: 1660028224
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (long i = (long)1L; i < (long)len(xs);\
    \ i++)\n        {\n            ys.Add(xs[i] * i);\n        }\n        return ys;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2tjl668m.cs(18,43): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp2tjl668m.cs(20,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028224
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    return new List<long>(xs.Skip(1).Select((_p1, _p2) => _p1 * ((long)_p2 +\
    \ (long)1L)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9a9b84bfb8844a41a5bef5848c40493f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9a9b84bfb8844a41a5bef5848c40493f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028224
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> res = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            res.Add(xs[i] * i);\n        }\n        return res;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eecbf6d6f0774489b7256fef8a6a1b04>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eecbf6d6f0774489b7256fef8a6a1b04>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028222
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    long n = (long)xs.Count;\n        long i = (long)1L;\n        var dxs = new\
    \ List<long>();\n        while (i < n)\n        {\n            dxs.Add(xs[(int)(i)]\
    \ * i);\n            i++;\n        }\n\n        return dxs;\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eb427c94ce5d426b91200cc5355acc55>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eb427c94ce5d426b91200cc5355acc55>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028224
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ret = new List<long>();\n        for (var i = 1L; i < xs.Count; i++)\
    \ {\n            ret.Add(xs[i] * i);\n        }\n        return ret;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphvkwv7s_.cs(19,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028224
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> r = new List<long>();\n        for (int i = 1; i < xs.Count; i++)\
    \ {\n            r.Add(xs[i] * (long)i);\n        }\n        return r;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f661e82cbb44d2286e6e6a438ca4cbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f661e82cbb44d2286e6e6a438ca4cbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028224
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    if (xs.Count == 0L) {\n            return xs;\n        }\n\n        var ys\
    \ = new List<long>();\n        for (long i = 1L; i < xs.Count; i++) {\n      \
    \      ys.Add(xs[i] * i);\n        }\n        return ys;\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8vyo9782.cs(23,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028224
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    return xs.Zip(Enumerable.Range(1L, xs.Count - 1L), (x, i) => x * i).ToList();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpintok27j.cs(17,40): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpintok27j.cs(17,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028224
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    return ((xs.Skip(1L).Select((__ContextSymbol1) => (__ContextSymbol1 * ((long)(xs.IndexOf(__ContextSymbol1))))).ToList()));\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6de1jhxu.cs(17,26): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028224
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    return Enumerable.Range(1L, (xs.Count - 1L)).Select(i => (xs[(int)i] * (long)i)).ToList();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplf4kw6j5.cs(17,33): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmplf4kw6j5.cs(17,38): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028224
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> xs__prev1 = xs;\n\n        var xs__1 = xs.GetRange(1L, (int)(xs.Count\
    \ - 1L));\n        xs = xs__1;\n\n        var xs__3 = new List<long>();\n    \
    \    {\n            long i__4 = 0L;\n            while (true)\n            {\n\
    \                if (!(i__4 < len(xs)))\n                {\n                 \
    \   break;\n                }\n\n                var xs__5 = append(xs__3, xs[i__4]\
    \ * i__4);\n                xs__3 = xs__5;\n                i__4++;\n        \
    \    }\n\n        }\n\n        xs = xs__3;\n        return xs;\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsg2h64gq.cs(19,33): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpsg2h64gq.cs(27,30): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpsg2h64gq.cs(32,29): error CS0103: The name ''append'' does not exist in
    the current context

    /tmp/tmpsg2h64gq.cs(32,46): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028224
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    long n = xs.Count;\n        List<long> ys = new List<long>();\n        for\
    \ (long i = 1L; i < n; i++) {\n            ys.Add(xs[(int)(i)] * i);\n       \
    \ }\n        return ys;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc37b0cca13c4ea9b4f30cfed7c8b5f3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc37b0cca13c4ea9b4f30cfed7c8b5f3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028224
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var xsLen = len(xs);\n        var ys = new List<long>();\n        for (var\
    \ i = 1L; i < xsLen; i++) {\n            ys.Add(xs[i] * i);\n        }\n     \
    \   return ys;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_lazh0vx.cs(17,21): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp_lazh0vx.cs(20,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028224
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> res = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            res.Add(xs[i] * i);\n        }\n        return res;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eecbf6d6f0774489b7256fef8a6a1b04>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eecbf6d6f0774489b7256fef8a6a1b04>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028222
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var us = new List<long>();\n        {\n       \
    \     var i__prev1 = i;\n\n            for (var i = (long)1L; i < n; i++)\n  \
    \          {\n                us = append(us, i * xs[i]);\n            }\n\n\n\
    \            i = i__prev1;\n        }\n        return us;\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvoxxgt9n.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpvoxxgt9n.cs(20,28): error CS0103: The name ''i'' does not exist in the
    current context

    /tmp/tmpvoxxgt9n.cs(24,22): error CS0103: The name ''append'' does not exist in
    the current context

    /tmp/tmpvoxxgt9n.cs(24,40): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpvoxxgt9n.cs(28,13): error CS0103: The name ''i'' does not exist in the
    current context

    '
  timestamp: 1660028224
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ret = new List<long>();\n        for (var i\
    \ = 1L; i < n; i++) {\n            ret.Add(xs[i] * i);\n        }\n\n        return\
    \ ret;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpskxmf1b5.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpskxmf1b5.cs(20,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028224
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> res = new List<long>();\n        long len = (long)xs.Count;\n\
    \        if (len <= (long)1L)\n        {\n            return res;\n        }\n\
    \n        for (long i = (long)1L; i < len; i++)\n        {\n            res.Add(xs[(int)(i)]\
    \ * i);\n        }\n\n        return res;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <573297c14d374de3bc0fbd2f51113264>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <573297c14d374de3bc0fbd2f51113264>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028224
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var res = new List<long>();\n        long i = 1L;\n        foreach (var x\
    \ in xs) {\n            if (i < 2L) {\n                res.Add(x);\n         \
    \   } else {\n                res.Add(x * i);\n            }\n            i++;\n\
    \        }\n        return res;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f4aa03b2995248aba96c38311f3a7c18>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f4aa03b2995248aba96c38311f3a7c18>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028224
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> nxs = new List<long>();\n        for (long i = (long)1L; i < len(xs);\
    \ i++)\n        {\n            nxs.Add(i * xs[i]);\n        }\n        return\
    \ nxs;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbhianqfx.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpbhianqfx.cs(20,28): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028224
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> derivative = new List<long>();\n        long d = (long)1L;\n \
    \       for (long i = (long)0L; i < len(xs); i++) {\n            derivative.Add(xs[(int)(i)]\
    \ * d);\n            d += (long)1L;\n        }\n        return derivative;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvgtyddc1.cs(19,37): error CS0103: The name ''len'' does not exist in the
    current context

    '
  timestamp: 1660028224
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    if (xs.Count < 2L) {\n            return (new List<long>(new long[]{(long)0L}));\n\
    \        }\n        var dxs = new List<long>();\n        var i = (long)1L;\n \
    \       while (i < len(xs)) {\n            dxs.Add(xs[i] * i);\n            i++;\n\
    \        }\n        return dxs;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpddho1x5y.cs(22,20): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpddho1x5y.cs(23,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028224
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    long n = (long)xs.Count();\n        if (n == (long)1L) {\n            return\
    \ new List<long>(new long[]{(long)0L});\n        }\n\n        var ret = new List<long>();\n\
    \        {\n            long i__prev1 = i;\n\n            for (long i = (long)1L;\
    \ i < n; i++)\n            {\n                ret.Add(xs[i] * i);\n          \
    \  }\n\n\n            i = i__prev1;\n        }\n        return ret;\n\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzwqthpzr.cs(24,29): error CS0103: The name ''i'' does not exist in the
    current context

    /tmp/tmpzwqthpzr.cs(28,28): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpzwqthpzr.cs(32,13): error CS0103: The name ''i'' does not exist in the
    current context

    '
  timestamp: 1660028224
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    long i = 1L;\n        List<long> res = new List<long>();\n        foreach\
    \ (var x in xs) {\n            if (i < xs.Count) {\n                res.Add(i\
    \ * x);\n            }\n            i = i + 1L;\n        }\n        return res;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c56d031d074d461ca57000735dce2913>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c56d031d074d461ca57000735dce2913>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028224
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    return Enumerable.Range(1L, (xs.Count - 1L)).Select(x => (xs[(int)x] * (long)x)).ToList();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpikax1mtn.cs(17,33): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpikax1mtn.cs(17,38): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028224
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var dxs = new List<long>();\n        for (var i = 1L; i < xs.Count; i++)\
    \ {\n            dxs.Add(xs[i] * i);\n        }\n        return dxs;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjo3wta_3.cs(19,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028224
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var dst = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            dst.Add(xs[(int)(i)] * i);\n        }\n\n        return\
    \ dst;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5ba398105f874844ad7470067dbcbce7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5ba398105f874844ad7470067dbcbce7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028225
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var i = (long)1L;\n        var r = new List<long>();\n        while (i <\
    \ len(xs))\n        {\n            r.Add(xs[i] * i);\n            i++;\n     \
    \   }\n\n        return r;\n\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt4324xda.cs(19,20): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpt4324xda.cs(21,22): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028225
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    return Enumerable.Range(1L, xs.Count - 1L).Select((index) => xs[index] *\
    \ index).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq9t8e5s9.cs(17,33): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpq9t8e5s9.cs(17,37): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028225
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ys = new List<long>();\n        for (int i = 1; i < (int)xs.Count;\
    \ i++) {\n            long k = (long)xs[i] * (long)i;\n            ys.Add(k);\n\
    \        }\n        return ys;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7496284393c94d17a8248e93f78eccca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7496284393c94d17a8248e93f78eccca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028225
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var tmp = new List<long>();\n        var c = (long)1L;\n        var i = (long)1L;\n\
    \        while (i < (long)xs.Count())\n        {\n            tmp.Add(xs[(int)i]\
    \ * c);\n            c++;\n            i++;\n        }\n        return tmp;\n\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88e0e4752a7847c9ba58107fc8408e85>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88e0e4752a7847c9ba58107fc8408e85>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028225
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var result = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            result.Add(xs[(int)(i)] * i);\n        }\n\n        return\
    \ result;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <347a709a5a884696a30415d4cf4fcd31>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <347a709a5a884696a30415d4cf4fcd31>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028221
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var s = default(List<long>);\n        var i = (long)0L;\n        var n =\
    \ (long)0L;\n        s = new List<long>();\n        i = (long)1L;\n        n =\
    \ (long)0L;\n        while (i < (long)len(xs))\n        {\n            s = append(s,\
    \ i * xs[i]);\n            i = i + (long)1L;\n        }\n        return s;\n\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps8uzq_c9.cs(23,26): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmps8uzq_c9.cs(25,17): error CS0103: The name ''append'' does not exist in
    the current context

    /tmp/tmps8uzq_c9.cs(25,34): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmps8uzq_c9.cs(19,13): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    '
  timestamp: 1660028225
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    return new List<long>(xs.Skip(1).Select((x, i) => x * (i + 1L)));\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <895180616dff46c7963ffd8a656a7b34>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <895180616dff46c7963ffd8a656a7b34>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028225
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (long i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <baac751894134555b968c2d3d8dd7a97>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <baac751894134555b968c2d3d8dd7a97>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028221
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var xs_ = make_list<long>(n - 1L, 0L);\n      \
    \  for (long i = 0L; i < n - 1L; i++)\n        {\n            xs_[i] = xs[i +\
    \ 1L] * (i + 1L);\n        }\n\n        return xs_;\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1qw2hn2c.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp1qw2hn2c.cs(18,19): error CS0103: The name ''make_list'' does not exist
    in the current context

    /tmp/tmp1qw2hn2c.cs(21,25): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028225
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ans = new List<long>();\n        long i = 1L;\n        while (i\
    \ < xs.Count) {\n            ans.Add(xs[(int)i] * i);\n            i = i + 1L;\n\
    \        }\n        return ans;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cb2001623dbd48c5aef8108288ee0fc3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cb2001623dbd48c5aef8108288ee0fc3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028225
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var acc = new List<long>();\n        for (var i = (long)1L; i < (long)len(xs);\
    \ i++) {\n            acc.Add(xs[i] * i);\n        }\n\n        return acc;\n\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsh7g9pzv.cs(18,42): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpsh7g9pzv.cs(19,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028225
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (long i = 1L; i < len(xs); i++) {\n\
    \            ys.Add(xs[i] * i);\n        }\n\n        return ys;\n\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx5midfre.cs(18,31): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpx5midfre.cs(19,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028225
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> dxs = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            dxs.Add(xs[i] * i);\n        }\n        return dxs;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2159621ff0ee460d85742b69fece64e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2159621ff0ee460d85742b69fece64e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028225
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        var n = xs.Count;\n        for (var\
    \ i = 1L; i < n; i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n \
    \       return ans;\n\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f9855d017dfe4db6b47b00aef823b447>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f9855d017dfe4db6b47b00aef823b447>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028222
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ys = new List<long>();\n        for (long i = (long)1L; i < xs.Count;\
    \ i++)\n        {\n            ys.Add(xs[(int)(i)] * i);\n        }\n\n      \
    \  return ys;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2a105edc56074826865a1db1e55a8347>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2a105edc56074826865a1db1e55a8347>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028225
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> result = new List<long>();\n        for (long i = (long)1L; i\
    \ < xs.Count; i++) {\n            result.Add(xs[(int)(i)] * i);\n        }\n\n\
    \        return result;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81b09d38d92e4e0d930ae31bc4a23284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81b09d38d92e4e0d930ae31bc4a23284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028225
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> result = new List<long>();\n        for (long i = (long)1L; i\
    \ < xs.Count; i++) {\n            result.Add(xs[(int)(i)] * i);\n        }\n\n\
    \        return result;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81b09d38d92e4e0d930ae31bc4a23284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81b09d38d92e4e0d930ae31bc4a23284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028225
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (long i = (long)1L; i < xs.Count;\
    \ i++)\n        {\n            ys.Add(xs[i] * i);\n        }\n\n        return\
    \ ys;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxle_8_19.cs(20,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028222
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var length = xs.Count;\n        if (length == 0L) {\n            return xs;\n\
    \        }\n\n        var ans = new List<long>();\n        for (long i = 1L; i\
    \ < length; i++) {\n            ans.Add(xs[i] * i);\n        }\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxkbwufdt.cs(24,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028225
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> xs_ = new List<long>();\n        long i = (long)1L;\n        while\
    \ (i < len(xs))\n        {\n            xs_.append(xs[i] * i);\n            i\
    \ = i + (long)1L;\n        }\n\n        return xs_;\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph3vz5nk8.cs(19,20): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmph3vz5nk8.cs(21,27): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmph3vz5nk8.cs(21,17): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1660028225
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ans = new List<long>();\n        long i = (long)1L;\n        while\
    \ (i < (long)xs.Count())\n        {\n            ans.Add(xs[(int)(i)] * i);\n\
    \            i++;\n        }\n\n        return ans;\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27e429e9ff304140962e6610f41569ff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27e429e9ff304140962e6610f41569ff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028225
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var r = new List<long>();\n        for (var i = 1L; i < (long)xs.Count; i++)\
    \ {\n            r.Add(xs[(int)(i)] * i);\n        }\n\n        return r;\n\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c240189412a34c9c9f30b1159a778788>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c240189412a34c9c9f30b1159a778788>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028225
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <75da360e7f1148d9bd653a2855221dfe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <75da360e7f1148d9bd653a2855221dfe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028225
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var res = new List<long> { };\n        {\n    \
    \        var i__prev1 = i;\n\n            for (var i = 1L; i < n; i++)\n     \
    \       {\n                res.Add(xs[i] * i);\n            }\n\n\n          \
    \  i = i__prev1;\n        }\n        return res;\n\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpicqqgrea.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpicqqgrea.cs(20,28): error CS0103: The name ''i'' does not exist in the
    current context

    /tmp/tmpicqqgrea.cs(24,28): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpicqqgrea.cs(28,13): error CS0103: The name ''i'' does not exist in the
    current context

    '
  timestamp: 1660028225
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ret = new List<long>();\n        long i = 1L;\n        foreach\
    \ (var item in xs) {\n            ret.Add(i * item);\n            i++;\n     \
    \   }\n        return ret;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ac423572b7684eb39025e3fef07a8279>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ac423572b7684eb39025e3fef07a8279>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028225
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> xs__1 = new List<long>();\n        long value = 0L;\n        long\
    \ x = 0L;\n        long i = 0L;\n        long n = 0L;\n        long __while1__\
    \ = default(long);\n        long __while2__ = default(long);\n        long __while3__\
    \ = default(long);\n        long __while4__ = default(long);\n        List<long>\
    \ __while2_xs_1 = xs;\n        __while1__ = 0L;\n        goto __while1_loop;\n\
    \        __while1_loop:\n        if (__while1__ >= 1L) {\n            goto __while1_end;\n\
    \        }\n        xs__1 = xs;\n        value = 0L;\n        x = 0L;\n      \
    \  i = 0L;\n        n = 0L;\n        __while2__ = 0L;\n        __while2_xs_1 =\
    \ xs;\n        __while3__ = 0L;\n        goto __while3_loop;\n        __while3_loop:\n\
    \        if (__while3__ >= 1L) {\n            goto __while3_end;\n        }\n\
    \        __while3__ = 1L;\n        if ((__while2__ < len(__while2_xs_1))) {\n\
    \            x = __while2_xs_1[__while2__];\n            __while3__ = 0L;\n  \
    \      }\n        else {\n            goto __while3_end;\n        }\n        __while3_end:\n\
    \        ;\n        __while2__ += 1L;\n        i = __while2__;\n        __while2__\
    \ = 0L;\n        __while2_xs_1 = xs;\n        __while4__ = 0L;\n        goto __while4_loop;\n\
    \        __while4_loop:\n        if (__while4__ >= 1L) {\n            goto __while4_end;\n\
    \        }\n        __while4__ = 1L;\n        if ((__while2__ < len(__while2_xs_1)))\
    \ {\n            n = __while2_xs_1[__while2__];\n            __while4\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpuzg5cu5n.cs(69,21): error CS1002: ; expected

    /tmp/tmpuzg5cu5n.cs(71,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpuzg5cu5n.cs(79,2): error CS1513: } expected

    '
  timestamp: 1660028225
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ret = new List<long>();\n        long i = (long)1L;\n        while\
    \ (i < (long)xs.Count())\n        {\n            ret.Add(xs[(int)i] * i);\n  \
    \          i = i + (long)1L;\n        }\n\n        return ret;\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8acc26972cd3409a85e0b52c6007f8a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8acc26972cd3409a85e0b52c6007f8a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028225
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var x = (new List<long>(xs));\n        if (x.Count < 2L)\n        {\n   \
    \         return (new List<long>(new long[] { (long)0L }));\n        }\n\n   \
    \     x.RemoveAt(0L);\n        var y = (new List<long>());\n        var _temp0\
    \ = x;\n        foreach (var _temp1 in _temp0)\n        {\n            var z =\
    \ _temp1;\n            y.Add(z);\n        }\n        return y;\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzs23y59d.cs(23,20): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028225
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (var i = 1L; i < xs.Count; i++) {\n\
    \            ys.Add(xs[i] * i);\n        }\n        return ys;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfmy9qccl.cs(19,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028225
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    xs.RemoveAt(0);\n        for (int i = 0; i < xs.Count; i++) {\n         \
    \   xs[i] *= (i + 1);\n        }\n        return xs;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c94f5d8606248578001ab823093513a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3c94f5d8606248578001ab823093513a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028226
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> result = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            result.Add(xs[i] * i);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8a440e32cf134bb1aeec1769504b03ff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8a440e32cf134bb1aeec1769504b03ff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028223
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    return Enumerable.Range(1L, (int)(xs.Count - 1L)).Select((__ContextSymbol0)\
    \ => (xs[__ContextSymbol0] * (long)(__ContextSymbol0))).ToList();\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpadzaomfx.cs(17,33): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028225
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = xs.Count;\n        var ys = new List<long>();\n        var i = 0L;\n\
    \        while (true) {\n            if (i >= n) {\n                break;\n \
    \           }\n            if (i == 0L) {\n                ys.Add(xs[(int)i]);\n\
    \            }\n            else {\n                ys.Add(xs[(int)i] * i);\n\
    \            }\n            i = i + 1L;\n        }\n        return ys;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d749647dcfb483e9dc6536ce6a3c8fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d749647dcfb483e9dc6536ce6a3c8fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028226
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    return xs.Skip(1).Select((x, i) => x * (i + 1)).ToList();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60cd97c19e024285ab82e76b4f5247c8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60cd97c19e024285ab82e76b4f5247c8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028223
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        long n = (long)xs.Count();\n       \
    \ long i = (long)1L;\n        while (i < n)\n        {\n            ans.Add(xs[(int)(i)]\
    \ * i);\n            i++;\n        }\n\n        return ans;\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <366a07f665434260bdf07d33be980fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <366a07f665434260bdf07d33be980fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028226
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    return xs.Select((x, i) => x * (xs.Count - i - 1)).Skip(1).ToList();\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <048a468e3942485297379d5c9512a1e6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <048a468e3942485297379d5c9512a1e6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028226
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    return Enumerable.Range(1L, xs.Count - 1L).Select((i) => xs[i] * i).ToList();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppb6jflkm.cs(17,33): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmppb6jflkm.cs(17,37): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028225
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ret = new List<long>();\n        for (int i = 1; i < len(xs);\
    \ i++) {\n            long t = (long)i * xs[i];\n            ret.append(t);\n\
    \        }\n\n        return ret;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt_uqtcit.cs(18,29): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpt_uqtcit.cs(20,17): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1660028225
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    long n = (long)xs.Count();\n        if (n <= (long)1L)\n        {\n     \
    \       return new List<long>();\n        }\n\n        return new List<long>(xs.Skip(1L).Select((x,\
    \ i) => (long)(((long)i + (long)1L) * x)));\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps9n79ozb.cs(23,39): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028225
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var _tuple_2 = xs.Skip(1).Unzip3();\n        var z = _tuple_2.Item2;\n  \
    \      var y = _tuple_2.Item1;\n        var x = _tuple_2.Item3;\n        return\
    \ new List<long>(Enumerable.Zip(y, x, (a, b) => a * b));\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6p_dgza1.cs(17,35): error CS1061: ''IEnumerable<long>'' does not contain
    a definition for ''Unzip3'' and no accessible extension method ''Unzip3'' accepting
    a first argument of type ''IEnumerable<long>'' could be found (are you missing
    a using directive or an assembly reference?)

    '
  timestamp: 1660028225
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var newxs = new List<long>();\n        for (var i = (long)1L; i < (long)len(xs);\
    \ i++)\n        {\n            newxs.Add(i * xs[i]);\n        }\n        return\
    \ newxs;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9js_8tmq.cs(18,42): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp9js_8tmq.cs(20,30): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028226
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        var n = xs.Count - 1L;\n        var i\
    \ = 1L;\n        while (i <= n) {\n            var y = (i * xs[(int)(i)]);\n \
    \           ys.Add(y);\n            i = i + 1L;\n        }\n        return ys;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4e18465f53f46f09bd8fe710435de2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4e18465f53f46f09bd8fe710435de2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028226
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> c = new List<long>();\n        var n = xs.Count;\n        c.Add(0);\n\
    \        for (int i = 1; i < n; i++) {\n            c.Add(xs[i] * (i));\n    \
    \    }\n        return c;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ca588e648ce4dacb451d4431262e667>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ca588e648ce4dacb451d4431262e667>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028226
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = xs.Count;\n        var ys = new List<long>();\n        for (var i\
    \ = 0; i < n - 1; i++) {\n            ys.Add(xs[i] * (n - 1 - i));\n        }\n\
    \        return ys;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b23732c197e643a98c4154213ad9554c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b23732c197e643a98c4154213ad9554c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028226
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var newCs = new List<long>();\n        long currentI = (long)1L;\n      \
    \  long currentC = xs[(int)1L];\n        while (currentI < (long)xs.Count() -\
    \ (long)1L) {\n            newCs.Add(currentC * currentI);\n            currentI++;\n\
    \            currentC = xs[(int)currentI];\n        }\n\n        return newCs;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d17ae5f88cad41d5b61fa6b15813dbae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d17ae5f88cad41d5b61fa6b15813dbae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028226
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    return new List<long>(xs.Skip(1).Select((x, index) => (index + 1) * x));\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c25298580141478d839993cdd552b2e2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c25298580141478d839993cdd552b2e2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028226
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var len = xs.Count;\n        var ys = new List<long>();\n        for (var\
    \ i = 1L; i < len; i++) {\n            ys.Add(xs[(int)(i)] * i);\n        }\n\
    \        return ys;\n\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6ec2c6186c1b4bb5a13586274d71a730>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6ec2c6186c1b4bb5a13586274d71a730>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028226
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = xs.Count - 1;\n        var ans = new List<long>();\n        for (var\
    \ i = 0; i < n; i++) {\n            ans.Add(xs[i] * (n - i));\n        }\n   \
    \     return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8118ec46866f4fac8c061f53473d57e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8118ec46866f4fac8c061f53473d57e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028226
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> result = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            result.Add(xs[i] * (long)i);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9f30b78be9b445dab31a9fdfb03ae3f9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9f30b78be9b445dab31a9fdfb03ae3f9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028226
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> result = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            result.Add(xs[i] * (long)i);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9f30b78be9b445dab31a9fdfb03ae3f9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9f30b78be9b445dab31a9fdfb03ae3f9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028226
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var len = xs.Count;\n        var ans = new List<long>();\n        for (long\
    \ i = 1L; i < len; i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n\
    \n        return ans;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d9ac4f8769cf47fba20daf88b5fe4438>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d9ac4f8769cf47fba20daf88b5fe4438>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028226
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ret = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            ret.Add(xs[i] * (long)i);\n        }\n        return ret;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2d95d24648944d3da7327a5e49176f0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2d95d24648944d3da7327a5e49176f0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028223
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    long n = (long)xs.Count() - 1L;\n        var ys = new List<long>();\n   \
    \     long i = 1L;\n        while (i <= n) {\n            ys.Add(xs[(int)(i)]\
    \ * i);\n            i++;\n        }\n        return ys;\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3de5fedc6ae9433589d4bc5627e6efc0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3de5fedc6ae9433589d4bc5627e6efc0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028226
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    return xs.GetRange(1, xs.Count - 1).Select((long x, int y) => x * y).ToList();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e7f9d76155fb4be8885a44d16d47e3c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e7f9d76155fb4be8885a44d16d47e3c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028226
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (var i = 1L; i < xs.Count; i++) {\n\
    \            ys.Add(xs[i] * i);\n        }\n        return ys;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfmy9qccl.cs(19,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028225
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var result = new List<long>();\n        for (long i = (long)1L; i < (long)len(xs);\
    \ i++)\n        {\n            var v = xs[i] * i;\n            result.Add(v);\n\
    \        }\n\n        return result;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxr2bfyir.cs(18,43): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpxr2bfyir.cs(20,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028226
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    if (xs.Count < 2L) {\n            return (new List<long>(new long[]{(long)0L}));\n\
    \        }\n        List<long> @out = new List<long>();\n        for (long i =\
    \ (long)1L; i < len(xs); i++) {\n            @out.Add(xs[i] * i);\n        }\n\
    \        return (@out);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6d_agc4p.cs(21,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp6d_agc4p.cs(22,25): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028226
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> res = new List<long>();\n        long n = xs.Count;\n        for\
    \ (long i = 1L; i < n; i++) {\n            res.Add(xs[(int)(i)] * i);\n      \
    \  }\n        return res;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd50ab37bbe04e8e8105b78f7ab06720>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd50ab37bbe04e8e8105b78f7ab06720>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028226
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ans = new List<long>();\n        var n = xs.Count - 1;\n     \
    \   {\n            var i__prev1 = i;\n\n            for (var i = 1L; i < n; i++)\
    \ {\n                ans.Add(xs[i] * i);\n            }\n\n\n            i = i__prev1;\n\
    \        }\n        return ans;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp04o0cipp.cs(20,28): error CS0103: The name ''i'' does not exist in the
    current context

    /tmp/tmp04o0cipp.cs(23,28): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp04o0cipp.cs(27,13): error CS0103: The name ''i'' does not exist in the
    current context

    '
  timestamp: 1660028226
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> rs = new List<long>();\n        for (long i = 1L; i < (long)xs.Count;\
    \ i++) {\n            rs.Add(xs[(int)i] * i);\n        }\n        return rs;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <917c4ff3cc37429aa177f2b03f7f827e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <917c4ff3cc37429aa177f2b03f7f827e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028226
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    return Enumerable.Range(1L, (int)xs.Count - 1L).Select(__enum1 => (xs[__enum1]\
    \ * (long)__enum1)).ToList();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9ufpmijn.cs(17,33): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp9ufpmijn.cs(17,37): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660028226
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    long n = (long)xs.Count;\n        long i = (long)1L;\n        List<long>\
    \ derivatives = new List<long>();\n        while (i < n)\n        {\n        \
    \    derivatives.Add(xs[(int)(i)] * i);\n            i++;\n        }\n\n     \
    \   return derivatives;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fba5fa230e214677b40ed1961c6f97a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fba5fa230e214677b40ed1961c6f97a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660028226

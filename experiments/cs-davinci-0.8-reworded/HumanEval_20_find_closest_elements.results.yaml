language: cs
name: HumanEval_20_find_closest_elements
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minFirst =
    0.0f;\n        float minSecond = 0.0f;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                if
    (Math.Abs(numbers[i] - numbers[j]) < minDiff) {\n                    minDiff =
    Math.Abs(numbers[i] - numbers[j]);\n                    minFirst = numbers[i];\n
    \                   minSecond = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(minFirst, minSecond);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1b2b86b729d1453db2ecfc4e13e27219>:0
    \n"
  stdout: ''
  timestamp: 1659976625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count < 2) {\n            throw new ArgumentException(\"Must
    have at least two items\", \"numbers\");\n        }\n        var closestPair =
    Tuple.Create(numbers[0], numbers[1]);\n        var closestDistance = Math.Abs(closestPair.Item1
    - closestPair.Item2);\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                var distance = Math.Abs(numbers[i]
    - numbers[j]);\n                if (distance < closestDistance) {\n                    closestDistance
    = distance;\n                    closestPair = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closestPair;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <405a59cf48b843949cc1935b75d9a402>:0
    \n"
  stdout: ''
  timestamp: 1659976625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float number1 = 0.0f;\n
    \       float number2 = 0.0f;\n        for (int a = 0; a < numbers.Count - 1;
    a++) {\n            for (int b = a + 1; b < numbers.Count; b++) {\n                float
    diff = Math.Abs(numbers[a] - numbers[b]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    number1 = numbers[a];\n
    \                   number2 = numbers[b];\n                }\n            }\n
    \       }\n        return Tuple.Create(number1, number2);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <81c9dc4064ba455d9e90aabf0eb2716f>:0
    \n"
  stdout: ''
  timestamp: 1659976625
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closestPairSum = float.MaxValue;\n        Tuple<float,
    float> closestPair;\n        float tempSum;\n        int numbersSize = numbers.Count;\n
    \       for (int i = 0; i < numbersSize; i++) {\n            for (int j = i+1;
    j < numbersSize; j++) {\n                tempSum = Math.Abs(numbers[i] - numbers[j]);\n
    \               if (tempSum < closestPairSum) {\n                    closestPairSum
    = tempSum;\n                    closestPair = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closestPair;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpp71k_vz4.cs(29,16): error CS0165: Use of unassigned local variable ''closestPair''

    '
  timestamp: 1659976625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if(numbers.Count < 2) {\n            throw new ArgumentException(\"You
    must supply a list of numbers with at least two values\");\n        }\n        float
    smallestDifference = Math.Abs(numbers[0] - numbers[1]);\n        Tuple<float,
    float> closestElements = Tuple.Create(numbers[0], numbers[1]);\n        for(int
    index = 0; index < numbers.Count; index++) {\n            for(int subIndex = index
    + 1; subIndex < numbers.Count; subIndex++) {\n                float currentDifference
    = Math.Abs(numbers[index] - numbers[subIndex]);\n                if(currentDifference
    < smallestDifference) {\n                    smallestDifference = currentDifference;\n
    \                   closestElements = Tuple.Create(numbers[index], numbers[subIndex]);\n
    \               }\n            }\n        }\n        return closestElements;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f956b8d603284a06b543f91c7baaaf93>:0
    \n"
  stdout: ''
  timestamp: 1659976625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float distance = 1E10f;\n        int firstNumber = 0;\n        int
    secondNumber = 0;\n        for (int x = 0; x < numbers.Count; x++) {\n            for
    (int y = x + 1; y < numbers.Count; y++) {\n                float delta = numbers[x]
    - numbers[y];\n                if (delta < 0) {\n                    delta = -delta;\n
    \               }\n                if (delta < distance) {\n                    distance
    = delta;\n                    firstNumber = x;\n                    secondNumber
    = y;\n                }\n            }\n        }\n        return Tuple.Create(numbers[firstNumber],
    numbers[secondNumber]);\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d27e8f3007ad40a08d29c8afaf2a73ca>:0
    \n"
  stdout: ''
  timestamp: 1659976625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count < 2)\n            throw new ArgumentException(\"numbers
    must have at least two elements\", \"numbers\");\n        List<float> sortedNumbers
    = new List<float>(numbers);\n        sortedNumbers.Sort();\n        Tuple<float,
    float> closest = Tuple.Create(sortedNumbers[0], sortedNumbers[1]);\n        for
    (int i = 0; i < sortedNumbers.Count; i++) {\n            for (int j = i + 1; j
    < sortedNumbers.Count; j++) {\n                float diff = Math.Abs(sortedNumbers[i]
    - sortedNumbers[j]);\n                if (diff < Math.Abs(closest.Item1 - closest.Item2))\n
    \                   closest = Tuple.Create(sortedNumbers[i], sortedNumbers[j]);\n
    \           }\n        }\n        return closest;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Tuple<float, float> result = new Tuple<float, float>(float.MaxValue,
    float.MaxValue);\n        if (numbers.Count >= 2) {\n            float lastnumber
    = numbers[0];\n            float closestdiff = float.MaxValue;\n            for
    (int i = 1; i < numbers.Count; i++) {\n                float diff = Math.Abs(numbers[i]
    - lastnumber);\n                if (diff < closestdiff) {\n                    closestdiff
    = diff;\n                    result = new Tuple<float, float>(lastnumber, numbers[i]);\n
    \               }\n                lastnumber = numbers[i];\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7ac0733ade94455ba1cd1d90e4ca88d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7ac0733ade94455ba1cd1d90e4ca88d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float distance = float.MaxValue;\n        float result1 =
    0;\n        float result2 = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    curDistance = Math.Abs(numbers[i] - numbers[j]);\n                if (curDistance
    < distance) {\n                    distance = curDistance;\n                    result1
    = numbers[i];\n                    result2 = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(result1, result2);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5b3d29da74ea4e4b8b2efdf5a46a5199>:0
    \n"
  stdout: ''
  timestamp: 1659976625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Debug.Assert(numbers.Count >= 2);\n        float first_closest
    = numbers[0];\n        float second_closest = numbers[1];\n        float difference
    = Math.Abs(first_closest - second_closest);\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    abs_difference = Math.Abs(numbers[i] - numbers[j]);\n                if (abs_difference
    < difference) {\n                    first_closest = numbers[i];\n                    second_closest
    = numbers[j];\n                    difference = abs_difference;\n                }\n
    \           }\n        }\n        return Tuple.Create(first_closest, second_closest);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bdec98c7faf74433a66b1d4e6a045ed8>:0
    \n"
  stdout: ''
  timestamp: 1659976625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float diff = float.MaxValue;\n        float num1 = numbers[0];\n
    \       float num2 = numbers[1];\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                if
    (Math.Abs(numbers[i] - numbers[j]) < diff) {\n                    diff = Math.Abs(numbers[i]
    - numbers[j]);\n                    num1 = numbers[i];\n                    num2
    = numbers[j];\n                }\n            }\n        }\n        return Tuple.Create(num1,
    num2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8b069b146ec2407ca36d9a7d776d8323>:0
    \n"
  stdout: ''
  timestamp: 1659976625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if(numbers.Count < 2)\n            throw new Exception(\"There
    must be at least two numbers in the list to find the closest elements.\");\n        float
    smallestDifference = float.MaxValue;\n        float firstSmallestElement = numbers[0];\n
    \       float secondSmallestElement = numbers[1];\n        for(int i = 0; i <
    numbers.Count - 1; i++) {\n            for(int j = i + 1; j < numbers.Count; j++)
    {\n                float difference = Math.Abs(numbers[i] - numbers[j]);\n                if(difference
    < smallestDifference) {\n                    smallestDifference = difference;\n
    \                   firstSmallestElement = numbers[i];\n                    secondSmallestElement
    = numbers[j];\n                }\n            }\n        }\n        return Tuple.Create(Math.Min(firstSmallestElement,
    secondSmallestElement), Math.Max(firstSmallestElement, secondSmallestElement));\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float min_diff = Math.Abs(numbers[0] - numbers[1]);\n        Tuple<float,
    float> closest_numbers = Tuple.Create(numbers[0], numbers[1]);\n        for (int
    x = 0; x < numbers.Count(); x++) {\n            for (int y = x + 1; y < numbers.Count();
    y++) {\n                if (Math.Abs(numbers[x] - numbers[y]) < min_diff) {\n
    \                   min_diff = Math.Abs(numbers[x] - numbers[y]);\n                    closest_numbers
    = Tuple.Create(numbers[x], numbers[y]);\n                }\n            }\n        }\n
    \       if (closest_numbers.Item1 > closest_numbers.Item2) {\n            return
    Tuple.Create(closest_numbers.Item2, closest_numbers.Item1);\n        }\n        return
    closest_numbers;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        Tuple<float, float>
    closest_pair = null;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = numbers[i]
    - numbers[j];\n                if (diff < 0) {\n                    diff = diff
    * -1;\n                }\n                if (diff < closest) {\n                    closest
    = diff;\n                    closest_pair = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closest_pair;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <518778e1716746f8ad6bc4f5ab7ec0f1>:0
    \n"
  stdout: ''
  timestamp: 1659976625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Tuple<float, float> pair = Tuple.Create(numbers[0], numbers[1]);\n
    \       float smallestDistance = Math.Abs(numbers[0] - numbers[1]);\n        for
    (int i = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float distance = Math.Abs(numbers[i] - numbers[j]);\n
    \               if (distance < smallestDistance) {\n                    pair =
    Tuple.Create(numbers[i], numbers[j]);\n                    smallestDistance =
    distance;\n                }\n            }\n        }\n        return pair;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <242ec1ef3e1c47089ed4a652821d22ff>:0
    \n"
  stdout: ''
  timestamp: 1659976626
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float min_distance = float.MaxValue;\n        float a = 0;\n
    \       float b = 0;\n        for (int i = 0; i < numbers.Count - 1; i++) {\n
    \           float distance = Math.Abs(numbers[i] - numbers[i + 1]);\n            if
    (distance < min_distance) {\n                min_distance = distance;\n                a
    = numbers[i];\n                b = numbers[i + 1];\n            }\n        }\n
    \       return Tuple.Create(a, b);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <315aded2b577456498caac34b9a9de5a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <315aded2b577456498caac34b9a9de5a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // This solution has a complexity of O(N).\n        float
    small = numbers[0];\n        float large = numbers[1];\n        float diff = large
    - small;\n        for (int a = 0; a < numbers.Count; a++) {\n            for (int
    b = a + 1; b < numbers.Count; b++) {\n                if (Math.Abs(numbers[a]
    - numbers[b]) < diff) {\n                    small = numbers[a];\n                    large
    = numbers[b];\n                    diff = large - small;\n                }\n
    \           }\n        }\n        return Tuple.Create(small, large);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <92f7151f557e4f34966e75f0995688be>:0
    \n"
  stdout: ''
  timestamp: 1659976625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // You may wish to use the method Tuple.Create(...)\n        float
    smallest = numbers[0], largest = numbers[0];\n        for (int i = 1; i < numbers.Count;
    i++) {\n            if (numbers[i] < smallest) {\n                smallest = numbers[i];\n
    \           }\n            if (numbers[i] > largest) {\n                largest
    = numbers[i];\n            }\n        }\n        float distance = largest - smallest;\n
    \       for (int i = 0; i < numbers.Count; i++) {\n            for (int j = i
    + 1; j < numbers.Count; j++) {\n                if (Math.Abs(numbers[i] - numbers[j])
    < distance) {\n                    distance = Math.Abs(numbers[i] - numbers[j]);\n
    \                   smallest = numbers[i];\n                    largest = numbers[j];\n
    \               }\n            }\n        }\n        if (smallest > largest) {\n
    \           float temp = smallest;\n            smallest = largest;\n            largest
    = temp;\n        }\n        return Tuple.Create(smallest, largest);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closestDistance = float.MaxValue;\n        Tuple<float,
    float> closestNumbers = null;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    distance = Math.Abs(numbers[i] - numbers[j]);\n                if (distance <
    closestDistance) {\n                    closestDistance = distance;\n                    closestNumbers
    = Tuple.Create(Math.Min(numbers[i], numbers[j]), Math.Max(numbers[i], numbers[j]));\n
    \               }\n            }\n        }\n        return closestNumbers;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Debug.Assert(numbers.Count >= 2);\n        Tuple<float, float>
    best = null;\n        foreach (Tuple<float, float> elements in numbers.Zip(numbers.Skip(1),
    (x, y) => new Tuple<float, float>(x, y))) {\n            if (best == null || Math.Abs(elements.Item1
    - elements.Item2) < Math.Abs(best.Item1 - best.Item2)) {\n                best
    = elements;\n            }\n        }\n        return best;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1473e718ad5454db3b47557f5cb27dc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1473e718ad5454db3b47557f5cb27dc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        int index = 0;\n        float closest = Math.Abs(numbers[0]
    - numbers[1]);\n        for (int i = 0; i < numbers.Count - 1; i++) {\n            float
    distance = Math.Abs(numbers[i] - numbers[i + 1]);\n            if (distance <
    closest) {\n                closest = distance;\n                index = i;\n
    \           }\n        }\n        return Tuple.Create(numbers[index], numbers[index
    + 1]);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d5c6a801398f4e54a8df5a826468b2ad>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d5c6a801398f4e54a8df5a826468b2ad>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float bestDistance = float.MaxValue;\n        float bestSmall
    = float.MaxValue;\n        float bestLarge = float.MaxValue;\n        for (int
    i = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                if (Math.Abs(numbers[i] - numbers[j]) < bestDistance)
    {\n                    bestDistance = Math.Abs(numbers[i] - numbers[j]);\n                    bestSmall
    = Math.Min(numbers[i], numbers[j]);\n                    bestLarge = Math.Max(numbers[i],
    numbers[j]);\n                }\n            }\n        }\n        return Tuple.Create(bestSmall,
    bestLarge);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float sm = (float)0.0f;\n        float lg = (float)0.0f;\n
    \       float diff = (float)0.0f;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    ndiff = numbers[i] - numbers[j];\n                if (ndiff < 0) {\n                    ndiff
    = -ndiff;\n                }\n                if (ndiff < diff || diff == (float)0.0f)
    {\n                    diff = ndiff;\n                    sm = numbers[i];\n                    lg
    = numbers[j];\n                }\n            }\n        }\n        return (Tuple.Create(sm,
    lg));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a4f10fe74974db69995679aa465d6b1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a4f10fe74974db69995679aa465d6b1>:0
    \n"
  stdout: ''
  timestamp: 1659976625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Debug.Assert(numbers.Count >= 2);\n        //\n        float
    closest = float.MaxValue;\n        float smallest = float.MaxValue;\n        float
    largest = float.MinValue;\n        //\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                if
    (numbers[i] < numbers[j]) {\n                    if (numbers[j] - numbers[i] <
    closest) {\n                        closest = numbers[j] - numbers[i];\n                        smallest
    = numbers[i];\n                        largest = numbers[j];\n                    }\n
    \               } else {\n                    if (numbers[i] - numbers[j] < closest)
    {\n                        closest = numbers[i] - numbers[j];\n                        smallest
    = numbers[j];\n                        largest = numbers[i];\n                    }\n
    \               }\n            }\n        }\n        //\n        return Tuple.Create(smallest,
    largest);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976626
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float diff = float.MaxValue;\n        float a = 0;\n        float
    b = 0;\n        for (int i = 0; i < numbers.Count - 1; i++) {\n            float
    t1 = numbers[i];\n            float t2 = numbers[i + 1];\n            float tDiff
    = t2 - t1;\n            if (tDiff < diff) {\n                diff = tDiff;\n                a
    = t1;\n                b = t2;\n            }\n        }\n        return Tuple.Create(a,
    b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <71979b1c01ca40968d7f83f8a3020eb8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <71979b1c01ca40968d7f83f8a3020eb8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976626
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest_difference = float.MaxValue;\n        Tuple<float,
    float> closest_pair = Tuple.Create((float)0.0f, (float)0.0f);\n        for (int
    i = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                if (Math.Abs(numbers[i] - numbers[j]) < closest_difference)
    {\n                    closest_difference = Math.Abs(numbers[i] - numbers[j]);\n
    \                   closest_pair = Tuple.Create(numbers[i], numbers[j]);\n                }\n
    \           }\n        }\n        return closest_pair;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c4ec6d7229444afa9337ee3707860b30>:0
    \n"
  stdout: ''
  timestamp: 1659976626
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float smallestDifference = float.MaxValue;\n        Tuple<float,
    float> closestElements = null;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    difference = Math.Abs(numbers[i] - numbers[j]);\n                if (difference
    < smallestDifference) {\n                    smallestDifference = difference;\n
    \                   closestElements = new Tuple<float, float>(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closestElements;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f27b59c31f634b0ab4a15410371b5a2e>:0
    \n"
  stdout: ''
  timestamp: 1659976626
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Tuple<float, float> closestPair = Tuple.Create(numbers[0],
    numbers[1]);\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float smaller = numbers[i]
    < numbers[j] ? numbers[i] : numbers[j];\n                float larger = numbers[i]
    > numbers[j] ? numbers[i] : numbers[j];\n                float smallerDiff = Math.Abs(closestPair.Item1
    - closestPair.Item2);\n                float largerDiff = Math.Abs(smaller - larger);\n
    \               if (largerDiff < smallerDiff) {\n                    closestPair
    = Tuple.Create(smaller, larger);\n                }\n            }\n        }\n
    \       return closestPair;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976626
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Tuple<float, float> min = null;\n        foreach (float i
    in numbers) {\n            foreach (float j in numbers) {\n                if
    (i > j) {\n                    if (min == null || j - i < min.Item1 - min.Item2)
    {\n                        min = Tuple.Create(i, j);\n                    }\n
    \               }\n            }\n        }\n        return min;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1a1661971fb54dcdbfe363f7decddd4e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1a1661971fb54dcdbfe363f7decddd4e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976626
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float min = float.MaxValue;\n        float a = 0;\n        float
    b = 0;\n        foreach (float left in numbers) {\n            foreach (float
    right in numbers) {\n                if (left != right) {\n                    float
    diff = Math.Abs(left - right);\n                    if (diff < min) {\n                        min
    = diff;\n                        a = left;\n                        b = right;\n
    \                   }\n                }\n            }\n        }\n        if
    (a > b) {\n            float tmp = a;\n            a = b;\n            b = tmp;\n
    \       }\n        return Tuple.Create(a, b);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8e02b3c86b1942a09e1afcd6a2bfa189>:0
    \n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float currLowest = numbers[0];\n        float currLowest2
    = numbers[1];\n        if (currLowest > currLowest2) {\n            currLowest
    = numbers[1];\n            currLowest2 = numbers[0];\n        }\n        for (int
    i = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                if (System.Math.Abs(numbers[i] - numbers[j]) < System.Math.Abs(currLowest
    - currLowest2)) {\n                    currLowest = numbers[i];\n                    currLowest2
    = numbers[j];\n                }\n            }\n        }\n        return Tuple.Create(currLowest,
    currLowest2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <de8e097571cf455eaf9ae4a5590a659e>:0
    \n"
  stdout: ''
  timestamp: 1659976626
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        int length = numbers.Count;\n        var first = numbers[0];\n
    \       var second = numbers[1];\n        var min = Math.Abs(first - second);\n
    \       for (int i = 0; i < length; i++) {\n            for (int j = i + 1; j
    < length; j++) {\n                var currentMin = Math.Abs(numbers[i] - numbers[j]);\n
    \               if (currentMin < min) {\n                    min = currentMin;\n
    \                   first = numbers[i];\n                    second = numbers[j];\n
    \               }\n            }\n        }\n        return new Tuple<float, float>(first,
    second);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <27348f7a017446849c59ccd7c520849c>:0
    \n"
  stdout: ''
  timestamp: 1659976626
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDelta = float.MaxValue;\n        float minX = 0,
    minY = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float delta = Math.Abs(numbers[i]
    - numbers[j]);\n                if (delta < minDelta) {\n                    minDelta
    = delta;\n                    minX = numbers[i];\n                    minY = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(minX,
    minY);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8f307c38f8eb415f99057530d4d6c2ed>:0
    \n"
  stdout: ''
  timestamp: 1659976626
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Tuple<float, float> closestElements = null;\n        float
    closestDifference = float.MaxValue;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    difference = numbers[j] - numbers[i];\n                if (difference < closestDifference)
    {\n                    closestDifference = difference;\n                    closestElements
    = Tuple.Create(numbers[i], numbers[j]);\n                }\n            }\n        }\n
    \       return closestElements;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bbb3a8fd13f14a19aac7c401c7319b3e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bbb3a8fd13f14a19aac7c401c7319b3e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976626
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // >>> numbers.Count\n        // 6\n        float smallestDifference
    = float.MaxValue;\n        Tuple<float, float> closestElements = Tuple.Create(0.0f,
    0.0f);\n        for (int i = 0; i < numbers.Count - 1; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float difference =
    Math.Abs(numbers[i] - numbers[j]);\n                if (difference < smallestDifference)
    {\n                    smallestDifference = difference;\n                    closestElements
    = Tuple.Create(numbers[i], numbers[j]);\n                }\n            }\n        }\n
    \       return closestElements;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe4cdf229f8e487796ebc4d9a6b27235>:0
    \n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count < 2) {\n            throw new Exception(\"Argument
    must contain at least two numbers\");\n        }\n        float currentClosestDifference
    = float.MaxValue;\n        float currentClosestFirstElement = float.MaxValue;\n
    \       float currentClosestSecondElement = float.MaxValue;\n        for (int
    firstIndex = 0; firstIndex < numbers.Count; firstIndex++) {\n            for (int
    secondIndex = firstIndex + 1; secondIndex < numbers.Count; secondIndex++) {\n
    \               if (firstIndex == secondIndex) {\n                    continue;\n
    \               }\n                float difference = numbers[firstIndex] - numbers[secondIndex];\n
    \               if (difference < 0) {\n                    difference = -difference;\n
    \               }\n                if (difference < currentClosestDifference)
    {\n                    currentClosestDifference = difference;\n                    currentClosestFirstElement
    = numbers[firstIndex];\n                    currentClosestSecondElement = numbers[secondIndex];\n
    \               }\n            }\n        }\n        return Tuple.Create(currentClosestFirstElement,
    currentClosestSecondElement);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <405912ce3333455e965fc1d6c6b1a227>:0
    \n"
  stdout: ''
  timestamp: 1659976626
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // Assume that the numbers are sorted.\n        float l =
    numbers[0];\n        float r = numbers[1];\n        for (int i = 0; i < numbers.Count
    - 1; i++) {\n            var c = numbers[i];\n            var d = numbers[i +
    1];\n            var diff = Math.Abs(c - d);\n            if (diff < Math.Abs(l
    - r)) {\n                l = c;\n                r = d;\n            }\n        }\n
    \       return Tuple.Create(l, r);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <89df2c20045e4071ad78f8d35f4375da>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <89df2c20045e4071ad78f8d35f4375da>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976626
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count < 2) {\n            throw new Exception(\"numbers
    is smaller than 2.\");\n        }\n        float a = numbers[0];\n        float
    b = numbers[1];\n        float min_dist = Math.Abs(a - b);\n        for (int i
    = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float dist = Math.Abs(numbers[i] - numbers[j]);\n                if
    (dist < min_dist) {\n                    min_dist = dist;\n                    a
    = numbers[i];\n                    b = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(a, b);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <086592c2b249436da54ec8767bf6b23d>:0
    \n"
  stdout: ''
  timestamp: 1659976626
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float distance;\n        float smallestDistance = (float)float.MaxValue;\n
    \       Tuple<float, float> closestTuple = Tuple.Create(numbers[0], numbers[1]);\n
    \       for (int i = 0; i < numbers.Count - 1; i++) {\n            if (numbers[i
    + 1] - numbers[i] < smallestDistance) {\n                closestTuple = Tuple.Create(numbers[i],
    numbers[i + 1]);\n                smallestDistance = numbers[i + 1] - numbers[i];\n
    \           }\n        }\n        return closestTuple;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <da27b643b4d24795b22d7a160c3af500>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <da27b643b4d24795b22d7a160c3af500>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976626
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float min_diff = -1;\n        float min_i = -1;\n        float
    min_j = -1;\n        for (int i = 0; i < numbers.Count - 1; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (min_diff == -1 || diff < min_diff) {\n                    min_diff
    = diff;\n                    min_i = numbers[i];\n                    min_j =
    numbers[j];\n                }\n            }\n        }\n        if (min_i <
    min_j) {\n            return Tuple.Create(min_i, min_j);\n        } else {\n            return
    Tuple.Create(min_j, min_i);\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976626
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        var closest = Tuple.Create((float)0.0f, (float)0.0f);\n        var
    closestDistance = (float)99999999.0f;\n        for (var i = 0; i < numbers.Count;
    i++) {\n            for (var j = i + 1; j < numbers.Count; j++) {\n                var
    distance = Math.Abs(numbers[i] - numbers[j]);\n                if (distance <
    closestDistance) {\n                    closestDistance = distance;\n                    closest
    = Tuple.Create(numbers[i], numbers[j]);\n                }\n            }\n        }\n
    \       return closest;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <72a9357a6b574d90b9d9c867603c2edc>:0
    \n"
  stdout: ''
  timestamp: 1659976626
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float smallestDifference = float.MaxValue;\n        float
    firstNumber = float.MaxValue;\n        float secondNumber = float.MaxValue;\n
    \       for (int i = 0; i < numbers.Count; i += 1) {\n            float a = numbers[i];\n
    \           for (int j = i + 1; j < numbers.Count; j += 1) {\n                float
    b = numbers[j];\n                float difference = Math.Abs(a - b);\n                if
    (difference < smallestDifference) {\n                    smallestDifference =
    difference;\n                    firstNumber = Math.Min(a, b);\n                    secondNumber
    = Math.Max(a, b);\n                }\n            }\n        }\n        return
    Tuple.Create(firstNumber, secondNumber);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976626
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closestDist = float.MaxValue;\n        float closer
    = float.MaxValue;\n        float closer2 = float.MaxValue;\n        foreach (float
    n in numbers) {\n            if (n < closer) {\n                closer2 = closer;\n
    \               closer = n;\n            } else if (n < closer2) {\n                closer2
    = n;\n            }\n        }\n        closestDist = closer2 - closer;\n        if
    (closestDist < 0.0001f) {\n            return Tuple.Create(closer, closer2);\n
    \       }\n        for (int i = 1; i < numbers.Count; i++) {\n            float
    dist = numbers[i] - numbers[i - 1];\n            if (dist < closestDist) {\n                closestDist
    = dist;\n                closer = numbers[i - 1];\n                closer2 = numbers[i];\n
    \           }\n        }\n        return Tuple.Create(closer, closer2);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <825033a6a3ba40ffaacdbe2beb446a6d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <825033a6a3ba40ffaacdbe2beb446a6d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976627
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // Check for null or empty list\n        if ((numbers == null)
    || (numbers.Count == 0)) {\n            throw new Exception(\"Supplied list must
    not be null or empty.\");\n        }\n        // Check for single element\n        if
    (numbers.Count == 1) {\n            throw new Exception(\"Supplied list must have
    at least two elements.\");\n        }\n        // Find the minimum and maximum
    values.\n        float max = numbers[0];\n        float min = numbers[0];\n        foreach
    (float num in numbers) {\n            if (num > max) {\n                max =
    num;\n            }\n            if (num < min) {\n                min = num;\n
    \           }\n        }\n        // These are the (ordered) closest elements.
    If they are the same, the list contains duplicate elements.\n        Tuple<float,
    float> result = new Tuple<float, float>(min, max);\n        // Sorting the list
    will give us what we need.\n        numbers.Sort();\n        // Search for the
    minimum difference between elements.\n        float minDiff = max - min;\n        //
    Starting from 1, as we have already checked the distance between the minimum and
    maximum.\n        for (int i = 1; i < numbers.Count; i++) {\n            float
    diff = numbers[i] - numbers[i - 1];\n            if (diff < minDiff) {\n                minDiff
    = diff;\n                result = new Tuple<float, float>(numbers[i - 1], numbers[i]);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976626
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Tuple<float, float> result = new Tuple<float, float>(0, 0);\n
    \       float dist = float.MaxValue;\n        foreach (float n1 in numbers) {\n
    \           foreach (float n2 in numbers) {\n                if (n1 == n2) {\n
    \                   continue;\n                }\n                float delta
    = Math.Abs(n1 - n2);\n                if (delta < dist) {\n                    dist
    = delta;\n                    result = Tuple.Create(Math.Min(n1, n2), Math.Max(n1,
    n2));\n                }\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <06eef7fad16943ccad35c227f228891d>:0
    \n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // ...\n        return null;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0002b] in <21413389044a4f5495bb4da35b1fc2fb>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0002b] in <21413389044a4f5495bb4da35b1fc2fb>:0
    \n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // Sort the numbers. The element at numbers[0] will have the
    smallest value. The element at numbers[n-1] will\n        // have the largest
    value. Iterate through all the elements in the list after the first element and
    pair them\n        // with the first element. Compute their distance and compare
    that to the distance between the last pair.\n        // Whichever of the two pairs
    has the smallest distance is the closest two.\n        numbers.Sort();\n        var
    closest = Tuple.Create(numbers[0], numbers[1]);\n        for (int i = 1; i < numbers.Count;
    i++) {\n            var candidate = Tuple.Create(numbers[0], numbers[i]);\n            if
    (Math.Abs(candidate.Item1 - candidate.Item2) < Math.Abs(closest.Item1 - closest.Item2))
    {\n                closest = candidate;\n            }\n        }\n        return
    closest;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <144db26e87cb419d94549929939606e6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <144db26e87cb419d94549929939606e6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976627
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float lowestVal =
    float.MaxValue;\n        float highestVal = float.MinValue;\n        for (int
    i = 0; i < numbers.Count - 1; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float dist = Math.Abs(numbers[i] - numbers[j]);\n                if
    (dist < closest) {\n                    closest = dist;\n                    lowestVal
    = Math.Min(numbers[i], numbers[j]);\n                    highestVal = Math.Max(numbers[i],
    numbers[j]);\n                }\n            }\n        }\n        return Tuple.Create(lowestVal,
    highestVal);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976627
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // Your code goes here\n        return null;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0002b] in <d14f47f0dafd4d3d9f11a4ba4e4ffc6b>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0002b] in <d14f47f0dafd4d3d9f11a4ba4e4ffc6b>:0
    \n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = (float)Math.Abs(numbers[0] - numbers[1]);\n
    \       Tuple<float, float> closestElements = Tuple.Create(numbers[0], numbers[1]);\n
    \       for (int i = 0; i < numbers.Count; i++) {\n            for (int j = i
    + 1; j < numbers.Count; j++) {\n                float distance = (float)Math.Abs(numbers[i]
    - numbers[j]);\n                if (distance < closest) {\n                    closest
    = distance;\n                    closestElements = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closestElements;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba7e30e42b684b1082f9e19a5ddf6296>:0
    \n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Tuple<float, float> c = null;\n        float d = float.MaxValue;\n
    \       for (int i = 0; i < numbers.Count - 1; i++) {\n            if (Math.Abs(numbers[i
    + 1] - numbers[i]) < d) {\n                d = Math.Abs(numbers[i + 1] - numbers[i]);\n
    \               c = Tuple.Create(numbers[i], numbers[i + 1]);\n            }\n
    \       }\n        return c;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1c0b6e9b55af49e2af16dba8e1ad9c50>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1c0b6e9b55af49e2af16dba8e1ad9c50>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976627
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // if only one number in the list, return that number\n        if
    (numbers.Count == 1) {\n            return Tuple.Create(numbers[0], numbers[0]);\n
    \       }\n\n        // if two numbers in the list, return those two\n        if
    (numbers.Count == 2) {\n            return Tuple.Create(numbers[0], numbers[1]);\n
    \       }\n\n        // sort the numbers, then the closest numbers will be adjacent\n
    \       numbers.Sort();\n\n        float closestDistance = float.MaxValue;\n        float
    firstElement = 0.0f;\n        float secondElement = 0.0f;\n\n        // find the
    smallest distance from the sorted list\n        for (int i = 0; i < numbers.Count
    - 1; i++) {\n            float distance = numbers[i + 1] - numbers[i];\n            if
    (distance < closestDistance) {\n                closestDistance = distance;\n
    \               firstElement = numbers[i];\n                secondElement = numbers[i
    + 1];\n            }\n        }\n\n        return Tuple.Create(firstElement, secondElement);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976627
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        var closest = new Tuple<float, float>(numbers[0], numbers[1]);\n
    \       var distance = Math.Abs(closest.Item1 - closest.Item2);\n        for (int
    i = 0; i < numbers.Count - 1; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                var abs = Math.Abs(numbers[i] - numbers[j]);\n                if
    (abs < distance) {\n                    closest = new Tuple<float, float>(numbers[i],
    numbers[j]);\n                    distance = abs;\n                }\n            }\n
    \       }\n        return closest;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1a1dd127ce9440d992d9d0ad7361e2c1>:0
    \n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float a = numbers[0];\n        float b = numbers[1];\n        float
    min = Math.Abs(b - a);\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[j]
    - numbers[i]);\n                if (diff < min) {\n                    min = diff;\n
    \                   a = numbers[i];\n                    b = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(a, b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af65a197ba3c4f36bb41df0571311b4b>:0
    \n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float lower = numbers[0];\n        float higher = numbers[1];\n
    \       float difference = Math.Abs(lower - higher);\n        for (int i = 0;
    i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float testDifference = Math.Abs(numbers[i] - numbers[j]);\n
    \               if (testDifference < difference) {\n                    lower
    = numbers[i];\n                    higher = numbers[j];\n                    difference
    = testDifference;\n                }\n            }\n        }\n        return
    Tuple.Create(lower, higher);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8e0af3dc91d741c4a6a1f02d315966d3>:0
    \n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closestDistance = float.MaxValue;\n        Tuple<float,
    float> closestNumbers = Tuple.Create((float)0, (float)0);\n        for (int i
    = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                if (numbers[i] != numbers[j]) {\n                    float
    distance = Math.Abs(numbers[i] - numbers[j]);\n                    if (distance
    < closestDistance) {\n                        closestDistance = distance;\n                        closestNumbers
    = Tuple.Create(numbers[i], numbers[j]);\n                    }\n                }\n
    \           }\n        }\n        return closestNumbers;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7efd0907030748178cae7eebc3b280a3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7efd0907030748178cae7eebc3b280a3>:0
    \n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Tuple<float, float> closestElements = null;\n        float
    closestDifference = float.MaxValue;\n        for (int i = 0; i < numbers.Count
    - 1; i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    difference = Math.Abs(numbers[i] - numbers[j]);\n                if (difference
    < closestDifference) {\n                    closestDifference = difference;\n
    \                   closestElements = Tuple.Create(Math.Min(numbers[i], numbers[j]),
    Math.Max(numbers[i], numbers[j]));\n                }\n            }\n        }\n
    \       return closestElements;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976627
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count < 2) {\n            return new Tuple<float,
    float>(0, 0);\n        }\n        var min = numbers[0];\n        var max = numbers[0];\n
    \       var min_diff = float.MaxValue;\n        var min_one = min;\n        var
    min_two = max;\n        foreach (var num in numbers) {\n            if (num <
    min) {\n                min = num;\n            }\n            if (num > max)
    {\n                max = num;\n            }\n            if (min_diff > max -
    min) {\n                min_diff = max - min;\n                min_one = min;\n
    \               min_two = max;\n            }\n        }\n        return new Tuple<float,
    float>(min_one, min_two);\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd62510fabf142868638cc3ca9bf0cad>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd62510fabf142868638cc3ca9bf0cad>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closestDifference = Math.Abs(numbers[0] - numbers[1]);\n
    \       Tuple<float, float> closestNumbers = Tuple.Create(numbers[0], numbers[1]);\n
    \       for (int i = 0; i < numbers.Count; i++) {\n            for (int j = i
    + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < closestDifference) {\n                    closestDifference
    = diff;\n                    closestNumbers = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closestNumbers;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <891a8d255fa547ce870e00f3a1bacce7>:0
    \n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Debug.Assert(numbers.Count >= 2);\n        var closest_difference
    = numbers[1] - numbers[0];\n        var closest_pair = Tuple.Create(numbers[0],
    numbers[1]);\n        for (var i = 0; i < numbers.Count - 1; i++) {\n            for
    (var j = i + 1; j < numbers.Count; j++) {\n                var difference = numbers[j]
    - numbers[i];\n                if (Math.Abs(difference) < Math.Abs(closest_difference))
    {\n                    closest_difference = difference;\n                    closest_pair
    = Tuple.Create(numbers[i], numbers[j]);\n                }\n            }\n        }\n
    \       return closest_pair;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5e9f9ba8f60142379bbd3e83965525e1>:0
    \n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = Math.Abs(numbers[0] - numbers[1]);\n        int
    minIndex = 0;\n        for (int i = 0; i < numbers.Count - 1; i++) {\n            float
    diff = Math.Abs(numbers[i] - numbers[i + 1]);\n            if (diff < closest)
    {\n                closest = diff;\n                minIndex = i;\n            }\n
    \       }\n        return Tuple.Create(numbers[minIndex], numbers[minIndex + 1]);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01905f2c66fa4abd9cb60b07fc193fee>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01905f2c66fa4abd9cb60b07fc193fee>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = 0;\n        float next = 0;\n        float
    small = numbers[0];\n        float large = numbers[0];\n        for (int i = 0;
    i < numbers.Count; i++) {\n            if (numbers[i] < small)\n                small
    = numbers[i];\n            if (numbers[i] > large)\n                large = numbers[i];\n
    \       }\n        closest = small;\n        next = large;\n        for (int i
    = 0; i < numbers.Count; i++) {\n            for (int j = 0; j < numbers.Count;
    j++) {\n                if (numbers[i] != numbers[j]) {\n                    if
    (Math.Abs(numbers[i] - numbers[j]) < Math.Abs(closest - next)) {\n                        closest
    = numbers[i];\n                        next = numbers[j];\n                    }\n
    \               }\n            }\n        }\n        return Tuple.Create(closest,
    next);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4625f515cace4e0eb14a9895e2658e65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4625f515cace4e0eb14a9895e2658e65>:0
    \n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closestDistance = float.MaxValue;\n        float small
    = numbers[0];\n        float large = numbers[1];\n        for (int i = 0; i <
    numbers.Count; i++) {\n            for (int j = i+1; j < numbers.Count; j++) {\n
    \               float distance = numbers[j] - numbers[i];\n                if
    (distance < closestDistance) {\n                    closestDistance = distance;\n
    \                   small = numbers[i];\n                    large = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(small,
    large);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <23cc5d3ea95a4edd82a42c4fda3efd1f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <23cc5d3ea95a4edd82a42c4fda3efd1f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count < 2) {\n            throw new ArgumentException(\"Invalid
    input list\");\n        }\n        float closest = float.MaxValue;\n        float
    first = 0.0f;\n        float second = 0.0f;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    curr = Math.Abs(numbers[i] - numbers[j]);\n                if (curr < closest)
    {\n                    closest = curr;\n                    first = numbers[i];\n
    \                   second = numbers[j];\n                }\n            }\n        }\n
    \       return Tuple.Create(first, second);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <067f4634a32448f0aa2b6fcb549afda3>:0
    \n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Debug.Assert(numbers.Count >= 2);\n        float diff = float.MaxValue;\n
    \       Tuple<float, float> closest = null;\n        foreach (var first in numbers)
    {\n            foreach (var second in numbers) {\n                if (second ==
    first) {\n                    continue;\n                }\n                float
    d = Math.Abs(first - second);\n                if (d < diff) {\n                    diff
    = d;\n                    closest = Tuple.Create(Math.Min(first, second), Math.Max(first,
    second));\n                }\n            }\n        }\n        return closest;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ffbbae10e13e4f9cac9268551bc69071>:0
    \n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Debug.Assert(numbers.Count >= 2);\n        float closestValue
    = float.MaxValue;\n        float closestElement1 = numbers[0];\n        float
    closestElement2 = numbers[1];\n        for (int i = 0; i < numbers.Count - 1;
    i++) {\n            float currentValue = numbers[i + 1] - numbers[i];\n            if
    (currentValue < closestValue) {\n                closestValue = currentValue;\n
    \               closestElement1 = numbers[i];\n                closestElement2
    = numbers[i + 1];\n            }\n        }\n        return Tuple.Create(closestElement1,
    closestElement2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <72f31f9da56344bb84ba3261b4083e29>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <72f31f9da56344bb84ba3261b4083e29>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float smallestDifference = Math.Abs(numbers[0] - numbers[1]);\n
    \       Tuple<float, float> closestNumbers = Tuple.Create(numbers[0], numbers[1]);\n
    \       for (int i = 0; i < numbers.Count - 1; i++) {\n            for (int j
    = i + 1; j < numbers.Count; j++) {\n                float difference = Math.Abs(numbers[i]
    - numbers[j]);\n                if (difference < smallestDifference) {\n                    smallestDifference
    = difference;\n                    closestNumbers = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closestNumbers;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <806158ea7ee64efd81b028e8f5c11635>:0
    \n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        Tuple<float, float>
    minPair = null;\n        numbers.Sort();\n        for (int i = 0; i < numbers.Count-1;
    i++) {\n            var diff = numbers[i+1] - numbers[i];\n            if (diff
    < minDiff) {\n                minDiff = diff;\n                minPair = Tuple.Create(numbers[i],
    numbers[i+1]);\n            }\n        }\n        return minPair;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // Calculate the difference between every pair of numbers,
    then find the minimum difference.\n        float minDifference = Math.Abs(numbers[0]
    - numbers[1]);\n        int minDifferenceIndex = 0;\n        for (int i = 1; i
    < numbers.Count - 1; i++) {\n            float difference = Math.Abs(numbers[i]
    - numbers[i + 1]);\n            if (difference < minDifference) {\n                minDifference
    = difference;\n                minDifferenceIndex = i;\n            }\n        }\n
    \       return Tuple.Create(numbers[minDifferenceIndex], numbers[minDifferenceIndex
    + 1]);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1903a65c2bbc49028c72c9a348955db0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1903a65c2bbc49028c72c9a348955db0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Tuple<float, float> answer = null;\n        if(numbers.Count
    < 2) {\n            Debug.Assert(false);\n            return answer;\n        }\n
    \       numbers.Sort();\n        float smallestDistance = (float)99999999.0f;\n
    \       float smallestDistanceSmall = 0.0f;\n        float smallestDistanceLarge
    = 0.0f;\n        for(int idx = 0; idx < numbers.Count - 1; idx++) {\n            float
    distance = numbers[idx + 1] - numbers[idx];\n            if(distance < smallestDistance)
    {\n                smallestDistance = distance;\n                smallestDistanceSmall
    = numbers[idx];\n                smallestDistanceLarge = numbers[idx + 1];\n            }\n
    \       }\n        return Tuple.Create(smallestDistanceSmall, smallestDistanceLarge);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float smallestDifference = float.MaxValue;\n        float
    number1 = numbers[0];\n        float number2 = numbers[1];\n        for (int i
    = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float difference = Math.Abs(numbers[i] - numbers[j]);\n
    \               if (difference < smallestDifference) {\n                    smallestDifference
    = difference;\n                    number1 = numbers[i];\n                    number2
    = numbers[j];\n                }\n            }\n        }\n        if (number1
    > number2) {\n            float tmp = number1;\n            number1 = number2;\n
    \           number2 = tmp;\n        }\n        return Tuple.Create(number1, number2);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // >>> FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n        //
    (Tuple.Create(2.0f, 2.2f))\n        // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \       // (Tuple.Create(2.0f, 2.0f))\n        // >>> FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f,
    (float)2.0f, (float)1.1f})))\n        // (Tuple.Create(1.0f, 1.1f))\n        float
    first = numbers[0];\n        float second = numbers[1];\n        float closest
    = (float)Math.Abs(first - second);\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = 0; j < numbers.Count; j++) {\n                if
    (i != j) {\n                    if (closest >= (float)Math.Abs(numbers[i] - numbers[j]))
    {\n                        closest = (float)Math.Abs(numbers[i] - numbers[j]);\n
    \                       first = numbers[i];\n                        second =
    numbers[j];\n                    }\n                }\n            }\n        }\n
    \       return Tuple.Create(first, second);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f529411d57af43da9d0478f87e16d740>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f529411d57af43da9d0478f87e16d740>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float distance = float.MaxValue;\n        Tuple<float, float>
    closest = null;\n        for (int i = 0; i < numbers.Count - 1; i++) {\n            float
    diff = Math.Abs(numbers[i] - numbers[i + 1]);\n            if (diff < distance)
    {\n                distance = diff;\n                closest = Tuple.Create(numbers[i],
    numbers[i + 1]);\n            }\n        }\n        return closest;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0a908ab3a5c24eba975f85ea6bcdd874>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0a908ab3a5c24eba975f85ea6bcdd874>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Tuple<float, float> closest = new Tuple<float, float>(numbers[0],
    numbers[1]);\n        float smallestDifference = Math.Abs(numbers[0] - numbers[1]);\n
    \       for (int i = 0; i < numbers.Count - 1; i++) {\n            for (int j
    = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < smallestDifference) {\n                    closest
    = new Tuple<float, float>(numbers[i], numbers[j]);\n                    smallestDifference
    = diff;\n                }\n            }\n        }\n        return closest;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <388653a8002a4b3aa1c7e6f03b923270>:0
    \n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float smallestDifference = float.MaxValue;\n        float
    smallestValue = float.MaxValue;\n        float largestValue = float.MinValue;\n
    \       // Loop through each number and for each number compare to each other
    number.\n        for (int i = 0; i < numbers.Count; i++) {\n            for (int
    j = 0; j < numbers.Count; j++) {\n                if (i != j) {\n                    //
    If the difference between the two numbers is smaller than the smallest difference
    that we have seen\n                    // so far, update the smallest difference.\n
    \                   if (Math.Abs(numbers[i] - numbers[j]) < smallestDifference)
    {\n                        smallestDifference = Math.Abs(numbers[i] - numbers[j]);\n
    \                       // If the first number is smaller than the second number,
    update the smallest value and largest value.\n                        if (numbers[i]
    < numbers[j]) {\n                            smallestValue = numbers[i];\n                            largestValue
    = numbers[j];\n                        }\n                        // If the second
    number is smaller than the first number, update the smallest value and largest
    value.\n                        else {\n                            smallestValue
    = numbers[j];\n                            largestValue = numbers[i];\n                        }\n
    \                   }\n                }\n            }\n        }\n        //
    Return the smallest value and largest value.\n        return Tuple.Create(smallestValue,
    largestValue);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count < 2) {\n            throw new ArgumentException(\"Expected
    numbers to be at least two.\", \"numbers\");\n        }\n        float closestDistance
    = float.MaxValue;\n        Tuple<float, float> closestElements = null;\n        //
    For each possible pair of elements, determine the distance between them.\n        for
    (int i = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float distance = numbers[i] - numbers[j];\n                if
    (distance < 0.0f) {\n                    distance = -distance;\n                }\n
    \               if (distance < closestDistance) {\n                    closestDistance
    = distance;\n                    closestElements = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closestElements;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b21994b922bc44418a3f75d01ab9f7d4>:0
    \n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // TODO: figure out how to do this without having to go through
    every combination...\n        float closest_difference = Math.Abs(numbers[0] -
    numbers[1]);\n        float number1 = numbers[0];\n        float number2 = numbers[1];\n
    \       for (int i = 0; i < numbers.Count; i++) {\n            for (int j = i
    + 1; j < numbers.Count; j++) {\n                float difference = Math.Abs(numbers[i]
    - numbers[j]);\n                if (difference < closest_difference) {\n                    closest_difference
    = difference;\n                    number1 = numbers[i];\n                    number2
    = numbers[j];\n                }\n            }\n        }\n        if (number1
    > number2) {\n            return Tuple.Create(number2, number1);\n        } else
    {\n            return Tuple.Create(number1, number2);\n        }\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Tuple<float, float> ret;\n        // Fill in your answer here.\n
    \       ret = new Tuple<float, float>(numbers[0], numbers[1]);\n        return
    ret;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5c5daedfc09a46d290c1207eeb0f2da6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5c5daedfc09a46d290c1207eeb0f2da6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count < 2) {\n            throw new ArgumentException(\"You
    must pass in a list of numbers with at least two elements.\");\n        }\n        float
    currentLowest = ((float)999.0f);\n        float currentLowestFirst = ((float)999.0f);\n
    \       float currentLowestSecond = ((float)999.0f);\n        for (int index_first
    = 0; (index_first < (numbers.Count - 1)); index_first++) {\n            for (int
    index_second = (index_first + 1); (index_second < numbers.Count); index_second++)
    {\n                float first = numbers[index_first];\n                float
    second = numbers[index_second];\n                float absoluteValueDifference
    = Math.Abs((first - second));\n                if ((absoluteValueDifference <
    currentLowest)) {\n                    currentLowest = absoluteValueDifference;\n
    \                   currentLowestFirst = first;\n                    currentLowestSecond
    = second;\n                }\n            }\n        }\n        return Tuple.Create(currentLowestFirst,
    currentLowestSecond);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4224fbc5eab749a8808e5bfc676272dc>:0
    \n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Debug.Assert(numbers.Count >= 2);\n        float closest =
    float.MaxValue;\n        float smallest = float.MaxValue;\n        float largest
    = float.MinValue;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float distance = numbers[i]
    - numbers[j];\n                if (Math.Abs(distance) < closest) {\n                    closest
    = Math.Abs(distance);\n                    smallest = Math.Min(numbers[i], numbers[j]);\n
    \                   largest = Math.Max(numbers[i], numbers[j]);\n                }\n
    \           }\n        }\n        return Tuple.Create(smallest, largest);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0002b] in <229ecc4cdad84d9880464797569e6667>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0002b] in <229ecc4cdad84d9880464797569e6667>:0
    \n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // Calculate difference between each pair of elements and
    return the min and its indexes in an array\n        float[] diffs = new float[numbers.Count
    - 1];\n        int[] idxs = new int[numbers.Count - 1];\n        for (int i =
    0; i < diffs.Length; i++) {\n            diffs[i] = numbers[i + 1] - numbers[i];\n
    \           idxs[i] = i;\n        }\n        Array.Sort(diffs, idxs);\n        return
    Tuple.Create(numbers[idxs[0]], numbers[idxs[0] + 1]);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c5f30cdb66124968996d01f138511d3f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c5f30cdb66124968996d01f138511d3f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count < 2) {\n            return new Tuple<float,
    float>(0.0f, 0.0f);\n        }\n        else {\n            float smallestDifference
    = float.MaxValue;\n            float firstValue = 0.0f;\n            float secondValue
    = 0.0f;\n            for (int i = 0; i < numbers.Count; i++) {\n                for
    (int j = i + 1; j < numbers.Count; j++) {\n                    if (Math.Abs(numbers[i]
    - numbers[j]) < smallestDifference) {\n                        smallestDifference
    = Math.Abs(numbers[i] - numbers[j]);\n                        firstValue = numbers[i];\n
    \                       secondValue = numbers[j];\n                    }\n                }\n
    \           }\n            return new Tuple<float, float>(firstValue, secondValue);\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3f2dbe54b9474a1397105aa2da993f9e>:0
    \n"
  stdout: ''
  timestamp: 1659976629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float result = 0.0f;\n        float min = Math.Abs(numbers[0]
    - numbers[1]);\n        int left = numbers[0] < numbers[1] ? 0 : 1;\n        int
    right = left == 0 ? 1 : 0;\n        for (int i = 2; i < numbers.Count; i++) {\n
    \           if (Math.Abs(numbers[i] - numbers[i - 1]) < min) {\n                min
    = Math.Abs(numbers[i] - numbers[i - 1]);\n                left = i - 1;\n                right
    = i;\n            }\n        }\n        return Tuple.Create(numbers[left], numbers[right]);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3f7094ba11614497b8f807a84cd94e2f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3f7094ba11614497b8f807a84cd94e2f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Tuple<float, float> closestElements = new Tuple<float, float>(numbers[0],
    numbers[1]);\n        float minimumDistance = Math.Abs(numbers[0] - numbers[1]);\n
    \       int length = numbers.Count;\n        if (length < 2) {\n            throw
    new System.ArgumentException(\"The numbers list must contain at least two elements.\");\n
    \       }\n        for (int i = 0; i < length; i++) {\n            for (int j
    = i + 1; j < length; j++) {\n                float distance = Math.Abs(numbers[i]
    - numbers[j]);\n                if (distance < minimumDistance) {\n                    minimumDistance
    = distance;\n                    closestElements = new Tuple<float, float>(numbers[i],
    numbers[j]);\n                }\n            }\n        }\n        return closestElements;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <45d275a79cda4b2897b751f83d772117>:0
    \n"
  stdout: ''
  timestamp: 1659976629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = Math.Abs(numbers[0] - numbers[1]);\n        Tuple<float,
    float> closestElements = Tuple.Create(numbers[0], numbers[1]);\n        for (int
    i = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float diff = Math.Abs(numbers[i] - numbers[j]);\n                if
    (diff < minDiff) {\n                    minDiff = diff;\n                    closestElements
    = Tuple.Create(numbers[i], numbers[j]);\n                }\n            }\n        }\n
    \       return closestElements;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6d966160b1f048a38aaa032939bc7325>:0
    \n"
  stdout: ''
  timestamp: 1659976629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float distance = float.MaxValue;\n        float min = float.MaxValue;\n
    \       float max = float.MinValue;\n        float n1 = float.MaxValue;\n        float
    n2 = float.MaxValue;\n        int lastCount = 0;\n        foreach (float f in
    numbers) {\n            if (lastCount == 0) {\n                n1 = f;\n                lastCount
    = 1;\n            } else if (lastCount == 1) {\n                n2 = f;\n                float
    newDistance = Math.Abs(n1 - n2);\n                if (newDistance < distance)
    {\n                    distance = newDistance;\n                    min = Math.Min(n1,
    n2);\n                    max = Math.Max(n1, n2);\n                }\n                lastCount
    = 2;\n            } else {\n                n1 = n2;\n                n2 = f;\n
    \               float newDistance = Math.Abs(n1 - n2);\n                if (newDistance
    < distance) {\n                    distance = newDistance;\n                    min
    = Math.Min(n1, n2);\n                    max = Math.Max(n1, n2);\n                }\n
    \           }\n        }\n        return Tuple.Create(min, max);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7471106177ff4a76a8f1e84742cbfb91>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7471106177ff4a76a8f1e84742cbfb91>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // We solve this by going through the numbers in ascending
    order and using a cached smaller number and a\n        // cached closer difference.
    \ We also keep an eye out for identical numbers (they are very close to each\n
    \       // other) and we keep them if they are the closest at the time.\n        float
    smaller = float.NaN;\n        float closer = float.PositiveInfinity;\n        float
    a = float.NaN;\n        float b = float.NaN;\n        foreach (float number in
    numbers) {\n            if (float.IsNaN(smaller)) {\n                smaller =
    number;\n            } else {\n                float difference = number - smaller;\n
    \               if (Math.Abs(difference) < closer) {\n                    closer
    = Math.Abs(difference);\n                    a = smaller;\n                    b
    = number;\n                }\n                if (difference == 0) {\n                    a
    = number;\n                    b = number;\n                }\n                smaller
    = number;\n            }\n        }\n        return (Tuple.Create(a, b));\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f2b23dc3bff04c9989012ddce58ef4ef>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f2b23dc3bff04c9989012ddce58ef4ef>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976629
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // Implement the function here.\n        return null;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0002b] in <8779763627ae40e6a86038a671e9776a>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0002b] in <8779763627ae40e6a86038a671e9776a>:0
    \n"
  stdout: ''
  timestamp: 1659976629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Debug.Assert(numbers.Count >= 2);\n        if (numbers.Count
    < 2) {\n            // at least two elements are required\n            return
    null;\n        }\n        float first = numbers[0];\n        float second = numbers[1];\n
    \       float min = second - first;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = numbers[j] - numbers[i];\n                if (diff < min) {\n                    first
    = numbers[i];\n                    second = numbers[j];\n                    min
    = diff;\n                }\n            }\n        }\n        return Tuple.Create(first,
    second);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cb04e96a91094d20a64b1011c35a7c4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cb04e96a91094d20a64b1011c35a7c4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count < 2)\n            throw new ArgumentException(\"numbers
    must have at least two elements\");\n        numbers.Sort();\n        float min
    = numbers[0];\n        float max = numbers[1];\n        float delta = max - min;\n
    \       for (int i = 2; i < numbers.Count; i++) {\n            float d = numbers[i]
    - numbers[i - 1];\n            if (d < delta) {\n                delta = d;\n
    \               min = numbers[i - 1];\n                max = numbers[i];\n            }\n
    \       }\n        return Tuple.Create(min, max);\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count < 2)\n            throw new ArgumentException(\"List
    of numbers must contain at least two items\");\n        numbers.Sort();\n        float
    closestDifference = float.MaxValue;\n        Tuple<float, float> closestNumbers
    = null;\n        for (int i = 0; i < numbers.Count - 1; i++) {\n            float
    currentDifference = numbers[i + 1] - numbers[i];\n            if (currentDifference
    < closestDifference) {\n                closestDifference = currentDifference;\n
    \               closestNumbers = Tuple.Create(numbers[i], numbers[i + 1]);\n            }\n
    \       }\n        return closestNumbers;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        var tuple = Tuple.Create((float)0.0f, (float)0.0f);\n        float
    closestDistance = float.MaxValue;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i+1; j < numbers.Count; j++) {\n                var
    left = numbers[i];\n                var right = numbers[j];\n                var
    distance = Math.Abs(left - right);\n                if (distance < closestDistance)
    {\n                    tuple = Tuple.Create(left, right);\n                    closestDistance
    = distance;\n                }\n            }\n        }\n        return tuple;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <25ff61d1bb814833a0824b51ac2928d8>:0
    \n"
  stdout: ''
  timestamp: 1659976629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = numbers[0];\n        float secondClosest =
    numbers[1];\n        if (Math.Abs(numbers[0] - numbers[1]) < Math.Abs(closest
    - secondClosest)) {\n            closest = numbers[0];\n            secondClosest
    = numbers[1];\n        }\n        for (int i = 0; i < numbers.Count; i++) {\n
    \           for (int j = i + 1; j < numbers.Count; j++) {\n                if
    (Math.Abs(numbers[i] - numbers[j]) < Math.Abs(closest - secondClosest)) {\n                    closest
    = numbers[i];\n                    secondClosest = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(closest, secondClosest);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <27f4b05e8d0046f69c06b4c675ab845c>:0
    \n"
  stdout: ''
  timestamp: 1659976629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count < 2) {\n            throw new Exception(\"The
    list must contain at least two elements\");\n        }\n        float bestDifference
    = (float)float.MaxValue;\n        Tuple<float, float> result = null;\n        for
    (int i = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float diff = numbers[i] - numbers[j];\n                if
    (diff < 0) {\n                    diff = -diff;\n                }\n                if
    (diff < bestDifference) {\n                    bestDifference = diff;\n                    result
    = Tuple.Create(numbers[i], numbers[j]);\n                }\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d2ff06ccec114d92b5ad839edb93c3f6>:0
    \n"
  stdout: ''
  timestamp: 1659976629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Tuple<float, float> pair = null;\n        float distance =
    Math.Abs(numbers[0] - numbers[1]);\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    d = Math.Abs(numbers[i] - numbers[j]);\n                if (d < distance) {\n
    \                   distance = d;\n                    pair = Tuple.Create(numbers[i],
    numbers[j]);\n                }\n            }\n        }\n        return pair;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e160c77077054a6eb4e0f6c923df8a6d>:0
    \n"
  stdout: ''
  timestamp: 1659976629
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // Write your code here\n        throw new NotImplementedException();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation
    is not implemented.\n  at Problem.Main (System.String[] args) [0x00017] in <9aa3eceda9024c3c9017f6040f21a1d8>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method
    or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00017]
    in <9aa3eceda9024c3c9017f6040f21a1d8>:0 \n"
  stdout: ''
  timestamp: 1659976629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // Create a new list of sorted values.\n        List<float>
    sortedNumbers = new List<float>(numbers);\n        sortedNumbers.Sort();\n        //
    Find the closest numbers by iterating over the sorted list of numbers.\n        float
    minDifference = Math.Abs(sortedNumbers[0] - sortedNumbers[1]);\n        float
    minA = sortedNumbers[0];\n        float minB = sortedNumbers[1];\n        for
    (int i = 1; i < sortedNumbers.Count - 1; i++) {\n            float difference
    = Math.Abs(sortedNumbers[i] - sortedNumbers[i + 1]);\n            if (difference
    < minDifference) {\n                minDifference = difference;\n                minA
    = sortedNumbers[i];\n                minB = sortedNumbers[i + 1];\n            }\n
    \       }\n        return Tuple.Create(minA, minB);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float diff = float.MaxValue;\n        Tuple<float, float>
    ret = null;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float d = Math.Abs(numbers[i]
    - numbers[j]);\n                if (d < diff) {\n                    diff = d;\n
    \                   ret = Tuple.Create(numbers[i], numbers[j]);\n                }\n
    \           }\n        }\n        return ret;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39df671757d949258a09f09748456e6d>:0
    \n"
  stdout: ''
  timestamp: 1659976629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float last = numbers[0];\n        float distance = float.MaxValue;\n
    \       float result1 = last;\n        float result2 = numbers[1];\n        for
    (int i = 1; i < numbers.Count; i++) {\n            if (Math.Abs(numbers[i] - last)
    < distance) {\n                distance = Math.Abs(numbers[i] - last);\n                result1
    = last;\n                result2 = numbers[i];\n            }\n            last
    = numbers[i];\n        }\n        return Tuple.Create(result1, result2);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e5d7b1911ad04988b772720dd025cf52>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e5d7b1911ad04988b772720dd025cf52>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count < 2) { throw new ArgumentException(\"`numbers`
    must contain at least two elements\"); }\n        float minDiff = float.MaxValue;\n
    \       float best1 = float.MaxValue;\n        float best2 = float.MaxValue;\n
    \       for (int i = 0; i < numbers.Count; i++) {\n            for (int j = i
    + 1; j < numbers.Count; j++) {\n                float diff = numbers[j] - numbers[i];\n
    \               if (diff < minDiff) {\n                    minDiff = diff;\n                    best1
    = numbers[i];\n                    best2 = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(best1, best2);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d849958034c0459d999af20eaf8e4660>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d849958034c0459d999af20eaf8e4660>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Tuple<float, float> closest = new Tuple<float, float>(numbers[0],
    numbers[1]);\n        float diff = Math.Abs(closest.Item1 - closest.Item2);\n
    \       for (int i = 0; i < numbers.Count - 1; i++) {\n            for (int j
    = i + 1; j < numbers.Count; j++) {\n                float currentDiff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (currentDiff < diff) {\n                    closest
    = new Tuple<float, float>(numbers[i], numbers[j]);\n                    diff =
    currentDiff;\n                }\n            }\n        }\n        return closest;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <98a7d53e9de349a0be8a41dbfd4c0f03>:0
    \n"
  stdout: ''
  timestamp: 1659976629
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        int minIdx;\n        float minDist;\n        for (int i =
    0; i < numbers.Count; i++) {\n            float closest = numbers[i];\n            float
    next = numbers[i + 1];\n            float min = Math.Abs(closest - next);\n            if
    (minIdx < min) {\n                minIdx = i;\n                minDist = min;\n
    \           }\n        }\n        return Tuple.Create(numbers[minIdx], numbers[minIdx
    + 1]);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5zz9ztn3.cs(22,17): error CS0165: Use of unassigned local variable ''minIdx''

    '
  timestamp: 1659976629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Debug.Assert(numbers.Count >= 2);\n        float smallestDistance
    = float.MaxValue;\n        Tuple<float, float> result = null;\n        // For
    each number in the list, compare it to every other number and store the smallest
    difference as the\n        // smallest distance. Store the pair as the result.\n
    \       for (int i = 0; i < numbers.Count; i++) {\n            for (int j = i
    + 1; j < numbers.Count; j++) {\n                float distance = Math.Abs(numbers[i]
    - numbers[j]);\n                if (distance < smallestDistance) {\n                    smallestDistance
    = distance;\n                    result = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <561bc3d000564f2f98ed52cb4868e56a>:0
    \n"
  stdout: ''
  timestamp: 1659976629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Debug.Assert(numbers.Count >= 2);\n        float closestDistance
    = float.MaxValue;\n        float closestNum1 = 0f;\n        float closestNum2
    = 0f;\n        for (int i = 0; i < numbers.Count - 1; i++) {\n            float
    num1 = numbers[i];\n            float num2 = numbers[i + 1];\n            float
    distance = num2 - num1;\n            if (distance < closestDistance) {\n                closestDistance
    = distance;\n                closestNum1 = num1;\n                closestNum2
    = num2;\n            }\n        }\n        return Tuple.Create(closestNum1, closestNum2);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1eb217ac975c415391fe76dbc1accbd3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1eb217ac975c415391fe76dbc1accbd3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976630
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // Sort the numbers\n        numbers.Sort();\n        // Find
    the closest two numbers\n        float diff = float.MaxValue;\n        Tuple<float,
    float> closest = null;\n        for (int i = 0; i < numbers.Count - 1; i++) {\n
    \           float local_diff = numbers[i + 1] - numbers[i];\n            if (local_diff
    < diff) {\n                diff = local_diff;\n                closest = Tuple.Create(numbers[i],
    numbers[i + 1]);\n            }\n        }\n        return closest;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Debug.Assert(numbers.Count > 1);\n        float\n            closest_difference
    = Math.Abs(numbers[0] - numbers[1]),\n            first_number = numbers[0],\n
    \           second_number = numbers[1];\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float\n
    \                   difference = Math.Abs(numbers[i] - numbers[j]);\n                if
    (difference < closest_difference) {\n                    closest_difference =
    difference;\n                    first_number = numbers[i];\n                    second_number
    = numbers[j];\n                }\n            }\n        }\n        return (Tuple.Create(Math.Min(first_number,
    second_number), Math.Max(first_number, second_number)));\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976630
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Debug.Assert(numbers.Count > 1);\n        int i;\n        float
    low = numbers[0];\n        float high = numbers[1];\n        float distance =
    high - low;\n        for (i = 1; i < numbers.Count; i++) {\n            float
    x = numbers[i];\n            low = x;\n            int j;\n            for (j
    = i + 1; j < numbers.Count; j++) {\n                float y = numbers[j];\n                float
    d = y - x;\n                if (d < distance) {\n                    distance
    = d;\n                    low = x;\n                    high = y;\n                }\n
    \           }\n        }\n        return Tuple.Create(low, high);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe08e2b6db944a729993a16e857a997c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe08e2b6db944a729993a16e857a997c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976630
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        var closest = Tuple.Create(float.PositiveInfinity, float.PositiveInfinity);\n
    \       for (int i = 0; i < numbers.Count; i++) {\n            var fst = numbers[i];\n
    \           for (int j = i + 1; j < numbers.Count; j++) {\n                var
    snd = numbers[j];\n                var dif = Math.Abs(fst - snd);\n                if
    (dif < Math.Abs(closest.Item1 - closest.Item2)) {\n                    closest
    = Tuple.Create(fst, snd);\n                }\n            }\n        }\n        return
    closest;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eb56954b13d44092a94585717d0bb56b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eb56954b13d44092a94585717d0bb56b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976630
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if(numbers.Count < 2) {\n            throw new Exception(\"Must
    supply list of at least two numbers\");\n        }\n        float smallestDifference
    = float.MaxValue;\n        Tuple<float, float> closestNumbers = null;\n        for(int
    i = 0; i < numbers.Count; i++) {\n            for(int j = i + 1; j < numbers.Count;
    j++) {\n                float x = numbers[i];\n                float y = numbers[j];\n
    \               float difference = Math.Abs(x - y);\n                if(difference
    < smallestDifference) {\n                    closestNumbers = Tuple.Create(x,
    y);\n                    smallestDifference = difference;\n                }\n
    \           }\n        }\n        return closestNumbers;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7b839856549c4cd5a07cb0bb441089d6>:0
    \n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float x = 0.0f;\n        float y = 0.0f;\n        float dist
    = float.MaxValue;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float current = Math.Abs(numbers[i]
    - numbers[j]);\n                if (current < dist) {\n                    dist
    = current;\n                    x = numbers[i];\n                    y = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(x, y);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7d8a86e1dcf24e1f85c6b3a2451c4b20>:0
    \n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // Start with the first and second elements\n        float
    bestLower = numbers[0];\n        float bestUpper = numbers[1];\n        float
    bestDelta = float.MaxValue;\n\n        for (int i = 0; i < numbers.Count - 1;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    delta = Math.Abs(numbers[i] - numbers[j]);\n                if (delta < bestDelta)
    {\n                    bestLower = numbers[i];\n                    bestUpper
    = numbers[j];\n                    bestDelta = delta;\n                }\n            }\n
    \       }\n\n        if (bestLower > bestUpper) {\n            float temp = bestLower;\n
    \           bestLower = bestUpper;\n            bestUpper = temp;\n        }\n\n
    \       return Tuple.Create(bestLower, bestUpper);\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976630
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = numbers[0];\n        int num1 = 0;\n        int
    num2 = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i+1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < closest) {\n                    closest
    = diff;\n                    num1 = i;\n                    num2 = j;\n                }\n
    \           }\n        }\n        float[] smallest = numbers.ToArray();\n        Array.Sort(smallest);\n
    \       float num_smaller = Math.Min(smallest[num1], smallest[num2]);\n        float
    num_larger = Math.Max(smallest[num1], smallest[num2]);\n        return Tuple.Create(num_smaller,
    num_larger);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <336f164942cd4387887777f1fcdc590e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <336f164942cd4387887777f1fcdc590e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976630
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float smallest_difference = float.MaxValue;\n        Tuple<float,
    float> closest_pair = Tuple.Create(0.0f, 0.0f);\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    difference = Math.Abs(numbers[i] - numbers[j]);\n                if (difference
    < smallest_difference) {\n                    closest_pair = Tuple.Create(numbers[i],
    numbers[j]);\n                    smallest_difference = difference;\n                }\n
    \           }\n        }\n        return closest_pair;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <42b0e3ec19524fe9a3df10c86a9326e2>:0
    \n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count < 2) {\n            throw new System.ArgumentException(\"numbers
    must have at least two elements\");\n        }\n        numbers.Sort();\n        Tuple<float,
    float> closest = new Tuple<float, float>(numbers[0], numbers[1]);\n        float
    delta = Math.Abs(closest.Item1 - closest.Item2);\n        for (int i = 1; i <
    numbers.Count - 1; i++) {\n            Tuple<float, float> new_closest = new Tuple<float,
    float>(numbers[i], numbers[i + 1]);\n            float new_delta = Math.Abs(new_closest.Item1
    - new_closest.Item2);\n            if (new_delta < delta) {\n                closest
    = new_closest;\n                delta = new_delta;\n            }\n        }\n
    \       return closest;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976630
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // create a list of index,number tuples\n        List<Tuple<int,
    float>> tuples = new List<Tuple<int, float>>();\n        for (int index = 0; index
    < numbers.Count; index++) {\n            tuples.Add(Tuple.Create(index, numbers[index]));\n
    \       }\n        // sort the list of tuples\n        tuples.Sort((a, b) => a.Item2.CompareTo(b.Item2));\n
    \       // debug print\n        for (int i = 0; i < tuples.Count; i++) {\n            System.Console.WriteLine(tuples[i].Item1
    + \": \" + tuples[i].Item2);\n        }\n        // find the smallest number difference\n
    \       float minDiff = float.MaxValue;\n        int minIndex = -1;\n        for
    (int i = 0; i < tuples.Count - 1; i++) {\n            if (tuples[i + 1].Item2
    - tuples[i].Item2 < minDiff) {\n                minDiff = tuples[i + 1].Item2
    - tuples[i].Item2;\n                minIndex = i;\n            }\n        }\n
    \       // return the smallest number and the smallest number greater than it.\n
    \       return Tuple.Create(tuples[minIndex].Item2, tuples[minIndex + 1].Item2);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: '0: 1

    1: 2

    5: 2.2

    2: 3.9

    3: 4

    4: 5

    0: 1

    1: 2

    3: 4

    4: 5

    2: 5.9

    0: 1

    1: 2

    5: 2.2

    2: 3

    3: 4

    4: 5

    0: 1

    1: 2

    5: 2

    2: 3

    3: 4

    4: 5

    0: 1.1

    1: 2.2

    2: 3.1

    3: 4.1

    4: 5.1

    '
  timestamp: 1659976630
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // Given a list of numbers find the two elements that are
    closest to each other and return them in order.\n        float min_diff = (float)1e20f;\n
    \       float element_1 = (float)0.0f;\n        float element_2 = (float)0.0f;\n
    \       for (int i = 0; i < numbers.Count(); i++) {\n            for (int j =
    i + 1; j < numbers.Count(); j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < min_diff) {\n                    min_diff
    = diff;\n                    element_1 = numbers[i];\n                    element_2
    = numbers[j];\n                }\n            }\n        }\n        // Return
    the two closest elements in ascending order.\n        if (element_1 > element_2)
    {\n            float tmp = element_1;\n            element_1 = element_2;\n            element_2
    = tmp;\n        }\n        return Tuple.Create(element_1, element_2);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976630
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        Tuple<float, float>
    minTuple = null;\n        for (int i = 0; i < numbers.Count - 1; i++) {\n            float
    a = numbers[i];\n            float b = numbers[i + 1];\n            float diff
    = b - a;\n            if (diff < minDiff) {\n                minDiff = diff;\n
    \               minTuple = Tuple.Create(a, b);\n            }\n        }\n        return
    minTuple;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e4b50a90737433aae7951c1153d4c98>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e4b50a90737433aae7951c1153d4c98>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float smallestDifference = float.MaxValue;\n        Tuple<float,
    float> closestNumbers = null;\n        for (int i = 0; i < numbers.Count(); i++)
    {\n            float smallestNumber = numbers[i];\n            float smallestNumberIndex
    = i;\n            for (int j = i + 1; j < numbers.Count(); j++) {\n                float
    difference = Math.Abs(numbers[j] - smallestNumber);\n                if (difference
    < smallestDifference) {\n                    smallestDifference = difference;\n
    \                   closestNumbers = Tuple.Create(numbers[smallestNumberIndex],
    numbers[j]);\n                }\n            }\n        }\n        return closestNumbers;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5lwgm2_b.cs(25,59): error CS1503: Argument 1: cannot convert from ''float''
    to ''int''

    '
  timestamp: 1659976630
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // First, sort the numbers.\n        numbers.Sort();\n        //
    Initialize the variables that will hold the closest two numbers.\n        float
    currentFirstNum = numbers[0];\n        float currentSecondNum = numbers[1];\n
    \       // Initialize the value that holds the current distance between the closest
    two numbers.\n        float currentDistance = Math.Abs(currentFirstNum - currentSecondNum);\n
    \       // Now look at the pairwise combinations of numbers.\n        for (int
    i = 0; i < numbers.Count - 1; i++) {\n            // Calculate the distance between
    the two numbers.\n            float distance = Math.Abs(numbers[i] - numbers[i
    + 1]);\n            // If the distance is closer than the current distance, update
    the variables that hold the closest numbers.\n            if (distance < currentDistance)
    {\n                currentFirstNum = numbers[i];\n                currentSecondNum
    = numbers[i + 1];\n                currentDistance = distance;\n            }\n
    \       }\n        // We have the current pair of closest numbers. Check if there
    are other pairs of numbers that are equal in\n        // distance.\n        //
    Initialize the value that will hold the final first number and the value that
    will hold the final second\n        // number.\n        float finalFirstNum =
    currentFirstNum;\n        float finalSecondNum = currentSecondNum;\n        //
    Iterate through the pairs of numbers.\n        for (int i = 0; i < numbers.Count
    - 1; i++) {\n            // Calculate the distance between the two numbers.\n
    \           float distance = Math.Abs(numbers[i] - numbers[i + 1]);\n            //
    If the distance is equal to the current distance, update the variables that hold
    the numbers.\n            if (distance == currentDistance) {\n                finalFirstNum
    = numbers[i];\n                finalSecondNum = numbers[i + 1];\n            }\n
    \       }\n        // The final pair of closest numbers was found. Return it.\n
    \       return Tuple.Create(finalFirstNum, finalSecondNum);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976630
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        int NumberLength = numbers.Count;\n        if (NumberLength
    < 2)\n            throw new ArgumentException(\"Less than two numbers supplied\");\n
    \       // Minimum difference found thus far\n        float MinDiff = numbers[1]
    - numbers[0];\n        // Resulting numbers found\n        float MinDiffElement1
    = numbers[0];\n        float MinDiffElement2 = numbers[1];\n        // Check all
    pairs of numbers to find minimum distance\n        for (int FirstIndex = 0; FirstIndex
    < NumberLength; FirstIndex++) {\n            for (int SecondIndex = FirstIndex
    + 1; SecondIndex < NumberLength; SecondIndex++) {\n                float Element1
    = numbers[FirstIndex];\n                float Element2 = numbers[SecondIndex];\n
    \               float Difference = Math.Abs(Element1 - Element2);\n                if
    (Difference < MinDiff) {\n                    MinDiff = Difference;\n                    if
    (Element1 < Element2) {\n                        MinDiffElement1 = Element1;\n
    \                       MinDiffElement2 = Element2;\n                    } else
    {\n                        MinDiffElement1 = Element2;\n                        MinDiffElement2
    = Element1;\n                    }\n                }\n            }\n        }\n
    \       return Tuple.Create(MinDiffElement1, MinDiffElement2);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        int i = 0;\n        int j = 1;\n        float minDistance
    = numbers[j] - numbers[i];\n        for (i = 0; i < numbers.Count; i++) {\n            for
    (j = i + 1; j < numbers.Count; j++) {\n                if (numbers[j] - numbers[i]
    < minDistance) {\n                    minDistance = numbers[j] - numbers[i];\n
    \               }\n            }\n        }\n        return Tuple.Create(numbers[i],
    numbers[j]);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.FindClosestElements
    (System.Collections.Generic.List`1[T] numbers) [0x00071] in <23ee960d31bb494c9821f5a95799cb10>:0
    \n  at Problem.Main (System.String[] args) [0x00017] in <23ee960d31bb494c9821f5a95799cb10>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.FindClosestElements
    (System.Collections.Generic.List`1[T] numbers) [0x00071] in <23ee960d31bb494c9821f5a95799cb10>:0
    \n  at Problem.Main (System.String[] args) [0x00017] in <23ee960d31bb494c9821f5a95799cb10>:0
    \n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float d = numbers[0] - numbers[1];\n        float n1 = numbers[0];\n
    \       float n2 = numbers[1];\n        foreach (float n1_ in numbers) {\n            foreach
    (float n2_ in numbers) {\n                if (n1_ != n2_) {\n                    float
    d_ = n1_ - n2_;\n                    if (Math.Abs(d_) < Math.Abs(d)) {\n                        d
    = d_;\n                        n1 = n1_;\n                        n2 = n2_;\n
    \                   }\n                }\n            }\n        }\n        if
    (n1 > n2) {\n            return Tuple.Create(n2, n1);\n        } else {\n            return
    Tuple.Create(n1, n2);\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8e7b9ff045874549879452dcf8a999b9>:0
    \n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float value1 = 0.0f;\n        float value2 = 0.0f;\n        float
    distance = float.MaxValue;\n        float difference = 0.0f;\n        float first
    = 0.0f;\n        float second = 0.0f;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            first = numbers[i];\n            for (int j = 0; j < numbers.Count;
    j++) {\n                second = numbers[j];\n                if (i != j) {\n
    \                   difference = Math.Abs(first - second);\n                    if
    (difference < distance) {\n                        value1 = first;\n                        value2
    = second;\n                        distance = difference;\n                    }\n
    \               }\n            }\n        }\n        if (value1 > value2) {\n
    \           first = value1;\n            value1 = value2;\n            value2
    = first;\n        }\n        return Tuple.Create(value1, value2);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976630
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float[] distances = new float[numbers.Count - 1];\n        for
    (int i = 0; i < numbers.Count - 1; i++) {\n            distances[i] = numbers[i
    + 1] - numbers[i];\n        }\n        float minDistance = distances.Min();\n
    \       int firstMinIndex = Array.IndexOf(distances, minDistance);\n        int
    secondMinIndex = firstMinIndex + 1;\n        float firstMinNumber = numbers[firstMinIndex];\n
    \       float secondMinNumber = numbers[secondMinIndex];\n        return Tuple.Create(firstMinNumber,
    secondMinNumber);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9e3777f63423449e81a5024287747494>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9e3777f63423449e81a5024287747494>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976630
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Tuple<float, float> closest_pair = null;\n        float closest_distance
    = float.MaxValue;\n        for (int index = 0; index < numbers.Count; index++)
    {\n            float value = numbers[index];\n            for (int index2 = index
    + 1; index2 < numbers.Count; index2++) {\n                float value2 = numbers[index2];\n
    \               float distance = Math.Abs(value - value2);\n                if
    (distance < closest_distance) {\n                    closest_distance = distance;\n
    \                   closest_pair = Tuple.Create(Math.Min(value, value2), Math.Max(value,
    value2));\n                }\n            }\n        }\n        return closest_pair;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976630
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        numbers.Sort();\n        float closest = float.MaxValue;\n
    \       float last = numbers[0];\n        float a = 0;\n        float b = 0;\n
    \       for (int i = 1; i < numbers.Count; i++) {\n            float number =
    numbers[i];\n            float diff = number - last;\n            if (diff < closest)
    {\n                closest = diff;\n                a = last;\n                b
    = number;\n            }\n            last = number;\n        }\n        return
    Tuple.Create(a, b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976630
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float min1 = float.MaxValue;\n        float min2 = float.MaxValue;\n
    \       float diff = float.MaxValue;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    d = Math.Abs(numbers[i] - numbers[j]);\n                if (d < diff) {\n                    min1
    = numbers[i];\n                    min2 = numbers[j];\n                    diff
    = d;\n                }\n            }\n        }\n        if (min1 > min2) {\n
    \           float temp = min1;\n            min1 = min2;\n            min2 = temp;\n
    \       }\n        return Tuple.Create(min1, min2);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976630
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float distance = (float)10000.0f;\n        Tuple<float, float>
    result = Tuple.Create((float)0.0f, (float)0.0f);\n        int maxIndex = numbers.Count()
    - 1;\n        for (int i = 0; i < maxIndex; i++) {\n            for (int j = i
    + 1; j <= maxIndex; j++) {\n                float possibleDistance = Math.Abs(numbers[i]
    - numbers[j]);\n                if (possibleDistance < distance) {\n                    distance
    = possibleDistance;\n                    if (numbers[i] < numbers[j]) {\n                        result
    = Tuple.Create(numbers[i], numbers[j]);\n                    } else {\n                        result
    = Tuple.Create(numbers[j], numbers[i]);\n                    }\n                }\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // In the first implementation we will naively create a list
    of all possible pairs of numbers and then return\n        // the pair with the
    lowest absolute difference.\n        // What is the time complexity of this algorithm?\n
    \       // It could be argued that it takes O(n^2) time to create the list of
    all possible pairs.\n        // Later on we will discuss the time complexity of
    this in more detail.\n        // Once we have the list of all possible pairs we
    then iterate over the list to find the pair with the lowest\n        // absolute
    difference. This takes O(n^2) time. Therefore the overall time complexity is O(n^2).\n
    \       // What is the space complexity of this algorithm?\n        // It takes
    O(n^2) space to create the list of all possible pairs.\n        // Later on we
    will discuss the space complexity of this in more detail.\n        // Once we
    have the list of all possible pairs we then iterate over the list to find the
    pair with the lowest\n        // absolute difference. This takes O(1) space. Therefore
    the overall space complexity is O(n^2).\n        // Note that we could make this
    algorithm return the best pair in O(n) time and O(1) space by keeping track of\n
    \       // the current best pair as we create the list of all possible pairs.
    This is a common performance optimization\n        // trick.\n        List<Tuple<float,
    float>> pairs = new List<Tuple<float, float>>();\n        for (int i = 0; i <
    numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count; j++)
    {\n                pairs.Add(Tuple.Create(numbers[i], numbers[j]));\n            }\n
    \       }\n        float minDifference = float.MaxValue;\n        int minDifferenceIndex
    = -1;\n        for (int i = 0; i < pairs.Count; i++) {\n            float difference
    = Math.Abs(pairs[i].Item1 - pairs[i].Item2);\n            if (difference < minDifference)
    {\n                minDifference = difference;\n                minDifferenceIndex
    = i;\n            }\n        }\n        return Tuple.Create(pairs[minDifferenceIndex].Item1,
    pairs\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpy0a8yemc.cs(46,67): error CS1026: ) expected

    /tmp/tmpy0a8yemc.cs(46,67): error CS1002: ; expected

    '
  timestamp: 1659976630
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float distance = float.MaxValue;\n        float[] closest
    = new float[2];\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float localDistance
    = Math.Abs(numbers[i] - numbers[j]);\n                if (localDistance < distance)
    {\n                    distance = localDistance;\n                    closest[0]
    = numbers[i];\n                    closest[1] = numbers[j];\n                }\n
    \           }\n        }\n        if (closest[0] > closest[1]) {\n            return
    Tuple.Create(closest[1], closest[0]);\n        } else {\n            return Tuple.Create(closest[0],
    closest[1]);\n        }\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        int n = numbers.Count;\n        float minDistance = float.MaxValue;\n
    \       Tuple<float, float> closest = null;\n        for (int i = 0; i < n; i++)
    {\n            for (int j = i + 1; j < n; j++) {\n                float dist =
    Math.Abs(numbers[i] - numbers[j]);\n                if (dist < minDistance) {\n
    \                   minDistance = dist;\n                    closest = Tuple.Create(numbers[i],
    numbers[j]);\n                }\n            }\n        }\n        return closest;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f168da28021946dd8becd23c1451a521>:0
    \n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDist = float.MaxValue;\n        Tuple<float, float>
    minPair = null;\n        // For every pair of numbers, compute their distance.
    Keep the closest pair.\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float dist = Math.Abs(numbers[i]
    - numbers[j]);\n                if (dist < minDist) {\n                    minDist
    = dist;\n                    minPair = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return minPair;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dfbdb9837b2247f0bae2edcc0cd13529>:0
    \n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        int closestI = -1;\n
    \       for (int i = 0; i < numbers.Count; i++) {\n            for (int j = i
    + 1; j < numbers.Count; j++) {\n                float dist = Math.Abs(numbers[i]
    - numbers[j]);\n                if (dist < closest) {\n                    closest
    = dist;\n                    closestI = i;\n                }\n            }\n
    \       }\n        return Tuple.Create(numbers[closestI], numbers[closestI + 1]);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <addd04d2e7494da883d37ed4e24f42bd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <addd04d2e7494da883d37ed4e24f42bd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minX = 0.0f;\n
    \       float minY = 0.0f;\n        // Try all combinations of two numbers in
    the list\n        for (int i = 0; i < numbers.Count; i++) {\n            for (int
    j = i + 1; j < numbers.Count; j++) {\n                // Check if the difference
    between the two numbers is a new minimum\n                float diff = numbers[i]
    - numbers[j];\n                if (diff < 0) {\n                    diff = -diff;\n
    \               }\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    minX = numbers[i];\n                    minY = numbers[j];\n
    \               }\n            }\n        }\n        return (Tuple.Create(minX,
    minY));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9d1d5445549c426abe4647161521c014>:0
    \n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count < 2) {\n            return Tuple.Create((float)0.0f,
    (float)0.0f);\n        }\n        float closestSoFar = float.MaxValue;\n        Tuple<float,
    float> closestElements = Tuple.Create((float)0.0f, (float)0.0f);\n        for
    (int i = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float delta = numbers[i] - numbers[j];\n                if
    (delta < 0) {\n                    delta = -delta;\n                }\n                if
    (delta < closestSoFar) {\n                    closestSoFar = delta;\n                    closestElements
    = Tuple.Create(numbers[i], numbers[j]);\n                }\n            }\n        }\n
    \       return closestElements;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <df7af6aef8b44214a359f4e5fa5ae90a>:0
    \n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count < 2) {\n            throw new ArgumentException(\"The
    list of numbers must contain at least two numbers.\");\n        }\n        numbers.Sort();\n
    \       if (numbers.Count == 2) {\n            return Tuple.Create(numbers[0],
    numbers[1]);\n        }\n        // Since the list is now sorted, the numbers
    will be in sequential order, with the gap between them getting\n        // bigger
    as they get further apart. Therefore, the closest numbers to each other must be
    adjacent to each\n        // other in the sorted list. We can iterate through
    the sorted list to find these.\n        float smallestDifference = float.MaxValue;\n
    \       Tuple<float, float> closest = null;\n        for (int i = 0; i < numbers.Count
    - 1; i++) {\n            float difference = numbers[i + 1] - numbers[i];\n            if
    (difference < smallestDifference) {\n                smallestDifference = difference;\n
    \               closest = Tuple.Create(numbers[i], numbers[i + 1]);\n            }\n
    \       }\n        return closest;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        var closestPair = Tuple.Create((float)0, (float)0);\n        float
    closestDistance = float.MaxValue;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                var
    dist = Math.Abs(numbers[i] - numbers[j]);\n                if (dist < closestDistance)
    {\n                    closestDistance = dist;\n                    closestPair
    = Tuple.Create(numbers[i], numbers[j]);\n                }\n            }\n        }\n
    \       return closestPair;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <30efc86fde2544bab0347a765432378d>:0
    \n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDistance = float.MaxValue;\n        float[] closest
    = new float[2];\n        for (int first = 0; first < numbers.Count; first++) {\n
    \           for (int second = first + 1; second < numbers.Count; second++) {\n
    \               float distance = Math.Abs(numbers[first] - numbers[second]);\n
    \               if (distance < minDistance) {\n                    minDistance
    = distance;\n                    closest[0] = numbers[first];\n                    closest[1]
    = numbers[second];\n                }\n            }\n        }\n        Array.Sort(closest);\n
    \       return new Tuple<float, float>(closest[0], closest[1]);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        var minDist = Math.Abs(numbers[0] - numbers[1]);\n        var
    minPair = Tuple.Create(numbers[0], numbers[1]);\n        for (var i = 0; i < numbers.Count
    - 1; i++) {\n            for (var j = i + 1; j < numbers.Count; j++) {\n                var
    dist = Math.Abs(numbers[i] - numbers[j]);\n                if (dist < minDist)
    {\n                    minDist = dist;\n                    minPair = Tuple.Create(numbers[i],
    numbers[j]);\n                }\n            }\n        }\n        return minPair;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c117cc5a56e344f79677324b37f792cf>:0
    \n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // >>> numbers.Select(((x) => Math.Abs(x - numbers[0]))).Skip(1).Min()\n
    \       // 1.0\n        // >>> numbers.Select(((x) => Math.Abs(x - numbers[0]))).Skip(1).Min(((x)
    => Math.Abs(x - numbers[0])))\n        // 1.0\n        var element_one = numbers[0];\n
    \       var element_two = numbers.Select(((x) => Math.Abs(x - element_one))).Skip(1).Min(((x)
    => Math.Abs(x - element_one)));\n        // >>> (from x in numbers select Math.Abs(x
    - element_one)).Skip(1).Min(((x) => Math.Abs(x - element_one)))\n        // 1.0\n
    \       // >>> (from x in numbers select x).Skip(1).Min(((x) => Math.Abs(x - element_one)))\n
    \       // 2.0\n        // >>> Math.Abs(numbers.Select(((x) => Math.Abs(x - element_one))).Skip(1).Min(((x)
    => Math.Abs(x - element_one))) - element_one)\n        // 1.0\n        // >>>
    numbers.Select(((x) => Math.Abs(x - element_one))).Skip(1).Min(((x) => Math.Abs(x
    - element_one)))\n        // 1.0\n        // >>> numbers.Select(((x) => Math.Abs(x
    - element_one))).Skip(1).Min(((x) => Math.Abs(x - element_one)))\n        // 1.0\n
    \       // >>> numbers.Skip(1).Min(((x) => Math.Abs(x - element_one)))\n        //
    2.0\n        // >>> Math.Abs(numbers.Skip(1).Min(((x) => Math.Abs(x - element_one)))
    - element_one)\n        // 1.0\n        // >>> Math.Abs(numbers.Select(((x) =>
    Math.Abs(x - element_one))).Skip(1).Min(((x) => Math.Abs(x - element_one))) -
    element_one\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptp9mg4pn.cs(15,39): error CS0161: ''Problem.FindClosestElements(List<float>)'':
    not all code paths return a value

    '
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float smallestDifference = float.MaxValue;\n        float
    firstNumber = float.NaN;\n        float secondNumber = float.NaN;\n        for
    (int i = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float difference = Math.Abs(numbers[i] - numbers[j]);\n
    \               if (difference < smallestDifference) {\n                    smallestDifference
    = difference;\n                    firstNumber = numbers[i];\n                    secondNumber
    = numbers[j];\n                }\n            }\n        }\n        return Tuple.Create(firstNumber,
    secondNumber);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b76bb2ef6ba8449982bf301f2fe8e4a3>:0
    \n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count < 2) {\n            return null;\n        }\n
    \       numbers.Sort();\n        float smallestDifference = numbers[numbers.Count
    - 1] - numbers[0];\n        Tuple<float, float> tuple = new Tuple<float, float>(numbers[0],
    numbers[numbers.Count - 1]);\n        for (int i = 0; i < numbers.Count - 1; i++)
    {\n            float newDifference = numbers[i + 1] - numbers[i];\n            if
    (newDifference < smallestDifference) {\n                smallestDifference = newDifference;\n
    \               tuple = new Tuple<float, float>(numbers[i], numbers[i + 1]);\n
    \           }\n        }\n        return tuple;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Tuple<float, float> closestElements = null;\n        float
    closestDifference = float.MaxValue;\n        for (int i = 0; i < numbers.Count
    - 1; i++) {\n            float difference = numbers[i + 1] - numbers[i];\n            if
    (difference < closestDifference) {\n                closestDifference = difference;\n
    \               closestElements = Tuple.Create(numbers[i], numbers[i + 1]);\n
    \           }\n        }\n        return closestElements;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1dc65699cf1a400e92642c07401b609a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1dc65699cf1a400e92642c07401b609a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // The elements in numbers are guaranteed to be sorted ascending.\n
    \       var closest = numbers[0];\n        var closest2 = numbers[1];\n        var
    closestDistance = Math.Abs(closest - closest2);\n        for (var i = 0; i < numbers.Count
    - 1; i++) {\n            var n1 = numbers[i];\n            var n2 = numbers[i
    + 1];\n            var distance = Math.Abs(n1 - n2);\n            if (distance
    < closestDistance) {\n                closest = n1;\n                closest2
    = n2;\n                closestDistance = distance;\n            }\n        }\n
    \       return Tuple.Create(closest, closest2);\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2250c92088734cf49ad674b5eac1153f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2250c92088734cf49ad674b5eac1153f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        var min_diff = float.MaxValue;\n        var min_tuple = Tuple.Create(float.MaxValue,
    float.MaxValue);\n        for (var n = 0; n < numbers.Count; n++) {\n            for
    (var m = n + 1; m < numbers.Count; m++) {\n                var diff = Math.Abs(numbers[n]
    - numbers[m]);\n                if (diff < min_diff) {\n                    min_diff
    = diff;\n                    if (numbers[n] < numbers[m]) {\n                        min_tuple
    = Tuple.Create(numbers[n], numbers[m]);\n                    } else {\n                        min_tuple
    = Tuple.Create(numbers[m], numbers[n]);\n                    }\n                }\n
    \           }\n        }\n        return min_tuple;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count < 2) {\n            throw new ArgumentException(\"The
    number of supplied elements must be at least two.\");\n        }\n\n        float?
    closestDistance = null;\n        float? firstValue = null;\n        float? secondValue
    = null;\n\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float curDistance =
    Math.Abs(numbers[i] - numbers[j]);\n                if (!closestDistance.HasValue
    || curDistance < closestDistance.Value) {\n                    closestDistance
    = curDistance;\n                    firstValue = numbers[i];\n                    secondValue
    = numbers[j];\n                }\n            }\n        }\n\n        return Tuple.Create(firstValue.Value,
    secondValue.Value);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b98505df2e6e4145926ada7a9bafa139>:0
    \n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiff1 =
    -1;\n        float minDiff2 = -1;\n        numbers.Sort();\n        for (int i
    = 0; i < numbers.Count - 1; i++) {\n            float diff = numbers[i + 1] -
    numbers[i];\n            if (diff < minDiff) {\n                minDiff = diff;\n
    \               minDiff1 = numbers[i];\n                minDiff2 = numbers[i +
    1];\n            }\n        }\n        return Tuple.Create(minDiff1, minDiff2);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float dist = (float)999999999.0f;\n        Tuple<float, float>
    bestPair = null;\n        for (int idx1 = 0; idx1 < numbers.Count - 1; idx1++)
    {\n            for (int idx2 = idx1 + 1; idx2 < numbers.Count; idx2++) {\n                float
    d = numbers[idx1] - numbers[idx2];\n                if (d < 0) {\n                    d
    = -d;\n                }\n                if (d < dist) {\n                    dist
    = d;\n                    bestPair = Tuple.Create(numbers[idx1], numbers[idx2]);\n
    \               }\n            }\n        }\n        return bestPair;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6694e9964109469ab765a6b19f1bb845>:0
    \n"
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float min = float.MaxValue;\n        float val1 = 0.0f;\n
    \       float val2 = 0.0f;\n        for (int i = 0; i < numbers.Count - 1; i++)
    {\n            float v1 = numbers[i];\n            float v2 = numbers[i + 1];\n
    \           float dist = v2 - v1;\n            if (dist < min) {\n                min
    = dist;\n                val1 = v1;\n                val2 = v2;\n            }\n
    \       }\n        return (Tuple.Create(val1, val2));\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ddeb7384177542988c8f93964c9b7790>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ddeb7384177542988c8f93964c9b7790>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closestDifference = float.MaxValue;\n        float closestA
    = numbers[0];\n        float closestB = numbers[1];\n        for (int i = 0; i
    < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count; j++)
    {\n                float difference = Math.Abs(numbers[i] - numbers[j]);\n                if
    (difference < closestDifference) {\n                    closestDifference = difference;\n
    \                   closestA = numbers[i];\n                    closestB = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(closestA,
    closestB);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ebe9f55ca24547169f783f18ce265453>:0
    \n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // Write a solution here\n        return Tuple.Create((float)
    0.0f, (float) 0.0f);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <97f31d139ba2466ab33c260344cf52f2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <97f31d139ba2466ab33c260344cf52f2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // find two closest numbers, output tuple of (one, other)\n
    \       Tuple<float, float> closest = Tuple.Create(numbers[0], numbers[1]);\n
    \       for (int i = 0; i < numbers.Count - 1; i++) {\n            for (int j
    = i + 1; j < numbers.Count; j++) {\n                Tuple<float, float> c = Tuple.Create(numbers[i],
    numbers[j]);\n                if (ClosestToSmaller(c, closest)) {\n                    closest
    = c;\n                }\n            }\n        }\n        return closest;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx1r0w2rj.cs(21,21): error CS0103: The name ''ClosestToSmaller'' does not
    exist in the current context

    '
  timestamp: 1659976631
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float min_diff = (float)1e20;\n        float min_a = (float)0.0f;\n
    \       float min_b = (float)0.0f;\n        for (int index = 0; index < numbers.Count;
    index++) {\n            float a = numbers[index];\n            for (int index2
    = index + 1; index2 < numbers.Count; index2++) {\n                float b = numbers[index2];\n
    \               float diff = b - a;\n                if (diff < min_diff) {\n
    \                   min_diff = diff;\n                    min_a = a;\n                    min_b
    = b;\n                }\n            }\n        }\n        if (min_a > min_b)
    {\n            float temp = min_a;\n            min_a = min_b;\n            min_b
    = temp;\n        }\n        return Tuple.Create(min_a, min_b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <45aa8e157ab640ee8d52bcd55cb07987>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <45aa8e157ab640ee8d52bcd55cb07987>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDistance = float.MaxValue;\n        Tuple<float,
    float> minElements = Tuple.Create(numbers[0], numbers[1]);\n        for (int i
    = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float dist = numbers[j] - numbers[i];\n                if
    (dist < minDistance) {\n                    minDistance = dist;\n                    minElements
    = Tuple.Create(numbers[i], numbers[j]);\n                }\n            }\n        }\n
    \       return minElements;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <48a78a03b21e4a9b94d31cec4480194a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <48a78a03b21e4a9b94d31cec4480194a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float min_diff = numbers[1] - numbers[0];\n        float min_num1
    = numbers[0];\n        float min_num2 = numbers[1];\n        for (int i = 1; i
    < numbers.Count; i++) {\n            float diff = numbers[i] - numbers[i - 1];\n
    \           if (diff < min_diff) {\n                min_diff = diff;\n                min_num1
    = numbers[i - 1];\n                min_num2 = numbers[i];\n            }\n        }\n
    \       return Tuple.Create(min_num1, min_num2);\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <461a64e6165842c9a109f7b13daf0bb9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <461a64e6165842c9a109f7b13daf0bb9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // Sorted list of the numbers.\n        List<float> sorted
    = numbers.OrderBy(x => x).ToList();\n        // Closest distance.\n        float
    closestDistance = Math.Abs(sorted[0] - sorted[1]);\n        // Closest pair.\n
    \       Tuple<float, float> closestPair = Tuple.Create(sorted[0], sorted[1]);\n
    \       // For each pair of sorted numbers...\n        for (int idx1 = 0; idx1
    < sorted.Count - 1; idx1++) {\n            for (int idx2 = idx1 + 1; idx2 < sorted.Count;
    idx2++) {\n                // Distance between the two numbers.\n                float
    distance = Math.Abs(sorted[idx1] - sorted[idx2]);\n                // If this
    is closer than the current closest...\n                if (distance < closestDistance)
    {\n                    // Set the closest distance to the new closer distance.\n
    \                   closestDistance = distance;\n                    // Set the
    closest pair to the new closer pair.\n                    closestPair = Tuple.Create(sorted[idx1],
    sorted[idx2]);\n                }\n            }\n        }\n        // Return
    the closest pair.\n        return closestPair;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float smaller = 0;\n        float larger = float.MaxValue;\n
    \       if (numbers.Count < 2)\n            throw new ArgumentException(\"numbers\");\n
    \       float closestDiff = float.MaxValue;\n        for (int i = 0; i < numbers.Count
    - 1; i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closestDiff)
    {\n                    closestDiff = diff;\n                    smaller = numbers[i];\n
    \                   larger = numbers[j];\n                }\n            }\n        }\n
    \       return Tuple.Create(smaller, larger);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5612fbd5e2f8405ea0888e8d38479498>:0
    \n"
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count == 0) {\n            throw new ArgumentException(\"Must
    supply at least two numbers\");\n        }\n        float minDiff = float.MaxValue;\n
    \       float minNum1 = float.MinValue;\n        float minNum2 = float.MinValue;\n
    \       for (int idx = 0; idx < numbers.Count - 1; idx++) {\n            float
    num1 = numbers[idx];\n            float num2 = numbers[idx + 1];\n            float
    diff = num2 - num1;\n            if (diff < minDiff) {\n                minDiff
    = diff;\n                minNum1 = num1;\n                minNum2 = num2;\n            }\n
    \       }\n        return Tuple.Create(minNum1, minNum2);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <24011778f20644578da798539cb42b05>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <24011778f20644578da798539cb42b05>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count == 0)\n            throw new Exception(\"numbers
    must have at least one entry\");\n        if (numbers.Count == 1)\n            throw
    new Exception(\"numbers must have at least two entries\");\n        // If the
    list is sorted we can easily find the two closest numbers by just keeping track
    of the closest number\n        // so far and then looking at the previous, current,
    and next number in the list.\n        // sort numbers\n        numbers.Sort();\n
    \       // For convenience, lets make the first two elements in numbers our previous
    and current numbers.\n        float previous = numbers[0];\n        float current
    = numbers[1];\n        // Keep track of the closest numbers so far.\n        float
    closestDistance = Math.Abs(current - previous);\n        float left = previous;\n
    \       float right = current;\n        // Now iterate over the rest of the list
    except for the last number.\n        for (int i = 2; i < numbers.Count; i++) {\n
    \           // We need a temp variable for previous and we need to set previous
    to current.\n            float tempPrevious = previous;\n            previous
    = current;\n            // Now we can set current to the next number in the list.\n
    \           current = numbers[i];\n            // Get the distance between the
    numbers.\n            float distance = Math.Abs(current - previous);\n            //
    If the distance is smaller than the distance so far, update closestDistance and
    left and right.\n            if (distance < closestDistance) {\n                closestDistance
    = distance;\n                left = previous;\n                right = current;\n
    \           }\n            // Now get the distance between the previous and the
    temp previous.\n            distance = Math.Abs(previous - tempPrevious);\n            //
    If the distance is smaller than the distance so far, update closestDistance and
    left and right.\n            if (distance < closestDistance) {\n                closestDistance
    = distance;\n                left = tempPrevious;\n                right = previous;\n
    \           }\n        }\n        // All done, return the results.\n        return
    Tuple.Create(left, right);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // Your code goes here.\n        return new Tuple<float, float>(0.0f,
    0.0f);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <46fbc3bddf84451980394ec0c2281bb1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <46fbc3bddf84451980394ec0c2281bb1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // Edge cases: empty list or single-element list.\n        if
    (numbers.Count <= 1) {\n            return new Tuple<float, float>(0.0f, 0.0f);\n
    \       }\n        // Populate the min and max values, initialising to the first
    two elements.\n        float min = Math.Min(numbers[0], numbers[1]);\n        float
    max = Math.Max(numbers[0], numbers[1]);\n        // Find the min and max by iterating
    over the list.\n        foreach (float n in numbers) {\n            if (n < min)
    {\n                min = n;\n            }\n            if (n > max) {\n                max
    = n;\n            }\n        }\n        // Now we have the min and max, populate
    the minimum difference.\n        float minDiff = Math.Abs(max - min);\n        //
    Now loop over the list again, but not the two elements we've already checked.\n
    \       for (int i = 0; i < numbers.Count; i++) {\n            for (int j = i
    + 1; j < numbers.Count; j++) {\n                // Don't use the same element
    for i and j.\n                if (i == j) {\n                    continue;\n                }\n
    \               // Check the distance between these elements.\n                float
    a = numbers[i];\n                float b = numbers[j];\n                float
    diff = Math.Abs(a - b);\n                // If this difference is less than the
    previous smallest difference, then update minDiff and min and max.\n                if
    (diff < minDiff) {\n                    minDiff = diff;\n                    min
    = Math.Min(a, b);\n                    max = Math.Max(a, b);\n                }\n
    \           }\n        }\n        // Return the closest elements.\n        return
    new Tuple<float, float>(min, max);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Debug.Assert(numbers.Count > 1);\n        float distance =
    float.MaxValue;\n        Tuple<float, float> closest;\n        List<float> sortedNumbers
    = numbers.OrderBy(x => x).ToList();\n        for (int i = 0; i < sortedNumbers.Count
    - 1; i++) {\n            float currentDistance = sortedNumbers[i + 1] - sortedNumbers[i];\n
    \           if (currentDistance < distance) {\n                distance = currentDistance;\n
    \               closest = Tuple.Create(sortedNumbers[i], sortedNumbers[i + 1]);\n
    \           }\n        }\n        return closest;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8h880c_h.cs(27,16): error CS0165: Use of unassigned local variable ''closest''

    '
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Tuple<float, float> ret = null;\n        float distance =
    float.MaxValue;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float newDistance =
    Math.Abs(numbers[i] - numbers[j]);\n                if (newDistance < distance)
    {\n                    distance = newDistance;\n                    ret = Tuple.Create(numbers[i],
    numbers[j]);\n                }\n            }\n        }\n        return ret;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <13bc66f7ce2948cea90afb85d4d0ff78>:0
    \n"
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // Initialize to the smallest possible difference.\n        float
    closestDifference = numbers[0] - numbers[1];\n        // Initialize the closest
    elements to the first two elements in the list.\n        float closestSmaller
    = numbers[0];\n        float closestLarger = numbers[1];\n        // For each
    number in the list of numbers.\n        for (int i = 0; i < numbers.Count; i++)
    {\n            // For each number in the list of numbers, except the one we just
    used in the outer loop.\n            for (int j = 0; j < numbers.Count; j++) {\n
    \               // If both loops are referencing the same element of the list
    then skip the inner loop iteration.\n                if (i == j) {\n                    continue;\n
    \               }\n                // If the difference between the two numbers
    is smaller than the current smallest difference.\n                if (Math.Abs(numbers[i]
    - numbers[j]) < closestDifference) {\n                    // Set the new smallest
    difference.\n                    closestDifference = Math.Abs(numbers[i] - numbers[j]);\n
    \                   // Set the new closest numbers.\n                    closestSmaller
    = numbers[i];\n                    closestLarger = numbers[j];\n                }\n
    \           }\n        }\n        // Return the results.\n        return Tuple.Create(closestSmaller,
    closestLarger);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4823b222eeba4754bcb794c04c1aa12e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4823b222eeba4754bcb794c04c1aa12e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count < 2) {\n            throw new Exception(\"At
    least two numbers are required to find closest elements.\");\n        }\n        numbers.Sort();\n
    \       float smallestDistance = float.MaxValue;\n        float left = numbers[0];\n
    \       float right = numbers[1];\n        for (int i = 0; i < numbers.Count -
    1; i++) {\n            if (Math.Abs(numbers[i] - numbers[i + 1]) < smallestDistance)
    {\n                smallestDistance = Math.Abs(numbers[i] - numbers[i + 1]);\n
    \               left = numbers[i];\n                right = numbers[i + 1];\n
    \           }\n        }\n        return Tuple.Create(left, right);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        int count = numbers.Count;\n        Debug.Assert(count >=
    2);\n        float smallest_difference = float.MaxValue;\n        Tuple<float,
    float> closest_elements = null;\n        for (int i = 0; i < count; i++) {\n            for
    (int j = i + 1; j < count; j++) {\n                float difference = Math.Abs(numbers[i]
    - numbers[j]);\n                if (difference < smallest_difference) {\n                    smallest_difference
    = difference;\n                    closest_elements = Tuple.Create(numbers[i],
    numbers[j]);\n                }\n            }\n        }\n        return closest_elements;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3ff124d532754685aa5bb548be9856d1>:0
    \n"
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count <= 1) {\n            throw new ArgumentException(\"numbers.Count
    must be greater than 1\");\n        }\n\n        // We will be finding the minimum
    difference between numbers.  This difference is measured as the absolute value\n
    \       // of the difference between the two numbers, and if this minimum difference
    is zero we will be returning the\n        // two numbers that were closest to
    each other.  Otherwise, if the minimum difference is non-zero we will be\n        //
    returning the two numbers that were closest to each other, but not exactly equal
    to each other.  We will\n        // be comparing all pairs of numbers in the list.\n
    \       //\n        // If a minimum difference has been found, we will be storing
    it in 'difference' and the two numbers which\n        // when subtracted from
    each other produced the minimum difference in 'min_number' and 'max_number'.\n
    \       float difference = float.MaxValue;\n        float min_number = float.MinValue;\n
    \       float max_number = float.MaxValue;\n\n        // For each number in the
    list of numbers...\n        foreach (float number in numbers) {\n            //
    ...find the number that is the closest to it...\n            float other_number
    = numbers.Min(n => Math.Abs(n - number));\n\n            // ...and if it is closer
    than the minimum difference that has been found, make that difference the new\n
    \           // minimum difference, and store the two numbers which when subtracted
    from each other produced this\n            // minimum difference.\n            if
    (Math.Abs(other_number - number) < difference) {\n                difference =
    Math.Abs(other_number - number);\n                min_number = number < other_number
    ? number : other_number;\n                max_number = number > other_number ?
    number : other_number;\n            }\n        }\n\n        // Return the two
    numbers which when subtracted from each other produced the minimum difference.\n
    \       return Tuple.Create(min_number, max_number);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2185964925314a39a7950c12c1173ff1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2185964925314a39a7950c12c1173ff1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        throw new NotImplementedException();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation
    is not implemented.\n  at Problem.Main (System.String[] args) [0x00017] in <8965c4f9861b47cab6e838f37ace3590>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method
    or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00017]
    in <8965c4f9861b47cab6e838f37ace3590>:0 \n"
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = 0;\n        float closestTwo = 0;\n        numbers.Sort();\n
    \       for (int i = 0; i < numbers.Count-1; i++) {\n            if (closest ==
    0) {\n                closest = numbers[i + 1] - numbers[i];\n                closestTwo
    = numbers[i + 1];\n            }\n            else if (numbers[i + 1] - numbers[i]
    < closest) {\n                closest = numbers[i + 1] - numbers[i];\n                closestTwo
    = numbers[i + 1];\n            }\n        }\n        for (int i = 0; i < numbers.Count
    - 1; i++) {\n            if (numbers[i + 1] - numbers[i] == closest) {\n                if
    (numbers[i + 1] == closestTwo) {\n                    return Tuple.Create(numbers[i],
    numbers[i + 1]);\n                }\n            }\n        }\n        return
    Tuple.Create(0f, 0f);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c604d783b4374fef8ad61a9d6311058e>:0
    \n"
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDistance = float.MaxValue;\n        Tuple<float,
    float> closest = null;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float distance = Math.Abs(numbers[i]
    - numbers[j]);\n                if (distance < minDistance) {\n                    minDistance
    = distance;\n                    closest = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closest;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6880e2d73028445e812ae40344c09c46>:0
    \n"
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float min = Math.Abs(numbers[0] - numbers[1]);\n        Tuple<float,
    float> ret = Tuple.Create(numbers[0], numbers[1]);\n        for (int i = 0; i
    < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count; j++)
    {\n                float diff = Math.Abs(numbers[i] - numbers[j]);\n                if
    (diff < min) {\n                    min = diff;\n                    ret = Tuple.Create(numbers[i],
    numbers[j]);\n                }\n            }\n        }\n        return ret;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d95351d620b24b75a347cf4a7af878a9>:0
    \n"
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Tuple<float, float> closestPair = new Tuple<float, float>(numbers[0],
    numbers[1]);\n        float smallestDistance = Math.Abs(numbers[0] - numbers[1]);\n
    \       for (int i = 0; i < numbers.Count - 1; i++) {\n            for (int j
    = i + 1; j < numbers.Count; j++) {\n                float distance = Math.Abs(numbers[i]
    - numbers[j]);\n                if (distance < smallestDistance) {\n                    closestPair
    = new Tuple<float, float>(numbers[i], numbers[j]);\n                    smallestDistance
    = distance;\n                }\n            }\n        }\n        return closestPair;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <70d9aaa9734e48a48afb794e38274729>:0
    \n"
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // This solution will use a 2D matrix, where the first column
    is the number and the second column\n        // is the difference between that
    number and the number before it. This is then sorted by the second\n        //
    column and we return the last two items in the list - the lowest two, which are
    also the two closest\n        // numbers.\n        // [n|d]\n        // [3|1]\n
    \       // [1|2]\n        // [2|-1]\n        // [4|1]\n        // [5|1]\n        List<List<float>>
    matrix = new List<List<float>>();\n        for (int i = 0; i < numbers.Count;
    i++) {\n            List<float> row = new List<float>();\n            if (i ==
    0) {\n                row.Add(numbers[i]);\n                row.Add(0);\n            }
    else {\n                row.Add(numbers[i]);\n                row.Add(numbers[i]
    - numbers[i - 1]);\n            }\n            matrix.Add(row);\n        }\n        matrix.Sort((c1,
    c2) => c1[1].CompareTo(c2[1]));\n        int count = matrix.Count;\n        return
    Tuple.Create(matrix[count - 2][0], matrix[count - 1][0]);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9066120c85074ccc9598160ee0e66a27>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9066120c85074ccc9598160ee0e66a27>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = Single.MaxValue;\n        float left = -1.0f;\n
    \       float right = -1.0f;\n        for (int i = 0; i < numbers.Count - 1; i++)
    {\n            float diff = Math.Abs(numbers[i] - numbers[i + 1]);\n            if
    (diff < closest) {\n                closest = diff;\n                left = numbers[i];\n
    \               right = numbers[i + 1];\n            }\n        }\n        return
    (Tuple.Create(left, right));\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32afb791e9c0442fa2431bff44e8c0da>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32afb791e9c0442fa2431bff44e8c0da>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float min = (float)9999999999999.9f;\n        float minA =
    0.0f;\n        float minB = 0.0f;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    distance = Math.Abs(numbers[i] - numbers[j]);\n                if (distance <
    min) {\n                    min = distance;\n                    minA = numbers[i];\n
    \                   minB = numbers[j];\n                }\n            }\n        }\n
    \       return Tuple.Create(minA, minB);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <55a881d5563347f49396e9928c265880>:0
    \n"
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count < 2) {\n            throw new Exception(\"You
    need at least two values to compare\");\n        }\n        var first = numbers[0];\n
    \       var second = numbers[1];\n        var smallest_delta = Math.Abs(first
    - second);\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                var delta = Math.Abs(numbers[i]
    - numbers[j]);\n                if (delta < smallest_delta) {\n                    first
    = numbers[i];\n                    second = numbers[j];\n                    smallest_delta
    = delta;\n                }\n            }\n        }\n        return Tuple.Create(first,
    second);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <859c1187ab654bd28758bce87a5c6a97>:0
    \n"
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        var result = Tuple.Create((float)1.0f, (float)2.0f);\n        float
    minDelta = Math.Abs(numbers[0] - numbers[1]);\n        for (int i = 0; i < numbers.Count
    - 1; i++) {\n            float delta = Math.Abs(numbers[i] - numbers[i + 1]);\n
    \           if (delta < minDelta) {\n                minDelta = delta;\n                result
    = Tuple.Create(numbers[i], numbers[i + 1]);\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3aa747259db343f6adad80881b46ddf4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3aa747259db343f6adad80881b46ddf4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // You fill this in!\n        return new Tuple<float, float>(0.0f,
    0.0f);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <64df807dc8ed453a84ab19c492b31db0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <64df807dc8ed453a84ab19c492b31db0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closestDifference = float.MaxValue;\n        float firstNumber
    = 0f;\n        float secondNumber = 0f;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    difference = Math.Abs(numbers[i] - numbers[j]);\n                if (difference
    < closestDifference) {\n                    closestDifference = difference;\n
    \                   firstNumber = numbers[i];\n                    secondNumber
    = numbers[j];\n                }\n            }\n        }\n        return Tuple.Create(firstNumber,
    secondNumber);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d970ae1ff5a5496db58ae77fd8c5a443>:0
    \n"
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        int count = numbers.Count;\n        float maxDelta = float.MinValue;\n
    \       int maxDeltaIndex = -1;\n        for (int i = 0; i < count - 1; i++) {\n
    \           float delta = numbers[i + 1] - numbers[i];\n            if (delta
    > maxDelta) {\n                maxDelta = delta;\n                maxDeltaIndex
    = i;\n            }\n        }\n        return Tuple.Create(numbers[maxDeltaIndex],
    numbers[maxDeltaIndex + 1]);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b4dd62898e84c0fb2ec23c7a7494c8a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b4dd62898e84c0fb2ec23c7a7494c8a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Debug.Assert(numbers.Count >= 2);\n        var current_closest_tuple
    = Tuple.Create(numbers[0], numbers[1]);\n        for (int i = 0; i < numbers.Count
    - 1; i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                var
    new_tuple = Tuple.Create(numbers[i], numbers[j]);\n                if (Math.Abs(new_tuple.Item1
    - new_tuple.Item2) < Math.Abs(current_closest_tuple.Item1 - current_closest_tuple.Item2))
    {\n                    current_closest_tuple = new_tuple;\n                }\n
    \           }\n        }\n        return current_closest_tuple;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d59f2ba360fd4e9d940022dc4dce7359>:0
    \n"
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float smallestDifference = float.MaxValue;\n        float
    smallestFirst = float.MaxValue;\n        float smallestSecond = float.MaxValue;\n
    \       float currentNumber = float.MaxValue;\n        for (int i = 0; i < numbers.Count;
    i += 1) {\n            currentNumber = numbers[i];\n            for (int j = i
    + 1; j < numbers.Count; j += 1) {\n                float currentDifference = Math.Abs(currentNumber
    - numbers[j]);\n                if (currentDifference < smallestDifference) {\n
    \                   smallestDifference = currentDifference;\n                    smallestFirst
    = Math.Min(currentNumber, numbers[j]);\n                    smallestSecond = Math.Max(currentNumber,
    numbers[j]);\n                }\n            }\n        }\n        return Tuple.Create(smallestFirst,
    smallestSecond);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976633
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        throw new NotImplementedException();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation
    is not implemented.\n  at Problem.Main (System.String[] args) [0x00017] in <8965c4f9861b47cab6e838f37ace3590>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method
    or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00017]
    in <8965c4f9861b47cab6e838f37ace3590>:0 \n"
  stdout: ''
  timestamp: 1659976632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float diff = float.MaxValue;\n        float prev = numbers[0];\n
    \       float min1 = 0;\n        float min2 = 0;\n        for (int i = 1; i <
    numbers.Count; i++) {\n            if (Math.Abs(numbers[i] - prev) < diff) {\n
    \               diff = Math.Abs(numbers[i] - prev);\n                min1 = prev;\n
    \               min2 = numbers[i];\n            }\n            prev = numbers[i];\n
    \       }\n        if (min1 > min2) {\n            float temp = min1;\n            min1
    = min2;\n            min2 = temp;\n        }\n        return Tuple.Create(min1,
    min2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9099df0dc6d748e788fef382f2fec5e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9099df0dc6d748e788fef382f2fec5e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = -1;\n        float first = -1;\n        float
    second = -1;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = numbers[i]
    - numbers[j];\n                if (diff < 0) {\n                    diff = -diff;\n
    \               }\n                if (closest == -1 || diff < closest) {\n                    closest
    = diff;\n                    first = numbers[i];\n                    second =
    numbers[j];\n                }\n            }\n        }\n        if (first <
    second) {\n            return Tuple.Create(first, second);\n        } else {\n
    \           return Tuple.Create(second, first);\n        }\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count < 2) {\n            throw new ArgumentException(\"Length
    must be at least 2\");\n        }\n        Tuple<float, float> best = Tuple.Create(numbers[0],
    numbers[1]);\n        float diff = (float)Math.Abs(best.Item1 - best.Item2);\n
    \       for (int i = 0; i < numbers.Count; i++) {\n            for (int j = i
    + 1; j < numbers.Count; j++) {\n                float tempDiff = (float)Math.Abs(numbers[i]
    - numbers[j]);\n                if (tempDiff < diff) {\n                    best
    = Tuple.Create(numbers[i], numbers[j]);\n                    diff = tempDiff;\n
    \               }\n            }\n        }\n        return best;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8c89a692ddca470f8b231f2493aab18c>:0
    \n"
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float smallestDifference = (float)0.0f;\n        float firstNumber
    = (float)0.0f;\n        float secondNumber = (float)0.0f;\n        for (int i
    = 0; i < numbers.Count - 1; i++) {\n            float difference = (float)Math.Abs(numbers[i]
    - numbers[i + 1]);\n            if (i == 0 || difference < smallestDifference)
    {\n                smallestDifference = difference;\n                firstNumber
    = numbers[i];\n                secondNumber = numbers[i + 1];\n            }\n
    \       }\n        return Tuple.Create(firstNumber, secondNumber);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <122050034c854fe08ac426c649943898>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <122050034c854fe08ac426c649943898>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float dist = float.MaxValue;\n        Tuple<float, float>
    result = null;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float newDist = Math.Abs(numbers[i]
    - numbers[j]);\n                if (newDist < dist) {\n                    dist
    = newDist;\n                    result = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c7a7d573d5f8497c878ae8844ce3fe9c>:0
    \n"
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        var minDistance = float.MaxValue;\n        Tuple<float, float>
    closest = null;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                var distance = Math.Abs(numbers[i]
    - numbers[j]);\n                if (distance < minDistance) {\n                    minDistance
    = distance;\n                    closest = Tuple.Create(Math.Min(numbers[i], numbers[j]),
    Math.Max(numbers[i], numbers[j]));\n                }\n            }\n        }\n
    \       return closest;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        var list = numbers.OrderBy(n => n).ToList();\n        var
    min = list[0];\n        var max = list[1];\n        var diff = max - min;\n        for
    (var i = 1; i < list.Count - 1; i++) {\n            var first = list[i];\n            var
    second = list[i + 1];\n            var newDiff = second - first;\n            if
    (newDiff < diff) {\n                min = first;\n                max = second;\n
    \               diff = newDiff;\n            }\n        }\n        return Tuple.Create(min,
    max);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float smallernumber = 0;\n        float largernumber = 0;\n
    \       float olddiff = float.MaxValue;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = numbers[j] - numbers[i];\n                if (diff < olddiff) {\n                    olddiff
    = diff;\n                    smallernumber = numbers[i];\n                    largernumber
    = numbers[j];\n                }\n            }\n        }\n        return Tuple.Create(smallernumber,
    largernumber);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2e89617bacd645f88880df522abfe7a8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2e89617bacd645f88880df522abfe7a8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Debug.Assert(numbers.Count >= 2);\n        List<float> sortedNumbers
    = new List<float>(numbers);\n        sortedNumbers.Sort();\n        float minDiff
    = float.MaxValue;\n        float firstNumber = float.NaN;\n        float secondNumber
    = float.NaN;\n        for (int i = 0; i < sortedNumbers.Count - 1; i++) {\n            float
    diff = sortedNumbers[i + 1] - sortedNumbers[i];\n            if (diff < minDiff)
    {\n                minDiff = diff;\n                firstNumber = sortedNumbers[i];\n
    \               secondNumber = sortedNumbers[i + 1];\n            }\n        }\n
    \       return Tuple.Create(firstNumber, secondNumber);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Debug.Assert(numbers.Count >= 2);\n        var sorted = numbers.OrderBy(x
    => x).ToList();\n        float closest = sorted[1] - sorted[0];\n        Tuple<float,
    float> closestPair = new Tuple<float, float>(sorted[0], sorted[1]);\n        for
    (int i = 1; i < sorted.Count - 1; i++) {\n            float pairDiff = sorted[i
    + 1] - sorted[i];\n            if (pairDiff < closest) {\n                closest
    = pairDiff;\n                closestPair = new Tuple<float, float>(sorted[i],
    sorted[i + 1]);\n            }\n        }\n        return closestPair;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count < 2) throw new ArgumentException(\"At least
    two numbers must be supplied\");\n        if (numbers.Count == 2) return new Tuple<float,
    float>(numbers[0], numbers[1]);\n        numbers.Sort();\n        float minDiff
    = float.MaxValue;\n        Tuple<float, float> closestNumbers = null;\n        for
    (int i = 0; i < numbers.Count - 1; i++) {\n            float diff = numbers[i
    + 1] - numbers[i];\n            if (diff < minDiff) {\n                minDiff
    = diff;\n                closestNumbers = new Tuple<float, float>(numbers[i],
    numbers[i + 1]);\n            }\n        }\n        return closestNumbers;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        Tuple<float, float> closest = null;\n        float minDiff
    = float.MaxValue;\n        for (int i = 0; i < numbers.Count - 1; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    closest = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        if (closest.Item1 > closest.Item2)
    {\n            return Tuple.Create(closest.Item2, closest.Item1);\n        }\n
    \       return closest;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = (float)1e12;\n        Tuple<float, float>
    closestPair = null;\n        foreach (float n1 in numbers) {\n            foreach
    (float n2 in numbers) {\n                if (n1 == n2) {\n                    continue;\n
    \               }\n                var diff = Math.Abs(n1 - n2);\n                if
    (diff < closest) {\n                    closest = diff;\n                    closestPair
    = Tuple.Create(Math.Min(n1, n2), Math.Max(n1, n2));\n                }\n            }\n
    \       }\n        return closestPair;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <654c91673fe64c3cb29b2a4d25b5e8ab>:0
    \n"
  stdout: ''
  timestamp: 1659976634
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // using System.Math;\n        // using System.Linq;\n        var
    closestPair = new Tuple<float, float>(float.PositiveInfinity, float.PositiveInfinity);\n
    \       var numberSet = new HashSet<float>(numbers);\n        if (numberSet.Count
    > 1) {\n            var sortedNumbers = numbers.OrderBy((t) => t).ToList();\n
    \           var closestPairDifference = float.PositiveInfinity;\n            for
    (var i = 0; i < sortedNumbers.Count - 1; i++) {\n                var difference
    = Math.Abs(sortedNumbers[i] - sortedNumbers[i + 1]);\n                if (difference
    < closestPairDifference) {\n                    closestPairDifference = difference;\n
    \                   closestPair = new Tuple<float, float>(sortedNumbers[i], sortedNumbers[i
    + 1]);\n                }\n            }\n        }\n        return closestPair;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976634
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float f = numbers[0];\n        float s = numbers[1];\n        float
    d = Math.Abs(f - s);\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float e = Math.Abs(numbers[i]
    - numbers[j]);\n                if (e < d) {\n                    f = numbers[i];\n
    \                   s = numbers[j];\n                    d = e;\n                }\n
    \           }\n        }\n        return Tuple.Create(f, s);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1fe189ee35d14c4382f5c6130e2e3e49>:0
    \n"
  stdout: ''
  timestamp: 1659976634
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        Tuple<float, float>
    ret = null;\n        for (int i = 0; i < numbers.Count - 1; i++) {\n            float
    dist = numbers[i + 1] - numbers[i];\n            if (dist < closest) {\n                closest
    = dist;\n                ret = Tuple.Create(numbers[i], numbers[i + 1]);\n            }\n
    \       }\n        return ret;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <30a05d27f3b14a0c9d617c4b8e8aba60>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <30a05d27f3b14a0c9d617c4b8e8aba60>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976634

language: cs
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a == 0) {\n            return b;\n        }\n        return
    GreatestCommonDivisor(b % a, a);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        // Euclid's algorithm\n        // gcd(a, b) = gcd(b, a % b)\n        while
    (b != 0) {\n            long tmp = a % b;\n            a = b;\n            b =
    tmp;\n        }\n        return a;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long temp;\n        a = Math.Abs(a);\n        b = Math.Abs(b);\n
    \       while (b != 0) {\n            temp = b;\n            b = a % b;\n            a
    = temp;\n        }\n        return a;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (a > 0) {\n            long c = a;\n            a = b % a;\n
    \           b = c;\n        }\n        return b;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        return b == 0 ? a : GreatestCommonDivisor(b, a % b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long c = a % b;\n            a = b;\n
    \           b = c;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long divisor;\n        long dividend;\n        long remainder;\n
    \       if (a == 0) {\n            return b;\n        }\n        if (b == 0) {\n
    \           return a;\n        }\n        // Make sure that dividend >= divisor\n
    \       if (a < b) {\n            divisor = a;\n            dividend = b;\n        }
    else {\n            divisor = b;\n            dividend = a;\n        }\n        //
    This part requires proof.\n        // But here is the basic idea.\n        //
    If dividend % divisor == 0, return divisor\n        // Otherwise, return GreatestCommonDivisor(divisor,
    dividend % divisor)\n        remainder = dividend % divisor;\n        if (remainder
    == 0) {\n            return divisor;\n        } else {\n            return GreatestCommonDivisor(divisor,
    remainder);\n        }\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (a != 0 && b != 0) {\n            if (a > b) {\n                a
    %= b;\n            } else {\n                b %= a;\n            }\n        }\n
    \       return a + b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long best = 1;\n        for (long i = 2; i <= Math.Min(a, b); i++)
    {\n            if (a % i == 0 && b % i == 0) {\n                best = i;\n            }\n
    \       }\n        return best;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long x, y;\n        if (a > b) {\n            x = a;\n            y
    = b;\n        } else {\n            x = b;\n            y = a;\n        }\n        long
    mod;\n        while (true) {\n            mod = x % y;\n            if (mod ==
    0) {\n                return y;\n            }\n            x = y;\n            y
    = mod;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        // YOUR CODE GOES HERE\n        // Solving using Euclid's Algorithm\n
    \       long r = 0;\n        if (a < b) {\n            long temp = a;\n            a
    = b;\n            b = temp;\n        }\n        do {\n            r = a % b;\n
    \           a = b;\n            b = r;\n        } while (r != 0);\n        return
    a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        return b == 0 ? a : GreatestCommonDivisor(b, a % b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) { return GreatestCommonDivisor(b, a); }\n        if (b
    < 0) { return GreatestCommonDivisor(a, -b); }\n        if (b == 0) { return a;
    }\n        return GreatestCommonDivisor(b, a % b);\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            var tmp = b;\n            b = a %
    b;\n            a = tmp;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (a != 0 && b != 0) {\n            if (a > b) {\n                a
    %= b;\n            } else {\n                b %= a;\n            }\n        }\n
    \       return a + b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            var r = a % b;\n            a = b;\n
    \           b = r;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) return GreatestCommonDivisor(b, a);\n        if (b ==
    0) return a;\n        return GreatestCommonDivisor(b, a % b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) return GreatestCommonDivisor(b, a);\n        while (b
    != 0) {\n            var r = a % b;\n            a = b;\n            b = r;\n
    \       }\n        return a;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            var r = a % b;\n            a = b;\n
    \           b = r;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            var tmp = b;\n            b = a %
    b;\n            a = tmp;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        a = Math.Abs(a);\n        b = Math.Abs(b);\n        if (a == 0)
    {\n            return b;\n        }\n        if (b == 0) {\n            return
    a;\n        }\n        while (a != b) {\n            if (a > b) {\n                a
    -= b;\n            } else {\n                b -= a;\n            }\n        }\n
    \       return a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long c;\n        while (b != 0) {\n            c = a % b;\n            a
    = b;\n            b = c;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        return b == 0 ? a : GreatestCommonDivisor(b, a % b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        return (b == 0L) ? a : GreatestCommonDivisor(b, a % b);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (a > 0 && b > 0) {\n            if (a > b) a %= b;\n            else
    b %= a;\n        }\n        return a + b;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        return b == 0 ? a : GreatestCommonDivisor(b, a % b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long r;\n        while (b != 0) {\n            r = a % b;\n            a
    = b;\n            b = r;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) { return GreatestCommonDivisor(b, a); }\n        if (b
    == 0) { return a; }\n        return GreatestCommonDivisor(b, a % b);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n
    \       }\n        while (b != 0) {\n            var t = b;\n            b = a
    % b;\n            a = t;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            var t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) return GreatestCommonDivisor(b, a);\n        while (b
    != 0) {\n            var r = a % b;\n            a = b;\n            b = r;\n
    \       }\n        return a;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        return b == 0 ? a : GreatestCommonDivisor(b, a % b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (a != 0 && b != 0) {\n            if (a > b) {\n                a
    %= b;\n            } else {\n                b %= a;\n            }\n        }\n
    \       return a + b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==
    0) {\n            return a;\n        }\n        if (a < b) {\n            return
    GreatestCommonDivisor(b, a);\n        }\n        return GreatestCommonDivisor(b,
    a % b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            var t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long shift;\n        for (shift = 0; ((a | b) & 1) == 0; ++shift)
    {\n            a >>= 1;\n            b >>= 1;\n        }\n        while ((a &
    1) == 0) {\n            a >>= 1;\n        }\n        do {\n            while ((b
    & 1) == 0) {\n                b >>= 1;\n            }\n            if (a > b)
    {\n                long t = b;\n                b = a;\n                a = t;\n
    \           }\n            b = b - a;\n        } while (b != 0);\n        return
    a << shift;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpaozlttbt.cs(34,16): error CS0019: Operator ''<<'' cannot be applied to
    operands of type ''long'' and ''long''

    '
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        return (b == 0) ? a : GreatestCommonDivisor(b, a % b);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (a != 0) {\n            long a1 = a;\n            a = b %
    a;\n            b = a1;\n        }\n        return b;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        var x = a;\n        var y = b;\n        if (x < y) {\n            var
    c = x;\n            x = y;\n            y = c;\n        }\n        while (y !=
    0) {\n            var d = x % y;\n            x = y;\n            y = d;\n        }\n
    \       return x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            var c = a;\n            a = b;\n            b
    = c;\n        }\n        while (b != 0) {\n            var c = a % b;\n            a
    = b;\n            b = c;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long t;\n        while (b != 0) {\n            t = b;\n            b
    = a % b;\n            a = t;\n        }\n        return a;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        return b == 0 ? a : GreatestCommonDivisor(b, a % b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (a != 0 && b != 0) {\n            while ((b & 1) == 0) {\n
    \               b >>= 1;\n            }\n            while ((a & 1) == 0) {\n
    \               a >>= 1;\n            }\n            if (a > b) {\n                a
    -= b;\n            } else {\n                b -= a;\n            }\n        }\n
    \       return b == 0 ? a : b;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <19b8e6d205f64415824e1cc39184cee5>:0
    \n"
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long c;\n        while (b != 0) {\n            c = a % b;\n            a
    = b;\n            b = c;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            var t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (a != 0 && b != 0) {\n            while ((b & 1) == 0) {\n
    \               b >>= 1;\n            }\n            while ((a & 1) == 0) {\n
    \               a >>= 1;\n            }\n            if (a > b) {\n                a
    -= b;\n            } else {\n                b -= a;\n            }\n        }\n
    \       return b == 0 ? a : b;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <19b8e6d205f64415824e1cc39184cee5>:0
    \n"
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long c = a % b;\n            a = b;\n
    \           b = c;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            var remainder = a % b;\n            a
    = b;\n            b = remainder;\n        }\n        return a;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long x = a;\n        long y = b;\n        while (true) {\n            if
    (x == 0) {\n                return y;\n            }\n            if (y == 0)
    {\n                return x;\n            }\n            long z = x % y;\n            x
    = y;\n            y = z;\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n
    \       }\n        if (b == 0) {\n            return a;\n        }\n        return
    GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long c;\n        while (b != 0) {\n            c = a % b;\n            a
    = b;\n            b = c;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==
    0) {\n            return a;\n        }\n        if (a > b) {\n            return
    GreatestCommonDivisor(a % b, b);\n        } else {\n            return GreatestCommonDivisor(a,
    b % a);\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n
    \       } else if (b == 0) {\n            return a;\n        } else {\n            return
    GreatestCommonDivisor(b, a % b);\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        return b == 0 ? a : GreatestCommonDivisor(b, a % b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (a != 0 && b != 0) {\n            var t = b;\n            b
    = a % b;\n            a = t;\n        }\n        return Math.Max(a, b);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long r;\n        if (a < b) {\n            r = a;\n            a
    = b;\n            b = r;\n        }\n        while (b != 0) {\n            r =
    a % b;\n            a = b;\n            b = r;\n        }\n        return a;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        // GCD(a, b) = GCD(b, a % b)\n        while (b != 0) {\n            var
    r = a % b;\n            a = b;\n            b = r;\n        }\n        return
    a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            var c = a;\n            a = b;\n            b
    = c;\n        }\n        long r = a % b;\n        if (r == 0) return b;\n        return
    GreatestCommonDivisor(b, r);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==
    0) {\n            return a;\n        }\n        while (true) {\n            if
    (a > b) {\n                a = a % b;\n            } else {\n                b
    = b % a;\n            }\n            if (a == 0) {\n                return b;\n
    \           }\n            if (b == 0) {\n                return a;\n            }\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a > b) {\n            long temp = a;\n            a = b;\n            b
    = temp;\n        }\n        if (a == 0) {\n            return b;\n        }\n
    \       else {\n            return GreatestCommonDivisor(b % a, a);\n        }\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long x = a;\n        long y = b;\n        while (y != 0) {\n            long
    r = x % y;\n            x = y;\n            y = r;\n        }\n        return
    x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a == 0) return b;\n        if (b == 0) return a;\n        if
    (a > b) {\n            long c = a;\n            a = b;\n            b = c;\n        }\n
    \       for (;;) {\n            long r = b % a;\n            if (r == 0) return
    a;\n            b = a;\n            a = r;\n        }\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long c = a % b;\n            a = b;\n
    \           b = c;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            long c = a;\n            a = b;\n            b
    = c;\n        }\n        if (b == 0) {\n            return a;\n        }\n        return
    GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a == 0 || b == 0) {\n            return Math.Max(Math.Abs(a),
    Math.Abs(b));\n        }\n        long a2 = Math.Abs(a);\n        long b2 = Math.Abs(b);\n
    \       while (a2 != b2) {\n            if (a2 > b2) {\n                a2 -=
    b2;\n            } else {\n                b2 -= a2;\n            }\n        }\n
    \       return a2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            var c = a % b;\n            a = b;\n
    \           b = c;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        // Make sure that a >= b\n        if (a < b) {\n            var
    c = a;\n            a = b;\n            b = c;\n        }\n        // Loop until
    b == 0\n        while (b != 0) {\n            // Get remainder\n            var
    c = a % b;\n            // Set a to b and b to remainder\n            a = b;\n
    \           b = c;\n        }\n        // Return a\n        return a;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        return b == 0 ? a : GreatestCommonDivisor(b, a % b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        // Euclid's algorithm\n        while (b != 0) {\n            long
    t = b;\n            b = a % b;\n            a = t;\n        }\n        return
    a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            var a_ = a;\n            a = b;\n
    \           b = a_ % b;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long temp;\n        if (a < b) {\n            temp = a;\n            a
    = b;\n            b = temp;\n        }\n        while (true) {\n            temp
    = a % b;\n            if (temp == 0) {\n                return b;\n            }\n
    \           a = b;\n            b = temp;\n        }\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) return GreatestCommonDivisor(b, a);\n        long r =
    a % b;\n        while (r != 0) {\n            a = b;\n            b = r;\n            r
    = a % b;\n        }\n        return b;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a == 0) return b;\n        if (b == 0) return a;\n        long
    gcd = GreatestCommonDivisor(b, a % b);\n        return gcd;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            var tmp = a;\n            a = b;\n            b
    = tmp;\n        }\n        var x = a;\n        var y = b;\n        while (y !=
    0) {\n            var r = x % y;\n            x = y;\n            y = r;\n        }\n
    \       return x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) return GreatestCommonDivisor(b, a);\n        if (b ==
    0) return a;\n        return GreatestCommonDivisor(b, a % b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long temp;\n        while (b != 0) {\n            temp = b;\n            b
    = a % b;\n            a = temp;\n        }\n        return a;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long tmp = a;\n            a = b;\n
    \           b = tmp % b;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        return b == 0 ? a : GreatestCommonDivisor(b, a % b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a > b) {\n            return GreatestCommonDivisor(b, a);\n
    \       }\n        if (a == 0) {\n            return b;\n        }\n        return
    GreatestCommonDivisor(b % a, a);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long c;\n        while (b != 0) {\n            c = a % b;\n            a
    = b;\n            b = c;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long res = 0;\n        if (a >= b) {\n            res = GreatestCommonDivisor(a
    % b, b);\n        } else {\n            res = GreatestCommonDivisor(a, b % a);\n
    \       }\n        return res;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.DivideByZeroException: Attempted to divide
    by zero.\n  at Problem.GreatestCommonDivisor (System.Int64 a, System.Int64 b)
    [0x0001e] in <378c671324fc44099aaedee736ff913c>:0 \n  at Problem.GreatestCommonDivisor
    (System.Int64 a, System.Int64 b) [0x00010] in <378c671324fc44099aaedee736ff913c>:0
    \n  at Problem.GreatestCommonDivisor (System.Int64 a, System.Int64 b) [0x0001e]
    in <378c671324fc44099aaedee736ff913c>:0 \n  at Problem.Main (System.String[] args)
    [0x00001] in <378c671324fc44099aaedee736ff913c>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.DivideByZeroException: Attempted to divide by zero.\n  at Problem.GreatestCommonDivisor
    (System.Int64 a, System.Int64 b) [0x0001e] in <378c671324fc44099aaedee736ff913c>:0
    \n  at Problem.GreatestCommonDivisor (System.Int64 a, System.Int64 b) [0x00010]
    in <378c671324fc44099aaedee736ff913c>:0 \n  at Problem.GreatestCommonDivisor (System.Int64
    a, System.Int64 b) [0x0001e] in <378c671324fc44099aaedee736ff913c>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <378c671324fc44099aaedee736ff913c>:0 \n"
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) return GreatestCommonDivisor(b, a);\n        while (b
    != 0) {\n            long t = b;\n            b = a % b;\n            a = t;\n
    \       }\n        return a;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (a != 0 && b != 0) {\n            long c = b;\n            b
    = a % b;\n            a = c;\n        }\n        return a + b;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a == 0 || b == 0) {\n            return a | b;\n        }\n
    \       while (true) {\n            a %= b;\n            if (a == 0) {\n                return
    b;\n            }\n            b %= a;\n            if (b == 0) {\n                return
    a;\n            }\n        }\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (a != 0 && b != 0) {\n            if (a > b) {\n                a
    %= b;\n            } else {\n                b %= a;\n            }\n        }\n
    \       return a | b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long c;\n        while (b != 0) {\n            c = a % b;\n            a
    = b;\n            b = c;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n            b
    = tmp;\n        }\n        if (b == 0) {\n            return a;\n        }\n        return
    GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        return (b == 0) ? a : GreatestCommonDivisor(b, a % b);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n            b
    = tmp;\n        }\n        return b == 0 ? a : GreatestCommonDivisor(b, a % b);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        // Use binary GCD algorithm. See:\n        // https://en.wikipedia.org/wiki/Binary_GCD_algorithm\n
    \       // We assume that a > b.\n\n        if (a < b) {\n            return GreatestCommonDivisor(b,
    a);\n        }\n\n        if (b == 0) {\n            return a;\n        }\n\n
    \       // After n shifts, a becomes equal to 0.\n        long n = 0;\n        while
    ((a & 1) == 0 && (b & 1) == 0) {\n            a >>= 1;\n            b >>= 1;\n
    \           n++;\n        }\n\n        // Reduce a to the odd number.\n        while
    ((a & 1) == 0) {\n            a >>= 1;\n        }\n\n        while (b != 0) {\n
    \           while ((b & 1) == 0) {\n                b >>= 1;\n            }\n\n
    \           if (a > b) {\n                long temp = a;\n                a =
    b;\n                b = temp;\n            }\n\n            b -= a;\n        }\n\n
    \       return a << n;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphxrmrf8j.cs(54,16): error CS0019: Operator ''<<'' cannot be applied to
    operands of type ''long'' and ''long''

    '
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n
    \       }\n        if (b == 0) {\n            return a;\n        }\n        return
    GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long tmp = a;\n            a = b;\n
    \           b = tmp % b;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) return GreatestCommonDivisor(b, a);\n        if (b ==
    0) return a;\n        return GreatestCommonDivisor(b, a % b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long temp = b;\n            b = a
    % b;\n            a = temp;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n            b
    = tmp;\n        }\n        while (b != 0) {\n            long c = a % b;\n            a
    = b;\n            b = c;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) { long tmp = a; a = b; b = tmp; }\n        long res =
    1;\n        long d = 0;\n        while ((d = a % b) != 0) {\n            a = b;\n
    \           b = d;\n        }\n        res = b;\n        return res;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n
    \       } else if (b == 0) {\n            return a;\n        } else {\n            return
    GreatestCommonDivisor(b, a % b);\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (a != 0) {\n            long c = a;\n            a = b % a;\n
    \           b = c;\n        }\n        return b;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long tmp = a;\n            a = b;\n
    \           b = tmp % b;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long c = a % b;\n            a = b;\n
    \           b = c;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            var t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a == 0) {\n            return b;\n        }\n        while (b
    != 0) {\n            if (a > b) {\n                a = a - b;\n            } else
    {\n                b = b - a;\n            }\n        }\n        return a;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a == 0) return b;\n        if (b == 0) return a;\n        return
    GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            var tmp = a;\n            a = b;\n            b
    = tmp;\n        }\n        while (b != 0) {\n            var tmp = a % b;\n            a
    = b;\n            b = tmp;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (a != 0 && b != 0) {\n            while ((b & 1) == 0) {\n
    \               b >>= 1;\n            }\n            while ((a & 1) == 0) {\n
    \               a >>= 1;\n            }\n            if (a > b) {\n                a
    -= b;\n            } else {\n                b -= a;\n            }\n        }\n
    \       return b == 0 ? a : b;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <19b8e6d205f64415824e1cc39184cee5>:0
    \n"
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            var tmp = a;\n            a = b;\n            b
    = tmp;\n        }\n        while (b != 0) {\n            var r = a % b;\n            a
    = b;\n            b = r;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long t;\n        while (b != 0) {\n            t = b;\n            b
    = a % b;\n            a = t;\n        }\n        return a;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        // if a > b\n        //     if b == 0, a\n        //     return
    GreatestCommonDivisor(b, a % b)\n        // else\n        //     if a == 0, b\n
    \       //     return GreatestCommonDivisor(a, b % a)\n        if (a > b) {\n
    \           if (b == 0) {\n                return a;\n            }\n            return
    GreatestCommonDivisor(b, a % b);\n        } else {\n            if (a == 0) {\n
    \               return b;\n            }\n            return GreatestCommonDivisor(a,
    b % a);\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==
    0) {\n            return a;\n        }\n        if (a < b) {\n            return
    GreatestCommonDivisor(b, a);\n        }\n        while (b != 0) {\n            var
    tmp = a % b;\n            a = b;\n            b = tmp;\n        }\n        return
    a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"Debug
    messages...\");\n        long gcd = 0;\n        long reminder = 0;\n        long
    dividend = 0;\n        if (a > b) {\n            dividend = a;\n            reminder
    = b;\n        } else {\n            dividend = b;\n            reminder = a;\n
    \       }\n        while (true) {\n            if (reminder == 0) {\n                gcd
    = dividend;\n                break;\n            }\n            dividend = reminder;\n
    \           reminder = dividend % reminder;\n        }\n        return gcd;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6518b806991a46da9360c795aeb57d75>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6518b806991a46da9360c795aeb57d75>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long c = a % b;\n            a = b;\n
    \           b = c;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long c;\n        while (b != 0) {\n            c = a % b;\n            a
    = b;\n            b = c;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n            b
    = tmp;\n        }\n        while (b != 0) {\n            long c = a % b;\n            a
    = b;\n            b = c;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (a != 0 && b != 0) {\n            if (a > b) {\n                a
    %= b;\n            } else {\n                b %= a;\n            }\n        }\n
    \       return a + b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long absA = Math.Abs(a);\n        long absB = Math.Abs(b);\n        long
    greater = Math.Max(absA, absB);\n        long lesser = Math.Min(absA, absB);\n
    \       while (lesser != 0) {\n            long remainder = greater % lesser;\n
    \           greater = lesser;\n            lesser = remainder;\n        }\n        return
    greater;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            var aRemainder = a % b;\n            a
    = b;\n            b = aRemainder;\n        }\n        return a;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n
    \       }\n        if (b == 0) {\n            return a;\n        }\n        return
    GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long dividend = Math.Max(a, b);\n        long divisor = Math.Min(a,
    b);\n        long reminder = dividend % divisor;\n        while (reminder != 0)
    {\n            dividend = divisor;\n            divisor = reminder;\n            reminder
    = dividend % divisor;\n        }\n        return divisor;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long c = a % b;\n            a = b;\n
    \           b = c;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            long t = a;\n            a = b;\n            b
    = t;\n        }\n        while (b != 0) {\n            long t = b;\n            b
    = a % b;\n            a = t;\n        }\n        return a;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long larger = Math.Max(a, b);\n        long smaller = Math.Min(a,
    b);\n        long remainder = larger % smaller;\n        if (remainder == 0) {\n
    \           return smaller;\n        } else {\n            return GreatestCommonDivisor(smaller,
    remainder);\n        }\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n
    \       }\n        while (true) {\n            long r = a % b;\n            if
    (r == 0) {\n                return b;\n            }\n            a = b;\n            b
    = r;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (a != 0) {\n            long c = a;\n            a = b % a;\n
    \           b = c;\n        }\n        return b;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) return GreatestCommonDivisor(b, a);\n        while (b
    != 0) {\n            var tmp = a % b;\n            a = b;\n            b = tmp;\n
    \       }\n        return a;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long c = a % b;\n            a = b;\n
    \           b = c;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            long c = a;\n            a = b;\n            b
    = c;\n        }\n        long ret = a % b;\n        while (ret != 0) {\n            a
    = b;\n            b = ret;\n            ret = a % b;\n        }\n        return
    b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        return (b == 0L) ? a : GreatestCommonDivisor(b, a % b);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long x = a;\n        long y = b;\n        while (x != 0 && y !=
    0) {\n            if (x > y)\n                x %= y;\n            else\n                y
    %= x;\n        }\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n
    \       }\n        if (b < 0) {\n            return GreatestCommonDivisor(a, -b);\n
    \       }\n        if (b == 0) {\n            return a;\n        }\n        return
    GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (a != 0 && b != 0) {\n            if (a > b) {\n                a
    %= b;\n            } else {\n                b %= a;\n            }\n        }\n
    \       return a + b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        return b == 0 ? a : GreatestCommonDivisor(b, a % b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            long temp = a;\n            a = b;\n            b
    = temp;\n        }\n        while (b != 0) {\n            long temp = a % b;\n
    \           a = b;\n            b = temp;\n        }\n        return a;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long c;\n        while (b != 0) {\n            c = a % b;\n            a
    = b;\n            b = c;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a > b) {\n            long tmp = a;\n            a = b;\n            b
    = tmp;\n        }\n        while (b % a != 0) {\n            long tmp = a;\n            a
    = b % a;\n            b = tmp;\n        }\n        return a;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long x = Math.Max(a, b);\n        long y = Math.Min(a, b);\n        if
    (x % y == 0) {\n            return y;\n        } else {\n            return GreatestCommonDivisor(y,
    x % y);\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long c = a % b;\n            a = b;\n
    \           b = c;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long c;\n        while (b != 0) {\n            c = a % b;\n            a
    = b;\n            b = c;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a > b) {\n            a %= b;\n            if (a == 0) return
    b;\n            return GreatestCommonDivisor(a, b);\n        } else {\n            b
    %= a;\n            if (b == 0) return a;\n            return GreatestCommonDivisor(a,
    b);\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long bigger = Math.Max(a, b);\n        long smaller = Math.Min(a,
    b);\n        while (smaller != 0) {\n            long remainder = bigger % smaller;\n
    \           bigger = smaller;\n            smaller = remainder;\n        }\n        return
    bigger;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008829
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            var c = a;\n            a = b;\n            b
    = c;\n        }\n        var r = a % b;\n        while (r != 0) {\n            a
    = b;\n            b = r;\n            r = a % b;\n        }\n        return b;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        return (b == 0L) ? a : GreatestCommonDivisor(b, a % b);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long r = a % b;\n            a = b;\n
    \           b = r;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008829
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            var remainder = a % b;\n            a
    = b;\n            b = remainder;\n        }\n        return a;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        // >>> GreatestCommonDivisor((15L), (25L))\n        // (5L)\n        if
    (a < b) {\n            return GreatestCommonDivisor(b, a);\n        }\n        //
    >>> GreatestCommonDivisor((25L), (15L))\n        // (5L)\n        while (b !=
    0) {\n            long c = a % b;\n            a = b;\n            b = c;\n        }\n
    \       // >>> GreatestCommonDivisor((25L), (15L))\n        // (5L)\n        return
    a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008828
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a > b) {\n            var temp = a;\n            a = b;\n            b
    = temp;\n        }\n        if (a < 0) {\n            return GreatestCommonDivisor(-a,
    b);\n        }\n        if (b < 0) {\n            return GreatestCommonDivisor(a,
    -b);\n        }\n        while (a != 0) {\n            var temp = a;\n            a
    = b % a;\n            b = temp;\n        }\n        return b;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008829
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n
    \       }\n        if (b == 0) {\n            return a;\n        }\n        return
    GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long r = a % b;\n            a = b;\n
    \           b = r;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008829
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n
    \       } else if (b == 0) {\n            return a;\n        } else {\n            return
    GreatestCommonDivisor(b, a % b);\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) return GreatestCommonDivisor(b, a);\n        if (b ==
    0) return a;\n        return GreatestCommonDivisor(b, a % b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a == 0) return b;\n        if (b == 0) return a;\n        if
    (a == b) return a;\n        if (a > b) return GreatestCommonDivisor(a - b, b);\n
    \       if (a < b) return GreatestCommonDivisor(a, b - a);\n        throw new
    Exception();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008829
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        return (b == 0L) ? (a) : (GreatestCommonDivisor(b, a % b));\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008829
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        return b == 0 ? a : GreatestCommonDivisor(b, a % b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            var c = a;\n            a = b;\n            b
    = c;\n        }\n        while (b != 0) {\n            var c = a % b;\n            a
    = b;\n            b = c;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        // a and b are at most 63 bits numbers\n        Debug.Assert(0L
    <= a && a < (1L << 63));\n        Debug.Assert(0L <= b && b < (1L << 63));\n        if
    (a < b) { return GreatestCommonDivisor(b, a); }\n        while (b != 0L) {\n            long
    r = a % b;\n            a = b;\n            b = r;\n        }\n        return
    a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.GreatestCommonDivisor (System.Int64 a, System.Int64 b) [0x00000]
    in <a8345d0e1f8a4722ac526d6efbf12dd8>:0 \n  at Problem.Main (System.String[] args)
    [0x00000] in <a8345d0e1f8a4722ac526d6efbf12dd8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.GreatestCommonDivisor (System.Int64 a, System.Int64 b) [0x00000]
    in <a8345d0e1f8a4722ac526d6efbf12dd8>:0 \n  at Problem.Main (System.String[] args)
    [0x00000] in <a8345d0e1f8a4722ac526d6efbf12dd8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message, System.String detailMessa"
  stdout: ''
  timestamp: 1660008829
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long tmp = a;\n            a = b;\n
    \           b = tmp % b;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long A = Math.Max(a, b);\n        long B = Math.Min(a, b);\n        while
    (true) {\n            long remainder = A % B;\n            if (remainder == 0)
    {\n                return B;\n            }\n            A = B;\n            B
    = remainder;\n        }\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008829
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long tmp = a;\n            a = b;\n
    \           b = tmp % b;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long tmp = a;\n            a = b;\n
    \           b = tmp % b;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            var temp = a;\n            a = b;\n            b
    = temp;\n        }\n        while (b != 0) {\n            var temp = a % b;\n
    \           a = b;\n            b = temp;\n        }\n        return a;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008829
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long r = a % b;\n            a = b;\n
    \           b = r;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long a1 = Math.Abs(a);\n        long b1 = Math.Abs(b);\n        long
    shift = 0;\n        // make sure a1 is larger, so we'll do a1 = a1 - b1\n        if
    (a1 < b1) {\n            long temp = a1;\n            a1 = b1;\n            b1
    = temp;\n        }\n        // if a1 is odd, so is b1, so gcd is odd\n        while
    ((a1 & 1) == 0 && (b1 & 1) == 0) {\n            a1 >>= 1;\n            b1 >>=
    1;\n            shift++;\n        }\n        while ((a1 & 1) == 0) {\n            a1
    >>= 1;\n        }\n        do {\n            while ((b1 & 1) == 0) {\n                b1
    >>= 1;\n            }\n            if (a1 > b1) {\n                long temp =
    a1;\n                a1 = b1;\n                b1 = temp;\n            }\n            b1
    -= a1;\n        } while (b1 != 0);\n        return a1 << shift;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgfxx_5v7.cs(44,16): error CS0019: Operator ''<<'' cannot be applied to
    operands of type ''long'' and ''long''

    '
  timestamp: 1660008829
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n
    \       }\n        if (b == 0) {\n            return a;\n        }\n        return
    GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008827
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long c = a % b;\n            a = b;\n
    \           b = c;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) return GreatestCommonDivisor(b, a);\n        if (b ==
    0) return a;\n        else return GreatestCommonDivisor(b, a % b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008829
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        return b == 0 ? a : GreatestCommonDivisor(b, a % b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long r;\n        if (a < b) {\n            var tmp = a;\n            a
    = b;\n            b = tmp;\n        }\n        if (b <= 0) return a;\n        r
    = a % b;\n        return GreatestCommonDivisor(b, r);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))
    == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008829
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long a_prime = a;\n            a =
    b;\n            b = a_prime % b;\n        }\n        return a;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008829
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long remainder = a % b;\n            a
    = b;\n            b = remainder;\n        }\n        return a;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008829
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        return b == 0 ? a : GreatestCommonDivisor(b, a % b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a < b) {\n            var c = a;\n            a = b;\n            b
    = c;\n        }\n        if (b == 0) {\n            return a;\n        }\n        return
    GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),
    (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n
    \   Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008829
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            var t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        if (a == 0L) {\n            return b;\n        }\n        while
    (b != 0L) {\n            if (a > b) {\n                a = a - b;\n            }
    else {\n                b = b - a;\n            }\n        }\n        return a;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008829
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n
    \           a = t;\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n
    \   Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L),
    (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008826
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a greatest common divisor of two integers a and b\n    //
    >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),
    (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long
    b) {\n        long temp;\n        if (a < b) {\n            temp = a;\n            a
    = b;\n            b = temp;\n        }\n        while (b != 0) {\n            temp
    = a % b;\n            a = b;\n            b = temp;\n        }\n        return
    a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),
    (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n
    \   Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),
    (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008829

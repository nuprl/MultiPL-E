language: cs
name: HumanEval_12_longest
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        } else {\n            // longest[0]\
    \ is the length of the longest string\n            // longest[1] is the index\
    \ of the longest string in the list\n            int[] longest = new int[] {0,\
    \ 0};\n            for (int i = 0; i < strings.Count; i++) {\n               \
    \ if (strings[i].Length > longest[0]) {\n                    longest[0] = strings[i].Length;\n\
    \                    longest[1] = i;\n                }\n            }\n     \
    \       return strings[longest[1]];\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <ec4dec4bfe1b4dc89371be8ef4060a1f>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <ec4dec4bfe1b4dc89371be8ef4060a1f>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string longest\
    \ = null;\n        int max_length = 0;\n        foreach (string s in strings)\
    \ {\n            if (s.Length > max_length) {\n                max_length = s.Length;\n\
    \                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <27819b9b6d0c4d359868931877bb2088>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <27819b9b6d0c4d359868931877bb2088>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string ret\
    \ = null;\n        foreach (string s in strings) {\n            if (ret == null\
    \ || s.Length > ret.Length) {\n                ret = s;\n            }\n     \
    \   }\n        return ret;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <e3d899a6ff0f4cd2bcf52438831d980f>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e3d899a6ff0f4cd2bcf52438831d980f>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // +++ Your\
    \ code here +++\n        string longest = null;\n        int longestLength = 0;\n\
    \        foreach (string s in strings) {\n            if (s.Length > longestLength)\
    \ {\n                longest = s;\n                longestLength = s.Length;\n\
    \            }\n        }\n        return longest;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <61f8add5455e44589de6d13d4c201d55>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <61f8add5455e44589de6d13d4c201d55>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string result\
    \ = null;\n        int maxLength = 0;\n        foreach (string s in strings) {\n\
    \            if (s.Length > maxLength) {\n                maxLength = s.Length;\n\
    \                result = s;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <372813b28b6a4d0eb504de8b4c5542a8>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <372813b28b6a4d0eb504de8b4c5542a8>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        List<string> copy = new\
    \ List<string>(strings);\n        copy.Sort((a, b) => b.Length - a.Length);\n\
    \        return copy[0];\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <4db74606bee54a599583a4f53ac05485>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <4db74606bee54a599583a4f53ac05485>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string result = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > result.Length)\
    \ {\n                result = s;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <8fb647ae8bf74f08b9f154784e57cf84>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8fb647ae8bf74f08b9f154784e57cf84>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // TODO\n\
    \        return null;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <6841e22b5fe146ac8658aa7502b9d3fd>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <6841e22b5fe146ac8658aa7502b9d3fd>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string maxString\
    \ = null;\n        if (strings.Count > 0) {\n            int maxLength = 0;\n\
    \            foreach (string s in strings) {\n                if (s.Length > maxLength)\
    \ {\n                    maxLength = s.Length;\n                    maxString\
    \ = s;\n                }\n            }\n        }\n        return maxString;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <885e55b6bab34968a9cf8f960c7a94a8>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <885e55b6bab34968a9cf8f960c7a94a8>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // Your code\
    \ goes here.\n        // return \"\";\n        string longest = null;\n      \
    \  int maxLength = 0;\n        foreach (string str in strings) {\n           \
    \ if (str.Length > maxLength) {\n                maxLength = str.Length;\n   \
    \             longest = str;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <cee6decafceb41188fcec79e68b24b3e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <cee6decafceb41188fcec79e68b24b3e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        int len =\
    \ 0;\n        string s = null;\n        foreach (string ss in strings) {\n   \
    \         if (ss.Length > len) {\n                len = ss.Length;\n         \
    \       s = ss;\n            }\n        }\n        return s;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <c2dd2925b48d4735a25fa912ae44032a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <c2dd2925b48d4735a25fa912ae44032a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        return strings.Aggregate((x,\
    \ y) => x.Length > y.Length ? x : y);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <56227968ddcc4ff6ae7b60289ef792a7>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <56227968ddcc4ff6ae7b60289ef792a7>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0)\n            return null;\n        else {\n            var longest = strings[0];\n\
    \            var i = 1;\n            while (i < strings.Count) {\n           \
    \     if (strings[i].Length > longest.Length)\n                    longest = strings[i];\n\
    \                i = i + 1;\n            }\n            return longest;\n    \
    \    }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <681e145893564779a290c285b500560d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <681e145893564779a290c285b500560d>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        return strings.Aggregate((x,\
    \ y) => x.Length > y.Length ? x : y);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains\
    \ no elements\n  at System.Linq.Enumerable.Aggregate[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source, System.Func`3[T1,T2,TResult] func) [0x00030] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.Longest (System.Collections.Generic.List`1[T] strings) [0x00001]\
    \ in <0e87b6bb056848c3837c3730fba1dd9b>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00006] in <0e87b6bb056848c3837c3730fba1dd9b>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.InvalidOperationException: Sequence contains no elements\n\
    \  at System.Linq.Enumerable.Aggregate[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source, System.Func`3[T1,T2,TResult] func) [0x00030] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.Longest (System.Collections.Generic.List`1[T] strings) [0x00001]\
    \ in <0e87b6bb056848c3837c3730fba1dd9b>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00006] in <0e87b6bb056848c3837c3730fba1dd9b>:0 \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string longest\
    \ = null;\n        if (strings != null) {\n            foreach (string string\
    \ in strings) {\n                if (longest == null || string.Length > longest.Length)\
    \ {\n                    longest = string;\n                }\n            }\n\
    \        }\n        return longest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1fmrg0ql.cs(20,22): error CS1525: Invalid expression term ''string''

    /tmp/tmp1fmrg0ql.cs(20,29): error CS1515: ''in'' expected

    /tmp/tmp1fmrg0ql.cs(20,29): error CS0230: Type and identifier are both required
    in a foreach statement

    /tmp/tmp1fmrg0ql.cs(20,29): error CS1525: Invalid expression term ''string''

    /tmp/tmp1fmrg0ql.cs(20,36): error CS1026: ) expected

    /tmp/tmp1fmrg0ql.cs(20,36): error CS1525: Invalid expression term ''in''

    /tmp/tmp1fmrg0ql.cs(20,36): error CS1002: ; expected

    /tmp/tmp1fmrg0ql.cs(20,36): error CS1513: } expected

    /tmp/tmp1fmrg0ql.cs(20,46): error CS1002: ; expected

    /tmp/tmp1fmrg0ql.cs(20,46): error CS1513: } expected

    /tmp/tmp1fmrg0ql.cs(22,31): error CS1525: Invalid expression term ''string''

    '
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ < 1) {\n            return null;\n        }\n        string s = strings[0];\n\
    \        foreach (string t in strings) {\n            if (t.Length > s.Length)\
    \ {\n                s = t;\n            }\n        }\n        return s;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <3cccc39cd3334f4c85fd2e44581f719e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <3cccc39cd3334f4c85fd2e44581f719e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if(strings.Count\
    \ == 0) return null;\n        string res = strings[0];\n        foreach(string\
    \ s in strings) {\n            if(s.Length > res.Length) res = s;\n        }\n\
    \        return res;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <24087a6029bc47e0974002e15b2c6229>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <24087a6029bc47e0974002e15b2c6229>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0)\n            return null;\n        var it = strings.GetEnumerator();\n\
    \        it.MoveNext();\n        var longest = it.Current;\n        while (it.MoveNext())\
    \ {\n            if (it.Current.Length > longest.Length)\n                longest\
    \ = it.Current;\n        }\n        return longest;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <b62486473b8a423da44f4e6d21cae48a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <b62486473b8a423da44f4e6d21cae48a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // Implemented\
    \ with fold\n        return strings.Aggregate(\"\", (max, cur) => max.Length >\
    \ cur.Length ? max : cur);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f50ad1befe4c4b7abf7c8df88b106f20>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f50ad1befe4c4b7abf7c8df88b106f20>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659977009
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string result\
    \ = null;\n        foreach (string s in strings) {\n            if (result ==\
    \ null || s.Length > result.Length)\n                result = s;\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <fccedb9ddc2f46b3bf7ccbd34cd576e0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <fccedb9ddc2f46b3bf7ccbd34cd576e0>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0)\n            return null;\n        string ret = strings[0];\n        foreach\
    \ (string str in strings)\n            if (str.Length > ret.Length)\n        \
    \        ret = str;\n        return ret;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <80d41dd2cf794b1ea506b2e970a0e942>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <80d41dd2cf794b1ea506b2e970a0e942>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // TODO:\
    \ implement this\n        return strings.OrderByDescending(s => s.Length).FirstOrDefault();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <faf3a1cb23de40be902893b3fed4ba64>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <faf3a1cb23de40be902893b3fed4ba64>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // TODO:\
    \ implement this function\n        throw new NotImplementedException();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00006] in <d89c3de2e09843989f11bd0c60f63e65>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00006]\
    \ in <d89c3de2e09843989f11bd0c60f63e65>:0 \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longestString =\
    \ strings[0];\n        int longestStringLength = longestString.Length;\n     \
    \   for (int i = 1; i < strings.Count; i++) {\n            if (strings[i].Length\
    \ > longestStringLength) {\n                longestString = strings[i];\n    \
    \            longestStringLength = longestString.Length;\n            }\n    \
    \    }\n        return longestString;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <c6cac2af6a2046838571f62c7f4de6ed>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <c6cac2af6a2046838571f62c7f4de6ed>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977009
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // Write\
    \ your code here.\n        return null;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <19f08efb1a274cc98cab25bd084d40fa>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <19f08efb1a274cc98cab25bd084d40fa>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977009
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string ans\
    \ = null;\n        foreach (string s in strings) {\n            if (ans == null\
    \ || s.Length > ans.Length) {\n                ans = s;\n            }\n     \
    \   }\n        return ans;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <780e2e0d2d4942bfbd594c2b02297f87>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <780e2e0d2d4942bfbd594c2b02297f87>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977009
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string maxLengthString\
    \ = null;\n        foreach (string s in strings) {\n            if (maxLengthString\
    \ == null || s.Length > maxLengthString.Length) {\n                maxLengthString\
    \ = s;\n            }\n        }\n        return maxLengthString;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <5e637d4427bb40cf8e78fd984345480d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <5e637d4427bb40cf8e78fd984345480d>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977009
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // your code\
    \ here\n        if (strings.Count == 0)\n            return null;\n        string\
    \ currLongest = strings[0];\n        foreach (string s in strings) {\n       \
    \     if (s.Length > currLongest.Length)\n                currLongest = s;\n \
    \       }\n        return currLongest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <58ea2250230944dc957e14d200135bfa>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <58ea2250230944dc957e14d200135bfa>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977009
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        return strings.Aggregate(\"\
    \", (max, cur) => max.Length > cur.Length ? max : cur);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f8d4a5407aab420bb4c8eb025613f322>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f8d4a5407aab420bb4c8eb025613f322>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659977010
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count()\
    \ == 0) {\n            return null;\n        } else {\n            return strings.Aggregate((longest,\
    \ s) => s.Length > longest.Length ? s : longest);\n        }\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <43049ebf0ed2495d999e2d0af922aafd>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <43049ebf0ed2495d999e2d0af922aafd>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977009
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // Write\
    \ your code here.\n        return null;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <19f08efb1a274cc98cab25bd084d40fa>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <19f08efb1a274cc98cab25bd084d40fa>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977009
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        } else {\n            int longest\
    \ = strings[0].Length;\n            int first = 0;\n            for (int i = 1;\
    \ i < strings.Count; i++) {\n                if (strings[i].Length > longest)\
    \ {\n                    longest = strings[i].Length;\n                    first\
    \ = i;\n                }\n            }\n            return strings[first];\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <565eeed9dcb44c348f08ac347c9ebdef>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <565eeed9dcb44c348f08ac347c9ebdef>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977009
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if(strings.Count\
    \ == 0) {\n            return null;\n        }\n        int index = 0;\n     \
    \   int length = strings[0].Length;\n        for(int i = 1; i < strings.Count;\
    \ i++) {\n            if(strings[i].Length > length) {\n                index\
    \ = i;\n                length = strings[i].Length;\n            }\n        }\n\
    \        return strings[index];\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <d628917805244970971366544136b333>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <d628917805244970971366544136b333>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977009
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string longest\
    \ = null;\n        int maxLength = 0;\n        foreach (string s in strings) {\n\
    \            if (s.Length > maxLength) {\n                maxLength = s.Length;\n\
    \                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <5ca60e995db84fff8db7ecf9e06251f4>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <5ca60e995db84fff8db7ecf9e06251f4>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977009
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string result = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > result.Length)\
    \ {\n                result = s;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <8fb647ae8bf74f08b9f154784e57cf84>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8fb647ae8bf74f08b9f154784e57cf84>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        int m = -1;\n\
    \        string longest = null;\n        foreach (string s in strings) {\n   \
    \         if (s.Length > m) {\n                m = s.Length;\n               \
    \ longest = s;\n            }\n        }\n        return longest;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <d26cf75ec5d04a6bad1becf4f5999dcf>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <d26cf75ec5d04a6bad1becf4f5999dcf>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977009
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        int maxSize = 0;\n   \
    \     int maxIndex = 0;\n        for (int i = 0; i < strings.Count; i++) {\n \
    \           if (strings[i].Length > maxSize) {\n                maxSize = strings[i].Length;\n\
    \                maxIndex = i;\n            }\n        }\n        return strings[maxIndex];\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <04c572c4f44c4dae8ba74b77887c4446>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <04c572c4f44c4dae8ba74b77887c4446>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977009
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if(strings.Count\
    \ == 0) return null;\n        if(strings.Count == 1) return strings[0];\n    \
    \    int longest_index = 0;\n        for(int i = 1; i < strings.Count; i++) {\n\
    \            if(strings[i].Length > strings[longest_index].Length) {\n       \
    \         longest_index = i;\n            }\n        }\n        return strings[longest_index];\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <0957a8732ab84a9a84c593550ef5218d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <0957a8732ab84a9a84c593550ef5218d>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977009
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        var max =\
    \ 0;\n        string longest = null;\n        foreach (var s in strings) {\n \
    \           if (s.Length > max) {\n                max = s.Length;\n         \
    \       longest = s;\n            }\n        }\n        return longest;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <3099d578ba3a4ac5b8c69d96e807fc0d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <3099d578ba3a4ac5b8c69d96e807fc0d>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977009
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string max\
    \ = null;\n        int maxLen = 0;\n        foreach (string s in strings) {\n\
    \            if (s.Length > maxLen) {\n                max = s;\n            \
    \    maxLen = s.Length;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <56eb8f1077cf4f0ea09c27d542f186db>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <56eb8f1077cf4f0ea09c27d542f186db>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977009
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // TODO:\
    \ write your code here\n        if (strings.Count == 0) {\n            return\
    \ null;\n        }\n        string longest = strings[0];\n        for (int i =\
    \ 1; i < strings.Count; i++) {\n            if (strings[i].Length > longest.Length)\
    \ {\n                longest = strings[i];\n            }\n        }\n       \
    \ return longest;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <d24da89ea72d4d15bcc739d7e7b82a7d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <d24da89ea72d4d15bcc739d7e7b82a7d>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977009
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string currentLongest\
    \ = strings[0];\n        foreach (string s in strings) {\n            if (s.Length\
    \ > currentLongest.Length) {\n                currentLongest = s;\n          \
    \  }\n        }\n        return currentLongest;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <d9abae28af894f849c804eb5b811ef84>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <d9abae28af894f849c804eb5b811ef84>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977009
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // TODO:\
    \ implement this method\n\n        // Return null in case input list is empty\n\
    \        if (strings.Count == 0) {\n            return null;\n        }\n\n  \
    \      // Use first string as the default longest\n        string longest = strings[0];\n\
    \n        // Loop through list, and check if any string is longer than the longest\
    \ string\n        foreach (string s in strings) {\n            if (s.Length >\
    \ longest.Length) {\n                longest = s;\n            }\n        }\n\n\
    \        return longest;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <b9c058f262674adeb0c4001580cf3bca>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <b9c058f262674adeb0c4001580cf3bca>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977009
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // Replace\
    \ the following with your code\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <2fe8308f4316425eaa0fcf826fac53d4>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <2fe8308f4316425eaa0fcf826fac53d4>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977009
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        int maxLength = strings[0].Length;\n\
    \        string longest = strings[0];\n        for (int i = 1; i < strings.Count;\
    \ i++) {\n            if (strings[i].Length > maxLength) {\n                maxLength\
    \ = strings[i].Length;\n                longest = strings[i];\n            }\n\
    \        }\n        return longest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <fd2393db63574639a6b8381e42d1a57c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <fd2393db63574639a6b8381e42d1a57c>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977009
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // Hint:\n\
    \        // 1. Use \"strings.Count()\" to get the number of strings in the list.\n\
    \        // 2. Use \"strings.ElementAt(i)\" to access the i-th string in the list.\n\
    \        // 3. Use \"strings.ElementAt(i).Length\" to get the length of the i-th\
    \ string.\n        // 4. If you use \"IndexOfMax\", you should use \"i+1\" because\
    \ the problem uses 1-based indexing.\n        return null;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <1f132fda97bc410a84c6938403377145>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <1f132fda97bc410a84c6938403377145>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977009
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string str=null;\n\
    \        foreach (string s in strings) {\n            if (str==null || str.Length<s.Length)\
    \ {\n                str=s;\n            }\n        }\n        return str;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <4a47b835baae423295e1ae52913e3476>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <4a47b835baae423295e1ae52913e3476>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977009
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string longest\
    \ = null;\n        foreach (string s in strings) {\n            if (longest ==\
    \ null || s.Length > longest.Length) {\n                longest = s;\n       \
    \     }\n        }\n        return longest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <5a8a8fbdba394736bc57e0058e2cc697>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <5a8a8fbdba394736bc57e0058e2cc697>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977010
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // Complete\
    \ this function.\n        string longest = null;\n        foreach (string s in\
    \ strings) {\n            if (longest == null || s.Length > longest.Length) {\n\
    \                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <d817051977f545ed8275d06633cdce14>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <d817051977f545ed8275d06633cdce14>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977010
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string l = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > l.Length)\
    \ {\n                l = s;\n            }\n        }\n        return l;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <0e07fe8c98284299880430f66885a4f1>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <0e07fe8c98284299880430f66885a4f1>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977010
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        int maxLength\
    \ = 0;\n        string longestString = null;\n        foreach (string s in strings)\
    \ {\n            if (s.Length > maxLength) {\n                maxLength = s.Length;\n\
    \                longestString = s;\n            }\n        }\n        return\
    \ longestString;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <00d8bcfc6aa04afa8ad071fb23bf7183>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <00d8bcfc6aa04afa8ad071fb23bf7183>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977010
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        int maxLen\
    \ = -1;\n        string maxStr = null;\n        foreach (string s in strings)\
    \ {\n            if (s.Length > maxLen) {\n                maxLen = s.Length;\n\
    \                maxStr = s;\n            }\n        }\n        return maxStr;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <da5d3ed5255b465a81628f9cf6c3d108>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <da5d3ed5255b465a81628f9cf6c3d108>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977011
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0)\n            return null;\n        int longest = 0;\n        int index\
    \ = 0;\n        for (int i = 0; i < strings.Count; i++) {\n            if (strings[i].Length\
    \ > longest) {\n                longest = strings[i].Length;\n               \
    \ index = i;\n            }\n        }\n        return strings[index];\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <070918a49d784c6d88346cb63e737ed1>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <070918a49d784c6d88346cb63e737ed1>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977010
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        var stringToReturn = (string)\"\
    \";\n        for (int i = 0; i < strings.Count; i++) {\n            if (strings[i].Length\
    \ > stringToReturn.Length) {\n                stringToReturn = strings[i];\n \
    \           }\n        }\n        return stringToReturn;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <0791ff3e712b41609367f05b3d7b218d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <0791ff3e712b41609367f05b3d7b218d>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977010
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        int n = strings.Count;\n\
    \        if (n == 0) {\n            return null;\n        }\n        string best\
    \ = strings[0];\n        int m = best.Length;\n        for (int i = 1; i < n;\
    \ i++) {\n            string s = strings[i];\n            int l = s.Length;\n\
    \            if (l > m) {\n                best = s;\n                m = l;\n\
    \            }\n        }\n        return best;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7ec45686084d47cdac8f44e425a3e582>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7ec45686084d47cdac8f44e425a3e582>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977010
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string res\
    \ = null;\n        int max = 0;\n        foreach (string s in strings) {\n   \
    \         if (s.Length > max) {\n                max = s.Length;\n           \
    \     res = s;\n            }\n        }\n        return res;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <e9e61b18e365481bb5c4e94f9ca8cb85>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e9e61b18e365481bb5c4e94f9ca8cb85>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977010
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string result\
    \ = null;\n        foreach (string s in strings) {\n            if (result ==\
    \ null || s.Length > result.Length) {\n                result = s;\n         \
    \   }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <0b93ac366c9e45c0963b46782935b999>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <0b93ac366c9e45c0963b46782935b999>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977011
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        else {\n            int\
    \ maxLen = 0;\n            string maxStr = null;\n            foreach (string\
    \ str in strings) {\n                if (str.Length > maxLen) {\n            \
    \        maxLen = str.Length;\n                    maxStr = str;\n           \
    \     }\n            }\n            return maxStr;\n        }\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <9df82dd2398f4b2988c89409e04bfa04>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <9df82dd2398f4b2988c89409e04bfa04>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977010
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        int max_len\
    \ = 0;\n        string longest = null;\n        foreach (string s in strings)\
    \ {\n            if (s.Length > max_len) {\n                max_len = s.Length;\n\
    \                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <e24af3dd1a2f497cb84e37f2fcd794e3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e24af3dd1a2f497cb84e37f2fcd794e3>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977011
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        return strings.Aggregate((a,\
    \ b) => a.Length > b.Length ? a : b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains\
    \ no elements\n  at System.Linq.Enumerable.Aggregate[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source, System.Func`3[T1,T2,TResult] func) [0x00030] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.Longest (System.Collections.Generic.List`1[T] strings) [0x00001]\
    \ in <a70a4f9176d24d8290c4effde2a6cee7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00006] in <a70a4f9176d24d8290c4effde2a6cee7>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.InvalidOperationException: Sequence contains no elements\n\
    \  at System.Linq.Enumerable.Aggregate[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source, System.Func`3[T1,T2,TResult] func) [0x00030] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.Longest (System.Collections.Generic.List`1[T] strings) [0x00001]\
    \ in <a70a4f9176d24d8290c4effde2a6cee7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00006] in <a70a4f9176d24d8290c4effde2a6cee7>:0 \n"
  stdout: ''
  timestamp: 1659977011
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        return strings.Aggregate((max,\
    \ cur) => max.Length > cur.Length ? max : cur);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <2f13fc7755f845b1a39e3725ac1fa623>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <2f13fc7755f845b1a39e3725ac1fa623>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977011
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0)\n            return null;\n        string max = strings[0];\n        for\
    \ (int i = 1; i < strings.Count; i++) {\n            if (strings[i].Length > max.Length)\n\
    \                max = strings[i];\n        }\n        return max;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <382987d6677a4f4983918177cef2cfd4>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <382987d6677a4f4983918177cef2cfd4>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977011
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string longest\
    \ = null;\n        foreach (string s in strings) {\n            if (longest ==\
    \ null || s.Length > longest.Length) {\n                longest = s;\n       \
    \     }\n        }\n        return longest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <5a8a8fbdba394736bc57e0058e2cc697>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <5a8a8fbdba394736bc57e0058e2cc697>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977010
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <106e4eec15f54c548056047d4df3d1b9>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <106e4eec15f54c548056047d4df3d1b9>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977011
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string res = strings[0];\n\
    \        foreach (string str in strings) {\n            if (str.Length > res.Length)\
    \ {\n                res = str;\n            }\n        }\n        return res;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <84e3a3b0b48d40cab0115372ba78c6de>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <84e3a3b0b48d40cab0115372ba78c6de>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977011
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <106e4eec15f54c548056047d4df3d1b9>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <106e4eec15f54c548056047d4df3d1b9>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977011
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // Your code\
    \ here.\n        return null;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <2ff0a4b47f064829b697dc9f90c2f01e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <2ff0a4b47f064829b697dc9f90c2f01e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977011
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        return strings.Aggregate((max,\
    \ x) => x.Length > max.Length ? x : max);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains\
    \ no elements\n  at System.Linq.Enumerable.Aggregate[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source, System.Func`3[T1,T2,TResult] func) [0x00030] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.Longest (System.Collections.Generic.List`1[T] strings) [0x00001]\
    \ in <70f39d696417472dac2833e9bd17755a>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00006] in <70f39d696417472dac2833e9bd17755a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.InvalidOperationException: Sequence contains no elements\n\
    \  at System.Linq.Enumerable.Aggregate[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source, System.Func`3[T1,T2,TResult] func) [0x00030] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.Longest (System.Collections.Generic.List`1[T] strings) [0x00001]\
    \ in <70f39d696417472dac2833e9bd17755a>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00006] in <70f39d696417472dac2833e9bd17755a>:0 \n"
  stdout: ''
  timestamp: 1659977011
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string longest\
    \ = null;\n        foreach (string s in strings) {\n            if (longest ==\
    \ null || s.Length > longest.Length) {\n                longest = s;\n       \
    \     }\n        }\n        return longest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <5a8a8fbdba394736bc57e0058e2cc697>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <5a8a8fbdba394736bc57e0058e2cc697>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977010
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        } else {\n            string ret\
    \ = strings[0];\n            int max = ret.Length;\n            for (int i = 1;\
    \ i < strings.Count; i++) {\n                int len = strings[i].Length;\n  \
    \              if (len > max) {\n                    ret = strings[i];\n     \
    \               max = len;\n                }\n            }\n            return\
    \ ret;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <c1b71db9f24749749140b950cd64918e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <c1b71db9f24749749140b950cd64918e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977011
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string result\
    \ = null;\n        int result_len = 0;\n        foreach (string s in strings)\
    \ {\n            if (s.Length > result_len) {\n                result = s;\n \
    \               result_len = s.Length;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <0170cd1c90c1481faecd3be62a06747c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <0170cd1c90c1481faecd3be62a06747c>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977011
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string result\
    \ = null;\n        int max = -1;\n        foreach (string s in strings) {\n  \
    \          if (s.Length > max) {\n                max = s.Length;\n          \
    \      result = s;\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <dca2f92583da4bf1bf5c3e09ab72fe2e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <dca2f92583da4bf1bf5c3e09ab72fe2e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977011
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // your code\
    \ goes here\n        var result = strings.OrderByDescending(x => x.Length).FirstOrDefault();\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <17598cf05ebd49c88c333fb3f86af2fe>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <17598cf05ebd49c88c333fb3f86af2fe>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977011
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // >>> YOUR\
    \ CODE HERE <<<\n        if (strings.Count == 0) {\n            return null;\n\
    \        }\n        var longest = strings[0];\n        foreach (var s in strings)\
    \ {\n            if (s.Length > longest.Length) {\n                longest = s;\n\
    \            }\n        }\n        return longest;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <284e8105a61f49e8bc0668c78980c9c0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <284e8105a61f49e8bc0668c78980c9c0>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977011
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // STUDENT_TODO:\
    \ add implementation here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <4701a5ca0b954c9790a2dfb20366ab24>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <4701a5ca0b954c9790a2dfb20366ab24>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977011
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        return (strings.Count\
    \ == 0 ? null : strings.OrderByDescending(s => s.Length).First());\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <d1cac7a0552846b194b7cd5d365871c5>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <d1cac7a0552846b194b7cd5d365871c5>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977011
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string longest\
    \ = null;\n        foreach (string s in strings) {\n            if (longest ==\
    \ null || s.Length > longest.Length) {\n                longest = s;\n       \
    \     }\n        }\n        return longest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <5a8a8fbdba394736bc57e0058e2cc697>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <5a8a8fbdba394736bc57e0058e2cc697>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977010
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <c3c9adcacb6a4bdd85b432ee449ca2e6>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <c3c9adcacb6a4bdd85b432ee449ca2e6>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977011
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        int maxlen\
    \ = -1;\n        string max = null;\n        foreach (string s in strings) {\n\
    \            if (s.Length > maxlen) {\n                maxlen = s.Length;\n  \
    \              max = s;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <322513ac18e8447489ca6bef8d40eb43>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <322513ac18e8447489ca6bef8d40eb43>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977011
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0)\n            return null;\n        string best = strings[0];\n       \
    \ foreach (string s in strings)\n            if (s.Length > best.Length)\n   \
    \             best = s;\n        return best;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <6f34f105366a4aa1ac6144ae8e7726e5>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <6f34f105366a4aa1ac6144ae8e7726e5>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string str in strings) {\n            if (str.Length > longest.Length)\
    \ {\n                longest = str;\n            }\n        }\n        return\
    \ longest;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <f38a9a3547d846ffafe634029fa858a7>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <f38a9a3547d846ffafe634029fa858a7>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if(strings.Count\
    \ == 0) {\n            return null;\n        }\n        string max = strings[0];\n\
    \        for(int i = 1; i < strings.Count; i++) {\n            if(strings[i].Length\
    \ > max.Length) {\n                max = strings[i];\n            }\n        }\n\
    \        return max;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <d39a4e6c1b524141a655a9cb25593e6b>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <d39a4e6c1b524141a655a9cb25593e6b>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        for (int i = 1; i < strings.Count; i++) {\n            if (strings[i].Length\
    \ > longest.Length) {\n                longest = strings[i];\n            }\n\
    \        }\n        return longest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <1717f3413bd94cdbbeba61b63c5d3a46>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <1717f3413bd94cdbbeba61b63c5d3a46>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0)\n            return null;\n        int n = strings.Count;\n        int\
    \ maxLength = -1;\n        int stringWithMaxLength = -1;\n        for (int i =\
    \ 0; i < n; i++) {\n            if (strings[i].Length > maxLength) {\n       \
    \         maxLength = strings[i].Length;\n                stringWithMaxLength\
    \ = i;\n            }\n        }\n        return strings[stringWithMaxLength];\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <93272ed4404a4dbdb9eb06b469752bda>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <93272ed4404a4dbdb9eb06b469752bda>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string result = strings[0];\n\
    \        foreach (string item in strings) {\n            if (item.Length > result.Length)\
    \ {\n                result = item;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <8227b49393d04ad5a3ecc3b50c2c0d21>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8227b49393d04ad5a3ecc3b50c2c0d21>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string result = (string)\"\
    \";\n        foreach (string s in strings) {\n            if (s.Length > result.Length)\
    \ {\n                result = s;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <28e3b5d2d25245fcaee224706e7b51f9>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <28e3b5d2d25245fcaee224706e7b51f9>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string max\
    \ = null;\n        foreach (string s in strings) {\n            if (max == null\
    \ || s.Length > max.Length) {\n                max = s;\n            }\n     \
    \   }\n        return max;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <c7f8f315b2454f29a21f44388f40122f>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <c7f8f315b2454f29a21f44388f40122f>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string longest\
    \ = null;\n        if (strings.Count == 0)\n            return longest;\n    \
    \    longest = strings[0];\n        foreach (string s in strings) {\n        \
    \    if (s.Length > longest.Length)\n                longest = s;\n        }\n\
    \        return longest;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <2bf797f765b84db3980ab03fce95ab6d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <2bf797f765b84db3980ab03fce95ab6d>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        var max =\
    \ strings.Max(s => s.Length);\n        var result = strings.FirstOrDefault(s =>\
    \ s.Length == max);\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains\
    \ no elements\n  at System.Linq.Enumerable.Max[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source, System.Func`2[T,TResult] selector) [0x00030] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.Longest (System.Collections.Generic.List`1[T] strings) [0x00007]\
    \ in <b6189c63fac94d24a4d06888f5fc06b8>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00006] in <b6189c63fac94d24a4d06888f5fc06b8>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.InvalidOperationException: Sequence contains no elements\n\
    \  at System.Linq.Enumerable.Max[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source, System.Func`2[T,TResult] selector) [0x00030] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.Longest (System.Collections.Generic.List`1[T] strings) [0x00007]\
    \ in <b6189c63fac94d24a4d06888f5fc06b8>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00006] in <b6189c63fac94d24a4d06888f5fc06b8>:0 \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // Your code\
    \ here\n        int maxSize = 0;\n        string maxString = null;\n        foreach\
    \ (string s in strings) {\n            if (s.Length > maxSize) {\n           \
    \     maxSize = s.Length;\n                maxString = s;\n            }\n   \
    \     }\n        return maxString;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <817510453ead439a9d9ed8faf028cbac>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <817510453ead439a9d9ed8faf028cbac>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string result = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > result.Length)\
    \ {\n                result = s;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <8fb647ae8bf74f08b9f154784e57cf84>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8fb647ae8bf74f08b9f154784e57cf84>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        } else {\n            string result\
    \ = strings[0];\n            int max_length = result.Length;\n            foreach\
    \ (string s in strings) {\n                if (s.Length > max_length) {\n    \
    \                result = s;\n                    max_length = s.Length;\n   \
    \             }\n            }\n            return result;\n        }\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <48000b14ab0d44c2854e89f60d679f20>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <48000b14ab0d44c2854e89f60d679f20>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <106e4eec15f54c548056047d4df3d1b9>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <106e4eec15f54c548056047d4df3d1b9>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977011
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string result = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > result.Length)\
    \ {\n                result = s;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <8fb647ae8bf74f08b9f154784e57cf84>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8fb647ae8bf74f08b9f154784e57cf84>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        for (int i = 1; i < strings.Count; i++) {\n            if (strings[i].Length\
    \ > longest.Length) {\n                longest = strings[i];\n            }\n\
    \        }\n        return longest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <1717f3413bd94cdbbeba61b63c5d3a46>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <1717f3413bd94cdbbeba61b63c5d3a46>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count()\
    \ == 0)\n            return null;\n        string maxString = null;\n        int\
    \ maxLength = -1;\n        foreach (string s in strings) {\n            if (s.Length\
    \ > maxLength) {\n                maxString = s;\n                maxLength =\
    \ s.Length;\n            }\n        }\n        return maxString;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <61ce092305244cd9b0194a37d584dbd2>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <61ce092305244cd9b0194a37d584dbd2>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0)\n            return null;\n        string longest = strings[0];\n    \
    \    foreach (string s in strings)\n            if (s.Length > longest.Length)\n\
    \                longest = s;\n        return longest;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7f28e3db9154457a9cc95b150915045b>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7f28e3db9154457a9cc95b150915045b>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // Guard\n\
    \        if (strings.Count == 0) {\n            return null;\n        }\n    \
    \    // Work\n        string longest = strings[0];\n        for (int i = 1; i\
    \ < strings.Count; i++) {\n            if (strings[i].Length > longest.Length)\
    \ {\n                longest = strings[i];\n            }\n        }\n       \
    \ return longest;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <e1dc30b058a74a55a45db13d08a1c3e3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e1dc30b058a74a55a45db13d08a1c3e3>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // Implement\
    \ this function.\n        string longest_string = null;\n        int max_length\
    \ = 0;\n        foreach (string s in strings) {\n            if (s.Length > max_length)\
    \ {\n                max_length = s.Length;\n                longest_string =\
    \ s;\n            }\n        }\n        return longest_string;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <f14eaad7e6c64c9f931c5e4c6accdaf4>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <f14eaad7e6c64c9f931c5e4c6accdaf4>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if(strings.Count\
    \ == 0) return null;\n        if(strings.Count == 1) return strings[0];\n    \
    \    string longest = strings[0];\n        for(int i = 1; i < strings.Count; i++)\
    \ {\n            if(strings[i].Length > longest.Length) {\n                longest\
    \ = strings[i];\n            }\n        }\n        return longest;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <8bf59f3334984b51bb97f5c528a22a34>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8bf59f3334984b51bb97f5c528a22a34>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        return strings.Aggregate((curr,\
    \ next) => (curr.Length > next.Length) ? curr : next);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains\
    \ no elements\n  at System.Linq.Enumerable.Aggregate[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source, System.Func`3[T1,T2,TResult] func) [0x00030] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.Longest (System.Collections.Generic.List`1[T] strings) [0x00001]\
    \ in <98ec1b060ce64a1e835d5e4ddee453e8>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00006] in <98ec1b060ce64a1e835d5e4ddee453e8>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.InvalidOperationException: Sequence contains no elements\n\
    \  at System.Linq.Enumerable.Aggregate[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source, System.Func`3[T1,T2,TResult] func) [0x00030] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.Longest (System.Collections.Generic.List`1[T] strings) [0x00001]\
    \ in <98ec1b060ce64a1e835d5e4ddee453e8>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00006] in <98ec1b060ce64a1e835d5e4ddee453e8>:0 \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        return strings.Aggregate((x,\
    \ y) => x.Length > y.Length ? x : y);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains\
    \ no elements\n  at System.Linq.Enumerable.Aggregate[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source, System.Func`3[T1,T2,TResult] func) [0x00030] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.Longest (System.Collections.Generic.List`1[T] strings) [0x00001]\
    \ in <0e87b6bb056848c3837c3730fba1dd9b>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00006] in <0e87b6bb056848c3837c3730fba1dd9b>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.InvalidOperationException: Sequence contains no elements\n\
    \  at System.Linq.Enumerable.Aggregate[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source, System.Func`3[T1,T2,TResult] func) [0x00030] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.Longest (System.Collections.Generic.List`1[T] strings) [0x00001]\
    \ in <0e87b6bb056848c3837c3730fba1dd9b>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00006] in <0e87b6bb056848c3837c3730fba1dd9b>:0 \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        //TODO: fix\
    \ this implementation\n        if (strings.Count == 0)\n            return null;\n\
    \        if (strings.Count == 1)\n            return strings[0];\n        string\
    \ ret = strings[0];\n        foreach (string e in strings) {\n            if (e.Length\
    \ > ret.Length)\n                ret = e;\n        }\n        return ret;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <c1c45d0e1edf46f7966cfab9dac8dc98>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <c1c45d0e1edf46f7966cfab9dac8dc98>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        int l = 0;\n\
    \        string longest = null;\n        for (int i = 0; i < strings.Count; i++)\
    \ {\n            if (strings[i].Length > l) {\n                l = strings[i].Length;\n\
    \                longest = strings[i];\n            }\n        }\n        return\
    \ longest;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <afb63f8fbff946f1ab48d35c882d03e0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <afb63f8fbff946f1ab48d35c882d03e0>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        } else {\n            // list[0]\
    \ is initialized to a random value\n            string best = strings[0];\n  \
    \          foreach (string s in strings) {\n                if (s.Length > best.Length)\
    \ {\n                    best = s;\n                }\n            }\n       \
    \     return best;\n        }\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <c86721c9f25f44c58fbf75fe4389b96f>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <c86721c9f25f44c58fbf75fe4389b96f>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977013
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0)\n            return null;\n        string max = strings[0];\n        foreach\
    \ (string s in strings)\n            if (s.Length > max.Length)\n            \
    \    max = s;\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <14fdc101b9c7475c89232cf932d3b849>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <14fdc101b9c7475c89232cf932d3b849>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977013
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string result\
    \ = null;\n        foreach (string str in strings) {\n            if (result ==\
    \ null || str.Length > result.Length) {\n                result = str;\n     \
    \       }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <b2fc1bd59c434096ae6b01e4c7b4373e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <b2fc1bd59c434096ae6b01e4c7b4373e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977013
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // Your code\
    \ goes here\n        // There is a way to simplify this code a bit (look at the\
    \ foreach loops)\n        // But the goal here is to be as general as possible.\n\
    \        // Therefore, we'll not change the structure of the loops.\n        string\
    \ longest = null;\n        foreach (string s in strings) {\n            if (longest\
    \ == null)\n                longest = s;\n            else if (s.Length > longest.Length)\n\
    \                longest = s;\n        }\n        return longest;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <b04e99a7654443daadb52eeb6c0789c9>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <b04e99a7654443daadb52eeb6c0789c9>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0)\n            return null;\n        string longest = strings[0];\n    \
    \    foreach (string str in strings) {\n            if (str.Length > longest.Length)\n\
    \                longest = str;\n        }\n        return longest;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <4ad5e196adff4bf68a08f3cef4a38787>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <4ad5e196adff4bf68a08f3cef4a38787>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977013
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        for (int i = 1; i < strings.Count; i++) {\n            if (strings[i].Length\
    \ > longest.Length) {\n                longest = strings[i];\n            }\n\
    \        }\n        return longest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <1717f3413bd94cdbbeba61b63c5d3a46>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <1717f3413bd94cdbbeba61b63c5d3a46>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string result\
    \ = null;\n        if (strings.Count != 0) {\n            result = strings[0];\n\
    \            for (int i = 1; i < strings.Count; i++) {\n                if (strings[i].Length\
    \ > result.Length) {\n                    result = strings[i];\n             \
    \   }\n            }\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <bd17c1f3384642169a019e26644ade2c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <bd17c1f3384642169a019e26644ade2c>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977013
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // >>> Longest((new\
    \ List<string>()))\n        // null\n        if (strings.Count == 0) {\n     \
    \       return null;\n        }\n        // Set maximum length to be of the first\
    \ string.\n        int maxLength = strings[0].Length;\n        // Set maximum\
    \ length string to be the first string.\n        string maxLengthString = strings[0];\n\
    \        // >>> Longest((new List<string>(new string[]{(string)\"a\", (string)\"\
    b\", (string)\"c\"})))\n        // (\"a\")\n        // Iterate over all strings.\n\
    \        for (int i = 0; i < strings.Count; i++) {\n            // >>> Longest((new\
    \ List<string>(new string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n\
    \            // (\"ccc\")\n            // >>> Longest((new List<string>(new string[]{(string)\"\
    a\", (string)\"bbb\", (string)\"ccc\"})))\n            // (\"bbb\")\n        \
    \    // >>> Longest((new List<string>(new string[]{(string)\"a\", (string)\"bbbb\"\
    , (string)\"ccc\"})))\n            // (\"bbbb\")\n            // If this string\
    \ is longer than the longest string so far, update the maximum\n            //\
    \ length and the maximum length string.\n            if (strings[i].Length > maxLength)\
    \ {\n                maxLength = strings[i].Length;\n                maxLengthString\
    \ = strings[i];\n            }\n        }\n        // Return the maximum length\
    \ string.\n        return maxLengthString;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <f7e1a21f2d504efc88c1ece4f4a8588e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <f7e1a21f2d504efc88c1ece4f4a8588e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977013
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // Check\
    \ if list is empty, return null in that case\n        if (strings.Count == 0)\
    \ {\n            return null;\n        }\n        // Iterate over all strings,\
    \ find the one with the longest length\n        int longest_idx = 0;\n       \
    \ for (int i = 1; i < strings.Count; i++) {\n            if (strings[i].Length\
    \ > strings[longest_idx].Length) {\n                longest_idx = i;\n       \
    \     }\n        }\n        // Return longest string\n        return strings[longest_idx];\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <a4ae8e91e66d4a828807ef46e8d01f69>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <a4ae8e91e66d4a828807ef46e8d01f69>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977013
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string res = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > res.Length)\
    \ {\n                res = s;\n            }\n        }\n        return res;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <757e345317ca4c7cbe4f443310452c57>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <757e345317ca4c7cbe4f443310452c57>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977013
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string ret = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > ret.Length)\
    \ {\n                ret = s;\n            }\n        }\n        return ret;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <14c7546a308148eb98d0741a0db39d3f>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <14c7546a308148eb98d0741a0db39d3f>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977013
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string longest\
    \ = null;\n        int maxLength = 0;\n        foreach (string s in strings) {\n\
    \            if (s.Length > maxLength) {\n                maxLength = s.Length;\n\
    \                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <5ca60e995db84fff8db7ecf9e06251f4>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <5ca60e995db84fff8db7ecf9e06251f4>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977009
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        var result = strings[0];\n\
    \        foreach (var s in strings) {\n            if (s.Length > result.Length)\
    \ {\n                result = s;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <60a19f9fd3d5488582e9debc5cead9b8>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <60a19f9fd3d5488582e9debc5cead9b8>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977013
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        } else {\n            var result\
    \ = strings[0];\n            var maxlen = result.Length;\n            foreach\
    \ (var s in strings) {\n                if (s.Length > maxlen) {\n           \
    \         result = s;\n                    maxlen = s.Length;\n              \
    \  }\n            }\n            return result;\n        }\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <fb94c302be8a4ccaaeb1b5f5a28a5265>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <fb94c302be8a4ccaaeb1b5f5a28a5265>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977013
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <c3c9adcacb6a4bdd85b432ee449ca2e6>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <c3c9adcacb6a4bdd85b432ee449ca2e6>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977011
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string result = strings[0];\n\
    \        int len = result.Length;\n        for (int i = 1; i < strings.Count;\
    \ i++) {\n            int len2 = strings[i].Length;\n            if (len2 > len)\
    \ {\n                result = strings[i];\n                len = len2;\n     \
    \       }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <27d0c9388d2e4162b6ede48de88b20ba>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <27d0c9388d2e4162b6ede48de88b20ba>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977013
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string longStr\
    \ = null;\n        int longLen = 0;\n        foreach (string s in strings) {\n\
    \            if (s.Length > longLen) {\n                longStr = s;\n       \
    \         longLen = s.Length;\n            }\n        }\n        return longStr;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <16e2f64afe6f48b783adb1eb9709cf6e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <16e2f64afe6f48b783adb1eb9709cf6e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977013
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0)\n            return null;\n        if (strings.Count == 1)\n         \
    \   return strings[0];\n        int longestLength = strings[0].Length;\n     \
    \   string longestStr = strings[0];\n        foreach (string str in strings) {\n\
    \            if (str.Length > longestLength) {\n                longestLength\
    \ = str.Length;\n                longestStr = str;\n            }\n        }\n\
    \        return longestStr;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <3d06e09eddf24112b88fb28c6446b4d0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <3d06e09eddf24112b88fb28c6446b4d0>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977013
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // TODO:\
    \ implement the function\n        string s = \"\";\n        if (strings.Count\
    \ > 0) {\n            s = strings[0];\n            for (int i = 1; i < strings.Count;\
    \ i++) {\n                if (strings[i].Length > s.Length) {\n              \
    \      s = strings[i];\n                }\n            }\n        }\n        return\
    \ s;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ebfdc50698c24eee93130860dd82fbcc>:0 \n"
  stdout: ''
  timestamp: 1659977013
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // Implement\
    \ me!\n        return null;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <bf1bcc94f7654a898d003fc06e2454bc>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <bf1bcc94f7654a898d003fc06e2454bc>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977013
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string longestString\
    \ = null;\n        foreach (string s in strings) {\n            if (longestString\
    \ == null || s.Length > longestString.Length) {\n                longestString\
    \ = s;\n            }\n        }\n        return longestString;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <e9ed9440c26740d69a8e8159c7853d63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e9ed9440c26740d69a8e8159c7853d63>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977013
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        int maxLen\
    \ = 0;\n        string longest = null;\n        foreach (string s in strings)\
    \ {\n            if (s.Length > maxLen) {\n                maxLen = s.Length;\n\
    \                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7ec689380eb94eaa8ddc5dedeec70f27>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7ec689380eb94eaa8ddc5dedeec70f27>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977013
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        return strings.OrderByDescending(s\
    \ => s.Length).First();\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <4db6985881654f4fa6375a223bf90d47>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <4db6985881654f4fa6375a223bf90d47>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977013
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        int longest = 0;\n   \
    \     int index = 0;\n        for (int i = 0; i < strings.Count; i++) {\n    \
    \        if (strings[i].Length > longest) {\n                longest = strings[i].Length;\n\
    \                index = i;\n            }\n        }\n        return strings[index];\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <b9d26ad598344c0b8676f4b298e500df>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <b9d26ad598344c0b8676f4b298e500df>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977013
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <c3c9adcacb6a4bdd85b432ee449ca2e6>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <c3c9adcacb6a4bdd85b432ee449ca2e6>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977011
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0)\n            return null;\n        var longestString = strings[0];\n \
    \       foreach (var s in strings) {\n            if (s.Length > longestString.Length)\n\
    \                longestString = s;\n        }\n        return longestString;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <c7dde21f17594e48adefb01cfd7afdca>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <c7dde21f17594e48adefb01cfd7afdca>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977013
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        return strings.Aggregate(\"\
    \", (longest, next) => next.Length > longest.Length ? next : longest);\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2180649ead2b4eddb8d284905bdfcba8>:0 \n"
  stdout: ''
  timestamp: 1659977013
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // find the\
    \ length of the longest string\n        int max_length = 0;\n        foreach (string\
    \ s in strings) {\n            int length = s.Length;\n            if (length\
    \ > max_length) {\n                max_length = length;\n            }\n     \
    \   }\n        // find the first one that has that length\n        foreach (string\
    \ s in strings) {\n            if (s.Length == max_length) {\n               \
    \ return s;\n            }\n        }\n        // nothing found\n        return\
    \ null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <8e7be1c8a179457dbac11db4c11a3324>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8e7be1c8a179457dbac11db4c11a3324>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977014
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        for (int i = 1; i < strings.Count; i++) {\n            if (strings[i].Length\
    \ > longest.Length) {\n                longest = strings[i];\n            }\n\
    \        }\n        return longest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <1717f3413bd94cdbbeba61b63c5d3a46>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <1717f3413bd94cdbbeba61b63c5d3a46>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string result = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > result.Length)\
    \ {\n                result = s;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <8fb647ae8bf74f08b9f154784e57cf84>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8fb647ae8bf74f08b9f154784e57cf84>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        int longest = 0;\n   \
    \     string result = null;\n        foreach (string s in strings) {\n       \
    \     if (s.Length > longest) {\n                longest = s.Length;\n       \
    \         result = s;\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <50a75c9ddae642608cac1ec6f1a5b11b>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <50a75c9ddae642608cac1ec6f1a5b11b>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977014
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string longestStr\
    \ = null;\n        int longestStrLen = 0;\n        foreach (string str in strings)\
    \ {\n            int strLen = str.Length;\n            if (strLen > longestStrLen)\
    \ {\n                longestStr = str;\n                longestStrLen = strLen;\n\
    \            }\n        }\n        return longestStr;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <3376fafdba694de080ed2b5ce43f239f>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <3376fafdba694de080ed2b5ce43f239f>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977014
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        return strings.Count\
    \ == 0 ? null : strings.Aggregate((x, y) => x.Length > y.Length ? x : y);\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <d4c8a7a426c741e0957d760728ab08fe>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <d4c8a7a426c741e0957d760728ab08fe>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977014
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        var ret =\
    \ (string)null;\n        foreach (var s in strings) {\n            if (ret ==\
    \ null || s.Length > ret.Length) {\n                ret = s;\n            }\n\
    \        }\n        return ret;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <eaf610aca79147ba8687e46d2f0a3492>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <eaf610aca79147ba8687e46d2f0a3492>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977014
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        return (strings.Count\
    \ == 0) ? null : strings.Aggregate((x, y) => x.Length > y.Length ? x : y);\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <f9af9980e6414d8387de00a61172d4aa>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <f9af9980e6414d8387de00a61172d4aa>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977014
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string maxString = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > maxString.Length)\
    \ {\n                maxString = s;\n            }\n        }\n        return\
    \ maxString;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <b96945994033416dbe4b477499c8491e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <b96945994033416dbe4b477499c8491e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977014
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string result = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > result.Length)\
    \ {\n                result = s;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <8fb647ae8bf74f08b9f154784e57cf84>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8fb647ae8bf74f08b9f154784e57cf84>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string best\
    \ = null;\n        foreach (string s in strings) {\n            if (best == null\
    \ || s.Length > best.Length) {\n                best = s;\n            }\n   \
    \     }\n        return best;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <ac3eb2c9c4024329a579d2058a229c9b>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <ac3eb2c9c4024329a579d2058a229c9b>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977014
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        int maxLen\
    \ = 0;\n        string longest = null;\n        foreach (string s in strings)\
    \ {\n            if (s.Length > maxLen) {\n                maxLen = s.Length;\n\
    \                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7ec689380eb94eaa8ddc5dedeec70f27>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7ec689380eb94eaa8ddc5dedeec70f27>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977013
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // Fill in\
    \ here.\n        if (strings.Count == 0) {\n            return null;\n       \
    \ }\n        var length = 0;\n        var result = (string)\"\";\n        foreach\
    \ (var item in strings) {\n            if (item.Length > length) {\n         \
    \       length = item.Length;\n                result = item;\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <e48a45661f08450fa41daf42ea470f63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e48a45661f08450fa41daf42ea470f63>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977014
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // TODO:\
    \ Implement.\n        if (strings.Count == 0)\n            return null;\n    \
    \    string longest = strings[0];\n        for (int i = 1; i < strings.Count;\
    \ i++)\n        {\n            if (strings[i].Length > longest.Length)\n     \
    \           longest = strings[i];\n        }\n        return longest;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <94981ac5dba747a6a3dbb425c0de32e2>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <94981ac5dba747a6a3dbb425c0de32e2>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977014
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string max = strings[0];\n\
    \        for (int i = 1; i < strings.Count; i++) {\n            if (strings[i].Length\
    \ > max.Length) {\n                max = strings[i];\n            }\n        }\n\
    \        return max;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <4d15d16e738340b18c461ce2ab69a625>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <4d15d16e738340b18c461ce2ab69a625>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977014
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string result = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > result.Length)\
    \ {\n                result = s;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <8fb647ae8bf74f08b9f154784e57cf84>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8fb647ae8bf74f08b9f154784e57cf84>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string curr = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > curr.Length)\
    \ {\n                curr = s;\n            }\n        }\n        return curr;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <e7dc9ad533ac4e22a1adf96fa8360b30>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e7dc9ad533ac4e22a1adf96fa8360b30>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977014
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <c3c9adcacb6a4bdd85b432ee449ca2e6>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <c3c9adcacb6a4bdd85b432ee449ca2e6>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977011
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        for (int i = 1; i < strings.Count; i++) {\n            if (strings[i].Length\
    \ > longest.Length) {\n                longest = strings[i];\n            }\n\
    \        }\n        return longest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <1717f3413bd94cdbbeba61b63c5d3a46>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <1717f3413bd94cdbbeba61b63c5d3a46>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0)\n            return null;\n        string longest = strings[0];\n    \
    \    foreach (string s in strings)\n            if (s.Length > longest.Length)\n\
    \                longest = s;\n        return longest;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7f28e3db9154457a9cc95b150915045b>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7f28e3db9154457a9cc95b150915045b>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0)\n            return null;\n        var iter = strings.GetEnumerator();\n\
    \        iter.MoveNext();\n        var result = iter.Current;\n        while (iter.MoveNext())\
    \ {\n            if (iter.Current.Length > result.Length)\n                result\
    \ = iter.Current;\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <e6168e544d234311a3f75e01ea5df8f2>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e6168e544d234311a3f75e01ea5df8f2>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977014
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string maxLengthWord\
    \ = null;\n        int maxLength = 0;\n        foreach (string s in strings) {\n\
    \            if (s.Length > maxLength) {\n                maxLength = s.Length;\n\
    \                maxLengthWord = s;\n            }\n        }\n        return\
    \ maxLengthWord;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <8e9f1085b14443d7ba0dd9f7fca511b6>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8e9f1085b14443d7ba0dd9f7fca511b6>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977014
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count()\
    \ == 0) {\n            return null;\n        }\n        int maxLength = strings[0].Length;\n\
    \        string maxString = strings[0];\n        foreach (string str in strings)\
    \ {\n            if (str.Length > maxLength) {\n                maxLength = str.Length;\n\
    \                maxString = str;\n            }\n        }\n        return maxString;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <8ddecfc0927c4877aafd451981b4bab1>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8ddecfc0927c4877aafd451981b4bab1>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977014
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string str in strings) {\n            if (str.Length > longest.Length)\
    \ {\n                longest = str;\n            }\n        }\n        return\
    \ longest;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <f38a9a3547d846ffafe634029fa858a7>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <f38a9a3547d846ffafe634029fa858a7>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string l\
    \ = null;\n        int maxLength = 0;\n        foreach (string s in strings) {\n\
    \            if (s.Length > maxLength) {\n                l = s;\n           \
    \     maxLength = s.Length;\n            }\n        }\n        return l;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <15d845b4d1d54f1da50cc0b6145f023a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <15d845b4d1d54f1da50cc0b6145f023a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977014
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0)\n            return null;\n        return strings.Aggregate((a, b) =>\
    \ a.Length > b.Length ? a : b);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <e08dc49a89cd4da69e6d3ab24598b9fc>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e08dc49a89cd4da69e6d3ab24598b9fc>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977014
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        throw new\
    \ NotImplementedException();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00006] in <038a9e167bd24b82a4183f2b029a736e>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00006]\
    \ in <038a9e167bd24b82a4183f2b029a736e>:0 \n"
  stdout: ''
  timestamp: 1659977014
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        int max =\
    \ int.MinValue;\n        string ans = null;\n        foreach (string s in strings)\
    \ {\n            if (s.Length > max) {\n                max = s.Length;\n    \
    \            ans = s;\n            }\n        }\n        return ans;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <98eacfd204124da9a29f1e786b2d6080>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <98eacfd204124da9a29f1e786b2d6080>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977014
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0)\n            return null;\n        string longest = strings[0];\n    \
    \    foreach (string s in strings)\n            if (s.Length > longest.Length)\n\
    \                longest = s;\n        return longest;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7f28e3db9154457a9cc95b150915045b>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7f28e3db9154457a9cc95b150915045b>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977012
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        else {\n            string\
    \ current = strings[0];\n            foreach (string s in strings) {\n       \
    \         if (s.Length > current.Length) {\n                    current = s;\n\
    \                }\n            }\n            return current;\n        }\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <108ac4bbd6a3426cb597023ac465e65d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <108ac4bbd6a3426cb597023ac465e65d>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977014
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        else {\n            string\
    \ current = strings[0];\n            for (int i = 1; i < strings.Count; i++) {\n\
    \                if (strings[i].Length > current.Length) {\n                 \
    \   current = strings[i];\n                }\n            }\n            return\
    \ current;\n        }\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <4318a86248d649d18b1ba8579c22e809>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <4318a86248d649d18b1ba8579c22e809>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977014
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <c3c9adcacb6a4bdd85b432ee449ca2e6>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <c3c9adcacb6a4bdd85b432ee449ca2e6>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977011
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        int n = 0;\n        foreach\
    \ (string s in strings) {\n            if (s.Length > n) {\n                n\
    \ = s.Length;\n            }\n        }\n        foreach (string s in strings)\
    \ {\n            if (s.Length == n) {\n                return s;\n           \
    \ }\n        }\n        return null;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <63bac23b6da24dee987cb7a14a1c30e4>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <63bac23b6da24dee987cb7a14a1c30e4>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977014
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // Check\
    \ if the input is empty\n        if (strings.Count == 0) {\n            return\
    \ null;\n        }\n        // Check if the input contains a single element\n\
    \        if (strings.Count == 1) {\n            return strings[0];\n        }\n\
    \        // Check if the input contains two elements\n        if (strings.Count\
    \ == 2) {\n            if (strings[0].Length >= strings[1].Length) {\n       \
    \         return strings[0];\n            } else {\n                return strings[1];\n\
    \            }\n        }\n        // Otherwise, partition the list into half\n\
    \        int half = strings.Count / 2;\n        // Continue recursively\n    \
    \    return Longest(strings.GetRange(0, half))\n            .Length >= Longest(strings.GetRange(half,\
    \ strings.Count - half)).Length\n            ? Longest(strings.GetRange(0, half))\n\
    \            : Longest(strings.GetRange(half, strings.Count - half));\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <88d3d388180d4a9394aa8d921f4c243e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <88d3d388180d4a9394aa8d921f4c243e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977014
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // Your code\
    \ goes here\n        if (strings.Count == 0)\n            return null;\n     \
    \   int current_length = 0;\n        string longest = \"\";\n        foreach (string\
    \ current in strings) {\n            if (current.Length > current_length) {\n\
    \                current_length = current.Length;\n                longest = current;\n\
    \            }\n        }\n        return longest;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <cfe519972df04fdb81876f949d24304d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <cfe519972df04fdb81876f949d24304d>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string result\
    \ = null;\n        int max_len = 0;\n        foreach (string str in strings) {\n\
    \            if (str.Length > max_len) {\n                max_len = str.Length;\n\
    \                result = str;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <093afd6dfd3d415081875516cf2f25f1>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <093afd6dfd3d415081875516cf2f25f1>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        return strings.Aggregate((s1,\
    \ s2) => s1.Length > s2.Length ? s1 : s2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains\
    \ no elements\n  at System.Linq.Enumerable.Aggregate[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source, System.Func`3[T1,T2,TResult] func) [0x00030] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.Longest (System.Collections.Generic.List`1[T] strings) [0x00001]\
    \ in <946b0867469245c1b0668666c91187e7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00006] in <946b0867469245c1b0668666c91187e7>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.InvalidOperationException: Sequence contains no elements\n\
    \  at System.Linq.Enumerable.Aggregate[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source, System.Func`3[T1,T2,TResult] func) [0x00030] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.Longest (System.Collections.Generic.List`1[T] strings) [0x00001]\
    \ in <946b0867469245c1b0668666c91187e7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00006] in <946b0867469245c1b0668666c91187e7>:0 \n"
  stdout: ''
  timestamp: 1659977015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string ret = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > ret.Length)\
    \ {\n                ret = s;\n            }\n        }\n        return ret;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <14c7546a308148eb98d0741a0db39d3f>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <14c7546a308148eb98d0741a0db39d3f>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977013
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string best\
    \ = null;\n        foreach (string s in strings) {\n            if (best == null\
    \ || s.Length > best.Length) {\n                best = s;\n            }\n   \
    \     }\n        return best;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <ac3eb2c9c4024329a579d2058a229c9b>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <ac3eb2c9c4024329a579d2058a229c9b>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977014
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string ret\
    \ = null;\n        foreach (string s in strings) {\n            if (ret == null\
    \ || s.Length > ret.Length) {\n                ret = s;\n            }\n     \
    \   }\n        return ret;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <e3d899a6ff0f4cd2bcf52438831d980f>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e3d899a6ff0f4cd2bcf52438831d980f>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0)\n            return null;\n        else {\n            string res = strings[0];\n\
    \            foreach (string s in strings)\n                if (s.Length > res.Length)\n\
    \                    res = s;\n            return res;\n        }\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <da80240e10e248629246ee49c027e7d9>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <da80240e10e248629246ee49c027e7d9>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string maxStr\
    \ = null;\n        int maxLen = 0;\n        foreach (string str in strings) {\n\
    \            if (str.Length > maxLen) {\n                maxStr = str;\n     \
    \           maxLen = str.Length;\n            }\n        }\n        return maxStr;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <5f54e501ba464c89935781418724f00e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <5f54e501ba464c89935781418724f00e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string result = strings[0];\n\
    \        int len = result.Length;\n        for (int i = 1; i < strings.Count;\
    \ i++) {\n            if (strings[i].Length > len) {\n                result =\
    \ strings[i];\n                len = result.Length;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <1a8e9d4625954b0fa18c96534a940846>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <1a8e9d4625954b0fa18c96534a940846>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string result = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > result.Length)\
    \ {\n                result = s;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <8fb647ae8bf74f08b9f154784e57cf84>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8fb647ae8bf74f08b9f154784e57cf84>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        List<string> strings2\
    \ = new List<string>(strings);\n        strings2.Sort((x, y) => {\n          \
    \  if (x.Length > y.Length) {\n                return -1;\n            } else\
    \ if (x.Length < y.Length) {\n                return 1;\n            } else {\n\
    \                return 0;\n            }\n        });\n        return strings2[0];\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <5e4bd034d0984ecc9b6d579c19426fe1>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <5e4bd034d0984ecc9b6d579c19426fe1>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string ret\
    \ = null;\n        int len = 0;\n        foreach (string s in strings) {\n   \
    \         if (s.Length > len) {\n                ret = s;\n                len\
    \ = s.Length;\n            }\n        }\n        return ret;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <11eb189e5d144c799956b71f012a9f5c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <11eb189e5d144c799956b71f012a9f5c>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if(strings.Count\
    \ == 0) {\n            return null;\n        }\n        int maxlen = strings[0].Length;\n\
    \        for(int i = 1; i < strings.Count; i++) {\n            if(strings[i].Length\
    \ > maxlen) {\n                maxlen = strings[i].Length;\n            }\n  \
    \      }\n        List<string> maxes = new List<string>();\n        for(int i\
    \ = 0; i < strings.Count; i++) {\n            if(strings[i].Length == maxlen)\
    \ {\n                maxes.Add(strings[i]);\n            }\n        }\n      \
    \  if(maxes.Count == 1) {\n            return maxes[0];\n        }\n        return\
    \ maxes[0];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <25186f6c94cf4fb8a601402eccbb0542>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <25186f6c94cf4fb8a601402eccbb0542>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        int maxLength\
    \ = 0;\n        string maxString = null;\n        foreach (string s in strings)\
    \ {\n            if (s.Length > maxLength) {\n                maxLength = s.Length;\n\
    \                maxString = s;\n            }\n        }\n        return maxString;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <11f4593d2f5b4fe2ae8f35220f8513d1>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <11f4593d2f5b4fe2ae8f35220f8513d1>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        var result\
    \ = (string)null;\n        foreach (var s in strings) {\n            if (result\
    \ == null || s.Length > result.Length) {\n                result = s;\n      \
    \      }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <37ab875c1fd54017879e5a38d9ba29b8>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <37ab875c1fd54017879e5a38d9ba29b8>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string result = strings[0];\n\
    \        int maxLength = result.Length;\n        for (int i = 1; i < strings.Count;\
    \ i++) {\n            if (strings[i].Length > maxLength) {\n                result\
    \ = strings[i];\n                maxLength = result.Length;\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <b602284e7a314ef3bf06dc3f4d72e836>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <b602284e7a314ef3bf06dc3f4d72e836>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        } else {\n            string longest\
    \ = strings[0];\n            foreach (string s in strings) {\n               \
    \ if (s.Length > longest.Length) {\n                    longest = s;\n       \
    \         }\n            }\n            return longest;\n        }\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <1220f86ce55b4a30bf8e740923834d79>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <1220f86ce55b4a30bf8e740923834d79>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string result = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > result.Length)\
    \ {\n                result = s;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <8fb647ae8bf74f08b9f154784e57cf84>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8fb647ae8bf74f08b9f154784e57cf84>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // TODO(p1):\
    \ Find the longest string.\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <28b7120e3d0241db9e587a146102935c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <28b7120e3d0241db9e587a146102935c>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string longest\
    \ = null;\n        int maxLength = 0;\n        foreach (string s in strings) {\n\
    \            if (s.Length > maxLength) {\n                maxLength = s.Length;\n\
    \                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <5ca60e995db84fff8db7ecf9e06251f4>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <5ca60e995db84fff8db7ecf9e06251f4>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977009
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string result = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > result.Length)\
    \ {\n                result = s;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <8fb647ae8bf74f08b9f154784e57cf84>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8fb647ae8bf74f08b9f154784e57cf84>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string result = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > result.Length)\
    \ {\n                result = s;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <8fb647ae8bf74f08b9f154784e57cf84>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8fb647ae8bf74f08b9f154784e57cf84>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        int maxLength = strings[0].Length;\n\
    \        string maxString = strings[0];\n        for (int i = 1; i < strings.Count;\
    \ i++) {\n            if (strings[i].Length > maxLength) {\n                maxLength\
    \ = strings[i].Length;\n                maxString = strings[i];\n            }\n\
    \        }\n        return maxString;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <d1ead118f738489494882a5142589a5a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <d1ead118f738489494882a5142589a5a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        var res =\
    \ strings.Aggregate((x, y) => x.Length > y.Length ? x : y);\n        if (res.Length\
    \ == 0) {\n            return null;\n        }\n        return res;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains\
    \ no elements\n  at System.Linq.Enumerable.Aggregate[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source, System.Func`3[T1,T2,TResult] func) [0x00030] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.Longest (System.Collections.Generic.List`1[T] strings) [0x00001]\
    \ in <69919d8814aa46df898e14debbe289a7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00006] in <69919d8814aa46df898e14debbe289a7>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.InvalidOperationException: Sequence contains no elements\n\
    \  at System.Linq.Enumerable.Aggregate[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source, System.Func`3[T1,T2,TResult] func) [0x00030] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.Longest (System.Collections.Generic.List`1[T] strings) [0x00001]\
    \ in <69919d8814aa46df898e14debbe289a7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00006] in <69919d8814aa46df898e14debbe289a7>:0 \n"
  stdout: ''
  timestamp: 1659977015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0)\n            return null;\n        string s = null;\n        foreach (string\
    \ t in strings) {\n            if (s == null || t.Length > s.Length)\n       \
    \         s = t;\n        }\n        return s;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <c702ef2fb4ac4f82ab22c59bf064f97b>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <c702ef2fb4ac4f82ab22c59bf064f97b>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        } else {\n            string r =\
    \ strings[0];\n            foreach (string s in strings) {\n                if\
    \ (s.Length > r.Length) {\n                    r = s;\n                }\n   \
    \         }\n            return r;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <d798f6aebefb470481c94411f5a3a06f>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <d798f6aebefb470481c94411f5a3a06f>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string longestString\
    \ = null;\n        int longestLength = 0;\n        foreach (string str in strings)\
    \ {\n            if (str.Length > longestLength) {\n                longestString\
    \ = str;\n                longestLength = str.Length;\n            }\n       \
    \ }\n        return longestString;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <2d60073aa13e444da02c64734b52cb41>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <2d60073aa13e444da02c64734b52cb41>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string l = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > l.Length)\
    \ {\n                l = s;\n            }\n        }\n        return l;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <0e07fe8c98284299880430f66885a4f1>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <0e07fe8c98284299880430f66885a4f1>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977010
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // >>> your\
    \ code goes here\n        if (strings.Count == 0)\n            return null;\n\
    \        string res = \"\";\n        foreach (string s in strings)\n         \
    \   if (s.Length > res.Length)\n                res = s;\n        return res;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <5d5b5717e9b1473ea852ec9117fc6834>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <5d5b5717e9b1473ea852ec9117fc6834>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        return strings.Aggregate((i,\
    \ j) => (i.Length > j.Length) ? i : j);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <abcd8c894ea547e992232fd1894cb3b0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <abcd8c894ea547e992232fd1894cb3b0>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string ret\
    \ = null;\n        foreach (string s in strings) {\n            if (ret == null\
    \ || s.Length > ret.Length) {\n                ret = s;\n            }\n     \
    \   }\n        return ret;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <e3d899a6ff0f4cd2bcf52438831d980f>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e3d899a6ff0f4cd2bcf52438831d980f>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977008
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0)\n            return null;\n        int longest = strings[0].Length;\n\
    \        int iLongest = 0;\n        for (int i = 1; i < strings.Count; i++) {\n\
    \            if (strings[i].Length > longest) {\n                longest = strings[i].Length;\n\
    \                iLongest = i;\n            }\n        }\n        return strings[iLongest];\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <b814e1e4fda1417e87a041fb7b038627>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <b814e1e4fda1417e87a041fb7b038627>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string value\
    \ = null;\n        int longest = 0;\n        foreach (string s in strings) {\n\
    \            if (s.Length > longest) {\n                value = s;\n         \
    \       longest = s.Length;\n            }\n        }\n        return value;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <ece299a6cadc488aac70c3f47e24da73>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <ece299a6cadc488aac70c3f47e24da73>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string longest\
    \ = null;\n        if (strings.Count != 0) {\n            longest = strings[0];\n\
    \            foreach (string s in strings) {\n                if (s.Length > longest.Length)\
    \ {\n                    longest = s;\n                }\n            }\n    \
    \    }\n        return longest;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <0c6f34c04d2b455fa8052e1f23fb7c5c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <0c6f34c04d2b455fa8052e1f23fb7c5c>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        // Find the longest string\
    \ in strings.\n        string longest = strings[0];\n        foreach (string str\
    \ in strings) {\n            if (str.Length > longest.Length) {\n            \
    \    longest = str;\n            }\n        }\n        return longest;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <8bfcc238d6994d169ead40c0e98f23c2>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8bfcc238d6994d169ead40c0e98f23c2>:0\
    \ \n"
  stdout: ''
  timestamp: 1659977015

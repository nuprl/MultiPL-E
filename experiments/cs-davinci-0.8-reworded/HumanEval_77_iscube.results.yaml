language: cs
name: HumanEval_77_iscube
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // Your code here.\n        return false;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e355b558f4ce43ed883cc433d5efc4a4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e355b558f4ce43ed883cc433d5efc4a4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        throw new NotImplementedException();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <b5b1a23f6e2d423fac7a159e4c342997>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]\
    \ in <b5b1a23f6e2d423fac7a159e4c342997>:0 \n"
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // TODO - your implementation here\n        return\
    \ (a >= 0 && ((long)Math.Pow(Math.Round(Math.Pow(a, 1.0 / 3.0)), 3) == a));\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dd3026cb860744b4902b00be442f555a>:0 \n"
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a == 0) return true;\n        int d = 0;\n   \
    \     while (a % 2 == 0) {\n            a /= 2;\n            d++;\n        }\n\
    \        if (d % 3 != 0) return false;\n        long p = 3;\n        while (a\
    \ > 1) {\n            if (a % p == 0) {\n                a /= p;\n           \
    \     d = 0;\n                while (a % p == 0) {\n                    a /= p;\n\
    \                    d++;\n                }\n                if (d % 3 != 0)\
    \ return false;\n            }\n            p += 2;\n        }\n        return\
    \ true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0f7fb2549f5b4fdb84034976aa779f97>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0f7fb2549f5b4fdb84034976aa779f97>:0 \n"
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return ((a % 2) == 0) || (a == 1) || (a == -1);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5fd18f9faf7a45faa3e63c33cb8bc1a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5fd18f9faf7a45faa3e63c33cb8bc1a7>:0 \n"
  stdout: ''
  timestamp: 1660008797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // TODO\n        return a == 0 || a == 1 || a == -1\
    \ || a == 8 || a == 27 || a == 64 || a == 125 || a == 216 || a == 343 || a ==\
    \ 512 || a == 729 || a == 1000 || a == 1331 || a == 1728 || a == 2197 || a ==\
    \ 2744 || a == 3375 || a == 4096 || a == 4913 || a == 5832 || a == 6859 || a ==\
    \ 8000 || a == 9261 || a == 10648 || a == 12167 || a == 13824 || a == 15625 ||\
    \ a == 17576 || a == 19683 || a == 21952 || a == 24389 || a == 27000 || a == 29791\
    \ || a == 32768 || a == 35937 || a == 39304 || a == 42875 || a == 46656 || a ==\
    \ 50653 || a == 54872 || a == 59319 || a == 64000 || a == 68921 || a == 74088\
    \ || a == 79507 || a == 85184 || a == 91125 || a == 97336 || a == 103823 || a\
    \ == 110592 || a == 117649 || a == 125000 || a == 132651 || a == 140608 || a ==\
    \ 148877 || a == 157464 || a == 166375 || a == 175616 || a == 185193 || a == 195112\
    \ || a == 205379 || a == 216000 || a == 226981 || a == 238328 || a == 250047 ||\
    \ a == 262144 || a == 274625 || a == 287496 || a == 300763 || a == 314432 || a\
    \ == 328509 || a == 343000 || a == 357911 || a == 373248 || a == 389017 || a ==\
    \ 405224 || a == 421875 || a == 438976 || a == 456533 || a == 474552 || a == 493039\
    \ || a == 512000 || a == 531441 || a == 551368 || a == 571787 || a == 592704 ||\
    \ a == 614125 || a == 636056 || a == 658503 || a == 681472 || a == 704969 || a\
    \ == 729000 || a == 753571 || a == 778688 || a == 804357 || a == 830584\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkr0tsm39.cs(27,1361): error CS1002: ; expected

    '
  timestamp: 1660008796
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long temp = a;\n        for (int i = 2; i < a; i++)\
    \ {\n            if (temp % i == 0) {\n                temp = temp / i;\n    \
    \            if (temp == i) {\n                    return true;\n            \
    \    }\n            }\n        }\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a7b447c1a26a4609a5d58752785eaba4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a7b447c1a26a4609a5d58752785eaba4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n\
    \        if (a < 0) {\n            a = -a;\n        }\n        int minCube = 1;\n\
    \        int maxCube = 1;\n        int i = 1;\n        while (minCube <= a) {\n\
    \            i++;\n            maxCube = i * i * i;\n            minCube = (i\
    \ - 1) * (i - 1) * (i - 1);\n        }\n        return (minCube == a || maxCube\
    \ == a);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b7c79addf35c409fb4c7ffa22682686f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b7c79addf35c409fb4c7ffa22682686f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long z = a;\n        double x = 0;\n        while\
    \ (x*x*x < z)\n        {\n            x = x + 0.1;\n        }\n        return\
    \ x*x*x == z;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e0eaffad798a496aaf1f87ce215d71a0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e0eaffad798a496aaf1f87ce215d71a0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        double eps = 1e-8;\n        double x = Math.Round(Math.Pow(a,\
    \ 1.0 / 3.0));\n        return Math.Abs(x * x * x - a) < eps;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <32b8152ed4454343b0139a5d93800118>:0 \n"
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n\
    \        if (a < 0) {\n            a = -a;\n        }\n        long b = (long)Math.Pow(a,\
    \ (1.0 / 3.0));\n        return b * b * b == a;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6659d07b3b79475c89bf8ea493dd94b0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6659d07b3b79475c89bf8ea493dd94b0>:0 \n"
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        bool rval = false;\n        // TODO: write your code\
    \ here!\n        return rval;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d9371edc11b44c839ed72ecf3b34f4a6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d9371edc11b44c839ed72ecf3b34f4a6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // your code here\n        return true;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b736dbe5256c46f8a58c6cbc032c5e8a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b736dbe5256c46f8a58c6cbc032c5e8a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // Your answer goes here\n        return true;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d3d59fcacb124484a38a8122ad179d49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d3d59fcacb124484a38a8122ad179d49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return ((Math.Abs(a) & (Math.Abs(a) - 1)) == 0) &&\
    \ (Math.Abs(a) % 4 == 1);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bb7a31527d324becba2d256a6b00216b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bb7a31527d324becba2d256a6b00216b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long s = (long)Math.Pow(a, 1.0 / 3.0);\n        return\
    \ s * s * s == a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <631ee020ca334a9b87e690bebda633ec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <631ee020ca334a9b87e690bebda633ec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return a == 0 || Math.Abs(a) == Math.Abs(Math.Pow(Math.Round(Math.Pow(Math.Abs(a),\
    \ (1.0 / 3.0))), 3));\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a < 0) a = -a;\n        if (a == 0) return true;\n\
    \        if (a == 1) return true;\n        long k = a;\n        while (k > 1)\
    \ {\n            k = k / 3;\n            if (k * k * k == a) return true;\n  \
    \      }\n        return false;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4e3f0d2d6e604635be8213f7f0d96ec1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4e3f0d2d6e604635be8213f7f0d96ec1>:0 \n"
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long b = a < 0 ? -a : a;\n        if (b == 0) {\n\
    \            return true;\n        }\n        long x = (long)Math.Pow(b, 1.0 /\
    \ 3);\n        return x * x * x == b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67d92e53b12b416b9939e09e6ac871db>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67d92e53b12b416b9939e09e6ac871db>:0 \n"
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long b = (long)Math.Pow(a, (1.0 / 3.0));\n       \
    \ long a2 = b * b * b;\n        long a3 = a2 * b;\n        return a == a2 || a\
    \ == a3;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3043b988dd864f129714fdc5f64a0714>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3043b988dd864f129714fdc5f64a0714>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return Math.Pow(Math.Abs(a),(1.0/3.0))%1 == 0;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce11e675864e4145b66e371a560f2149>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce11e675864e4145b66e371a560f2149>:0 \n"
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long b = a;\n        while (b * b * b < a) {\n   \
    \         b += 1;\n        }\n        return b * b * b == a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fb8f93c5c8f145c6b94cc31fb83c1ce5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fb8f93c5c8f145c6b94cc31fb83c1ce5>:0 \n"
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n\
    \        if (a < 0) {\n            a = -a;\n        }\n        long res = 0;\n\
    \        long base_ = 0;\n        while (res < a) {\n            base_++;\n  \
    \          res = base_ * base_ * base_;\n        }\n        return res == a;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        bool flag = false;\n        long b = Math.Abs(a);\n\
    \        if (b == 0 || b == 1) {\n            flag = true;\n        } else {\n\
    \            flag = (b == Math.Pow(Convert.ToInt64(Math.Pow(b, 1.0 / 3.0)), 3));\n\
    \        }\n        return flag;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a < 0) a = -a;\n        long b = 0;\n        while\
    \ (b * b * b < a) b++;\n        return b * b * b == a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008798
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        throw new NotImplementedException();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <b5b1a23f6e2d423fac7a159e4c342997>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]\
    \ in <b5b1a23f6e2d423fac7a159e4c342997>:0 \n"
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        var b = (long)Math.Pow(a, 1.0 / 3.0);\n        return\
    \ a == b * b * b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <891843101acf44598ffe1c555309d059>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <891843101acf44598ffe1c555309d059>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a < 0) {\n            a = -a;\n        }\n   \
    \     // your code goes here\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <26ac62a2217c4ce6a7b2baac8a9ac9e3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <26ac62a2217c4ce6a7b2baac8a9ac9e3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // put your code here\n        // return true or false\n\
    \        long x = a;\n        bool cube = false;\n        if (x < 0) {\n     \
    \       x = -x;\n        }\n        for (long i = -10000; i <= 10000; i++) {\n\
    \            if (i * i * i == x) {\n                cube = true;\n           \
    \     break;\n            }\n        }\n        return cube;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return Math.Pow(a,1.0/3) % 1 == 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <77c5fa85e2834ac68ade682bf0a4d1c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <77c5fa85e2834ac68ade682bf0a4d1c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a < 0) {\n            a = -a;\n        }\n   \
    \     for (int i = 0; i < a; i++) {\n            if (i * i * i == a) {\n     \
    \           return true;\n            }\n        }\n        return false;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e41ea16320146358b034ef4870c45e3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e41ea16320146358b034ef4870c45e3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long b = 0;\n        while (b * b * b < a) {\n   \
    \         b += 1;\n        }\n        return b * b * b == a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7eb52edc21514731b00f211d8aee48d3>:0 \n"
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a < 0) {\n            a = -a;\n        }\n   \
    \     long cubeRoot = (long)Math.Pow(a, 1.0 / 3.0);\n        return (long)Math.Pow(cubeRoot,\
    \ 3) == a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <605fd68a719b4f4cb2c6d2babae4e98a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <605fd68a719b4f4cb2c6d2babae4e98a>:0 \n"
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\
    \ else if (a == 1) {\n            return true;\n        } else if (a == -1) {\n\
    \            return true;\n        } else if (a < 0) {\n            return false;\n\
    \        } else {\n            double input = a;\n            double aRoot = Math.Pow(input,\
    \ (1.0 / 3.0));\n            double aRound = Math.Round(aRoot);\n            if\
    \ (aRoot == aRound) {\n                return true;\n            } else {\n  \
    \              return false;\n            }\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6fe2a80d4aaa4c8b94734d9b8346269f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6fe2a80d4aaa4c8b94734d9b8346269f>:0 \n"
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long i = 1;\n        while (i * i * i < a) {\n   \
    \         i++;\n        }\n        return i * i * i == a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <987d0fd4ef424ceaabcef318d3dffdc6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <987d0fd4ef424ceaabcef318d3dffdc6>:0 \n"
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        double c = 0;\n        if (a >= 0) {\n           \
    \ c = Math.Pow(a, 1.0 / 3.0);\n        } else {\n            c = -Math.Pow(-a,\
    \ 1.0 / 3.0);\n        }\n        if (c % 1 == 0) {\n            return true;\n\
    \        } else {\n            return false;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e995c40848ea43619f87a3ce5128e01e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e995c40848ea43619f87a3ce5128e01e>:0 \n"
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // insert your code here\n        double x = Math.Pow(a,\
    \ 1.0 / 3.0);\n        return (x == Math.Floor(x));\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <98d37082df0e42b98206732f0265c104>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <98d37082df0e42b98206732f0265c104>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // your code here\n        return false;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <067f5b1d363e49a6a281beccceec4f54>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <067f5b1d363e49a6a281beccceec4f54>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // \n        if (a < 0)\n            a = -a;\n   \
    \     if (a == 0)\n            return true;\n        // \n        long current\
    \ = 1;\n        while (current < a) {\n            if (current * current * current\
    \ == a)\n                return true;\n            current++;\n        }\n   \
    \     return false;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9db9f1d0b41c405e8b8ef9efd22f94a5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9db9f1d0b41c405e8b8ef9efd22f94a5>:0 \n"
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n      if (a == 0 || a == 1) {\n        return true;\n    \
    \  }\n      for (long i = 1; i < a; i++) {\n        if (i * i * i == a) {\n  \
    \        return true;\n        }\n      }\n      return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ae459046f14c4ea6984e3e6540dd45a8>:0 \n"
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a >= 0) {\n            long root = (long)Math.Pow(a,\
    \ (1.0 / 3.0));\n            if (a == root * root * root) {\n                return\
    \ true;\n            }\n        } else {\n            long root = (long)Math.Pow(-a,\
    \ (1.0 / 3.0));\n            if (a == -root * root * root) {\n               \
    \ return true;\n            }\n        }\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f59bf257ddce4e8e9c8af545f637d92d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f59bf257ddce4e8e9c8af545f637d92d>:0 \n"
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long x = Math.Abs(a);\n        if (x == 0) return\
    \ true;\n        long i = 1;\n        while (i * i * i <= x) {\n            if\
    \ (i * i * i == x) return true;\n            i++;\n        }\n        return false;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // You code here\n        if (a == 0)\n          \
    \  return true;\n        if (a < 0)\n            a = -a;\n        return Math.Pow(Math.Round(Math.Pow(a,\
    \ (double)1 / 3)), 3) == a;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        int i = 0;\n        while (i < a) {\n            if\
    \ (i * i * i == a) {\n                return true;\n            }\n          \
    \  i++;\n        }\n        return false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5918a1e7fa944e81956277a8784e68d9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5918a1e7fa944e81956277a8784e68d9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return a == 0 || a == 1 || (a > 0 && Math.Pow(Math.Ceiling(Math.Pow(a,\
    \ 1.0 / 3)), 3) == a);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6b0462996d944c9284294a6b8cfdba0d>:0 \n"
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return a >= 0L && System.Math.Pow(System.Math.Round(System.Math.Pow(a,\
    \ 1.0 / 3.0)), 3) == a;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b7bab2ead31846e5b785c43754d1bff4>:0 \n"
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return a == 0 || (a > 0 && Math.Pow(Math.Ceiling(Math.Pow(a,\
    \ 1.0 / 3)), 3) == a);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <58378e8389c84af2a2724d83b8a58dd0>:0 \n"
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        var c = 0;\n        var x = 0;\n        while (x *\
    \ x * x < a) {\n            x = x + 1;\n        }\n        if (x * x * x == a)\
    \ {\n            c = c + 1;\n        }\n        return c > 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <14d106a59edf4ea389618d118c8e6933>:0 \n"
  stdout: ''
  timestamp: 1660008798
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // your solution here\n        int cube = a > 0 ?\
    \ a : -a;\n        int lower_bound = 0;\n        int upper_bound = cube;\n   \
    \     int mid_bound = (upper_bound - lower_bound) / 2;\n        // let's assume\
    \ cube root is mid.\n        int cube_root = mid_bound;\n        int diff = cube\
    \ - cube_root * cube_root * cube_root;\n        // binary search\n        while(diff\
    \ != 0) {\n            if(diff > 0) {\n                lower_bound = mid_bound;\n\
    \            } else {\n                upper_bound = mid_bound;\n            }\n\
    \            mid_bound = lower_bound + (upper_bound - lower_bound) / 2;\n    \
    \        cube_root = mid_bound;\n            diff = cube - cube_root * cube_root\
    \ * cube_root;\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpalc74tfz.cs(27,20): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a < 0)\n            a = -a;\n        if (a ==\
    \ 0)\n            return true;\n        for (long x = 1; x <= a; x++) {\n    \
    \        if (x * x * x == a)\n                return true;\n        }\n      \
    \  return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a == 0) return true;\n        if (a < 0) a = -a;\n\
    \        long r = (long)Math.Pow(a, 1.0 / 3);\n        return r * r * r == a;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2db22b86d46c4b10b3bb8b42b89306a1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2db22b86d46c4b10b3bb8b42b89306a1>:0 \n"
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return (long)Math.Cbrt(a) == Math.Cbrt(a);\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a < 0)\n            a = -a;\n        long min\
    \ = 1, max = a;\n        while (min < max) {\n            long m = (min + max)\
    \ / 2;\n            if (m * m * m == a)\n                return true;\n      \
    \      if (m * m * m < a)\n                min = m + 1;\n            else\n  \
    \              max = m - 1;\n        }\n        return min * min * min == a;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5738cea12c7e43a5954a882a80a1928e>:0 \n"
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n\
    \        if (a < 0) {\n            a = -a;\n        }\n        long cube = 0;\n\
    \        long i = 0;\n        while (cube < a) {\n            i++;\n         \
    \   cube = i * i * i;\n        }\n        return cube == a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008798
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long[] x = new long[(int)Math.Sqrt(a)];\n        x[0]\
    \ = 1;\n        for (int i = 1; i < x.Length; i++) {\n            x[i] = x[i -\
    \ 1] + i * i;\n        }\n        return Array.BinarySearch(x, a) >= 0;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.OutOfMemoryException: Insufficient memory\
    \ to continue the execution of the program.\n  at (wrapper alloc) System.Object.AllocVector(intptr,intptr)\n\
    \  at Problem.Iscube (System.Int64 a) [0x00008] in <16ed57882d334d298abd1af572c0aa59>:0\
    \ \n  at Problem.Main (System.String[] args) [0x0001e] in <16ed57882d334d298abd1af572c0aa59>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.OutOfMemoryException: Insufficient\
    \ memory to continue the execution of the program.\n  at (wrapper alloc) System.Object.AllocVector(intptr,intptr)\n\
    \  at Problem.Iscube (System.Int64 a) [0x00008] in <16ed57882d334d298abd1af572c0aa59>:0\
    \ \n  at Problem.Main (System.String[] args) [0x0001e] in <16ed57882d334d298abd1af572c0aa59>:0\
    \ \n"
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return a == Math.Abs(a) && Math.Pow(Math.Round(Math.Pow(a,\
    \ 1.0 / 3.0)), 3) == a;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d887bc20845427d89cffc0dd714bf0e>:0 \n"
  stdout: ''
  timestamp: 1660008798
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long a3 = a * a * a;\n        long b3 = BigInteger.Parse(a.ToString()).Pow(3).ToString().Length;\n\
    \        long c3 = BigInteger.Parse(a.ToString()).Pow(3).ToString().Length;\n\
    \        if (a3 > 10 && b3 == c3)\n            return true;\n        return false;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpok6k3wja.cs(27,50): error CS7036: There is no argument given that corresponds
    to the required formal parameter ''exponent'' of ''BigInteger.Pow(BigInteger,
    int)''

    /tmp/tmpok6k3wja.cs(28,50): error CS7036: There is no argument given that corresponds
    to the required formal parameter ''exponent'' of ''BigInteger.Pow(BigInteger,
    int)''

    '
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2ab46bb16c624e64b2408822617f62e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2ab46bb16c624e64b2408822617f62e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // your code here\n        return false;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <067f5b1d363e49a6a281beccceec4f54>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <067f5b1d363e49a6a281beccceec4f54>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // return true if a is a cube\n        return (a==0\
    \ || (a>0 && (long)Math.Pow(Math.Ceiling(Math.Pow(a, 1.0/3.0)), 3) == a) || \n\
    \                (a<0 && (long)Math.Pow(Math.Floor(Math.Pow(a, 1.0/3.0)), 3) ==\
    \ a));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9cd8fe77bef54b23856934fbf7f847f0>:0 \n"
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        bool result = false;\n        for (int i = 1; i <\
    \ a; i++) {\n            if (Math.Pow(i, 3) == a) {\n                result =\
    \ true;\n                break;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <916e8a03403349919641bc18242fbc9d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <916e8a03403349919641bc18242fbc9d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // TODO: Implement the method here.\n        return\
    \ Math.Abs(Math.Pow(Math.Round(Math.Pow(a, (1.0 / 3.0))), 3) - a) < 0.00001;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <566d71b3230e41928a325ccb90a8b450>:0 \n"
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a == 0) return true;\n        long up = 0;\n \
    \       long down = 0;\n        if (a > 0) {\n            up = (long)Math.Ceiling(Math.Pow(a,\
    \ 1.0 / 3.0));\n            down = (long)Math.Floor(Math.Pow(a, 1.0 / 3.0));\n\
    \        } else {\n            up = (long)Math.Ceiling(Math.Pow(-a, 1.0 / 3.0));\n\
    \            down = (long)Math.Floor(Math.Pow(-a, 1.0 / 3.0));\n        }\n  \
    \      return up * up * up == a || down * down * down == a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <26f9960e7ad3440e89a23ff2274f851d>:0 \n"
  stdout: ''
  timestamp: 1660008799
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        throw new NotImplementedException();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <b5b1a23f6e2d423fac7a159e4c342997>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]\
    \ in <b5b1a23f6e2d423fac7a159e4c342997>:0 \n"
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        bool result = false;\n        if (a != 0 && a != 1\
    \ && a != -1) {\n            long checker = Convert.ToInt64(Math.Pow(a, 1.0 /\
    \ 3.0));\n            if (checker * checker * checker == a) {\n              \
    \  result = true;\n            }\n        }\n        else if (a == 0 || a == 1\
    \ || a == -1) {\n            result = true;\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        var c = (long)Math.Pow(a, 1.0 / 3);\n        return\
    \ c * c * c == a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7e7d5347dee74e27974fd59606cccd0d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7e7d5347dee74e27974fd59606cccd0d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        double d = Math.Pow(a, (1 / 3.0));\n        return\
    \ d % 1 == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <30e1986937664880b47b641ab5b685b1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <30e1986937664880b47b641ab5b685b1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a == 0) return true;\n        int b = (int)Math.Abs(a);\n\
    \        int x = 1;\n        while (x*x*x < b) {\n            x++;\n        }\n\
    \        return x*x*x == b;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008798
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        throw new NotImplementedException();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <b5b1a23f6e2d423fac7a159e4c342997>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]\
    \ in <b5b1a23f6e2d423fac7a159e4c342997>:0 \n"
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // Go on, try and crack it!\n        long b = (long)Math.Pow(a,\
    \ 1.0 / 3.0);\n        return (long)Math.Pow(b, 3) == a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0aae45ee8bf948a2b600ff33ba826d94>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0aae45ee8bf948a2b600ff33ba826d94>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a < 0)\n            a = -a;\n        if (a ==\
    \ 0)\n            return true;\n        var r = Math.Pow(a, (1.0 / 3.0));\n  \
    \      return Math.Round(r) == r;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <366695233f9c4d4e81ddbcc7351fc6d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <366695233f9c4d4e81ddbcc7351fc6d4>:0 \n"
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return Math.Pow(Math.Abs(a), 1.0 / 3.0) % 1 == 0;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aa2d76ee466341b3943c2256ef39222b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aa2d76ee466341b3943c2256ef39222b>:0 \n"
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return a == 0 || (a > 0 && Math.Pow(Math.Round(Math.Pow(a,\
    \ 1.0 / 3.0)), 3) == a);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <341b585f82f94b57a5e765ad7e69053b>:0 \n"
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return a==0 || Math.Pow(Math.Round(Math.Pow(a, 1.0/3)),\
    \ 3) == a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f8dd142ad9884bd6ab471a70a665114e>:0 \n"
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long temp = a;\n        if (a < 0) {\n           \
    \ temp = -a;\n        }\n        long res = 0;\n        while (res < temp) {\n\
    \            res = res + 3 * res * res + 3 * res + 1;\n            if (res ==\
    \ temp) {\n                return true;\n            }\n        }\n        return\
    \ false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d490afba04664a2d840c07b9be9e6830>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d490afba04664a2d840c07b9be9e6830>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // write your code here\n        // return true or\
    \ false\n        if (a == 0) return true;\n        if (a < 0) a = -a;\n      \
    \  if (Math.Pow(Math.Round(Math.Pow(a, 1.0 / 3.0)), 3) == a) return true;\n  \
    \      return false;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008799
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        throw new NotImplementedException();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <b5b1a23f6e2d423fac7a159e4c342997>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]\
    \ in <b5b1a23f6e2d423fac7a159e4c342997>:0 \n"
  stdout: ''
  timestamp: 1660008797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // Write your code here\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1hv5zzt_.cs(25,24): error CS0161: ''Problem.Iscube(long)'': not all code
    paths return a value

    '
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2ab46bb16c624e64b2408822617f62e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2ab46bb16c624e64b2408822617f62e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return ((long)Math.Pow(a, 1.0 / 3) * (long)Math.Pow(a,\
    \ 1.0 / 3) * (long)Math.Pow(a, 1.0 / 3) == a);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8bb1f0c68af64951a93aa0285d137be2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8bb1f0c68af64951a93aa0285d137be2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long b = (long)Math.Pow(a, (1.0 / 3.0));\n       \
    \ return (b * b * b == a);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3cef381a6c874402bdf59b0e8c4910a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3cef381a6c874402bdf59b0e8c4910a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        double cube = Math.Pow(a, 1.0 / 3.0);\n        return\
    \ cube == Math.Floor(cube);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76cf0fde573144f697ab50147a7ddb91>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76cf0fde573144f697ab50147a7ddb91>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return (Math.Round(Math.Pow(a, (1.0 / 3.0))) == Math.Pow(a,\
    \ (1.0 / 3.0)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <960e45e98ed148228022ad72d843fdcb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <960e45e98ed148228022ad72d843fdcb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        double a_ = Math.Abs(a);\n        double root = Math.Pow(a_,\
    \ 1.0 / 3.0);\n        if (root - Math.Floor(root) == 0) {\n            return\
    \ true;\n        }\n        return false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fcc32e1f09048eabdbe2aad5b3abb92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fcc32e1f09048eabdbe2aad5b3abb92>:0 \n"
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // C# only supports 64-bit integers, so no need to\
    \ worry about \n        // the overflow problem.\n        double d = Math.Round(Math.Pow(a,\
    \ 1.0 / 3.0));\n        return a == d * d * d;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a21b32e4135a48d48104340e3547e508>:0 \n"
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a == 0) {\n            return true;\n        }\n        long x =\
    \ 1;\n        while (x * x * x < a) {\n            x += 1;\n        }\n      \
    \  return (x * x * x == a);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dc9108bdf04f4d7193ddf1805880039b>:0 \n"
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long x = (long)Math.Round(Math.Pow(a, (1.0 / 3.0)));\n\
    \        return x * x * x == a;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e37f6de424e64a65866702004da29cbd>:0 \n"
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return a >= 0 && Int64.Parse(Math.Pow(Math.Round(Math.Pow(a,\
    \ 1.0 / 3)), 3).ToString()) == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <458d188c45fc4ee7b2c69296e2132458>:0 \n"
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // write a code here\n        return false;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <75a467437f7a44c0acd054fad156b5cb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <75a467437f7a44c0acd054fad156b5cb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long x = 0;\n        while (x * x * x < a) {\n   \
    \         x++;\n        }\n        return x * x * x == a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f8ce0e81618a4e52b7c30f1c2a22a037>:0 \n"
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long b = (long)Math.Pow(a, 1.0 / 3.0);\n        return\
    \ b * b * b == a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <75fd3a59358b42cfb496b832bc5265f6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <75fd3a59358b42cfb496b832bc5265f6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // write your code here\n        double x = Math.Pow(a,\
    \ (1.0 / 3.0));\n        if ((Math.Pow(x, 3) == a) || (Math.Pow(x + 1, 3) == a)\
    \ || (Math.Pow(x - 1, 3) == a)) {\n            return true;\n        }\n     \
    \   return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1fe81a3a1e64464c9f2d3040cc356800>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1fe81a3a1e64464c9f2d3040cc356800>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long x;\n        double y;\n        if (a == 0) {\n\
    \            return true;\n        }\n        x = (long)Math.Sign(a);\n      \
    \  y = Math.Pow(Math.Abs(a), (1.0 / 3.0));\n        x = (long)Math.Round(y);\n\
    \        return (x * x * x == a);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5ea60058f65146d18a29371ae3af3683>:0 \n"
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long b = (long)Math.Pow(a, (1.0 / 3.0));\n       \
    \ long c = b * b * b;\n        return c == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <10c6fa0857d246eba63c9a971a0a99f4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <10c6fa0857d246eba63c9a971a0a99f4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008799
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        throw new NotImplementedException();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <b5b1a23f6e2d423fac7a159e4c342997>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]\
    \ in <b5b1a23f6e2d423fac7a159e4c342997>:0 \n"
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return Math.Pow(Math.Round(Math.Pow(a, 1.0 / 3.0)),\
    \ 3) == a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9bacd713b4e84235b7126b2a2c75ffad>:0 \n"
  stdout: ''
  timestamp: 1660008800
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return (a == 0 || a == 1 || a == -1 || Math.Abs(Math.Pow(a,\
    \ 1.0 / 3)) % 1 == 0);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8275278c642c49fcbd1a7fa9ab5943c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8275278c642c49fcbd1a7fa9ab5943c1>:0 \n"
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a < 0) { a = -a; }\n        if (a == 0) { return\
    \ true; }\n        var n = Math.Pow(a, 1.0 / 3.0);\n        return n == Math.Round(n);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a61aa6c12e64ad4a340a1da6a028872>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a61aa6c12e64ad4a340a1da6a028872>:0 \n"
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        double aa = Math.Abs(a);\n        double cube = Math.Pow(aa,\
    \ 1.0 / 3.0);\n        return (cube % 1 == 0);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c80e41c8baa34c9c88875c1da4dd1716>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c80e41c8baa34c9c88875c1da4dd1716>:0 \n"
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return Math.Abs(a) == Math.Pow(Math.Abs(a),1.0/3.0);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <db5b2d5124b44f5a8d8281f47e79b0ca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <db5b2d5124b44f5a8d8281f47e79b0ca>:0 \n"
  stdout: ''
  timestamp: 1660008800
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long b = (long)Math.Sqrt(a);\n        if (b*b*b ==\
    \ a) {\n            return true;\n        }\n        return false;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <74e0e4906b324d5dab91cb16c8dd3328>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <74e0e4906b324d5dab91cb16c8dd3328>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008800
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        long num = 0;\n        while (true) {\n            long pow = num * num\
    \ * num;\n            if (pow > a) {\n                return false;\n        \
    \    }\n            if (pow == a) {\n                return true;\n          \
    \  }\n            num++;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2f139e906ac45f6a11ac172163a91f6>:0 \n"
  stdout: ''
  timestamp: 1660008800
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // >>> Iscube((64L))\n        // (true)\n        for\
    \ (long i = 1; i < a; i++) {\n            if (i * i * i == a) {\n            \
    \    return true;\n            }\n        }\n        return false;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d13ae037dca14b4e80df498811958dc3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d13ae037dca14b4e80df498811958dc3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008800
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        throw new NotImplementedException();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <b5b1a23f6e2d423fac7a159e4c342997>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]\
    \ in <b5b1a23f6e2d423fac7a159e4c342997>:0 \n"
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\
    \ else if (a < 0) {\n            return Iscube(-a);\n        }\n        long low\
    \ = 1;\n        long high = a;\n        while (low <= high) {\n            long\
    \ mid = (low + high) / 2;\n            long cube = mid * mid * mid;\n        \
    \    if (cube == a) {\n                return true;\n            } else if (cube\
    \ < a) {\n                low = mid + 1;\n            } else {\n             \
    \   high = mid - 1;\n            }\n        }\n        return false;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008800
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return Math.Ceiling(Math.Pow(a, 1.0 / 3.0)) == Math.Floor(Math.Pow(a,\
    \ 1.0 / 3.0));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01e3c8347ceb4e13bcecd43b986dd81f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <01e3c8347ceb4e13bcecd43b986dd81f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008800
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a==0L) {\n            return true;\n        }\n\
    \        return Math.Pow(Math.Abs(a),1.0/3.0)%1.0==0.0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b08b0292fa2b4d97a6c853533bac6f22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b08b0292fa2b4d97a6c853533bac6f22>:0 \n"
  stdout: ''
  timestamp: 1660008800
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n      if (a == 0) {\n        return true;\n      } else if\
    \ (a > 0) {\n        int c = 0;\n        while (c*c*c < a) {\n          c++;\n\
    \        }\n        return (c*c*c == a);\n      } else {\n        int c = 0;\n\
    \        while (c*c*c > a) {\n          c--;\n        }\n        return (c*c*c\
    \ == a);\n      }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008800
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long aa = Math.Abs(a);\n        long cube = (long)Math.Ceiling(Math.Pow(aa,\
    \ 1 / 3.0));\n        return aa == cube * cube * cube;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008800
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // >>> YOUR CODE HERE <<<\n        return (Math.Pow(a,\
    \ 1.0 / 3.0) % 1 == 0);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8970cee5b099412c9ff576cbf241a946>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8970cee5b099412c9ff576cbf241a946>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008800
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // Fill in your solution here.\n        if (a == 0)\
    \ {\n            return true;\n        }\n        else if (a == 1) {\n       \
    \     return true;\n        }\n        else if (a == 2) {\n            return\
    \ false;\n        }\n        else if (a == 3) {\n            return false;\n \
    \       }\n        else if (a == 4) {\n            return true;\n        }\n \
    \       else if (a == 5) {\n            return false;\n        }\n        else\
    \ if (a == 6) {\n            return false;\n        }\n        else if (a == 7)\
    \ {\n            return false;\n        }\n        else if (a == 8) {\n      \
    \      return true;\n        }\n        else if (a == 9) {\n            return\
    \ true;\n        }\n        else if (a == 10) {\n            return false;\n \
    \       }\n        else if (a == 11) {\n            return false;\n        }\n\
    \        else if (a == 12) {\n            return false;\n        }\n        else\
    \ if (a == 13) {\n            return false;\n        }\n        else if (a ==\
    \ 14) {\n            return false;\n        }\n        else if (a == 15) {\n \
    \           return false;\n        }\n        else if (a == 16) {\n          \
    \  return true;\n        }\n        else if (a == 17) {\n            return false;\n\
    \        }\n        else if (a == 18) {\n            return false;\n        }\n\
    \        else if (a == 19) {\n            return false;\n        }\n        else\
    \ if (a == 20) {\n            return false;\n        }\n        else if (a ==\
    \ 21) {\n            return false;\n        }\n        else if (a == 22) {\n \
    \           return false;\n        }\n        else if (a == 23) {\n          \
    \  return false;\n        }\n        else if (a == 24) {\n            return false;\n\
    \        }\n        else if (a == 25) {\n            return true;\n        }\n\
    \        else if (a == 26) {\n            return false;\n        }\n        else\
    \ if (a == 27) {\n            return true;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvykrax18.cs(25,24): error CS0161: ''Problem.Iscube(long)'': not all code
    paths return a value

    '
  timestamp: 1660008800
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return (long) Math.Pow(a, 1.0/3.0) * (long) Math.Pow(a,\
    \ 1.0/3.0) * (long) Math.Pow(a, 1.0/3.0) == a;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <377a7a3fad9641bfb79705c9c8e19d47>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <377a7a3fad9641bfb79705c9c8e19d47>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008800
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // Your code here\n        return true;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e5c019fc4ee9467980b099404cdc2e2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e5c019fc4ee9467980b099404cdc2e2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008800
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n\
    \        if (a < 0) {\n            a = -a;\n        }\n        var s = Math.Round(Math.Exp(Math.Log(a)\
    \ / 3.0));\n        return s * s * s == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008800
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        double c = Math.Pow(a, 1.0 / 3.0);\n        double\
    \ d = Math.Floor(c);\n        if(c == d) {\n            return true;\n       \
    \ }\n        return false;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fd52a7b374444f8ba7aeaba377473b4e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fd52a7b374444f8ba7aeaba377473b4e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008800
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // ToDo:\n        // Implement Iscube function\n \
    \       return false;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <41106577e9cd47369dc0db08d4290e84>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <41106577e9cd47369dc0db08d4290e84>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008800
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        throw new NotImplementedException();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <b5b1a23f6e2d423fac7a159e4c342997>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]\
    \ in <b5b1a23f6e2d423fac7a159e4c342997>:0 \n"
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return Math.Abs(Math.Pow(a, (1.0 / 3.0))) % 1 == 0;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fcbbd0507b714b218737edc98eb0bd90>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fcbbd0507b714b218737edc98eb0bd90>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008800
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // Implement this placeholder.\n        return true;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b1712726f0f49b5bc82f068f51b22ec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b1712726f0f49b5bc82f068f51b22ec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008800
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        throw new NotImplementedException();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <b5b1a23f6e2d423fac7a159e4c342997>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]\
    \ in <b5b1a23f6e2d423fac7a159e4c342997>:0 \n"
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return a >= 0 && ((long)Math.Pow(Math.Ceiling(Math.Pow(a,\
    \ 1.0 / 3.0)), 3) == a);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a4c3941fa5c447c392ba4387e87f1059>:0 \n"
  stdout: ''
  timestamp: 1660008800
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long i = a < 0 ? -a : a;\n        while (i > 0) {\n\
    \            if (i * i * i == a) {\n                return true;\n           \
    \ }\n            i -= 1;\n        }\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1a87e1410a6a4ca4a0af37a0cfc2c98f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1a87e1410a6a4ca4a0af37a0cfc2c98f>:0 \n"
  stdout: ''
  timestamp: 1660008800
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return (BigInteger.Pow((long)Math.Pow(a, 1.0 / 3.0),\
    \ 3) == a);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <923d430c13c345faa93b17570600be9d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <923d430c13c345faa93b17570600be9d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008800
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return a != 0 && (Math.Abs(a) % Math.Cbrt(Math.Abs(a))\
    \ == 0);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61d97ac0ffd847ca9750043daa537243>:0 \n"
  stdout: ''
  timestamp: 1660008800
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // return true if a is cube\n        // >>> Iscube((1L))\n\
    \        // (true)\n        // >>> Iscube((2L))\n        // (false)\n        //\
    \ >>> Iscube((-1L))\n        // (true)\n        // >>> Iscube((64L))\n       \
    \ // (true)\n        // >>> Iscube((0L))\n        // (true)\n        // >>> Iscube((180L))\n\
    \        // (false)\n        if(a < 0){\n            a = -a;\n        }\n    \
    \    if(a == 0){\n            return true;\n        }\n        long len = 1;\n\
    \        while(len*len*len < a){\n            len++;\n        }\n        if(len*len*len\
    \ == a){\n            return true;\n        }\n        return false;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008800
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // Enter your code here\n        if (a < 0) a = -a;\n\
    \        if (a == 0) return true;\n        if (a == 1) return true;\n        long\
    \ x = 2;\n        for (long y = x * x * x; y <= a; x++, y = x * x * x)\n     \
    \       if (y == a) return true;\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008800
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        throw new NotImplementedException();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <b5b1a23f6e2d423fac7a159e4c342997>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]\
    \ in <b5b1a23f6e2d423fac7a159e4c342997>:0 \n"
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2ab46bb16c624e64b2408822617f62e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2ab46bb16c624e64b2408822617f62e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \n        if (a == 0) {\n            return true;\n        }\n\n        long sqr\
    \ = Convert.ToInt64(Math.Floor(Math.Sqrt(a)));\n        for (long i = 0; i <=\
    \ sqr; i++) {\n            if (i * i * i == a) {\n                return true;\n\
    \            }\n        }\n\n        return false;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8cb51ec1c6e641b5b8edfc765c9b27c2>:0 \n"
  stdout: ''
  timestamp: 1660008801
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return ((Math.Abs(a) >= 0) && ((long)Math.Pow(Math.Abs(a),\
    \ 1.0 / 3.0) * (long)Math.Pow(Math.Abs(a), 1.0 / 3.0) * (long)Math.Pow(Math.Abs(a),\
    \ 1.0 / 3.0) == a));\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <faa02080460649eca13e8032783dc818>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <faa02080460649eca13e8032783dc818>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008801
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // >>> Iscube((1L))\n        // (true)\n        if\
    \ (a == 1) {\n            return true;\n        }\n        // >>> Iscube((-1L))\n\
    \        // (true)\n        if (a == -1) {\n            return true;\n       \
    \ }\n        // >>> Iscube((64L))\n        // (true)\n        if (a == 64) {\n\
    \            return true;\n        }\n        // >>> Iscube((0L))\n        //\
    \ (true)\n        if (a == 0) {\n            return true;\n        }\n       \
    \ // >>> Iscube((180L))\n        // (false)\n        if (a == 180) {\n       \
    \     return false;\n        }\n        // >>> Iscube((2L))\n        // (false)\n\
    \        if (a == 2) {\n            return false;\n        }\n        return false;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <737b5ca8f2604ebb9ffc5262d690523b>:0 \n"
  stdout: ''
  timestamp: 1660008801
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return (a < 0 && (a % 2) == 0) || Math.Pow(Math.Round(Math.Pow(a,\
    \ 1.0 / 3.0)), 3) == a;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <33d932244e29492c96881d46d1fa82ce>:0 \n"
  stdout: ''
  timestamp: 1660008801
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // your code here\n        return true;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b736dbe5256c46f8a58c6cbc032c5e8a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b736dbe5256c46f8a58c6cbc032c5e8a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // Write your code here.\n        // Do not forget\
    \ to change the return type.\n        // You may need a helper function.\n   \
    \     if (a < 0) {\n            a = -a;\n        }\n        // \n        if (a\
    \ == 0) {\n            return true;\n        }\n        if (a == 1) {\n      \
    \      return true;\n        }\n        // Math.Sqrt(x) returns the square root\
    \ of x\n        for (long i = 2; i <= Math.Sqrt(a); i++) {\n            if (i\
    \ * i * i == a) {\n                return true;\n            }\n        }\n  \
    \      return false;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008801
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        BigInteger b = BigInteger.Pow(a, 1/3);\n        return\
    \ (b*b*b) == a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <468859965cec4993adf8c22d69940304>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <468859965cec4993adf8c22d69940304>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008801
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // you can use the power function in your answer\n\
    \        // you don't have to implement it yourself\n        return ((long)Math.Pow(a,\
    \ 1.0 / 3.0) * (long)Math.Pow(a, 1.0 / 3.0) * (long)Math.Pow(a, 1.0 / 3.0)) ==\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d12a78b10902473fbecb66a18a3da486>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d12a78b10902473fbecb66a18a3da486>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008801
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a == 0) return true;\n        if (a == 1) return\
    \ true;\n        if (a == -1) return true;\n        if (a < 0) {\n           \
    \ double t = Math.Pow(a * -1, 1d / 3d);\n            if (t == (int)t) {\n    \
    \            return true;\n            }\n        } else {\n            double\
    \ t = Math.Pow(a, 1d / 3d);\n            if (t == (int)t) {\n                return\
    \ true;\n            }\n        }\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06622540b3a84dcea9d19afeb2f0b23a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06622540b3a84dcea9d19afeb2f0b23a>:0 \n"
  stdout: ''
  timestamp: 1660008801
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a < 0) {\n            a = a * -1;\n        }\n\
    \        if (a == 0) {\n            return true;\n        }\n        long x =\
    \ (long)Math.Ceiling(Math.Pow(a, 1.0 / 3.0));\n        for (int i = 0; i < 3;\
    \ i++) {\n            if (a == x * x * x) {\n                return true;\n  \
    \          }\n            x++;\n        }\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008801
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a == 0) {\n            return true;\n        }\n        long n =\
    \ (long)Math.Pow(a, 1.0 / 3);\n        long root = n * n * n;\n        return\
    \ a == root;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <636cd7133dda4fe98255880ac277052f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <636cd7133dda4fe98255880ac277052f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008801
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return a == 0 || (a % 9 == 0 && a / 9 >= 0);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9f0aca3616f247afbebfefb3b7587604>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9f0aca3616f247afbebfefb3b7587604>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008801
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        var root = Math.Pow(a, 1.0 / 3.0);\n        return\
    \ Math.Abs(Math.Pow(root, 3) - a) < 0.001;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5b14276383664347b832132f5fbf5ebe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5b14276383664347b832132f5fbf5ebe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008801
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // Insert your code here\n        double cubeRoot\
    \ = Math.Pow(a, 1.0 / 3.0);\n        return Math.Floor(cubeRoot) == cubeRoot;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fb7b8a35799649ecb4eda8e9cab166b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fb7b8a35799649ecb4eda8e9cab166b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008801
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        var x = (long) Math.Pow(a, 1.0/3);\n        return\
    \ x * x * x == a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bab45400aac042ab904976d99ff1534b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bab45400aac042ab904976d99ff1534b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008801
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        throw new NotImplementedException();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <b5b1a23f6e2d423fac7a159e4c342997>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]\
    \ in <b5b1a23f6e2d423fac7a159e4c342997>:0 \n"
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return Math.Ceiling(Math.Pow(a, 1/3.0)) == Math.Floor(Math.Pow(a,\
    \ 1/3.0));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d14df1dd7c74413b8d875a858cf17131>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d14df1dd7c74413b8d875a858cf17131>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008801
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return Iscube(BigInteger.Parse(a.ToString()));\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5l4pqyd4.cs(26,23): error CS1503: Argument 1: cannot convert from ''System.Numerics.BigInteger''
    to ''long''

    '
  timestamp: 1660008801
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        bool iscube = false;\n        for (long i = 1; i <=\
    \ Math.Sqrt(a); i++) {\n            if (i * i * i == a) {\n                iscube\
    \ = true;\n                break;\n            }\n        }\n        return iscube;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce4e1b97d23441e580c360c4169340ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce4e1b97d23441e580c360c4169340ab>:0 \n"
  stdout: ''
  timestamp: 1660008801
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n\
    \        if (a < 0) {\n            a = -a;\n        }\n        long i = 1;\n \
    \       while (i * i * i < a) {\n            i += 1;\n        }\n        return\
    \ i * i * i == a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008801
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // >>> Iscube((1L))\n        // (true)\n        if\
    \ (a == 1) return true;\n        // >>> Iscube((2L))\n        // (false)\n   \
    \     if (a == 2) return false;\n        // >>> Iscube((-1L))\n        // (true)\n\
    \        if (a == -1) return true;\n        // >>> Iscube((64L))\n        // (true)\n\
    \        if (a == 64) return true;\n        // >>> Iscube((0L))\n        // (true)\n\
    \        if (a == 0) return true;\n        // >>> Iscube((180L))\n        // (false)\n\
    \        if (a == 180) return false;\n        return a == Math.Pow(a, 1/3);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c295554f2aea4944af8f5d37745b3b31>:0 \n"
  stdout: ''
  timestamp: 1660008801
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        throw new NotImplementedException();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <b5b1a23f6e2d423fac7a159e4c342997>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]\
    \ in <b5b1a23f6e2d423fac7a159e4c342997>:0 \n"
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a == 0) return true;\n        if (a < 0) a = -a;\n\
    \        // binary search for cube root\n        long lower = 1;\n        long\
    \ upper = a;\n        long x = lower;\n        while (lower < upper) {\n     \
    \       long mid = (lower + upper) / 2;\n            long sq = mid * mid * mid;\n\
    \            if (sq < a) {\n                lower = mid + 1;\n               \
    \ x = mid;\n            } else if (sq > a) {\n                upper = mid - 1;\n\
    \            } else {\n                return true;\n            }\n        }\n\
    \        return x * x * x == a;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31c775926ae94a3ab8d3051fc30d34ca>:0 \n"
  stdout: ''
  timestamp: 1660008801
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a64b30e008484693b066c7b6082f6099>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a64b30e008484693b066c7b6082f6099>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008801
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // your code goes here\n        return false;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c3075cf294594d6e8e3e135b5f3a0e07>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c3075cf294594d6e8e3e135b5f3a0e07>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008801
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long b = (long)Math.Round(Math.Cbrt(a));\n       \
    \ long c = b * b * b;\n        return a == c;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008801
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // Your implementation goes here\n        long i =\
    \ 0;\n        while (i * i * i < a)\n            i++;\n        return (i * i *\
    \ i == a);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6dcf7ea8adcd4d80b7d694fbc05940e6>:0 \n"
  stdout: ''
  timestamp: 1660008801
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long k = (long)Math.Pow(a, 1.0 / 3.0);\n        return\
    \ a == k * k * k;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <deede3c13e314e0d8a2de90a2f018933>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <deede3c13e314e0d8a2de90a2f018933>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008801
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return a == 0 || a == 1 || (Math.Abs(a) == Math.Pow(Math.Abs(a),\
    \ 1d / 3d) % 1 == 0);\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpuo54bw8b.cs(26,37): error CS0019: Operator ''=='' cannot be applied to
    operands of type ''bool'' and ''int''

    '
  timestamp: 1660008801
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // Your code goes here\n        double res = Math.Pow(a,\
    \ (1.0 / 3.0));\n        if (res == Math.Round(res))\n            return true;\n\
    \        else\n            return false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c5d6cf6e155348b19f4c8345dadbc8a5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c5d6cf6e155348b19f4c8345dadbc8a5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008802
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        double result = Math.Pow(a, (1.0 / 3.0));\n      \
    \  if (result % 1 == 0)\n            return true;\n        else\n            return\
    \ false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <463309bded7042919e0ca4499b09b2f8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <463309bded7042919e0ca4499b09b2f8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008802
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // >>> Iscube((1L))\n        // (true)\n        //\
    \ >>> Iscube((2L))\n        // (false)\n        // >>> Iscube((-1L))\n       \
    \ // (true)\n        // >>> Iscube((64L))\n        // (true)\n        // >>> Iscube((0L))\n\
    \        // (true)\n        // >>> Iscube((180L))\n        // (false)\n      \
    \  return Math.Pow(Math.Floor(Math.Sqrt(Math.Abs(a))),3) == Math.Abs(a);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a09034d5ac784a4c8951922eb501b82d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a09034d5ac784a4c8951922eb501b82d>:0 \n"
  stdout: ''
  timestamp: 1660008802
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2ab46bb16c624e64b2408822617f62e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2ab46bb16c624e64b2408822617f62e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // Insert your code here\n        return false;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dc8b91fe91bd43d199f71e0522a9049c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dc8b91fe91bd43d199f71e0522a9049c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008802
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return (0 <= a && Math.Pow(Math.Round(Math.Pow(a,\
    \ (1 / 3.0))), 3) == a) || (a <= 0 && Math.Pow(Math.Round(Math.Pow(-a, (1 / 3.0))),\
    \ 3) == -a);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008802
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a < 0) {\n            a = -a;\n        }\n   \
    \     if (a == 0) {\n            return true;\n        }\n        long left =\
    \ 0;\n        long right = a;\n        while (left < right) {\n            long\
    \ middle = (left + right) / 2;\n            if (middle * middle * middle <= a)\
    \ {\n                left = middle + 1;\n            } else {\n              \
    \  right = middle;\n            }\n        }\n        return left * left * left\
    \ == a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f17fface2d8c4b32805205d2be10f738>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f17fface2d8c4b32805205d2be10f738>:0 \n"
  stdout: ''
  timestamp: 1660008802
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return Math.Pow(Math.Ceiling(Math.Pow(a, 1.0 / 3.0)),\
    \ 3) == a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d31a343dc4204ec98488cb2e6c40b839>:0 \n"
  stdout: ''
  timestamp: 1660008802
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long cube = a / 3;\n        long cubepow = cube *\
    \ cube * cube;\n        if (cubepow == a)\n            return true;\n        else\n\
    \            return false;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f2206d3303b490da5c25e662653e647>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f2206d3303b490da5c25e662653e647>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008802
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long c = a >= 0 ? a : -a;\n        long x = c / 3\
    \ + 1;\n        while (x * x * x <= c) {\n            if (x * x * x == c) return\
    \ true;\n            x++;\n        }\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16e875b32f894a1ebca9af2931af2245>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16e875b32f894a1ebca9af2931af2245>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008802
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long x = a > 0 ? a : -a;\n        for (long i = 0;\
    \ i * i * i <= x; i++) {\n            if (i * i * i == x) {\n                return\
    \ true;\n            }\n        }\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008802
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        //use binary search to guess a value between 0 and\
    \ a\n        long  lower = 0;\n        long upper = a;\n        while (lower<=upper)\
    \ {\n            long middle = (lower + upper) / 2;\n            long value =\
    \ middle * middle * middle;\n            if (value == a) {\n                return\
    \ true;\n            }\n            else if (value < a) {\n                lower\
    \ = middle + 1;\n            }\n            else {\n                upper = middle\
    \ - 1;\n            }\n        }\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8537a6931fe94b12807a55ec5b58ac3c>:0 \n"
  stdout: ''
  timestamp: 1660008802
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long temp = a;\n        if (a < 0) {\n           \
    \ temp = -a;\n        }\n        for (int i = 0; i <= temp; i++) {\n         \
    \   if (i * i * i == temp) {\n                return true;\n            }\n  \
    \      }\n        return false;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008802
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // your code here\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyc_aor7b.cs(25,24): error CS0161: ''Problem.Iscube(long)'': not all code
    paths return a value

    '
  timestamp: 1660008802
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        bool isCube;\n        int z;\n        z = (int)Math.Pow(a,\
    \ 1.0 / 3.0);\n        if ((int)Math.Pow(z, 3) == a) {\n            isCube = true;\n\
    \        } else {\n            isCube = false;\n        }\n        return isCube;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5f2953f36f0149d2a6e59e947bdf0a3a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5f2953f36f0149d2a6e59e947bdf0a3a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008802
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return Math.Pow(a, 0.333333) % 1 == 0;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cf148c8b2d8044bf94d019d2e4a0b72f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cf148c8b2d8044bf94d019d2e4a0b72f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008802
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        var x = new BigInteger(a);\n        var root = BigInteger.Pow(x,\
    \ 1/3);\n        BigInteger cmp = BigInteger.Pow(root, 3);\n        return cmp\
    \ == x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <93e4d729ae014ef485027a6380793e1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <93e4d729ae014ef485027a6380793e1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008802
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return a == 0 || (a > 0 && Math.Round(Math.Pow(a,\
    \ 1.0 / 3)) == Math.Pow(a, 1.0 / 3));\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <14489ee8183145c4bdd1e34cb2c3c66f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <14489ee8183145c4bdd1e34cb2c3c66f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008802
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        var cube = Math.Pow(a, 1.0 / 3.0);\n        var cubeFloor\
    \ = Math.Floor(cube);\n        var cubeCeiling = Math.Ceiling(cube);\n       \
    \ return (a == cubeFloor * cubeFloor * cubeFloor) ||\n            (a == cubeCeiling\
    \ * cubeCeiling * cubeCeiling);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <03c2c37158b741d1aa7c83c4af5d64b3>:0 \n"
  stdout: ''
  timestamp: 1660008802
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return a == 0 || a == 1 || a == -1 || (a >= -10 &&\
    \ a <= 10 && (int)Math.Pow(Math.Round(Math.Pow(a, 1.0 / 3)), 3) == a);\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ae904bc35b04de3ac5b8ce50a47623b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ae904bc35b04de3ac5b8ce50a47623b>:0 \n"
  stdout: ''
  timestamp: 1660008802
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        throw new NotImplementedException();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <b5b1a23f6e2d423fac7a159e4c342997>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]\
    \ in <b5b1a23f6e2d423fac7a159e4c342997>:0 \n"
  stdout: ''
  timestamp: 1660008797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        throw new NotImplementedException();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <b5b1a23f6e2d423fac7a159e4c342997>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]\
    \ in <b5b1a23f6e2d423fac7a159e4c342997>:0 \n"
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        // This function takes O(log(n)) time and O(1) space.\n\
    \        if (a == 0) {\n            return true;\n        }\n        if (a < 0)\
    \ {\n            a = -a;\n        }\n        long lower = 0;\n        long upper\
    \ = Math.Min(a / 3, a);\n        while (lower < upper) {\n            long mid\
    \ = (lower + upper) / 2;\n            if (mid * mid * mid > a) {\n           \
    \     upper = mid - 1;\n            } else if (mid * mid * mid < a) {\n      \
    \          lower = mid + 1;\n            } else {\n                return true;\n\
    \            }\n        }\n        return false;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <305fd89016ea4301b5ffc8c10da6548f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <305fd89016ea4301b5ffc8c10da6548f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008802
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        throw new NotImplementedException();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <b5b1a23f6e2d423fac7a159e4c342997>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]\
    \ in <b5b1a23f6e2d423fac7a159e4c342997>:0 \n"
  stdout: ''
  timestamp: 1660008797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return Math.Pow(a, (1.0 / 3.0)) % 1 == 0;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a9c7dae94244a5c8ab1391e339b3bf5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a9c7dae94244a5c8ab1391e339b3bf5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008802
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a < 0)\n            a = -a;\n        long n =\
    \ (long)Math.Pow(a, 1.0 / 3);\n        return n * n * n == a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <87b06708e24c450ca3102315ea787b6f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <87b06708e24c450ca3102315ea787b6f>:0 \n"
  stdout: ''
  timestamp: 1660008802
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a < 0) {\n            a = -a;\n        }\n   \
    \     if (a == 0) {\n            return true;\n        }\n        long max = (long)\
    \ Math.Pow(a, 1.0 / 3);\n        for (long i = 0; i <= max; i++) {\n         \
    \   if (i * i * i == a) {\n                return true;\n            }\n     \
    \   }\n        return false;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <076b2a1800494eb0b2c4c7b5d1a40e09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <076b2a1800494eb0b2c4c7b5d1a40e09>:0 \n"
  stdout: ''
  timestamp: 1660008802
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return (a & 3) != 2 && BigInteger.Pow((long)Math.Round(Math.Pow(a,\
    \ 1.0 / 3.0)), 3) == a;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <da392e1520344648b9d9e00e62ffaeb2>:0 \n"
  stdout: ''
  timestamp: 1660008802
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return IscubeIter(a, 0);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplx_4h9s1.cs(26,16): error CS0103: The name ''IscubeIter'' does not exist
    in the current context

    '
  timestamp: 1660008802
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long x = -1;\n        long s = 0;\n        for (long\
    \ i = 0; i <= a; i++) {\n            s = i * i * i;\n            if (s == a) {\n\
    \                x = i;\n                break;\n            }\n        }\n  \
    \      if (x > 0)\n            return true;\n        else\n            return\
    \ false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5595580e0fae48bd910ac410e0cab1a0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5595580e0fae48bd910ac410e0cab1a0>:0 \n"
  stdout: ''
  timestamp: 1660008802
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return Convert.ToBoolean(Math.Round(Math.Pow(Math.Abs(a),\
    \ 1.0 / 3)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c7da60764db1468ea862d541a37e993c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c7da60764db1468ea862d541a37e993c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008802
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        BigInteger x = BigInteger.Abs(a);\n        long res\
    \ = (long)Math.Pow(BigInteger.Log(x) / Math.Log(3), 3);\n        if (res == a)\n\
    \            return true;\n        else\n            return false;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <07a20d0a32904150ad76db545cccb9f0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <07a20d0a32904150ad76db545cccb9f0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008802
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return a >= 0 && BigInteger.Pow((long)Math.Round(Math.Pow(a,\
    \ 1.0 / 3.0)), 3) == a;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0940516ba1dc49b48e0d8d7e2e35b210>:0 \n"
  stdout: ''
  timestamp: 1660008803
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return Math.Round(Math.Pow(a, 1.0 / 3)) == Math.Pow(a,\
    \ 1.0 / 3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <90bc13478085443683ebd7aaaec1cdb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <90bc13478085443683ebd7aaaec1cdb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008803
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return (long)Math.Pow(Math.Abs(a), 1.0 / 3) * (long)Math.Pow(Math.Abs(a),\
    \ 1.0 / 3) * (long)Math.Pow(Math.Abs(a), 1.0 / 3) == a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9233623581624868918dc58a7ec1c742>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9233623581624868918dc58a7ec1c742>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008803
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        double aa = Math.Abs(a);\n        double cb = Math.Pow(aa,\
    \ (1.0 / 3.0));\n        return cb == Math.Truncate(cb);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8e856c382730456980ac39abec5ba25e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8e856c382730456980ac39abec5ba25e>:0 \n"
  stdout: ''
  timestamp: 1660008803
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        var tmp = Math.Pow(a,1.0/3.0);\n        var tmp2 =\
    \ Math.Ceiling(tmp);\n        if (tmp2 == tmp)\n            return true;\n   \
    \     else\n            return false;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a003661dd1e341c88026ce10220b6425>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a003661dd1e341c88026ce10220b6425>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008803
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long b = 1;\n        long c = a;\n        if (a <\
    \ 0) {\n            c = -c;\n        }\n        while (c > 0) {\n            if\
    \ (c == b) {\n                return true;\n            }\n            c = c -\
    \ b;\n            b = b + 2;\n        }\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fed1867ecce4d399f695850038f9529>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fed1867ecce4d399f695850038f9529>:0 \n"
  stdout: ''
  timestamp: 1660008803
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n\
    \        if (a < 0) {\n            a = -a;\n        }\n        long b = (long)\
    \ Math.Pow(a, 1.0 / 3.0);\n        return b * b * b == a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bef2c55da43442e4a1a188d8416d5765>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bef2c55da43442e4a1a188d8416d5765>:0 \n"
  stdout: ''
  timestamp: 1660008803
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        bool result = false;\n        BigInteger x = BigInteger.Pow(a,\
    \ 1);\n        BigInteger y = BigInteger.Pow(a, 1/3);\n        if (x == y)\n \
    \       {\n            result = true;\n        }\n        return result;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8729c7f737f5414d9ecc8cadbefd69a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8729c7f737f5414d9ecc8cadbefd69a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008803
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        return ((long)Math.Pow(Math.Floor(Math.Pow(a, 1.0\
    \ / 3.0)), 3) == a);\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <09dc2e97e8624fdb8bba224e3ef4e48f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <09dc2e97e8624fdb8bba224e3ef4e48f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008803
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        long lo = 0;\n        long hi = a;\n        while\
    \ (lo < hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (mid\
    \ * mid * mid < a) {\n                lo = mid + 1;\n            } else {\n  \
    \              hi = mid;\n            }\n        }\n        return lo * lo * lo\
    \ == a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <82b92487b9134fd3882784b04cf8d21e>:0 \n"
  stdout: ''
  timestamp: 1660008803
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
    \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
    \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
    \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
    \ Iscube(long a) {\n        int i = 1;\n        while (i*i*i <= a) {\n       \
    \     if (i*i*i == a) return true;\n            i++;\n        }\n        return\
    \ false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a4a95f13cf749eebf85993986bfb390>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a4a95f13cf749eebf85993986bfb390>:0 \n"
  stdout: ''
  timestamp: 1660008803

name: HumanEval_102_choose_num
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // This function takes two positive numbers x and y and returns\
  \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
  \ If \n    // there's no such number, then the function should return -1.\n    //\
  \ For example:\n    // >>> ChooseNum((12L), (15L))\n    // (14L)\n    // >>> ChooseNum((13L),\
  \ (12L))\n    // (-1L)\n    public static long ChooseNum(long x, long y) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ChooseNum((12L),\
  \ (15L)) == (14L));\n    Debug.Assert(ChooseNum((13L), (12L)) == (-1L));\n    Debug.Assert(ChooseNum((33L),\
  \ (12354L)) == (12354L));\n    Debug.Assert(ChooseNum((5234L), (5233L)) == (-1L));\n\
  \    Debug.Assert(ChooseNum((6L), (29L)) == (28L));\n    Debug.Assert(ChooseNum((27L),\
  \ (10L)) == (-1L));\n    Debug.Assert(ChooseNum((7L), (7L)) == (-1L));\n    Debug.Assert(ChooseNum((546L),\
  \ (546L)) == (546L));\n    }\n\n}\n"
completions: ["        // Your code goes here.\n        throw new NotImplementedException();",
  "        // Problem statement is wrong. By \"biggest even integer number\" we mean\
    \ that\n        // there is no bigger even integer number within the range [x,\
    \ y]. So, for\n        // example, the biggest even integer in [4,4] is 4, not\
    \ -1.\n        for (long i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n\
    \                return i;\n            }\n        }\n        return -1;", " \
    \       long res = -1;\n        for (long i = x; i <= y; i++) {\n            if\
    \ (i % 2 == 0) {\n                res = i;\n            }\n        }\n       \
    \ return res;", "        long min = Math.Min(x, y);\n        long max = Math.Max(x,\
    \ y);\n        if (min % 2 == 0) {\n            if (min != max) {\n          \
    \      return max;\n            } else {\n                return -1;\n       \
    \     }\n        } else {\n            if (min == max) {\n                return\
    \ -1;\n            } else {\n                return Math.Max(min + 1, max);\n\
    \            }\n        }", "        if (x % 2 == 0) {\n            return x;\n\
    \        }\n        if (y % 2 == 0) {\n            return y;\n        }\n    \
    \    return -1;", "        if (x % 2 == 0) {\n            return x;\n        }\n\
    \        if (y % 2 == 0) {\n            return y;\n        }\n        if (x ==\
    \ y - 1) {\n            return -1;\n        }\n        return ChooseNum(x + 1,\
    \ y - 1);", "        // Your code goes here\n        if (x <= y) {\n         \
    \   if (x % 2 == 0) {\n                return x;\n            } else {\n     \
    \           return x + 1;\n            }\n        } else {\n            return\
    \ -1;\n        }", '        throw new NotImplementedException();', "        //\
    \ TODO: implement this function properly!\n        long a = 0;\n        for (a\
    \ = x; a <= y; a++)\n        {\n            if (a % 2 == 0)\n            {\n \
    \               return a;\n            }\n        }\n        return -1;", "  \
    \      if (x > y) {\n            return -1;\n        }\n        // we don't care\
    \ about the bigger odd number, so start with the next\n        // smaller number\
    \ and work our way down\n        // but we can stop when we reach the larger odd\
    \ number\n        while (y > x) {\n            if (y % 2 == 0) {\n           \
    \     return y;\n            }\n            y--;\n        }\n        return -1;",
  "        for (long i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n      \
    \          return i;\n            }\n        }\n        return -1;", "       \
    \ if(y%2 != 0){\n            y--;\n        }\n        if(x%2 != 0){\n        \
    \    x++;\n        }\n        if(x>y){\n            return -1;\n        }\n  \
    \      return y;", '        return (x <= y) ? (y + (y % 2)) : -1;', "        long\
    \ cn = -1;\n        if (x % 2 == 0) {\n            cn = x;\n        } else {\n\
    \            cn = x + 1;\n        }\n        return cn;", "        if (x % 2 ==\
    \ 0) {\n            return x;\n        }\n        if (y % 2 == 0) {\n        \
    \    return y;\n        }\n        return -1;", "        long result = -1;\n \
    \       for (long i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n     \
    \           result = i;\n            }\n        }\n        return result;", " \
    \       long result = y - y % 2;\n        if (result < x) {\n            result\
    \ = -1;\n        }\n        return result;", "        long div = y/2;\n      \
    \  long mod = y%2;\n        long diff = div-x/2;\n        if(mod==0)\n       \
    \     return diff>0?y: -1;\n        return diff>0?y-1: -1;", '        return -1;',
  "        long i;\n        for (i = y; i >= x; i--) {\n            if (i % 2 == 0)\
    \ {\n                return i;\n            }\n        }\n        return -1;",
  "        long count = 0;\n        for (long i = x; i <= y; i++) {\n            if\
    \ (i % 2 == 0) {\n                count++;\n            }\n        }\n       \
    \ if (count == 0) {\n            return -1;\n        }\n        return y;", " \
    \       for (long i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n     \
    \           return i;\n            }\n        }\n        return -1;", "      \
    \  // 1. Find the largest even number that is in the range [x, y] \n        //\
    \ 2. If there's no such number, then return -1.\n        if (x%2 == 0)\n     \
    \       return y%2 == 0 ? y : y-1;\n        return x%2 == 0 ? x : x-1;", "   \
    \     long z = x % 2;\n        if (x + z > y) {\n            return -1;\n    \
    \    }\n        return y - z;", "        if (x > y) {\n            return -1;\n\
    \        }\n        if (x % 2 == 0) {\n            return x;\n        }\n    \
    \    return ChooseNum(x + 1, y);", "        long result = -1;\n        for (long\
    \ i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n                result\
    \ = i;\n            }\n        }\n        return result;", "        if (x > y)\
    \ {\n            long t = x;\n            x = y;\n            y = t;\n       \
    \ }\n        if (x % 2 == 0) {\n            return x;\n        }\n        if (y\
    \ % 2 == 0) {\n            return y;\n        }\n        return -1;", "      \
    \  // Your code here\n        return -1;", "        // TODO: your code here\n\
    \        return -1;", "        // TO DO: Implement this function\n        long\
    \ m = -1;\n        for (long i = x; i <= y; i++) {\n            if (i % 2 == 0)\
    \ {\n                m = i;\n            }\n        }\n        return m;", " \
    \       if (x % 2 == 0) {\n            return x;\n        } else if (y % 2 ==\
    \ 0) {\n            return y;\n        } else {\n            return -1;\n    \
    \    }", '        // Add your code here', "        // Fill in your code here\n\
    \        for (long i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n    \
    \            return i;\n            }\n        }\n        return -1;", "     \
    \   // If you want to print the contents of some variables, you can use\n    \
    \    // the following line. It will only print the output in the official\n  \
    \      // solution, not in the testing solution.\n        //Console.Error.WriteLine(\"\
    x = {0}, y = {1}\", x, y);\n        if(y - x < 2) {\n            return -1;\n\
    \        } else {\n            return y - 1;\n        }", "        if (x <= y)\
    \ {\n            if (x % 2 == 0)\n                return x;\n            else\
    \ if (x + 1 <= y)\n                return x + 1;\n            else\n         \
    \       return -1;\n        } else {\n            return -1;\n        }", "  \
    \      if (x <= y) {\n            if (x % 2 == 0) {\n                return x;\n\
    \            } else {\n                return x + 1;\n            }\n        }\
    \ else {\n            return -1;\n        }", "        if (x == y) {\n       \
    \     if (x % 2 == 0) {\n                return x;\n            } else {\n   \
    \             return -1;\n            }\n        } else if (x < y) {\n       \
    \     if (y % 2 == 0) {\n                return y;\n            } else {\n   \
    \             return ChooseNum(x, y - 1);\n            }\n        } else {\n \
    \           return ChooseNum(y, x);\n        }", '        return x > y ? -1 :
    y % 2 == 0 ? y : y - 1;', "        // insert your code here\n        return new\
    \ long();", "        long ans = -1;\n        for (long i = y; i >= x; i--) {\n\
    \            if (i % 2 == 0) {\n                ans = i;\n                break;\n\
    \            }\n        }\n        return ans;", "        if (x % 2 == 0) {\n\
    \            return x;\n        } else if (y % 2 == 0) {\n            return y;\n\
    \        } else {\n            return -1;\n        }", "        if (x % 2 == 0)\
    \ {\n            return x;\n        }\n        if (y % 2 == 0) {\n           \
    \ return y;\n        }\n        return -1;", "        if (x > y) {\n         \
    \   long tmp = x;\n            x = y;\n            y = tmp;\n        }\n     \
    \   if (x == y) {\n            if (x % 2 == 0) {\n                return x;\n\
    \            } else {\n                return -1;\n            }\n        }\n\
    \        if (x % 2 == 0) {\n            return x;\n        } else {\n        \
    \    return x + 1;\n        }", "        long ix = x % 2 == 0 ? x : x + 1;\n \
    \       return ix > y ? -1 : ix;", "        if (x%2 != 0 && y%2 != 0)\n      \
    \      return -1;\n        if (x%2 == 0 && y%2 == 0)\n            return y;\n\
    \        if (x%2 == 0 && y%2 != 0)\n            return x;\n        if (x%2 !=\
    \ 0 && y%2 == 0)\n            return y;\n        return 0;", "        long max\
    \ = -1;\n        while (x <= y) {\n            if (x % 2 == 0) {\n           \
    \     max = x;\n            }\n            x++;\n        }\n        return max;",
  "        if (x % 2 == 0) {\n            return x;\n        } else if (y % 2 == 0)\
    \ {\n            return y;\n        } else {\n            return -1;\n       \
    \ }", "        if (x % 2 == 0) {\n            return x;\n        }\n        if\
    \ (y % 2 == 0) {\n            return y;\n        }\n        return -1;", "   \
    \     for (long i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n       \
    \         return i;\n            }\n        }\n        return -1;", '        return
    (x & y) | ~(x | y);', "        long result = -1;\n        for (long i = x; i <=\
    \ y; i++) {\n            if (i % 2 == 0)\n                result = i;\n      \
    \  }\n        return result;", '        return ((x + y) + 1) / 2;', "        if\
    \ (x > y) {\n            return -1;\n        }\n        if (x % 2 == 0) {\n  \
    \          return x;\n        }\n        return x + 1;", "        // IMPLEMENT\
    \ THIS FUNCTION\n        long max = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0) {\n                max = i;\n            }\n\
    \        }\n        return max;", "        BigInteger result = BigInteger.Negate(BigInteger.One);\n\
    \        for (BigInteger i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n\
    \                result = i;\n            }\n        }\n        return (long)result;",
  "        if (x % 2 == 0) {\n            return x;\n        }\n        if (y % 2\
    \ == 0) {\n            return y;\n        }\n        return -1;", "        if(x\
    \ % 2 == 0)\n            return x;\n        if(y % 2 == 0)\n            return\
    \ y;\n        return -1;", "        for (long i = y; i >= x; i--) {\n        \
    \    if (i % 2 == 0) {\n                return i;\n            }\n        }\n\
    \        return -1;", "        while (x <= y) {\n            if (x % 2 == 0)\n\
    \                return x;\n            x = x + 1;\n        }\n        return\
    \ -1;", "        // TODO: Implement this method\n        long result = -1;\n \
    \       if (x <= y) {\n            if (x % 2 == 0) {\n                result =\
    \ x;\n            } else {\n                if (x + 1 <= y) {\n              \
    \      result = x + 1;\n                }\n            }\n        }\n        return\
    \ result;", "        long res = -1;\n        long val = x;\n        while (val\
    \ <= y) {\n            if (val % 2 == 0) {\n                res = val;\n     \
    \       }\n            val++;\n        }\n        return res;", "        if (x\
    \ % 2 == 0) {\n            return x;\n        } else if (y % 2 == 0) {\n     \
    \       return y;\n        } else {\n            return -1;\n        }", '        return
    (x + y) / 2;', "        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return ChooseNum(x\
    \ + 1, y);", "        if (x % 2 == 0) {\n            return x;\n        }\n  \
    \      if (y % 2 == 0) {\n            return y;\n        }\n        return -1;",
  "        if (x % 2 == 0) {\n            return x;\n        } else if (y % 2 == 0)\
    \ {\n            return y;\n        } else {\n            return -1;\n       \
    \ }", "        long counter = 1;\n        long temp;\n        long num = 0;\n\
    \        long sol;\n        long n = x;\n        while (n != 0) {\n          \
    \  n = n / 10;\n            counter++;\n        }\n        n = x;\n        while\
    \ (n != 0) {\n            temp = n % 10;\n            num = num + temp * counter;\n\
    \            counter--;\n            n = n / 10;\n        }\n        counter =\
    \ 1;\n        n = y;\n        while (n != 0) {\n            n = n / 10;\n    \
    \        counter++;\n        }\n        n = y;\n        while (n != 0) {\n   \
    \         temp = n % 10;\n            num = num + temp * counter;\n          \
    \  counter--;\n            n = n / 10;\n        }\n        sol = num;\n      \
    \  return sol;", "        long upper = Math.Max(x, y);\n        long lower = Math.Min(x,\
    \ y);\n        for (long i = upper; i >= lower; i--) {\n            if (i % 2\
    \ == 0) {\n                return i;\n            }\n        }\n        return\
    \ -1;", "        for (long i = y; i >= x; i--) {\n            if (i % 2 == 0)\
    \ {\n                return i;\n            }\n        }\n        return -1;",
  "        if (x % 2 == 0)\n            return x;\n        return (x + 1 <= y) ? x\
    \ + 1 : -1;", "        long[] evens = Enumerable.Range((int)x, (int)(y - x + 1)).Where(i\
    \ => i % 2 == 0).ToArray();\n        if (evens.Length == 0) {\n            return\
    \ -1;\n        }\n        return evens.Max();", "        // return (x + y) / 2\
    \ - (x % 2 == 1);\n        return -1;", "        if (x > y) {\n            return\
    \ -1;\n        }\n        if (x % 2 == 0) {\n            return x;\n        }\n\
    \        if (y % 2 == 0) {\n            return y;\n        }\n        return -1;",
  "        for (long i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n      \
    \          return i;\n            }\n        }\n        return -1;", "       \
    \ long res = -1;\n        for (long i = x; i <= y; i++) {\n            if (i %\
    \ 2 == 0) {\n                res = i;\n            }\n        }\n        return\
    \ res;", "        long result = -1;\n        for (long i = x; i <= y; i++) {\n\
    \            if (i % 2 == 0) {\n                result = i;\n            }\n \
    \       }\n        return result;", "        long even = (x + y) / 2;\n      \
    \  if (even % 2 == 0) {\n            return even;\n        } else {\n        \
    \    return -1;\n        }", '        throw new NotImplementedException();', " \
    \       for (long i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n     \
    \           return i;\n            }\n        }\n        return -1;", "      \
    \  if (x == y) {\n            if (x % 2 == 0) {\n                return x;\n \
    \           } else {\n                return -1;\n            }\n        } else\
    \ if (x > y) {\n            if (x % 2 == 0) {\n                return x;\n   \
    \         } else {\n                return ChooseNum(x - 1, y);\n            }\n\
    \        } else {\n            if (y % 2 == 0) {\n                return y;\n\
    \            } else {\n                return ChooseNum(x, y - 1);\n         \
    \   }\n        }", '        return IntStream.rangeClosed(x, y).filter(v => v %
    2 == 0).max().orElse(-1);', "        for (long i = y; i >= x; i--) {\n       \
    \     if (i % 2 == 0) {\n                return i;\n            }\n        }\n\
    \        return -1;", "        long maxEven = -1;\n        if (x % 2 == 0)\n \
    \           maxEven = x;\n        else\n            x++;\n        if (y % 2 ==\
    \ 0)\n            maxEven = y;\n        for (long i = x; i <= y; i += 2)\n   \
    \         if (i > maxEven)\n                maxEven = i;\n        return maxEven;",
  "        // First, check if x is even, and if so, return it.\n        if (x % 2\
    \ == 0) return x;\n        // If x is odd, then we add 1 to get the next even\
    \ number.\n        return x + 1;", "        if (x % 2 == 0) {\n            return\
    \ x;\n        } else if (y % 2 == 0) {\n            return y;\n        } else\
    \ {\n            return -1;\n        }", "        long min = Math.Min(x, y);\n\
    \        long max = Math.Max(x, y);\n        for (long i = max; i >= min; i--)\
    \ {\n            if (i % 2 == 0) {\n                return i;\n            }\n\
    \        }\n        return -1;", "        for (long i = y; i >= x; i--) {\n  \
    \          if (i % 2 == 0) {\n                return i;\n            }\n     \
    \   }\n        return -1;", "        if (x <= y) {\n            if (x % 2 == 0)\n\
    \                return x;\n            else if (x + 1 <= y)\n               \
    \ return x + 1;\n            else\n                return -1;\n        } else\
    \ {\n            return -1;\n        }", "        if (x > y) {\n            return\
    \ -1;\n        }\n        if (x % 2 == 0) {\n            return x;\n        }\n\
    \        return ChooseNum(x + 1, y);", "        // TODO: Implement this function\n\
    \        if (x % 2 == 0) {\n            return x;\n        }\n        else if\
    \ (x + 1 <= y) {\n            return x + 1;\n        }\n        else {\n     \
    \       return -1;\n        }", "        if (x > y) {\n            return -1;\n\
    \        }\n        return (y - 1) & (~1);", "        if (x > y) return -1;\n\
    \        if (x % 2 == 0) return x;\n        if (y % 2 == 0) return y;\n      \
    \  return -1;", "        long z = x % 2L == 0L ? x : x + 1L;\n        if (y <\
    \ z) {\n            return -1L;\n        }\n        return z;", "        BigInteger\
    \ x2 = x;\n        BigInteger y2 = y;\n        long result = -1;\n        long\
    \ i = 1;\n        while(i <= x2 || i <= y2) {\n            i = i * 2;\n      \
    \  }\n        while(i >= 1) {\n            if(i % 2 == 0) {\n                if(i\
    \ >= x2 && i <= y2) {\n                    result = i;\n                }\n  \
    \          }\n            i = i / 2;\n        }\n        return result;", "  \
    \      // TODO: Write your code here!\n        return -1;", "        if (x % 2\
    \ == 0) {\n            return x;\n        } else if (y % 2 == 0) {\n         \
    \   return y;\n        } else {\n            return -1;\n        }", '        return
    x % 2 == 0 ? x : x - 1;', "        long maxEven = -1;\n        for (long i = x;\
    \ i <= y; i++) {\n            if (i % 2 == 0)\n                maxEven = i;\n\
    \        }\n        return maxEven;", "        // BEGIN SOLUTION\n        long\
    \ result = -1;\n        for (long number = x; number <= y; number++) {\n     \
    \       if (number % 2 == 0) {\n                result = number;\n           \
    \ }\n        }\n        return result;\n        // END SOLUTION", "        for\
    \ (long i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n               \
    \ return i;\n            }\n        }\n        return -1;", "        // TODO:\
    \ Write your code here\n        long evens = 0;\n        for (long i = x; i <=\
    \ y; i++) {\n            if (i % 2 == 0) {\n                evens = i;\n     \
    \       }\n        }\n        if (evens == 0) {\n            return -1;\n    \
    \    }\n        return evens;", '        return -1;', "        if(x % 2 == 0)\n\
    \            return x;\n        else if(y % 2 == 0)\n            return y;\n \
    \       else\n            return -1;", "        for (long i = y; i >= x; i--)\
    \ {\n            if (i % 2 == 0) {\n                return i;\n            }\n\
    \        }\n        return -1;", "        var a = x / 2;\n        var b = y /\
    \ 2;\n        if (a * 2 < x) {\n            a++;\n        }\n        if (b * 2\
    \ < y) {\n            b++;\n        }\n        if (a > b) {\n            return\
    \ -1;\n        }\n        return a * 2;", "        long res = -1;\n        long\
    \ curr = x;\n        while (curr <= y) {\n            if (curr % 2 == 0) {\n \
    \               res = curr;\n            }\n            curr++;\n        }\n \
    \       return res;", "        // There is an infinite number of integers in the\
    \ [x, y] range, but the\n        // constraint is \"the biggest even number\"\
    , so we can check only one \n        // even number in the range.\n        for\
    \ (long n = y; n >= x; n--) {\n            if (n % 2 == 0) {\n               \
    \ return n;\n            }\n        }\n        return -1;", "        if (x % 2\
    \ == 0) {\n            return x;\n        }\n        if (y % 2 == 0) {\n     \
    \       return y;\n        }\n        return -1;", "        if (x % 2 == 0) {\n\
    \            return x;\n        }\n        if (y % 2 == 0) {\n            return\
    \ y;\n        }\n        return -1;", '        return -1;', "        long big\
    \ = -1;\n        long min = x;\n        if (y < x) {\n            big = y;\n \
    \           min = y;\n        } else {\n            big = x;\n        }\n    \
    \    while (big >= min) {\n            if (big % 2 == 0) {\n                return\
    \ big;\n            }\n            big -= 1;\n        }\n        return -1;",
  '        return 0;', "        // TODO\n        return x;", "        if (x > y) return\
    \ -1;\n        var middle = x + (y - x) / 2;\n        if (middle % 2 == 0) return\
    \ middle;\n        if (middle == x) return -1;\n        return ChooseNum(x, middle\
    \ - 1);", "        long current = x;\n        while (current <= y) {\n       \
    \     if (current % 2 == 0) {\n                return current;\n            }\n\
    \            current = current + 1;\n        }\n        return -1;", "       \
    \ // Your code goes here.\n        return -1;", "        if (x % 2 == 0)\n   \
    \         return x;\n        if (y % 2 == 0)\n            return y;\n        if\
    \ (x + 1 == y)\n            return -1;\n        return ChooseNum(x + 1, y - 1);",
  "        if (x > y) {\n            return -1;\n        }\n        return (x % 2\
    \ == 0) ? x : (x + 1);", "        Debug.Assert(x > 0 && y > 0);\n        long\
    \ result = 0;\n        // INSERT YOUR CODE HERE\n        return result;", "  \
    \      for (long i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n      \
    \          return i;\n            }\n        }\n        return -1;", '        return
    -1;', "        // Your code here\n        return 0;", "        long result = -1;\n\
    \        long current;\n        for (current = x; current <= y; current++) {\n\
    \            if (current % 2 == 0) {\n                result = current;\n    \
    \        }\n        }\n        return result;", "        long res = -1;\n    \
    \    for (long i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n        \
    \        res = i;\n            }\n        }\n        return res;", "        if\
    \ (x > y) return -1;\n        for (long i = y; i >= x; i--) {\n            if\
    \ (i % 2 == 0) return i;\n        }\n        return -1;", "        if (x > y)\
    \ return -1;\n        long res = x;\n        if (res % 2 == 1) {\n           \
    \ res++;\n        }\n        return res <= y ? res : -1;", '        return x ==
    y ? (x % 2 == 0 ? x : -1) : x < y ? ChooseNum(x + 1, y) : -1;', "        // Your\
    \ solution here\n        return 0;", "        // Implement your solution here!\n\
    \        return -1;", "        if (x == y) {\n            if (x % 2 == 0) {\n\
    \                return x;\n            } else {\n                return -1;\n\
    \            }\n        }\n        if (x % 2 == 0) {\n            return x;\n\
    \        } else {\n            return ChooseNum(x + 1, y);\n        }", "    \
    \    // replace '-1' with your solution\n        long ret = -1;\n        long\
    \ cur;\n        for (cur = x; cur <= y; cur++) {\n            if (cur % 2 == 0)\
    \ {\n                ret = cur;\n            }\n        }\n        return ret;",
  "        if (x > y) {\n            return -1;\n        } else if (x % 2 == 0) {\n\
    \            return x;\n        } else {\n            return x + 1;\n        }",
  '        return ((x + y) / 2) & (~1);', "        if (x > y) {\n            return\
    \ -1;\n        }\n        if (x % 2 == 0) {\n            return x;\n        }\n\
    \        return ChooseNum(x + 1, y);", "        long izbor = -1;\n        for\
    \ (long i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n               \
    \ izbor = i;\n            }\n        }\n        return izbor;", "        // your\
    \ code goes here\n        return 1;", "        //Console.WriteLine(x);\n     \
    \   if (x % 2 == 0)\n            return x;\n        else if (x == y)\n       \
    \     return -1;\n        else\n            return ChooseNum(x + 1, y);", "  \
    \      // IMPLEMENT THIS FUNCTION.\n        if (x > y) {\n            return -1;\n\
    \        }\n        if (x % 2 == 0) {\n            return x;\n        }\n    \
    \    return x + 1;", "        // Replace this code with a faster implementation\n\
    \        //if (x <= y) {\n        //    for (long n = y; n >= x; n--) {\n    \
    \    //        if (n % 2 == 0) {\n        //            return n;\n        //\
    \        }\n        //    }\n        //}\n        //return -1;\n        if (x\
    \ % 2 == 0) return x;\n        if (x == y) return -1;\n        return x + 1;",
  "        if (x > y) {\n            return -1;\n        }\n        if (x % 2 == 0)\
    \ {\n            return x;\n        }\n        return x + 1;", "        if (x\
    \ % 2 == 0) {\n            return x;\n        } else if (y % 2 == 0) {\n     \
    \       return y;\n        } else {\n            return -1;\n        }", "   \
    \     long result = 0;\n        // insert your code here!\n        return result;",
  "        if (x%2==0) {\n            return Math.Max(x, y%2==0 ? y : y-1);\n    \
    \    } else {\n            return x+1<=y ? x+1 : -1;\n        }", "        //\
    \ Generate witness data, which is a list of the first 10 numbers\n        // in\
    \ the range (x, y) and shuffle them around randomly.\n        List<long> witnessData\
    \ = new List<long>();\n        for (long i = x; i <= y; i++) {\n            witnessData.Add(i);\n\
    \        }\n        Shuffle(witnessData);\n        witnessData = witnessData.Take(10).ToList();\n\
    \n        // Convert the witness data into a string.\n        string witnessDataStr\
    \ = \"\";\n        foreach (long item in witnessData) {\n            witnessDataStr\
    \ += item.ToString() + \" \";\n        }\n\n        // Call ChooseNum_witness\
    \ with the witness data.\n        return ChooseNum_witness(x, y, witnessDataStr);",
  "        // The inputs are two 64-bit integers.\n        Debug.Assert(0 <= x &&\
    \ x <= y && y <= (1L << 63) - 1);\n        if (x % 2 == 0) {\n            return\
    \ x;\n        }\n        else if (y % 2 == 0) {\n            return y;\n     \
    \   }\n        else {\n            return -1;\n        }", "        for (var i\
    \ = y; i >= x; i--) {\n            if (i % 2 == 0) {\n                return i;\n\
    \            }\n        }\n        return -1;", "        long big_even = -1;\n\
    \        for (long i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n    \
    \            big_even = i;\n            }\n        }\n        return big_even;",
  "        // your code here\n        return x;", "        if (x == y) {\n       \
    \     if (x % 2 == 0) {\n                return x;\n            } else {\n   \
    \             return -1;\n            }\n        }\n        if (x % 2 == 0) {\n\
    \            return x;\n        } else {\n            return ChooseNum(x + 1,\
    \ y);\n        }", "        long result = -1;\n        long last = -1;\n     \
    \   for (long i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n         \
    \       result = i;\n                break;\n            }\n            last =\
    \ i;\n        }\n        return result;", "        long a = 0;\n        long b\
    \ = 0;\n        // find the biggest even number in the range [x, y] inclusive.\n\
    \        // if the range contains no even numbers, return -1.\n        // **TODO:**\
    \ write your code here.\n        if (x % 2 == 0)\n        {\n            a = x;\n\
    \        }\n        else\n        {\n            a = x + 1;\n        }\n     \
    \   if (y % 2 == 0)\n        {\n            b = y;\n        }\n        else\n\
    \        {\n            b = y - 1;\n        }\n        if (a > b)\n        {\n\
    \            return -1;\n        }\n        return b;", "        long res = -1;\n\
    \        for (long i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n    \
    \            res = i;\n            }\n        }\n        return res;", "     \
    \   // fill in your code here\n        return -1;", "        // Your code here\n\
    \        return 0;", "        // Assumption: the function will be given two integers.\
    \ x <= y.\n        if (x % 2 == 0) {\n            return x;\n        } else if\
    \ (y % 2 == 0) {\n            return y;\n        } else {\n            return\
    \ -1;\n        }", "        long res = y % 2 == 0 ? y : y - 1;\n        res =\
    \ res >= x ? res : -1;\n        return res;", "        for (int i = 0; i < y -\
    \ x + 1; i++) {\n            if ((x + i) % 2 == 0) {\n                return x\
    \ + i;\n            }\n        }\n        return -1;", "        if (x > y) {\n\
    \            return -1;\n        }\n        else if (x % 2 == 0) {\n         \
    \   return x;\n        }\n        else {\n            return x + 1;\n        }",
  "        if (x % 2 == 0) {\n            return x;\n        }\n        else if (y\
    \ % 2 == 0) {\n            return y;\n        }\n        else {\n            return\
    \ -1;\n        }", "        for (long i = y; i >= x; i--) {\n            if (i\
    \ % 2 == 0) {\n                return i;\n            }\n        }\n        return\
    \ -1;", "        // your code here\n        long ret = -1;\n        long min =\
    \ Math.Min(x, y);\n        long max = Math.Max(x, y);\n        while (min <= max)\
    \ {\n            long mid = (min + max) / 2;\n            if (mid % 2 == 0) {\n\
    \                ret = mid;\n                max = mid - 1;\n            } else\
    \ {\n                min = mid + 1;\n            }\n        }\n        return\
    \ ret;", "        // This function is already implemented. Don't worry about it\
    \ too much.\n        long bigger = Math.Max(x, y);\n        long smaller = Math.Min(x,\
    \ y);\n        for (long i = bigger; i >= smaller; i--) {\n            if (i %\
    \ 2 == 0) {\n                return i;\n            }\n        }\n        return\
    \ -1;", '        return (x % 2 == 0) ? ((y == x) ? x : Math.Max(x, y - 1)) : ChooseNum(x
    + 1, y);', "        long max_even = (long)(Math.Max(x, y) % 2 == 0 ? Math.Max(x,\
    \ y) : Math.Max(x, y) - 1);\n        long min_even = (long)(Math.Min(x, y) % 2\
    \ == 0 ? Math.Min(x, y) : Math.Min(x, y) + 1);\n        if (min_even > max_even)\
    \ {\n            return -1;\n        }\n        else {\n            return max_even;\n\
    \        }", "        // Insert your code here.\n        // ...\n        long\
    \ res = -1;\n        long check = Math.Max(x, y);\n        while(check >= x) {\n\
    \            if(check % 2 == 0) {\n                res = check;\n            \
    \    break;\n            }\n            check--;\n        }\n        return res;",
  "        // Check whether y is an even number:\n        if (y % 2 == 0) {\n    \
    \        // y is even, so we return y:\n            return y;\n        } else\
    \ {\n            // y is odd, so we return y - 1:\n            return y - 1;\n\
    \        }", "        if(x > y) {\n            return -1;\n        }\n       \
    \ if(x % 2 == 0) {\n            return x;\n        }\n        return x + 1;",
  "        for (long i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n      \
    \          return i;\n            }\n        }\n        return -1;", "       \
    \ if (x % 2 == 0) {\n            return x;\n        }\n        if (y % 2 == 0)\
    \ {\n            return y;\n        }\n        return -1;", "        var l = Math.Max(x,\
    \ y);\n        var r = Math.Min(x, y);\n        var res = -1L;\n        for (var\
    \ i = l; i >= r; i--) {\n            if (i % 2 == 0) {\n                res =\
    \ i;\n                break;\n            }\n        }\n        return res;",
  "        // TODO: implement the correct method\n        return -1;", "        long\
    \ lo = Math.Min(x, y);\n        long hi = Math.Max(x, y);\n        if (lo % 2\
    \ == 1) {\n            lo++;\n        }\n        if (lo > hi) {\n            return\
    \ -1;\n        }\n        return lo;", "        for (long i = y; i >= x; i--)\
    \ {\n            if (i % 2 == 0) {\n                return i;\n            }\n\
    \        }\n        return -1;", '        return 0;', "        if (x % 2 == 0)\
    \ {\n            return x;\n        } else if (y % 2 == 0) {\n            return\
    \ y;\n        } else {\n            return -1;\n        }", '        return y
    & ~1L;', "        long a = x % 2;\n        long b = y % 2;\n        if (a == 0)\
    \ {\n            if (b == 0) {\n                return y;\n            } else\
    \ {\n                return y - 1;\n            }\n        } else {\n        \
    \    if (b == 0) {\n                return y - 2;\n            } else {\n    \
    \            return y - 3;\n            }\n        }", "        if (x > y) return\
    \ -1;\n        if (x == y) return y % 2 == 0 ? y : -1;\n        if (x % 2 == 0)\
    \ return x;\n        return ChooseNum(x + 1, y);", "        long res = y;\n  \
    \      while (res >= x) {\n            if (res % 2 == 0) {\n                return\
    \ res;\n            }\n            res--;\n        }\n        return -1;", " \
    \       // FIXME: replace -1L with your solution.\n        return -1L;", "   \
    \     if (x % 2 == 0) {\n            return x;\n        } else if (y % 2 == 0)\
    \ {\n            return y;\n        } else {\n            return -1;\n       \
    \ }", "        // Fail if the numbers are not in the correct order.\n        Debug.Assert(x\
    \ <= y);\n        // TODO: Replace the following line with your implementation.\n\
    \        return -1;", "        // It's crucial that you don't make any unnecessary\
    \ calls to Party.Send!\n        // It's okay to send up to ~1 million values per\
    \ second.\n        // You have up to ~5 minutes to finish.\n        //\n     \
    \   // You can use your language's standard library for this problem.\n      \
    \  for (long i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n          \
    \      return i;\n            }\n        }\n        return -1;", "        long\
    \ ans = -1;\n        for (long i = x; i <= y; i++) {\n            if (i % 2 ==\
    \ 0) {\n                ans = i;\n            }\n        }\n        return ans;",
  "        // TODO: Write your solution here.\n        if (x < y) {\n            if\
    \ (x % 2 == 0)\n                return x;\n            else if (y % 2 == 0)\n\
    \                return y;\n            else\n                return -1;\n   \
    \     }\n        else if (x == y) {\n            if (x % 2 == 0)\n           \
    \     return x;\n            else\n                return -1;\n        }\n   \
    \     else\n            return -1;", "        // The naive algorithm for solving\
    \ this problem has O(N) complexity, which\n        // is too slow for large values\
    \ of y. Your task is to rewrite this function\n        // in such a way that the\
    \ algorithm solves the problem in O(logN) time.\n        // Note: You are not\
    \ allowed to use the built-in max() and min() functions.\n        for (long i\
    \ = y; i >= x; i--) {\n            if (i % 2 == 0) {\n                return i;\n\
    \            }\n        }\n        return -1;", "        if (x <= y) {\n     \
    \       if (x % 2 == 0) {\n                return x;\n            } else {\n \
    \               return x + 1;\n            }\n        } else {\n            return\
    \ -1;\n        }", "        // int is not enough\n        long start = x;\n  \
    \      long end = y;\n        // [x, y]\n        while (x < y) {\n           \
    \ if (x % 2 == 0)\n                return x;\n            x++;\n        }\n  \
    \      return -1;", '        return (x % 2 == 0) ? x : x + 1;', "        long\
    \ result = -1;\n        for (long i = x; i <= y; i++) {\n            if (i % 2\
    \ == 0) {\n                result = i;\n            }\n        }\n        return\
    \ result;", "        if (x > y) {\n            return -1;\n        }\n       \
    \ if (x % 2 == 0) {\n            return x;\n        }\n        if (y % 2 == 0)\
    \ {\n            return y;\n        }\n        return -1;", "        // your code\
    \ goes here\n        if (x % 2 == 0) {\n            return x;\n        }\n   \
    \     else if (y % 2 == 0) {\n            return y;\n        }\n        else {\n\
    \            return -1;\n        }", "        long num = -1;\n        for (long\
    \ i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n                num =\
    \ i;\n            }\n        }\n        return num;", "        if (x % 2 == 0)\
    \ {\n            // odd\n            return y - (y % 2 == 0 ? 1 : 0);\n      \
    \  } else {\n            return y - (y % 2 == 0 ? 0 : 1);\n        }", "     \
    \   long z = (y - x) / 2;\n        long ans = 0;\n        if (x % 2 == 0) {\n\
    \            ans = x + z;\n        } else {\n            ans = x + z + 1;\n  \
    \      }\n        if (ans > y) {\n            return -1;\n        }\n        return\
    \ ans;", "        // replace this body with your implementation\n        return\
    \ -1;", "        return (y - y % 2) * (y % 2 == 0 ? 1 : 0) +\n            (x -\
    \ x % 2) * (x % 2 == 0 ? 1 : 0) * (x <= y ? 1 : 0);", "        long lo = x;\n\
    \        long hi = y;\n        while (lo < hi) {\n            long mid = (lo +\
    \ hi + 1) / 2;\n            if (mid % 2 == 0) {\n                lo = mid;\n \
    \           } else {\n                hi = mid - 1;\n            }\n        }\n\
    \        if (lo % 2 == 0) {\n            return lo;\n        } else {\n      \
    \      return -1;\n        }", "        if (x % 2 == 0)\n            if (x ==\
    \ y)\n                return x;\n            else\n                return ChooseNum(x\
    \ + 1, y);\n        else\n            if (x + 1 == y)\n                return\
    \ -1;\n            else\n                return ChooseNum(x + 2, y);", '        return
    (x % 2 != 0 && y % 2 != 0) ? -1 : Math.Max(x, y) - (Math.Max(x, y) % 2);']
stop_tokens:
- "\n    }\n"

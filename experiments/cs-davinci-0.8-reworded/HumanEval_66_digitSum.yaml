name: HumanEval_66_digitSum
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Task\n    // Write a function that takes a string as input and\
  \ returns the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
  \    // >>> Digitsum((\"\"))\n    // (0L)\n    // >>> Digitsum((\"abAB\"))\n   \
  \ // (131L)\n    // >>> Digitsum((\"abcCd\"))\n    // (67L)\n    // >>> Digitsum((\"\
  helloE\"))\n    // (69L)\n    // >>> Digitsum((\"woArBld\"))\n    // (131L)\n  \
  \  // >>> Digitsum((\"aAaaaXa\"))\n    // (153L)\n    public static long Digitsum(string\
  \ s) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Digitsum((\"\
  \")) == (0L));\n    Debug.Assert(Digitsum((\"abAB\")) == (131L));\n    Debug.Assert(Digitsum((\"\
  abcCd\")) == (67L));\n    Debug.Assert(Digitsum((\"helloE\")) == (69L));\n    Debug.Assert(Digitsum((\"\
  woArBld\")) == (131L));\n    Debug.Assert(Digitsum((\"aAaaaXa\")) == (153L));\n\
  \    Debug.Assert(Digitsum((\" How are yOu?\")) == (151L));\n    Debug.Assert(Digitsum((\"\
  You arE Very Smart\")) == (327L));\n    }\n\n}\n"
completions: ["        //Write code here\n        return 0;", "        long sum =\
    \ 0;\n        foreach (char a in s) {\n            int temp = (int)a;\n      \
    \      if (temp >= 65 && temp <= 90) {\n                sum += temp;\n       \
    \     }\n        }\n        return sum;", "        int sum = 0;\n        char[]\
    \ arr = s.ToCharArray();\n        for (int i = 0; i < arr.Length; i++) {\n   \
    \         if (arr[i] >= 65 && arr[i] <= 90)\n                sum += arr[i];\n\
    \        }\n        return sum;", "        long sum = 0;\n        char[] c = s.ToCharArray();\n\
    \        for (int i = 0; i < c.Length; i++) {\n            if (c[i] >= 65 && c[i]\
    \ <= 90) {\n                sum += c[i];\n            }\n        }\n        return\
    \ sum;", "        int[] stringArray = new int[s.Length];\n        for (int i =\
    \ 0; i < s.Length; i++) {\n            stringArray[i] = s[i];\n        }\n   \
    \     long sum = 0;\n        for (int i = 0; i < stringArray.Length; i++) {\n\
    \            if (stringArray[i] >= 65 && stringArray[i] <= 90) {\n           \
    \     sum += stringArray[i];\n            }\n        }\n        return sum;",
  "        long sum = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                sum += (int)c;\n            }\n        }\n        return\
    \ sum;", "        long sum = 0;\n        for (int i = 0; i < s.Length; i++) {\n\
    \            if (char.IsUpper(s[i])) {\n                sum += (int)s[i];\n  \
    \          }\n        }\n        return sum;", "        long result = 0;\n   \
    \     char[] charArr = s.ToCharArray();\n        foreach (char c in charArr) {\n\
    \            if (char.IsUpper(c)) {\n                result += c;\n          \
    \  }\n        }\n        return result;", "        string up = s.ToUpper();\n\
    \        long sum = 0;\n        for (int i = 0; i < up.Length; i++) {\n      \
    \      sum += (int)up[i];\n        }\n        return sum;", "        long sum\
    \ = 0;\n        foreach (char c in s) {\n            if (Char.IsUpper(c)) {\n\
    \                sum += (int)c;\n            }\n        }\n        return sum;",
  "        long sum = 0;\n        foreach (char c in s) {\n            if (((int)c\
    \ >= 65) && ((int)c <= 90)) {\n                sum += (int)c;\n            }\n\
    \        }\n        return sum;", "        int sum = 0;\n        foreach (char\
    \ c in s) {\n            if (c >= 'A' && c <= 'Z') {\n                sum += c;\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    // Implement this placeholder.\n        return sum;", "        BigInteger\
    \ sum = 0;\n        foreach (char c in s) {\n            if (Char.IsUpper(c))\
    \ {\n                sum += (int)c;\n            }\n        }\n        return\
    \ sum;", "        long result = 0;\n        foreach (char c in s) {\n        \
    \    if (char.IsUpper(c)) {\n                result += c;\n            }\n   \
    \     }\n        return result;", '        return s.Sum(c => char.IsUpper(c) ?
    c : 0);', "        if (s == null) {\n            return 0;\n        }\n      \
    \  //using yield\n        int sum = 0;\n        foreach (char c in s) {\n    \
    \        if (c >= 'A' && c <= 'Z') {\n                sum += c;\n            }\n\
    \        }\n        return sum;", "        return s.Sum(c => c >= 'A' && c <=\
    \ 'Z' ? c : 0);", "        long sum = 0;\n        char[] a = s.ToCharArray();\n\
    \        for (int i = 0; i < a.Length; i++) {\n            if (a[i] >= 65 && a[i]\
    \ <= 90) {\n                sum += a[i];\n            }\n        }\n        return\
    \ sum;", '        return s.Where(x => Char.IsUpper(x)).Sum(x => x);', "      \
    \  long sum = 0;\n        foreach (char c in s) {\n            if (c >= 'A' &&\
    \ c <= 'Z') {\n                sum += (long)c;\n            }\n        }\n   \
    \     return sum;", "        var alphabetSum = 0;\n        for (int i = 0; i <\
    \ s.Length; i++) {\n            if (char.IsUpper(s[i])) {\n                alphabetSum\
    \ += (int)s[i];\n            }\n        }\n        return alphabetSum;", '        return
    0;', "        var result = 0L;\n        foreach (var c in s) {\n            var\
    \ i = (int)c;\n            if (i >= 65 && i <= 90) {\n                result +=\
    \ i;\n            }\n        }\n        return result;", "        // your code\
    \ here\n        long sum = 0;\n        foreach (char character in s) {\n     \
    \       if (Char.IsUpper(character)) {\n                sum += (int)character;\n\
    \            }\n        }\n        return sum;", "        return s.Aggregate(0L,\
    \ (acc, cur) => acc + (cur >= 'A' && cur <= 'Z' ? cur : 0));", "        var uppers\
    \ = s.ToUpper();\n        var chars = uppers.ToCharArray();\n        var sum =\
    \ 0;\n        foreach (var c in chars) {\n            sum += c;\n        }\n \
    \       return sum;", "        long sum = 0;\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            if (char.IsUpper(s[i])) {\n                sum += s[i];\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    foreach (char c in s) {\n            if (c >= 'A' && c <= 'Z') {\n      \
    \          sum += c;\n            }\n        }\n        return sum;", '        return
    0;', "        //return (long)s.Where(c => Char.IsUpper(c)).Select(c => (int)c).Sum();\n\
    \        return (long)s.Where(c => c >= 'A' && c <= 'Z').Select(c => (int)c).Sum();",
  "        // Your code goes here\n        char[] array = s.ToCharArray();\n     \
    \   long sum = 0;\n        for (int i = 0; i < array.Length; i++) {\n        \
    \    sum += (int)array[i];\n        }\n        return sum;", "        long sum\
    \ = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (char.IsUpper(s[i]))\
    \ {\n                sum += (int)s[i];\n            }\n        }\n        return\
    \ sum;", "        // \"abAB\"\n        // .ToCharArray()\n        // ['a', 'b',\
    \ 'A', 'B']\n        // .Where(x => char.IsUpper(x))\n        // ['A', 'B']\n\
    \        // .Sum(x => (int)x)\n        // 131\n        // .ToString()\n      \
    \  // \"131\"\n        // .Select(x => int.Parse(x.ToString()))\n        // [1,\
    \ 3, 1]\n        // .Sum()\n        // 5\n        return (long)s.ToCharArray().Where(x\
    \ => char.IsUpper(x)).Sum(x => (int)x);", "        long sum = 0;\n        foreach\
    \ (char ch in s) {\n            if (ch < 'a') sum += ch;\n        }\n        return\
    \ sum;", "        if (s == \"\") {\n            return 0;\n        }\n       \
    \ string[] split = s.Split('\\n');\n        string[] upper = split[0].ToUpper().ToCharArray().Select(x\
    \ => x.ToString()).ToArray();\n        long sum = 0;\n        foreach (var x in\
    \ upper) {\n            sum += (int)x[0];\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < s.Length; i++) {\n        \
    \    if (s[i] >= 'A' && s[i] <= 'Z') {\n                sum += s[i];\n       \
    \     }\n        }\n        return sum;", "        long sum = 0;\n        for\
    \ (int i = 0; i < s.Length; i++) {\n            sum += (s[i] >= 'A' && s[i] <=\
    \ 'Z') ? s[i] : 0;\n        }\n        return sum;", "        long sum = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (s[i] >= 'A' &&\
    \ s[i] <= 'Z')\n                sum += s[i];\n        }\n        return sum;",
  "        long result = 0;\n        foreach (char c in s) {\n            int i =\
    \ (int)c;\n            if (i > 64 && i < 91) {\n                result += i;\n\
    \            }\n        }\n        return result;", "        // Grab the string's\
    \ characters as an array.\n        char[] chars = s.ToCharArray();\n        //\
    \ Change the array to a list.\n        List<char> list = chars.ToList();\n   \
    \     // Find the ASCII codes for the upper case letters.\n        List<int> upperCodes\
    \ = new List<int>();\n        foreach (char c in list) {\n            if (c >=\
    \ 65 && c <= 90) {\n                upperCodes.Add(c);\n            }\n      \
    \  }\n        // Sum up the upper case ASCII codes.\n        long sum = 0;\n \
    \       foreach (int i in upperCodes) {\n            sum += i;\n        }\n  \
    \      return sum;", "        long sum = 0;\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            if (Char.IsUpper(s[i])) {\n                sum += (int)s[i];\n\
    \            }\n        }\n        return sum;", "        long result = 0;\n \
    \       foreach (char c in s) {\n            if (char.IsUpper(c)) {\n        \
    \        result += (int)c;\n            }\n        }\n        return result;",
  "        long sum = 0;\n        for (int i = 0; i < s.Length; i++) {\n         \
    \   if (char.IsUpper(s[i])) {\n                sum += s[i];\n            }\n \
    \       }\n        return sum;", '        return (long)s.Sum(c => char.IsUpper(c)
    ? c : 0);', "        // Write your code here\n        return 0;", "        long\
    \ sum = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                sum += (int)c;\n            }\n        }\n        return\
    \ sum;", '        return (s.Count(char.IsUpper) > 0) ? s.Where(char.IsUpper).Sum(c
    => (int)c) : 0;', "        long sum = 0;\n        foreach (char c in s) {\n  \
    \          if (c >= 'A' && c <= 'Z') {\n                sum += c;\n          \
    \  }\n        }\n        return sum;", "        long result = 0;\n        char[]\
    \ charArray = s.ToCharArray();\n        foreach (char myChar in charArray) {\n\
    \            if (myChar.ToString() == myChar.ToString().ToUpper()) {\n       \
    \         result += (int)myChar;\n            }\n        }\n        return result;",
  "        int sum = 0;\n        for (int i = 0; i < s.Length; i++) {\n          \
    \  if (s[i] >= 'A' && s[i] <= 'Z') {\n                sum += s[i];\n         \
    \   }\n        }\n        return sum;", '        return s.Where(x => Char.IsUpper(x)).Sum(x
    => x);', "        long ans = 0;\n        foreach (char ch in s) {\n          \
    \  if (char.IsUpper(ch)) {\n                ans += ch;\n            }\n      \
    \  }\n        return ans;", "        long sum = 0;\n        foreach (char x in\
    \ s) {\n            if (Char.IsUpper(x))\n                sum += x;\n        }\n\
    \        return sum;", "        int S = 0;\n        foreach (char c in s) {\n\
    \            if (Char.IsUpper(c)) {\n                S += (int)c;\n          \
    \  }\n        }\n        return S;", "        long Digitsum = 0;\n        foreach\
    \ (char i in s) {\n            if (i >= 65 && i <= 90) {\n                Digitsum\
    \ += i;\n            }\n        }\n        return Digitsum;", "        // your\
    \ code\n        return s.ToCharArray().Select(c => (int)c).Sum();", '        return
    s.ToUpper().Sum(c => c);', "        long tot = 0;\n        for (int i = 0; i <\
    \ s.Length; i++) {\n            if (Char.IsUpper(s[i])) {\n                tot\
    \ += s[i];\n            }\n        }\n        return tot;", "        // Your code\
    \ comes here.\n        return 0;", '        return s.Sum(c => char.IsUpper(c)
    ? c : 0);', "        // Sum of the ASCII codes in the string 's'\n        // only\
    \ the upper case character.\n        // To get the sum of the upper case ASCII\
    \ only:\n        long result = 0;\n        foreach (char c in s) {\n         \
    \   if (char.IsUpper(c)) {\n                result += c;\n            }\n    \
    \    }\n        return result;", "        long sum = 0;\n        foreach (char\
    \ c in s) {\n            int tmp = (int)c;\n            if (tmp >= 65 && tmp <=\
    \ 90) {\n                sum += tmp;\n            }\n        }\n        return\
    \ sum;", "        // Fail fast\n        if (s == null)\n            throw new\
    \ ArgumentNullException(\"s\");\n        if (s.Length == 0)\n            return\
    \ 0;\n        // Contains only upper case (no op)\n        if (s.ToUpper() ==\
    \ s)\n            return (long)s.Sum(x => (int)x);\n        // Contains only lower\
    \ case (swap)\n        if (s.ToLower() == s)\n            return (long)s.Sum(x\
    \ => (int)x - 32);\n        // We have to do some work\n        var upper = 0;\n\
    \        var lower = 0;\n        foreach (var c in s) {\n            if (c >=\
    \ 'A' && c <= 'Z')\n                upper += (int)c;\n            else\n     \
    \           lower += (int)c;\n        }\n        return upper + lower - 32 * (s.Length\
    \ - (upper / 32));", "        int sum = 0;\n        foreach (char c in s) {\n\
    \            if (char.IsUpper(c)) {\n                sum += (int)c;\n        \
    \    }\n        }\n        return sum;", "        // write your code here\n  \
    \      return 0;", "        long sum = 0;\n        foreach (char c in s) {\n \
    \           if (c >= 'A' && c <= 'Z') {\n                sum += (long)c;\n   \
    \         }\n        }\n        return sum;", "        // This function is stupid,\
    \ but works perfectly.\n        if (s == \"\") {\n            return 0;\n    \
    \    } else {\n            char current = s[0];\n            return current <\
    \ 'a' ? current : 0 + Digitsum(s.Substring(1));\n        }", "        long sum\
    \ = 0;\n        foreach (char c in s) {\n            int chr = c;\n          \
    \  sum += (chr >= 65 && chr <= 90) ? chr : 0;\n        }\n        return sum;",
  "        long sum = 0;\n        for (int i = 0; i < s.Length; i++) {\n         \
    \   if (Char.IsUpper(s[i])) {\n                sum += (int)s[i];\n           \
    \ }\n        }\n        return sum;", '        return s.ToCharArray().Where(c
    => char.IsUpper(c)).Sum(c => (long)c);', "        long x = 0;\n        for (int\
    \ i = 0; i < s.Length; i++) {\n            if (s[i] >= 'A' && s[i] <= 'Z') {\n\
    \                x += s[i];\n            }\n        }\n        return x;", '        return
    s.ToList().Where(i => i < 0).Sum(i => (long)i);', "        int sum = 0;\n    \
    \    char[] chars = s.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsUpper(chars[i])) {\n                sum += (int)\
    \ chars[i];\n            }\n        }\n        return sum;", "        if (s ==\
    \ null) return 0;\n        long sum = 0;\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            if (char.IsUpper(s[i])) {\n                sum += s[i];\n\
    \            }\n        }\n        return sum;", "        // long\n        //\
    \ Treat as a Number\n        long sum = 0;\n        foreach (char c in s) {\n\
    \            // Compare to a simple number\n            if (c >= 65 && c <= 90)\
    \ {\n                sum += c;\n            }\n        }\n        return sum;",
  "        var sum = 0L;\n        for (var i = 0; i < s.Length; i++) {\n         \
    \   var c = (int)s[i];\n            if (c >= 65 && c <= 90)\n                sum\
    \ += c;\n        }\n        return sum;", "        int codeSum = 0;\n        foreach\
    \ (char c in s) {\n            int temp = c;\n            if (temp > 64 && temp\
    \ < 91) {\n                codeSum += temp;\n            }\n        }\n      \
    \  return codeSum;", '        return s.Where(x => Char.IsUpper(x)).Sum(x => (long)x);',
  "        return s.ToUpper().Where(c => c >= 'A' && c <= 'Z').Sum(c => c);", "  \
    \      long sum = 0;\n        for (int i = 0; i < s.Length; i++) {\n         \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n                sum += s[i];\n        \
    \    }\n        }\n        return sum;", "        BigInteger sum = 0;\n      \
    \  // Place your code here\n        foreach (char c in s)\n        {\n       \
    \     int ch = c;\n            if (ch >= 65 && ch <= 90) sum += ch;\n        }\n\
    \        return (long)sum;", '        return s.Aggregate(0L, (a, b) => a + b %
    32);', '        return s.Sum(x => (int)x);', "        long sum = 0;\n        for\
    \ (int i = 0; i < s.Length; i++) {\n            if (char.IsUpper(s[i])) {\n  \
    \              sum += (int)s[i];\n            }\n        }\n        return sum;",
  '        return (long)s.Where(c => char.IsUpper(c)).Sum(c => (long)c);', "     \
    \   long sum = 0;\n        foreach (char letter in s) {\n            // capitalize\
    \ letter\n            char capitalizedLetter = Char.ToUpper(letter);\n       \
    \     // get ASCII code for capitalized letter\n            int asciiCode = (int)capitalizedLetter;\n\
    \            // add ASCII code to sum\n            sum += asciiCode;\n       \
    \ }\n        return sum;", "        // SOLUTION\n        // 1. Split the string\
    \ into an array of strings\n        // 2. Take each string and get the ASCII code\n\
    \        // 3. if ASCII code is less than 90, add it to the sum\n        // 4.\
    \ return the sum\n        long sum = 0;\n        foreach (var letter in s) {\n\
    \            if (Convert.ToInt32(letter) < 90) {\n                sum += Convert.ToInt32(letter);\n\
    \            }\n        }\n        return sum;", "        int sum = 0;\n     \
    \   foreach (char c in s) {\n            if (c >= 'A' && c <= 'Z') {\n       \
    \         sum += c;\n            }\n        }\n        return sum;", "       \
    \ long UpperAsciiCodes = 0;\n        foreach (char c in s) {\n            if (Char.IsUpper(c))\
    \ {\n                UpperAsciiCodes += (int)c;\n            }\n        }\n  \
    \      return UpperAsciiCodes;", "        string upper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n        long sum = 0;\n        for (int i = 0; i < s.Length; i++) {\n     \
    \       for (int j = 0; j < upper.Length; j++) {\n                if (s[i] ==\
    \ upper[j]) {\n                    sum += (long)upper[j];\n                }\n\
    \            }\n        }\n        return sum;", '        return 0;', "      \
    \  long sum = 0;\n        foreach (char c in s) {\n            if (Char.IsUpper(c))\
    \ {\n                sum += c;\n            }\n        }\n        return sum;",
  '        return s.Select(c => (int)c).Sum();', "        // 1. Convert the passed\
    \ string to a list of the ASCII codes of each letter\n        var charList = s.Select(item\
    \ => (int)item).ToList();\n        // 2. Convert all of the ASCII codes to their\
    \ upper case equivalent\n        var upperList = charList.Select(item => ToUpper(item)).ToList();\n\
    \        // 3. Sum the upper case letters\n        var sum = upperList.Sum();\n\
    \        return sum;", "        // Code your solution here\n        //long sum\
    \ = 0;\n        //for (int i = 0; i < s.Length; i++)\n        //{\n        //\
    \    sum += (long)s[i];\n        //}\n        //return sum;\n        return s.Sum(c\
    \ => (long)c);", "        // Convert string to char array\n        char[] charArray\
    \ = s.ToCharArray();\n        // Create new array with the total number of upper\
    \ case characters\n        char[] upperCaseArray = new char[charArray.Count(char.IsUpper)];\n\
    \        // Create new array with the total number of lower case characters\n\
    \        char[] lowerCaseArray = new char[charArray.Count(char.IsLower)];\n  \
    \      // Initiate variables\n        int upperCase = 0;\n        int lowerCase\
    \ = 0;\n        // Populate new arrays with upper/lower case characters\n    \
    \    foreach (char c in charArray) {\n            if (char.IsUpper(c)) {\n   \
    \             upperCaseArray[upperCase] = c;\n                upperCase++;\n \
    \           } else if (char.IsLower(c)) {\n                lowerCaseArray[lowerCase]\
    \ = c;\n                lowerCase++;\n            }\n        }\n        // Return\
    \ the sum of the ASCII codes\n        return upperCaseArray.Sum(c => (int)c) +\
    \ lowerCaseArray.Sum(c => (int)c);", "        // Check that s is a string\n  \
    \      if (s == null) {\n            Console.WriteLine(\"Input is not a string\"\
    );\n            return -1;\n        }\n        long sum = 0;\n        // A to\
    \ Z corresponds to 65 to 90\n        // Sum uppercase letters\n        for (int\
    \ i = 0; i < s.Length; i++) {\n            if (s[i] >= 65 && s[i] <= 90) {\n \
    \               sum += s[i];\n            }\n        }\n        return sum;",
  "        long sum = 0;\n        foreach (char c in s) {\n            if (Char.IsUpper(c))\
    \ {\n                sum += (int)c;\n            }\n        }\n        return\
    \ sum;", "        long sum = 0;\n        foreach (char c in s) {\n           \
    \ if (char.IsUpper(c))\n                sum += (long)c;\n        }\n        return\
    \ sum;", "        // The ASCII codes for all upper characters are from 65 to 90.\n\
    \        // We're going to use a dictionary to store the sum of the ASCII\n  \
    \      // codes and their occurences.\n        Dictionary<long, long> sums = new\
    \ Dictionary<long, long>();\n        foreach (char c in s) {\n            // If\
    \ the current character is not an upper character, we can skip it.\n         \
    \   if (c < 65 || c > 90) {\n                continue;\n            }\n      \
    \      // The ASCII code for the character is the \"sum\" and the number of occurences\
    \ is 1.\n            long sum = (long)c;\n            long count = 1;\n      \
    \      // If the \"sum\" is already in the dictionary, we will add the occurences.\n\
    \            if (sums.ContainsKey(sum)) {\n                count += sums[sum];\n\
    \            }\n            // We will store the sum and the occurences in the\
    \ dictionary.\n            sums[sum] = count;\n        }\n        // The final\
    \ result is the sum of the products of the occurences and the ASCII codes.\n \
    \       return sums.Select(kv => kv.Key * kv.Value).Sum();", "        // Longest\
    \ solution\n        // return s.ToCharArray().Sum(c => (Char.IsUpper(c) ? c :\
    \ '0') - '0');\n        // Longer solution\n        return s.Where(c => Char.IsUpper(c)).Sum(c\
    \ => c - '0');\n        // Shorter solution\n        // return s.Where(Char.IsUpper).Sum(c\
    \ => c - '0');\n        // Shortest solution\n        // return s.Sum(c => Char.IsUpper(c)\
    \ ? c - '0' : 0);", "        return s.ToCharArray().Sum(x => {\n            if\
    \ (x >= 65 && x <= 90)\n                return x;\n            return 0;\n   \
    \     });", "        char[] arr = s.ToCharArray();\n        long sum = 0;\n  \
    \      foreach (char c in arr) {\n            if (char.IsUpper(c)) {\n       \
    \         sum += Convert.ToInt64(c);\n            }\n        }\n        return\
    \ sum;", "        return s.Where(c => 'A' <= c && c <= 'Z').Sum(c => c);", " \
    \       long ret = 0;\n        foreach (char c in s) {\n            if (c >= 'A'\
    \ && c <= 'Z') {\n                ret += c;\n            }\n        }\n      \
    \  return ret;", '        return s.Where(c => char.IsUpper(c)).Sum(c => (long)c);',
  "        return (long)s.ToCharArray().Sum(c => c >= 'A' && c <= 'Z' ? c : 0);",
  "        // Code goes here\n        long Upper = 0;\n        for (int i = 0; i <\
    \ s.Length; i++) {\n            if (s[i] >= 65 && s[i] <= 90)\n              \
    \  Upper += s[i];\n        }\n        return Upper;", "        long sum = 0;\n\
    \        foreach (char c in s) {\n            if (char.IsUpper(c)) {\n       \
    \         sum += (int)c;\n            }\n        }\n        return sum;", '        return
    s.Where(c => Char.IsUpper(c)).Sum(c => (long)c);', "        long count = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (s[i] >= 'A' &&\
    \ s[i] <= 'Z') {\n                count += (int)s[i];\n            }\n       \
    \ }\n        return count;", "        int sum = 0;\n        foreach (char ch in\
    \ s) {\n            if (ch >= 'A' && ch <= 'Z')\n                sum += ch;\n\
    \        }\n        return sum;", "        //the sum of the upper characters only'\n\
    \        return s.Where(c => Char.IsUpper(c)).Select(c => (long)Char.GetNumericValue(c)).Sum();",
  "        if (s.Length == 0) return 0;\n        return s.Select(c => Char.IsUpper(c)\
    \ ? (long)c : 0).Sum();", "        // Your code goes here\n        s = s.ToUpper();\n\
    \        long result = 0;\n        for (int i = 0; i < s.Length; i++) {\n    \
    \        result += s[i];\n        }\n        return result;", "        long sum\
    \ = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (Char.IsUpper(s[i]))\
    \ {\n                sum += (int)s[i];\n            }\n        }\n        return\
    \ sum;", '        return (long)s.Where(c => char.IsUpper(c)).Sum(c => (int)c);',
  "        if (s == \"\") {\n            return 0;\n        }\n        else {\n  \
    \          return (long)s.ToUpper().Where(x => x >= 'A' && x <= 'Z').Sum(x =>\
    \ x);\n        }", "        long sum = 0;\n        foreach (char c in s) {\n \
    \           int value = Convert.ToInt32(c);\n            if (value > 64 && value\
    \ < 91) {\n                sum += value;\n            }\n        }\n        return\
    \ sum;", "        int[] res = new int[s.Length];\n        long sum = 0;\n    \
    \    for (int i = 0; i < s.Length; i++) {\n            if (s[i] >= 65 && s[i]\
    \ <= 90) {\n                res[i] = s[i];\n                sum += res[i];\n \
    \           }\n        }\n        return sum;", "        long total = 0;\n   \
    \     foreach (char c in s) {\n            if (c >= 'A' && c <= 'Z')\n       \
    \         total += c;\n        }\n        return total;", "        long sum =\
    \ 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (char.IsUpper(s[i]))\
    \ {\n                sum += s[i];\n            }\n        }\n        return sum;",
  "        long res = 0;\n        foreach (char c in s) {\n            int a = (int)c;\n\
    \            if (a >= 65 && a <= 90)\n                res += a;\n        }\n \
    \       return res;", "        long sum = 0;\n        foreach (char c in s) {\n\
    \            if (c >= 'A' && c <= 'Z') {\n                sum += (int)c;\n   \
    \         }\n        }\n        return sum;", "        long sum = 0;\n       \
    \ for (int i = 0; i < s.Length; i++) {\n            if (char.IsUpper(s[i])) {\n\
    \                sum += s[i];\n            }\n        }\n        return sum;",
  "        long result = 0;\n        foreach (char c in s) {\n            int num\
    \ = (int)c;\n            if (num >= 65 && num <= 90) {\n                result\
    \ += num;\n            }\n        }\n        return result;", "        long sum\
    \ = 0;\n        foreach (char c in s) {\n            if (c >= 'A' && c <= 'Z')\
    \ {\n                sum += (int)c;\n            }\n        }\n        return\
    \ sum;", "        return s.Select(c => char.IsUpper(c) ? c : ' ').Sum(c => c);",
  "        var res = 0L;\n        foreach (var c in s) {\n            if (c >= 'A'\
    \ && c <= 'Z') {\n                res += c;\n            }\n        }\n      \
    \  return res;", '        return s.Select(c => (int)c).Where(n => n >= 65 && n
    <= 90).Sum();', "        // Your code here\n        long sum = 0;\n        foreach\
    \ (char c in s) {\n            if (Char.IsUpper(c)) {\n                sum +=\
    \ (long)c;\n            }\n        }\n        return sum;", "        int sum =\
    \ 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (Char.IsUpper(s[i]))\n\
    \                sum += (int)s[i];\n        }\n        return sum;", "       \
    \ return s.Where(ch => ch >= 'A' && ch <= 'Z').Sum(ch => ch);", "        if (s\
    \ == \"\") return 0;\n        long sum = 0;\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            if (s[i] >= 'A' && s[i] <= 'Z') sum += s[i];\n        }\n\
    \        return sum;", '        return s.Where(c => char.IsUpper(c)).Sum(c =>
    c);', "        var x = 0;\n        foreach (var c in s) {\n            var n =\
    \ (int)c;\n            if (n < 97) {\n                x += n;\n            }\n\
    \        }\n        return x;", '        return 0;', '        return (new string(s.Where(c
    => char.IsUpper(c)).ToArray())).Select(c => (int)c).Sum();', "        long sum\
    \ = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (s[i] >=\
    \ 'A' && s[i] <= 'Z') {\n                sum += s[i];\n            }\n       \
    \ }\n        return sum;", "        var asciis = s.ToCharArray();\n        var\
    \ res = new BigInteger(0);\n        foreach (var a in asciis) {\n            var\
    \ val = (int)a;\n            if (val > 64 && val < 91) {\n                res\
    \ += val;\n            }\n        }\n        return res;", "        long sum =\
    \ 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (s[i] >= 'A'\
    \ && s[i] <= 'Z') {\n                sum += s[i];\n            }\n        }\n\
    \        return sum;", "        // my code here\n        return -1;", "      \
    \  long sum = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if\
    \ (s[i] >= 'A' && s[i] <= 'Z')\n                sum += s[i];\n        }\n    \
    \    return sum;", "        //long ans = 0;\n        //foreach (char c in s) {\n\
    \        //    if (char.IsUpper(c))\n        //        ans += (int)c;\n      \
    \  //}\n        //return ans;\n        return s.Where(c => char.IsUpper(c)).Sum(c\
    \ => (int)c);", "        // your code here\n        long sum = 0;\n        for\
    \ (int i = 0; i < s.Length; i++) {\n            if (Char.IsUpper(s[i])) {\n  \
    \              sum += s[i];\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < s.Length; i++) {\n        \
    \    if (char.IsUpper(s[i])) {\n                sum += s[i];\n            }\n\
    \        }\n        return sum;", "        long answer = 0;\n        char[] c\
    \ = s.ToCharArray();\n        foreach (char item in c) {\n            if (char.IsUpper(item))\
    \ {\n                answer += (int)item;\n            }\n        }\n        return\
    \ answer;", "        // WRITE YOUR CODE HERE\n        long sum = 0;\n        for\
    \ (int i = 0; i < s.Length; i++) {\n            if (s[i] >= 'A' && s[i] <= 'Z')\n\
    \                sum += s[i];\n        }\n        return sum;", '        return
    s.ToCharArray().Where(c => char.IsUpper(c)).Sum(c => (long) c);', "        long\
    \ result = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n                result += s[i];\n            }\n \
    \       }\n        return result;", "        long result = 0;\n        for (int\
    \ i = 0; i < s.Length; i++) {\n            if (s[i] >= 'A' && s[i] <= 'Z') {\n\
    \                result += s[i];\n            }\n        }\n        return result;",
  "        long res = 0;\n        foreach (char c in s)\n            if (char.IsUpper(c))\n\
    \                res += (long)c;\n        return res;", "        return s.Sum(x\
    \ => x >= 'A' && x <= 'Z' ? x : 0);", "        long sum = 0;\n        foreach\
    \ (char c in s) {\n            if (Char.IsUpper(c)) {\n                sum +=\
    \ (int)c;\n            }\n        }\n        return sum;", "        long result\
    \ = 0;\n        for (int i = 0; i < s.Length; i++) {\n            char c = s[i];\n\
    \            if (Char.IsUpper(c)) {\n                result += (int)c;\n     \
    \       }\n        }\n        return result;", "        // Write here\n      \
    \  long result = 0;\n        int size = s.Length;\n        for (int i = 0; i <\
    \ size; i++) {\n            result += (char.IsUpper(s[i])) ? s[i] : 0;\n     \
    \   }\n        return result;", "        // Your implementation goes here\n  \
    \      // return 0;\n        return s.Where(c => char.IsUpper(c)).Sum(c => (long)\
    \ c);", "        var sum = 0L;\n        foreach (var c in s) {\n            if\
    \ (char.IsUpper(c))\n                sum += c;\n        }\n        return sum;",
  "        return s.Aggregate<char, long>(0, (sum, c) => sum + (c > 'A' && c < 'Z'\
    \ ? (long)c : 0));", '        return s.Sum(c => c > 90 ? 0 : c);', "        long\
    \ sum = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (char.IsUpper(s[i]))\n\
    \                sum += s[i];\n        }\n        return sum;", "        long\
    \ sum = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (Char.IsUpper(s[i]))\
    \ {\n                sum += s[i];\n            }\n        }\n        return sum;",
  "        long sum = 0;\n        foreach (char c in s) {\n            if (Char.IsUpper(c))\
    \ {\n                sum += (int)c;\n            }\n        }\n        return\
    \ sum;", '        return s.Sum(x => Char.IsUpper(x) ? x : 0);', "        if (s\
    \ == null)\n            return 0;\n        long result = 0;\n        foreach (char\
    \ c in s) {\n            if (c >= 'A' && c <= 'Z')\n                result +=\
    \ c;\n        }\n        return result;", "        // BODY\n        // \n    \
    \    // \n        // \n        // \n        // \n        // \n        // \n  \
    \      // \n        return 0;", '        return Encoding.ASCII.GetBytes(s.ToUpper()).Sum(x
    => (long)x);', "        char[] upper = s.ToUpper().ToCharArray();\n        int\
    \ temp = 0;\n        for (int i = 0; i < upper.Length; i++) {\n            temp\
    \ += upper[i];\n        }\n        return temp;", "        long r = 0;\n     \
    \   for (int i = 0; i < s.Length; i++) {\n            if (char.IsUpper(s[i]))\
    \ {\n                r += (long)s[i];\n            }\n        }\n        return\
    \ r;", "        if (s == null) {\n            return 0;\n        }\n        long\
    \ sum = 0;\n        foreach (char character in s) {\n            int ascii = character;\n\
    \            if (ascii > 64 && ascii < 91) {\n                sum += ascii;\n\
    \            }\n        }\n        return sum;", "        return s.Where(ch =>\
    \ ch >= 'A' && ch <= 'Z').Sum(ch => ch);", "        // Solution\n        return\
    \ s.ToUpper().ToCharArray().Where(t => t >= 'A' && t <= 'Z').Select(t => (long)t).Sum();",
  "        long sum = 0;\n        for (int i = 0; i < s.Length; i++) {\n         \
    \   if (Char.IsUpper(s[i])) {\n                sum += (long)s[i];\n          \
    \  }\n        }\n        return sum;", "        // Suppose you have a string S,\
    \ which contains lower and upper cases\n        // letters only and no spaces.How\
    \ many times will the letter 'a' be printed\n        // when you'll print the\
    \ string S after replacing all the occurences of\n        // the letter 'a' by\
    \ 'A' and then writing the new word?\n        // Example:\n        // The string\
    \ 'aba' will become 'AbA' and will be printed two times.\n        // Notes:\n\
    \        // The letters 'a' and 'A' are not the same.\n        // The tests will\
    \ contain only letters.\n        // If S = \"\", the result is 0.\n        //\
    \ If a letter appears more than once in the string S, only one 'A' will be\n \
    \       // printed.\n        // Input/Output\n        // [input] string S\n  \
    \      // A string that contains lower and upper cases letters only and no spaces.\n\
    \        // [output] an integer\n        // The number of times the letter 'a'\
    \ will be printed.\n        // Constraints:\n        // S will contain between\
    \ 0 and 50 characters.\n        // Sample Tests:\n        // >>> Digitsum((\"\"\
    ))\n        // (0L)\n        // >>> Digitsum((\"abAB\"))\n        // (2L)\n  \
    \      // >>> Digitsum((\"abcCd\"))\n        // (1L)\n        // >>> Digitsum((\"\
    helloE\"))\n        // (0L)\n        // >>> Digitsum((\"woArBld\"))\n        //\
    \ (2L)\n        // >>> Digitsum((\"aAaaaXa\"))\n        // (2L)\n        return\
    \ s.ToUpper().Split('A').Length - 1;", "        long r = 0;\n        if (s.Length\
    \ != 0) {\n            char[] upperCase = s.ToUpper().ToCharArray();\n       \
    \     foreach (char c in upperCase) {\n                if ((int)c <= 90) {\n \
    \                   r += (int)c;\n                }\n            }\n        }\n\
    \        return r;", "        return s.Sum(c => c >= 'A' && c <= 'Z' ? c : 0);",
  "        // Your code goes here\n        long sum = 0;\n        foreach (char c\
    \ in s) {\n            if (char.IsUpper(c)) {\n                sum += (long)c;\n\
    \            }\n        }\n        return sum;", "        // Write your code here\n\
    \        // To print results to the standard output you can use Console.WriteLine()\n\
    \        // Example: Console.WriteLine(\"Hello world!\");\n        return 0;",
  "        // Write your code here.\n        if (s == string.Empty) {\n          \
    \  return 0;\n        }\n        var sum = 0;\n        foreach (var c in s) {\n\
    \            if (c >= 'A' && c <= 'Z') {\n                sum += c;\n        \
    \    }\n        }\n        return sum;", "        int result = 0;\n        for\
    \ (int i = 0; i < s.Length; i++) {\n            result += char.IsUpper(s[i]) ?\
    \ s[i] : 0;\n        }\n        return result;", '        return s.Sum(c => char.IsUpper(c)
    ? c : 0);', "        if (s.Length == 0) return 0;\n        long result = 0;\n\
    \        foreach (char c in s)\n            if (char.IsUpper(c))\n           \
    \     result += (long)c;\n        return result;", "        long result = 0;\n\
    \        foreach (char c in s) {\n            if (c >= 'A' && c <= 'Z')\n    \
    \            result += c;\n        }\n        return result;", "        return\
    \ s.ToCharArray().Sum(c => (c < 'a') ? c : 0);", "        long sum = 0;\n    \
    \    for (int i = 0; i < s.Length; i++) {\n            if (s[i] >= 'A' && s[i]\
    \ <= 'Z') {\n                sum += s[i];\n            }\n        }\n        return\
    \ sum;", "        int sum = 0;\n        foreach (char c in s) {\n            if\
    \ ((int)c >= 65 && (int)c <= 90) {\n                sum += (int)c;\n         \
    \   }\n        }\n        return sum;", "        long res = 0;\n        foreach\
    \ (char c in s) {\n            res += (long) c;\n        }\n        return res;",
  "        int length = s.Length;\n        long sum = 0;\n        for (int i = 0;\
    \ i < length; i++) {\n            char c = s[i];\n            if (Char.IsUpper(c))\
    \ {\n                sum += (int)c;\n            }\n        }\n        return\
    \ sum;", '        // Write Code Here', "        long sum = 0;\n        foreach\
    \ (char c in s) {\n            if (c >= 'A' && c <= 'Z') {\n                sum\
    \ += (long)c;\n            }\n        }\n        return sum;", '        return
    s.ToUpper().Select(x => (int)x).Sum();', "        // TODO: Implement Digitsum\n\
    \        // BEGIN\n        long sum = 0;\n        foreach (char c in s) {\n  \
    \          if (c >= 'A' && c <= 'Z') {\n                sum += c;\n          \
    \  }\n        }\n        return sum;\n        // END", "        return s.ToCharArray().Sum(c\
    \ => c >= 'A' && c <= 'Z' ? c : 0);", "        var sum = 0L;\n        foreach\
    \ (var ch in s) {\n            if (ch >= 'A' && ch <= 'Z')\n                sum\
    \ += ch;\n        }\n        return sum;", "        long sum = 0;\n        for\
    \ (int i = 0; i < s.Length; i++) {\n            if (Char.IsUpper(s[i])) {\n  \
    \              sum += (long)s[i];\n            }\n        }\n        return sum;",
  "        long sum = 0;\n        foreach (char c in s) {\n            if (Char.IsUpper(c))\
    \ {\n                sum += (int)c;\n            }\n        }\n        return\
    \ sum;", "        long sum = 0;\n        foreach (char c in s) {\n           \
    \ if (Char.IsUpper(c)) {\n                sum += (int)c;\n            }\n    \
    \    }\n        return sum;", "        long result = 0;\n        for (int i =\
    \ 0; i < s.Length; i++) {\n            if (s[i] >= 'A' && s[i] <= 'Z') {\n   \
    \             result += s[i];\n            }\n        }\n        return result;",
  "        long sum = 0;\n        for (int i = 0; i < s.Length; i++) {\n         \
    \   if (Char.IsUpper(s[i])) {\n                sum += (int)s[i];\n           \
    \ }\n        }\n        return sum;"]
stop_tokens:
- "\n    }\n"

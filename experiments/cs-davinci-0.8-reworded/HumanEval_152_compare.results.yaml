language: cs
name: HumanEval_152_compare
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> ret = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            ret.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return ret;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <facca6a5393244e4a360a895f852f733>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <facca6a5393244e4a360a895f852f733>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (a, b) => Math.Abs(a
    - b)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e3c2eea02c4a65a56abfd84c1afa4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e3c2eea02c4a65a56abfd84c1afa4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        // Your code here\n        List<long> result
    = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]
    - guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2da7d05426344372bd7328440a194f13>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2da7d05426344372bd7328440a194f13>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> a = new List<long>();\n        for
    (long i = 0; i < game.Count; i++) {\n            a.Add(Math.Abs(game[(int)i] -
    guess[(int)i]));\n        }\n        return a;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1896304beaa242989b16e460faa85e88>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1896304beaa242989b16e460faa85e88>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        // your code goes here\n        List<long>
    distance = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n
    \           distance.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return
    distance;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <744cf11d961643eabac1774082ded3a5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <744cf11d961643eabac1774082ded3a5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (g, gs) => Math.Abs(g
    - gs)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a0d8ad7883ba4068b4ca567d4f983bc6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a0d8ad7883ba4068b4ca567d4f983bc6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        // your code here\n        // we can just put
    a for loop here\n        // remember, game and guess are of the same length\n
    \       // so we can just loop over one of them\n        // and create a list
    of the same length\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6ab70b3d9f9a43c7bc64e548ad4fd3a6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6ab70b3d9f9a43c7bc64e548ad4fd3a6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        //\n        return null;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00047] in <08474dee5eb8496d8ae8ebb9cf7eccdf>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00047] in <08474dee5eb8496d8ae8ebb9cf7eccdf>:0
    \n"
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (g, e) => Math.Abs(g
    - e)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ece67889fd2842e69965598d01e560d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ece67889fd2842e69965598d01e560d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        //Your code here\n        return null;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00047] in <15e4a6eb0e3a4f83a69707f792a120e6>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00047] in <15e4a6eb0e3a4f83a69707f792a120e6>:0
    \n"
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var dist = new List<long>();\n        for (int
    i = 0; i < game.Count; i++) {\n            dist.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return dist;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <26dddc572ae94a4d80815269ba397ba0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <26dddc572ae94a4d80815269ba397ba0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int x = 0; x < game.Count; x++) {\n            result.Add(Math.Abs(game[x] -
    guess[x]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0417f8e9c68343568e741e102b81ec0a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0417f8e9c68343568e741e102b81ec0a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (first, second) => Math.Abs(first
    - second)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <627530667f214e48bc77713bfee6f48f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <627530667f214e48bc77713bfee6f48f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        // This is just like the previous problem,
    but with a twist. We have a list\n        // of scores, and a list of guesses
    of equal length. We're basically doing\n        // the same thing, but with a
    list.\n        // I'm going to do this with a for loop. We can do it with an iterator,
    too,\n        // but I think that would take more time since I would have to add
    a variable\n        // to the iterator itself.\n        List<long> results = new
    List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            //
    We need to add the absolute value of the differnce between game[i] and guess[i]\n
    \           // to results.\n            results.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return results;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c24d47dfd67d4f59b1e8eae4eee8b499>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c24d47dfd67d4f59b1e8eae4eee8b499>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (g, x) => Math.Abs(g
    - x)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <03a43d0ba8244da9a441716e3c9bfbc9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <03a43d0ba8244da9a441716e3c9bfbc9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var result = new List<long>();\n        foreach
    (var pair in game.Zip(guess, (a, b) => new { A = a, B = b })) {\n            result.Add(Math.Abs(pair.A
    - pair.B));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <81b69506019e44f0b534ce8715d6f1b5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <81b69506019e44f0b534ce8715d6f1b5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var res = new List<long>();\n        for (int
    i = 0; i < game.Count; i++) {\n            var abs = Math.Abs(game[i] - guess[i]);\n
    \           res.Add(abs);\n        }\n        return res;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <64732b0ba1504ab49388f88f2a70b0e6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <64732b0ba1504ab49388f88f2a70b0e6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (long i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[(int)i]
    - guess[(int)i]));\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1dca21ada4144925b4d2b049531fa626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1dca21ada4144925b4d2b049531fa626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        foreach
    (var x in game.Zip(guess, (a, b) => new { a, b })) {\n            result.Add(Math.Abs(x.a
    - x.b));\n        }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b46007f87674492fbc6cbc0439943493>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b46007f87674492fbc6cbc0439943493>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> x = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            x.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return x;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c0c3c341027f4092816880d5850c0db8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c0c3c341027f4092816880d5850c0db8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        for (int i = 0; i < game.Count; i++) {\n            game[i]
    = Math.Abs(game[i] - guess[i]);\n        }\n        return game;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <72c9db92112e4a358cc94baa0c19ee88>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <72c9db92112e4a358cc94baa0c19ee88>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (a, b) => Math.Abs(a
    - b)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e3c2eea02c4a65a56abfd84c1afa4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e3c2eea02c4a65a56abfd84c1afa4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        // return list\n        List<long> result =
    new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]
    - guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <da3ed27224824183937fcbcaaf913ddb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <da3ed27224824183937fcbcaaf913ddb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (s, g) => Math.Abs(s
    - g)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba2c1d62ecc54df3afee24adffcce2f2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba2c1d62ecc54df3afee24adffcce2f2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976242
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            long score = Math.Abs(game[i]
    - guess[i]);\n            result.Add(score);\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e230a6dbad6241939afb1f4146da255b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e230a6dbad6241939afb1f4146da255b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976242
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f61d48ba6ba641b2bd2624ea3fb78d32>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f61d48ba6ba641b2bd2624ea3fb78d32>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976242
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> l = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            l.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return l;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <265544e25f29424797b9fc948b28bb95>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <265544e25f29424797b9fc948b28bb95>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976243
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> l = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            l.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return l;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <265544e25f29424797b9fc948b28bb95>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <265544e25f29424797b9fc948b28bb95>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976243
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> results = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            long score = game[i];\n            long
    guessScore = guess[i];\n            long difference = Math.Abs(score - guessScore);\n
    \           results.Add(difference);\n        }\n        return results;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe6f77596e6043a7af84ed0f2a2634ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe6f77596e6043a7af84ed0f2a2634ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976242
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        for (long i = 0; i < guess.Count; i++) {\n
    \           if (guess[(int)i] < 0) {\n                guess[(int)i] = -guess[(int)i];\n
    \           }\n        }\n        return game.Zip(guess, (x, y) => Math.Abs(x
    - y)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <70dc2f10c6784cb8a640e5f57ed2c6e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <70dc2f10c6784cb8a640e5f57ed2c6e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976243
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> ret = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            ret.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return ret;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <facca6a5393244e4a360a895f852f733>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <facca6a5393244e4a360a895f852f733>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> ret = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            ret.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return ret;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <facca6a5393244e4a360a895f852f733>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <facca6a5393244e4a360a895f852f733>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var ans = new List<long>();\n        for (var
    i = 0; i < game.Count; i++) {\n            ans.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return ans;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <03fe85e500b64c42b8a92af3514d9309>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <03fe85e500b64c42b8a92af3514d9309>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976242
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        //I wish I had known\n        List<long> result
    = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]
    - guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5683cf0dd66449d180796be96e0fb481>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5683cf0dd66449d180796be96e0fb481>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976242
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> c=new List<long>();\n        for(int
    i=0;i<game.Count;i++){\n            c.Add(Math.Abs(game[i]-guess[i]));\n        }\n
    \       return c;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea835878d046456a8e51c6394a71c9e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea835878d046456a8e51c6394a71c9e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976242
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return Enumerable.Range(0, game.Count).Select(i
    => Math.Abs(game[i] - guess[i])).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <612252605b5441efb7931bb5eecc81e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <612252605b5441efb7931bb5eecc81e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976243
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        if
    (game.Count == guess.Count) {\n            for (int i = 0; i < game.Count; i++)
    {\n                result.Add(Math.Abs(game[i] - guess[i]));\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8f16e6aba6404846bf1a961224cb4927>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8f16e6aba6404846bf1a961224cb4927>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976243
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        int
    total = 0;\n        if (game.Count == guess.Count) {\n            for (int i =
    0; i < game.Count; i++) {\n                if (game[i] > guess[i]) {\n                    result.Add(game[i]
    - guess[i]);\n                } else if (game[i] < guess[i]) {\n                    result.Add(guess[i]
    - game[i]);\n                } else {\n                    result.Add(0);\n                }\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0d17190eb9fb49f390bba26e4c98ed8e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0d17190eb9fb49f390bba26e4c98ed8e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976243
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (g, s) => g - s).Select(x
    => Math.Abs(x)).ToList();\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d3be9b3c8ee044a1a3080c15186641d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d3be9b3c8ee044a1a3080c15186641d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976243
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            long absDiff = Math.Abs(game[i]
    - guess[i]);\n            result.Add(absDiff);\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <847bb5aa4e984fe4925911d0791cbb7d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <847bb5aa4e984fe4925911d0791cbb7d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976243
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (g, h) => Math.Abs(g
    - h)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4d83d6a40233401799d3e8e9f4bcbe05>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4d83d6a40233401799d3e8e9f4bcbe05>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976243
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        foreach
    (long g in guess) {\n            // handle the case where the guess is negative\n
    \           if (g < 0) {\n                result.Add(Math.Abs(g));\n            }
    else {\n                result.Add(Math.Abs(game[guess.IndexOf(g)] - g));\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a11df57f87304f8cb9685c1179e8e52c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a11df57f87304f8cb9685c1179e8e52c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976243
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            if (game[i] - guess[i] > 0) {\n
    \               result.Add(game[i] - guess[i]);\n            } else {\n                result.Add(guess[i]
    - game[i]);\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8d507ef76f7a4fb8a8f3c0fece477069>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8d507ef76f7a4fb8a8f3c0fece477069>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976243
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> out1 = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            if (game[i] == guess[i]) {\n                out1.Add(0);\n
    \           } else {\n                out1.Add(Math.Abs(game[i] - guess[i]));\n
    \           }\n        }\n        return out1;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8c08e408310d45b988d0c8dba0d80c07>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8c08e408310d45b988d0c8dba0d80c07>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976243
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        // Your code goes here\n        List<long>
    retval = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            retval.Add(Math.Abs(game[i]
    - guess[i]));\n        }\n        return retval;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f8106d9656844df9f023c21557d42b6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f8106d9656844df9f023c21557d42b6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976243
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> ret = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            long diff = Math.Abs(game[i] -
    guess[i]);\n            ret.Add(diff);\n        }\n        return ret;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8ba86431f689425c93516289a134f860>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8ba86431f689425c93516289a134f860>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976242
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f61d48ba6ba641b2bd2624ea3fb78d32>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f61d48ba6ba641b2bd2624ea3fb78d32>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976242
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var results = new List<long>();\n        for
    (var i = 0; i < game.Count; i++) {\n            var diff = Math.Abs(game[i] -
    guess[i]);\n            results.Add(diff);\n        }\n        return results;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <251df0752e0542b999b5ee064d3b7011>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <251df0752e0542b999b5ee064d3b7011>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976243
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var ans = new List<long>();\n        for (int
    i = 0; i < game.Count; i++) {\n            ans.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return ans;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca7ba56d2ecc46ac9e48b531410bd0e1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca7ba56d2ecc46ac9e48b531410bd0e1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976243
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        // your code here\n        List<long> list
    = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            list.Add(Math.Abs(game[i]
    - guess[i]));\n        }\n        return list;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <377edfd7517e48b1b9f6b397462721ca>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <377edfd7517e48b1b9f6b397462721ca>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976243
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            long diff = Math.Abs(game[i] -
    guess[i]);\n            result.Add(diff);\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <98fac966edc74913addea927116227d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <98fac966edc74913addea927116227d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        // generate a list to return\n        List<long>
    ret = new List<long>();\n        // loop through the two lists\n        for (int
    i = 0; i < game.Count; i++) {\n            // if the guess is correct (the two
    match)\n            if (game[i] == guess[i]) {\n                // add 0 to the
    return list\n                ret.Add(0);\n            } else {\n                //
    add the absolute difference to the return list\n                ret.Add(Math.Abs(game[i]
    - guess[i]));\n            }\n        }\n        // return the return list\n        return
    ret;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <210439c6e1af410a9cbf0c43a06bb371>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <210439c6e1af410a9cbf0c43a06bb371>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> ans = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            long val = Math.Abs(game[i] -
    guess[i]);\n            ans.Add(val);\n        }\n        return ans;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f87a0e8e32b41018a41459253f7ae1f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f87a0e8e32b41018a41459253f7ae1f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            long difference = game[i] - guess[i];\n
    \           result.Add(Math.Abs(difference));\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <59c9957b31f64a6eab94d15915e12d3a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <59c9957b31f64a6eab94d15915e12d3a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (a, b) => Math.Abs(a
    - b)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e3c2eea02c4a65a56abfd84c1afa4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e3c2eea02c4a65a56abfd84c1afa4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> results = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            results.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return results;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <acde5007303e4060b4f11d9c77ba8305>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <acde5007303e4060b4f11d9c77ba8305>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> res = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            res.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return res;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <99f4935a07c0481a9d349c185c1a730d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <99f4935a07c0481a9d349c185c1a730d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        // Your code here...\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00047] in <c6c96a3d2e89459dac0e85c2f3fa863a>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00047] in <c6c96a3d2e89459dac0e85c2f3fa863a>:0
    \n"
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        if
    (game.Count != guess.Count)\n            return result;\n        for (int i =
    0; i < game.Count; i++) {\n            long delta = Math.Abs(game[i] - guess[i]);\n
    \           result.Add(delta);\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fca53ed4c98f400d998569c53a2653ec>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fca53ed4c98f400d998569c53a2653ec>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> dif = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            dif.Add(game[i] > guess[i] ? game[i]
    - guess[i] : guess[i] - game[i]);\n        }\n        return dif;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <03560aad962944a2b9d17256f904fc1f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <03560aad962944a2b9d17256f904fc1f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        if(game.Count() != guess.Count()) { throw new
    System.ArgumentException(\"game and guess are not equal size\"); }\n        List<long>
    scores = new List<long>();\n        for(int i = 0; i < game.Count(); i++) {\n
    \           if(game[i] == guess[i]) {\n                scores.Add(0);\n            }
    else {\n                scores.Add(Math.Abs(game[i] - guess[i]));\n            }\n
    \       }\n        return scores;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <79dd9b2d2745438bb23977e04556351f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <79dd9b2d2745438bb23977e04556351f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> ret = new List<long>();\n        if
    (game.Count != guess.Count) {\n            throw new ArgumentException(\"arrays
    must be the same length\");\n        }\n        for (int i = 0; i < game.Count;
    i++) {\n            long diff = Math.Abs(game[i] - guess[i]);\n            ret.Add(diff);\n
    \       }\n        return ret;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <488b000a414d47869df9ac51df4bc814>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <488b000a414d47869df9ac51df4bc814>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var l = new List<long>();\n        for (var
    i = 0; i < game.Count; i++) {\n            l.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return l;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3c75ff8fa8b6410588b0004da23242b3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3c75ff8fa8b6410588b0004da23242b3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (x, y) => x < y ? y
    - x : x - y).ToList();\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <82ee5e8f3b6b4f2abdc5054bdb9de05d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <82ee5e8f3b6b4f2abdc5054bdb9de05d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var result = new List<long>();\n        for
    (var i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b7d5e42da10b4b6f9a5a126cf954a0b5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b7d5e42da10b4b6f9a5a126cf954a0b5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (x, y) => Math.Abs(x
    - y)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1b19d2a7ed21403a8b1e13ce13f0d0fd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1b19d2a7ed21403a8b1e13ce13f0d0fd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            if (game[i] == guess[i]) {\n                result.Add(0);\n
    \           } else {\n                long diff = Math.Abs(game[i] - guess[i]);\n
    \               result.Add(diff);\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9b904327e451475e892a0d39d2400a80>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9b904327e451475e892a0d39d2400a80>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> res = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            res.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return res;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <99f4935a07c0481a9d349c185c1a730d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <99f4935a07c0481a9d349c185c1a730d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        // find how far off each guess was.\n        return
    guess.Select((x,i) => Math.Abs(x - game[i])).ToList();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <07132ac4ad7e4fd99b76761367c6a40a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <07132ac4ad7e4fd99b76761367c6a40a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f61d48ba6ba641b2bd2624ea3fb78d32>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f61d48ba6ba641b2bd2624ea3fb78d32>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976242
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> l = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            l.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return l;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <265544e25f29424797b9fc948b28bb95>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <265544e25f29424797b9fc948b28bb95>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976243
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> results = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            long result = Math.Abs(game[i]
    - guess[i]);\n            results.Add(result);\n        }\n        return results;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <80d9f78d18da4029903d342506ef5b50>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <80d9f78d18da4029903d342506ef5b50>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var ret = new List<long>();\n        for (int
    i = 0; i < game.Count; i++) {\n            ret.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return ret;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <84bb6689bb77454d96bdfe1dd3845c16>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <84bb6689bb77454d96bdfe1dd3845c16>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (a, b) => Math.Abs(a
    - b)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e3c2eea02c4a65a56abfd84c1afa4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e3c2eea02c4a65a56abfd84c1afa4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> difList = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            if (guess[i] == game[i]) {\n                difList.Add(0);\n
    \           } else {\n                difList.Add(Math.Abs(guess[i] - game[i]));\n
    \           }\n        }\n        return difList;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <345d5c3390964b3e86f94f19b1c978db>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <345d5c3390964b3e86f94f19b1c978db>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            long diff = Math.Abs(game[i] -
    guess[i]);\n            result.Add(diff);\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <98fac966edc74913addea927116227d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <98fac966edc74913addea927116227d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        int size = game.Count;\n        var result
    = new List<long>(size);\n        for (int i = 0; i < size; i++) {\n            result.Add(Math.Abs(game[i]
    - guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90131cbeaf734bc0974f39b3a58139f7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90131cbeaf734bc0974f39b3a58139f7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        //// your code here\n        List<long> difference
    = new List<long>();\n        for (int i = 0; i < game.Count; i++)\n        {\n
    \           difference.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return
    difference;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c924fd80ac2943149ae6fbe36bd5a7a4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c924fd80ac2943149ae6fbe36bd5a7a4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> res = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            res.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return res;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <99f4935a07c0481a9d349c185c1a730d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <99f4935a07c0481a9d349c185c1a730d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> ret = new List<long>();\n        for
    (long i = 0; i < game.Count; i++) {\n            long j = game[(int)i];\n            long
    k = guess[(int)i];\n            ret.Add(Math.Abs(j - k));\n        }\n        return
    ret;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b438daf5fd224f1099aa75c71514a33c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b438daf5fd224f1099aa75c71514a33c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var result = new List<long>();\n        foreach
    (var i in Enumerable.Range(0, game.Count))\n            result.Add(Math.Abs(game[i]
    - guess[i]));\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3dd6c3a316ad4f81bf2d4b432a9f71ff>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3dd6c3a316ad4f81bf2d4b432a9f71ff>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976245
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> res = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            res.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return res;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <99f4935a07c0481a9d349c185c1a730d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <99f4935a07c0481a9d349c185c1a730d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return null;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00047] in <62b6f6596a5b4209853d37ab79d5b265>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00047] in <62b6f6596a5b4209853d37ab79d5b265>:0
    \n"
  stdout: ''
  timestamp: 1659976245
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> ret = new List<long>();\n        if
    (game.Count != guess.Count) {\n            return ret;\n        }\n        for
    (int i = 0; i < game.Count; i++) {\n            ret.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return ret;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <27f41c5c75224323a43768bb3d229a4e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <27f41c5c75224323a43768bb3d229a4e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976245
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (a, b) => Math.Abs(a
    - b)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e3c2eea02c4a65a56abfd84c1afa4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e3c2eea02c4a65a56abfd84c1afa4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> retList = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            retList.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return retList;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <068aab7070e7452eb2c25823e6ee5363>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <068aab7070e7452eb2c25823e6ee5363>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976245
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> differences = new List<long>();\n
    \       for (int i = 0; i < game.Count; i++) {\n            differences.Add(Math.Abs(game[i]
    - guess[i]));\n        }\n        return differences;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9d7b0e555ea94deaa4eb4a94d3ee6d0f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9d7b0e555ea94deaa4eb4a94d3ee6d0f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976245
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        int
    n = game.Count;\n        for (int i = 0; i < n; i++) {\n            result.Add(Math.Abs(game[i]
    - guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d29706f14fdf85a1f73302ff5731>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d29706f14fdf85a1f73302ff5731>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976245
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return (from x in Enumerable.Range(0, game.Count)
    select Math.Abs(game[x] - guess[x])).ToList();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b95edd71a84641c4a61dc90747300d13>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b95edd71a84641c4a61dc90747300d13>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976245
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (a, b) => Math.Abs(a
    - b)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e3c2eea02c4a65a56abfd84c1afa4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e3c2eea02c4a65a56abfd84c1afa4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var c = 0;\n        var l1 = game.Count;\n
    \       var l2 = guess.Count;\n        var l3 = new List<long>();\n        for
    (var i = 0; i < l1; i++) {\n            c = l1 - i;\n            if (c > 0) {\n
    \               l3.Add(Math.Abs(game[i] - guess[i]));\n            }\n        }\n
    \       return l3;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cd1c4184bb7b457dbe5d52870f544d61>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cd1c4184bb7b457dbe5d52870f544d61>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976245
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> retVal = new List<long>();\n        for
    (long i = 0; i < game.Count; i++) {\n            retVal.Add(Math.Abs(game[(int)i]
    - guess[(int)i]));\n        }\n        return retVal;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e41194964ff04205abe7c59a6ba3df46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e41194964ff04205abe7c59a6ba3df46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976245
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var ret = new List<long>();\n        foreach
    (var idx in Enumerable.Range(0, game.Count))\n            ret.Add(Math.Abs(game[idx]
    - guess[idx]));\n        return ret;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3df8bd9f2276491d96e1633a6ba1b7bd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3df8bd9f2276491d96e1633a6ba1b7bd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976245
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        // BEGIN\n        return new List<long>();\n
    \       // END\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8b8c4d35c84b4b97ae9b53831ca5906d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8b8c4d35c84b4b97ae9b53831ca5906d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976245
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var diff = new List<long>();\n        for (int
    i = 0; i < game.Count; i++) {\n            diff.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return diff;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5674361ebf28404ab9c06fe2768aee0b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5674361ebf28404ab9c06fe2768aee0b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976245
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        // Write your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00047] in <a8874e7e0a5c46caa789201451cd41fc>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00047] in <a8874e7e0a5c46caa789201451cd41fc>:0
    \n"
  stdout: ''
  timestamp: 1659976245
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (g, gg) => Math.Abs(g
    - gg)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0a20844e58ce420ba951856ff17b639d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0a20844e58ce420ba951856ff17b639d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976245
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> output = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            long score = game[i];\n            long
    g = guess[i];\n            long comp = score - g;\n            if (comp < 0) {\n
    \               comp = -comp;\n            }\n            output.Add(comp);\n
    \       }\n        return output;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3683fa4fe54247059675e5b2433977fa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3683fa4fe54247059675e5b2433977fa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976245
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return Enumerable.Range(0, game.Count).Select(x
    => Math.Abs(game[x] - guess[x])).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29ed8afcaeb940e092356eaa98028c4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29ed8afcaeb940e092356eaa98028c4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976245
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var res = new List<long>();\n        for (int
    i = 0; i < game.Count; i++) {\n            res.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return res;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a907ebace48e4b41addcd4bca8ec6eac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a907ebace48e4b41addcd4bca8ec6eac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976245
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> ret = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            long diff = Math.Abs(game[i] -
    guess[i]);\n            ret.Add(diff);\n        }\n        return ret;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8ba86431f689425c93516289a134f860>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8ba86431f689425c93516289a134f860>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976242
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        // Write your code here, output is returned\n
    \       return game.Zip(guess, (x, y) => Math.Abs(x - y)).ToList();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4ca68efce181418cb04e4db89dabbe7d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4ca68efce181418cb04e4db89dabbe7d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976245
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> lst = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            lst.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return lst;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <aac667985d944d57a4973d40f293c3fc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <aac667985d944d57a4973d40f293c3fc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976245
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        // do something with the lists\n        List<long>
    result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]
    - guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <aa3f31702a8e4959a3cfcd7c1969d8c4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <aa3f31702a8e4959a3cfcd7c1969d8c4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976245
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            if (game[i] > guess[i]) {\n                result.Add(game[i]
    - guess[i]);\n            } else if (game[i] < guess[i]) {\n                result.Add(guess[i]
    - game[i]);\n            } else {\n                result.Add(0);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4d39ba90eeba4a41a136eefbf8746fd6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4d39ba90eeba4a41a136eefbf8746fd6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976245
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        if
    (game.Count != guess.Count) {\n            throw new ArgumentException(\"Game
    and Guess are not the same length.\");\n        }\n        for (int i = 0; i <
    game.Count; i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4da0c20303254ef7b4e6163b10599dc4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4da0c20303254ef7b4e6163b10599dc4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976245
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f61d48ba6ba641b2bd2624ea3fb78d32>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f61d48ba6ba641b2bd2624ea3fb78d32>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976242
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        // your code goes here\n        List<long>
    output = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            output.Add(Math.Abs(game[i]
    - guess[i]));\n        }\n        return output;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <48561c02d5d148a9ae4004cae67d3113>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <48561c02d5d148a9ae4004cae67d3113>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976245
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return Enumerable.Range(0, game.Count).Select(i
    => Math.Abs(game[i] - guess[i])).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <612252605b5441efb7931bb5eecc81e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <612252605b5441efb7931bb5eecc81e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976243
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            long diff = game[i] - guess[i];\n
    \           if (diff < 0) {\n                diff = -diff;\n            }\n            result.Add(diff);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bc9d6041bc13466abcba261ba59fc898>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bc9d6041bc13466abcba261ba59fc898>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976246
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        //throw new NotImplementedException();\n        List<long>
    ret = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            ret.Add(Math.Abs(game[i]
    - guess[i]));\n        }\n        return ret;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c80fb3f0d50a48909771fb3a7d0e4ef8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c80fb3f0d50a48909771fb3a7d0e4ef8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976246
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> ret = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            ret.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return ret;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <facca6a5393244e4a360a895f852f733>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <facca6a5393244e4a360a895f852f733>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f61d48ba6ba641b2bd2624ea3fb78d32>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f61d48ba6ba641b2bd2624ea3fb78d32>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976242
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (a, b) => (long)Math.Abs(a
    - b)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0545e00880ed473d8e8bf8dca7d72e14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0545e00880ed473d8e8bf8dca7d72e14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976246
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> ret = new List<long>();\n        if
    (game.Count == guess.Count) {\n            for (int i = 0; i < game.Count; i++)
    {\n                if (game[i] == guess[i]) {\n                    ret.Add(0);\n
    \               } else {\n                    ret.Add(Math.Abs(game[i] - guess[i]));\n
    \               }\n            }\n        }\n        return ret;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9c2a768a624f4237a869affde43a15d5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9c2a768a624f4237a869affde43a15d5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976246
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        // Your code goes here\n        List<long>
    res = new List<long>();\n        for (long i = 0; i < game.Count; i++) {\n            if
    (guess[(int)i] == game[(int)i]) {\n                res.Add(0);\n            }
    else {\n                res.Add(Math.Abs(guess[(int)i] - game[(int)i]));\n            }\n
    \       }\n        return res;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cc91a27c3a3b44c3871e639464ccf9bc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cc91a27c3a3b44c3871e639464ccf9bc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976246
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (i, j) => Math.Abs(i
    - j)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e32b78ef883e4fae8ed119077caa27d7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e32b78ef883e4fae8ed119077caa27d7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976246
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> newList = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            newList.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return newList;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <993235f81d424b9db2b31f138ebbfc54>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <993235f81d424b9db2b31f138ebbfc54>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976246
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> res = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            if (game[i] == guess[i]) {\n                res.Add(0);\n
    \           } else {\n                res.Add(Math.Abs(game[i] - guess[i]));\n
    \           }\n        }\n        return res;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c5028a893c294bbf8c3f17a1bdd6fb47>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c5028a893c294bbf8c3f17a1bdd6fb47>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976246
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var ret = new List<long>();\n        for (int
    i = 0; i < game.Count; i++) {\n            var off = game[i] - guess[i];\n            if
    (off < 0) off = -off;\n            ret.Add(off);\n        }\n        return ret;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f54c266ac2fa4681bfc52934b11477be>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f54c266ac2fa4681bfc52934b11477be>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976246
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var ans = new List<long>();\n        for (int
    i = 0; i < game.Count; i++) {\n            ans.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return ans;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca7ba56d2ecc46ac9e48b531410bd0e1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca7ba56d2ecc46ac9e48b531410bd0e1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976243
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> results = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            results.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return results;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <acde5007303e4060b4f11d9c77ba8305>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <acde5007303e4060b4f11d9c77ba8305>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> score = new List<long>();\n        for
    (long i = 0; i < game.Count; i++) {\n            score.Add(Math.Abs(game[(int)i]
    - guess[(int)i]));\n        }\n        return score;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ae73808b554040c7bd56419f36351238>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ae73808b554040c7bd56419f36351238>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976246
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> output = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            output.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return output;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <97ca2086e10d4a8c811d6a352e3473ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <97ca2086e10d4a8c811d6a352e3473ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976246
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> off_by = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            off_by.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return off_by;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <175b3168fbcc43ceba34bc761544c102>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <175b3168fbcc43ceba34bc761544c102>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976246
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> diff = new List<long>();\n        long
    i = 0;\n        while (i < game.Count()) {\n            diff.Add(Math.Abs(game[(int)i]
    - guess[(int)i]));\n            i = i + 1;\n        }\n        return diff;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1a45b1ffc041434a96beb7932d813c8a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1a45b1ffc041434a96beb7932d813c8a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976246
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return null;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00047] in <62b6f6596a5b4209853d37ab79d5b265>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00047] in <62b6f6596a5b4209853d37ab79d5b265>:0
    \n"
  stdout: ''
  timestamp: 1659976245
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> errors = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            errors.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return errors;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a850a92e54284d31bee073f179c4d200>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a850a92e54284d31bee073f179c4d200>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976246
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            var gd = Math.Abs(game[i] - guess[i]);\n
    \           result.Add(gd);\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b5018acf6ba4d929a9b02a7338baa46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b5018acf6ba4d929a9b02a7338baa46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976246
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(game[i] - guess[i]);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd1223f796ab46759af30d7bda345234>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd1223f796ab46759af30d7bda345234>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976246
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(game[i] == guess[i]
    ? 0 : Math.Abs(game[i] - guess[i]));\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dd11f2cf675e4ec69941b3f6ac96fb0a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dd11f2cf675e4ec69941b3f6ac96fb0a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976246
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (a, b) => Math.Abs(a
    - b)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e3c2eea02c4a65a56abfd84c1afa4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e3c2eea02c4a65a56abfd84c1afa4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var res = new List<long>();\n        for (int
    i = 0; i < game.Count; i++) {\n            res.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return res;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a907ebace48e4b41addcd4bca8ec6eac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a907ebace48e4b41addcd4bca8ec6eac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976245
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (a, b) => Math.Abs(a
    - b)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e3c2eea02c4a65a56abfd84c1afa4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e3c2eea02c4a65a56abfd84c1afa4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var result = new List<long>();\n        var
    _ = game.Zip(guess, (x, y) => new { x, y });\n        foreach (var __ in _) {\n
    \           result.Add(Math.Abs(__.x - __.y));\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5cb0995abab45c19f6ab6cf9af14c54>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5cb0995abab45c19f6ab6cf9af14c54>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976247
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        if (game.Count != guess.Count)\n            throw
    new Exception(\"Game and Guess scores must be the same length\");\n        var
    r = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            r.Add(Math.Abs(game[i]
    - guess[i]));\n        }\n        return r;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cdd29c83695425891e9449e32a28783>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cdd29c83695425891e9449e32a28783>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976246
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        // This is the first draft of my solution.
    I think it's pretty much the\n        // best solution, but I'm gonna try this
    anyway.\n        // I could also just do an if else statement, but my first goal
    is to\n        // just get it to compile.\n        var result = new List<long>();\n
    \       for (var i = 0; i < game.Count; i++) {\n            var difference = game[i]
    - guess[i];\n            if (difference < 0) {\n                difference = difference
    * -1;\n            }\n            result.Add(difference);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0a0b4d99d9c64bbf9b5327776ed3e772>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0a0b4d99d9c64bbf9b5327776ed3e772>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976246
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        if (game.Count != guess.Count) { throw new
    System.ArgumentException(\"game and guess should be the same length\"); }\n        List<long>
    results = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n
    \           results.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return
    results;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d9ac4692dfcb413c939123ced5b12cce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d9ac4692dfcb413c939123ced5b12cce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976246
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> temp = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            temp.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return temp;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5cc71d5c22b495f963069f24eac02f9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5cc71d5c22b495f963069f24eac02f9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976246
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (x, y) => Math.Abs(x
    - y)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1b19d2a7ed21403a8b1e13ce13f0d0fd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1b19d2a7ed21403a8b1e13ce13f0d0fd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f61d48ba6ba641b2bd2624ea3fb78d32>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f61d48ba6ba641b2bd2624ea3fb78d32>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976242
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var res = new List<long>();\n        for (var
    i = 0; i < game.Count; i++) {\n            var off = Math.Abs(game[i] - guess[i]);\n
    \           res.Add(off);\n        }\n        return res;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5e225a641883435781b6b23784b261e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5e225a641883435781b6b23784b261e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976246
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> results = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            results.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return results;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <acde5007303e4060b4f11d9c77ba8305>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <acde5007303e4060b4f11d9c77ba8305>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            if (game[i] == guess[i]) {\n                result.Add(0);\n
    \           } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <572e1624533a4628bf2c619d814d27c6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <572e1624533a4628bf2c619d814d27c6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976247
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var result = new List<long>();\n        for
    (var i = 0; i < game.Count; i++) {\n            if (game[i] < 0) game[i] = -game[i];\n
    \           if (guess[i] < 0) guess[i] = -guess[i];\n            result.Add(Math.Abs(game[i]
    - guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd15f1a30abc4199a86da55bdf8106a9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd15f1a30abc4199a86da55bdf8106a9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976247
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var diffs = new List<long>();\n        foreach
    (var t in Enumerable.Range(0, game.Count)) {\n            diffs.Add(Math.Abs(game[t]
    - guess[t]));\n        }\n        return diffs;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <571c35def61d4249bb5cecb1938bd584>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <571c35def61d4249bb5cecb1938bd584>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976247
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        if (game.Count == guess.Count) {\n            List<long>
    difference = new List<long>();\n            for (int i = 0; i < game.Count; i++)
    {\n                difference.Add(Math.Abs(game[i] - guess[i]));\n            }\n
    \           return difference;\n        }\n        else return new List<long>();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c78d63173e2a4a1398e21111dd1cc558>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c78d63173e2a4a1398e21111dd1cc558>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976247
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> ans = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            ans.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return ans;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caa311ad6eaf4fde88d5b12ccf611de0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <caa311ad6eaf4fde88d5b12ccf611de0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976247
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> res = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            res.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return res;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <99f4935a07c0481a9d349c185c1a730d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <99f4935a07c0481a9d349c185c1a730d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            if (guess[i] < 0 && game[i] >
    0) {\n                result.Add(game[i] + guess[i]);\n            } else if (guess[i]
    > 0 && game[i] < 0) {\n                result.Add(game[i] + guess[i]);\n            }
    else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7dacd1f29ff04e8c93bd87f78f4a2e17>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7dacd1f29ff04e8c93bd87f78f4a2e17>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976247
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return Enumerable.Range(0, game.Count).Select(x
    => Math.Abs(game[x] - guess[x])).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29ed8afcaeb940e092356eaa98028c4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29ed8afcaeb940e092356eaa98028c4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976245
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f61d48ba6ba641b2bd2624ea3fb78d32>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f61d48ba6ba641b2bd2624ea3fb78d32>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976242
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f61d48ba6ba641b2bd2624ea3fb78d32>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f61d48ba6ba641b2bd2624ea3fb78d32>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976242
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            var a = game[i];\n            var
    b = guess[i];\n            result.Add(Math.Abs(a - b));\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <89b6912fea104af28d603a512439d49e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <89b6912fea104af28d603a512439d49e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976247
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> res = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            res.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return res;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <99f4935a07c0481a9d349c185c1a730d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <99f4935a07c0481a9d349c185c1a730d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> retval = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            retval.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return retval;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2903a65225e04569ba75acf9265aafd6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2903a65225e04569ba75acf9265aafd6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976247
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var result = new List<long>();\n        for
    (var i = 0; i < game.Count; i++) {\n            var score = game[i];\n            var
    g = guess[i];\n            var d = Math.Abs(score - g);\n            result.Add(d);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f5788f8c1ba045cdb78c7a5d2f85094f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f5788f8c1ba045cdb78c7a5d2f85094f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976248
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> output = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            output.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return output;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <97ca2086e10d4a8c811d6a352e3473ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <97ca2086e10d4a8c811d6a352e3473ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976246
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var l = new List<long>();\n        foreach
    (var pair in game.Zip(guess, (g, gs) => new { Guess = gs, Game = g })) {\n            var
    a = Math.Abs(pair.Guess - pair.Game);\n            l.Add(a);\n        }\n        return
    l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6dcc086cb84b406582b6cafe60719e6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6dcc086cb84b406582b6cafe60719e6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976247
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (a, b) => Math.Abs(a
    - b)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e3c2eea02c4a65a56abfd84c1afa4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e3c2eea02c4a65a56abfd84c1afa4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f61d48ba6ba641b2bd2624ea3fb78d32>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f61d48ba6ba641b2bd2624ea3fb78d32>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976242
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var results = new List<long>();\n        for
    (var index = 0; index < game.Count; index++) {\n            results.Add(Math.Abs(game[index]
    - guess[index]));\n        }\n        return results;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c67ac01a13f44b00993f87e4974b30b2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c67ac01a13f44b00993f87e4974b30b2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976248
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> res = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            res.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return res;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <99f4935a07c0481a9d349c185c1a730d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <99f4935a07c0481a9d349c185c1a730d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (a, b) => Math.Abs(a
    - b)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e3c2eea02c4a65a56abfd84c1afa4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e3c2eea02c4a65a56abfd84c1afa4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (a, b) => Math.Abs(a
    - b)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e3c2eea02c4a65a56abfd84c1afa4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e3c2eea02c4a65a56abfd84c1afa4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        foreach
    (var i in game.Zip(guess, (a, b) => new { a, b }))\n        {\n            result.Add(Math.Abs(i.a
    - i.b));\n        }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <40e036586fde4c60863ee27ddd9d5e8d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <40e036586fde4c60863ee27ddd9d5e8d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976248
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            if (game[i] == guess[i]) {\n                result.Add(0);\n
    \           } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <572e1624533a4628bf2c619d814d27c6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <572e1624533a4628bf2c619d814d27c6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976247
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        // Your code goes here\n        var temp =
    new List<long>();\n        for (int i = 0; i < game.Count; i++)\n        {\n            if
    (game[i] == guess[i])\n            {\n                temp.Add(0);\n            }\n
    \           else\n            {\n                temp.Add(Math.Abs(game[i] - guess[i]));\n
    \           }\n        }\n        return temp;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd704d98d6a041e6bc13af049e1bf499>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd704d98d6a041e6bc13af049e1bf499>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976248
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (a, b) => Math.Abs(a
    - b)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e3c2eea02c4a65a56abfd84c1afa4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e3c2eea02c4a65a56abfd84c1afa4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] -
    guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303ca31250344187b6ba7a42c35cad18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        var a = new List<long>();\n        var b =
    new List<long>();\n        for (var i = 0; i < game.Count; i++) {\n            a.Add(game[i]);\n
    \           b.Add(guess[i]);\n        }\n        return a.Zip(b, (x, y) => Math.Abs(x
    - y)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <160d44599e5c409db8d49dffceca7e24>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <160d44599e5c409db8d49dffceca7e24>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976248
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> score = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            score.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return score;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <46d0b36cf11948cb97f8691bc709576d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <46d0b36cf11948cb97f8691bc709576d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976247
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        if (game.Count != guess.Count) {\n            throw
    new Exception(\"game and guess have different counts\");\n        }\n        List<long>
    result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i]
    - guess[i]));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d38814a5430b4ccaa39ca72355cfc5a5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d38814a5430b4ccaa39ca72355cfc5a5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976248
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (game_, guess_) => Math.Abs(game_
    - guess_)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c7dd22b0e6e045cca10f4996caf81be7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c7dd22b0e6e045cca10f4996caf81be7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976248
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return Enumerable.Range(0, game.Count).Select(i
    => Math.Abs(game[i] - guess[i])).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <612252605b5441efb7931bb5eecc81e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <612252605b5441efb7931bb5eecc81e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976243
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> ret = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            ret.Add(Math.Abs(game[i] - guess[i]));\n
    \       }\n        return ret;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <facca6a5393244e4a360a895f852f733>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <facca6a5393244e4a360a895f852f733>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            if (game[i] == guess[i]) {\n                result.Add(0);\n
    \           } else {\n                result.Add(Math.Abs(game[i] - guess[i]));\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})),
    (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),
    (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new
    long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,
    (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <572e1624533a4628bf2c619d814d27c6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <572e1624533a4628bf2c619d814d27c6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976247
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        List<long> res = new List<long>();\n        for
    (int i = 0; i < game.Count; i++) {\n            if (game[i] != guess[i])\n                res.Add(Math.Abs(game[i]
    - guess[i]));\n            else\n                res.Add(0);\n        }\n        return
    res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1009f60ff4c9438198669d1aed40a441>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1009f60ff4c9438198669d1aed40a441>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976248
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // I think we all remember that feeling when the result of some
    long-awaited\n    // event is finally known. The feelings and thoughts you have
    at that moment are\n    // definitely worth noting down and comparing.\n    //
    Your task is to determine if a person correctly guessed the results of a number
    of matches.\n    // You are given two lists of scores and guesses of equal length,
    where each index shows a match. \n    // Return a list of the same length denoting
    how far off each guess was. If they have guessed correctly,\n    // the value
    is 0, and if not, the value is the absolute difference between the guess and the
    score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new
    long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>
    Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,
    (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,
    (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,
    (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>
    game, List<long> guess) {\n        return game.Zip(guess, (a, b) => Math.Abs(a
    - b)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n
    \   Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,
    (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,
    (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,
    (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,
    (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e3c2eea02c4a65a56abfd84c1afa4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3e3c2eea02c4a65a56abfd84c1afa4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976241

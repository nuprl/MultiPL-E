language: cs
name: HumanEval_47_median
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        var s = l.Select(x => (float)x).ToList();\n\
    \        s.Sort();\n        int n = s.Count;\n        if (n == 0) {\n        \
    \    return 0.0f;\n        } else if (n % 2 == 1) {\n            return s[n /\
    \ 2];\n        } else {\n            return (s[n / 2 - 1] + s[n / 2]) / 2.0f;\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015727
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        if (l.Count == 0) {\n         \
    \   return 0;\n        }\n        l.Sort();\n        if (l.Count % 2 == 1) {\n\
    \            return l[l.Count / 2];\n        }\n        else {\n            return\
    \ (l[l.Count / 2 - 1] + l[l.Count / 2]) / 2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d57d8f47cbaa485cb1dc7014c7bd2f67>:0 \n"
  stdout: ''
  timestamp: 1660015727
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        if (l.Count == 0) {\n         \
    \   return 0.0f;\n        }\n        List<long> s = l.OrderBy((long x) => x).ToList();\n\
    \        int m = l.Count / 2;\n        if (l.Count % 2 == 0) {\n            return\
    \ (float)(s[m - 1] + s[m]) / 2;\n        }\n        else {\n            return\
    \ (float)s[m];\n        }\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015727
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        return l[l.Count/2];\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c987780913434b0ea698623fe27a592b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c987780913434b0ea698623fe27a592b>:0 \n"
  stdout: ''
  timestamp: 1660015727
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long sz = (long)l.Count;\n    \
    \    long mid = sz / (long)2L;\n        if (sz % (long)2L == (long)0L) {\n   \
    \         return (float)((double)(l[(int)(mid - (long)1L)] + l[(int)mid]) / (double)2L);\n\
    \        }\n\n        return (float)l[(int)mid];\n\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <42b3fe8d9e3747569352d89d294289dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <42b3fe8d9e3747569352d89d294289dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015727
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int n = l.Count;\n        int mid\
    \ = n / 2;\n        // mid is a float here, not an int.\n        if (n % 2 ==\
    \ 1) {\n            return (float)l[mid];\n        } else {\n            return\
    \ (float)((float)l[mid - 1] + (float)l[mid]) / 2f;\n        }\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2bf9917909c247f7b8c250cc45e8d8cf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2bf9917909c247f7b8c250cc45e8d8cf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015727
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        if (l.Count == 0) {\n         \
    \   return 0.0f;\n        }\n        else {\n            List<long> t = new List<long>(l);\n\
    \            t.Sort();\n            if (t.Count % 2 == 1) {\n                return\
    \ t[t.Count / 2];\n            }\n            else {\n                return (t[t.Count\
    \ / 2 - 1] + t[t.Count / 2]) / 2.0f;\n            }\n        }\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015727
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        List<long> tmp = new List<long>(l);\n\
    \        tmp.Sort();\n        int idx = tmp.Count / 2;\n        if (tmp.Count\
    \ % 2 == 0) {\n            return (float)((long)(tmp[idx - 1] + tmp[idx]) / (long)2L);\n\
    \        }\n        else {\n            return (float)tmp[idx];\n        }\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <18b2c10e154a4cd599b7ba6abb5de173>:0 \n"
  stdout: ''
  timestamp: 1660015727
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        return l.Median();\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzuciowbg.cs(15,18): error CS1061: ''List<long>'' does not contain a definition
    for ''Median'' and no accessible extension method ''Median'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1660015727
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        var i = l.Count\
    \ / 2;\n        if (l.Count % 2 == 0) {\n            return (float)((l[i - 1]\
    \ + l[i]) / 2);\n        } else {\n            return (float)l[i];\n        }\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f4a3dcffea974fe398eac12934d57ad2>:0 \n"
  stdout: ''
  timestamp: 1660015727
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        // Write your code here\n     \
    \   float result = 0.0f;\n        float temp = 0.0f;\n        float half = l.Count;\n\
    \        if(half % 2 == 0){\n            for(int x = 0; x < l.Count; x++){\n \
    \               for(int y = 0; y < l.Count - 1; y++){\n                    if(l[y]\
    \ > l[y + 1]){\n                        temp = l[y];\n                       \
    \ l[y] = l[y + 1];\n                        l[y + 1] = temp;\n               \
    \     }\n                }\n            }\n            result = ((float)l[(int)(half\
    \ / 2)] + (float)l[(int)(half / 2) - 1]) / 2;\n        }\n        else{\n    \
    \        for(int x = 0; x < l.Count; x++){\n                for(int y = 0; y <\
    \ l.Count - 1; y++){\n                    if(l[y] > l[y + 1]){\n             \
    \           temp = l[y];\n                        l[y] = l[y + 1];\n         \
    \               l[y + 1] = temp;\n                    }\n                }\n \
    \           }\n            result = (float)l[(int)(half / 2)];\n        }\n  \
    \      return result;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyw_pbv51.cs(25,36): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpyw_pbv51.cs(37,36): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015727
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        int n = l.Count;\n\
    \        if (n == 0) {\n            return (0);\n        }\n        if (n % 2\
    \ == 1) {\n            return (l[n / 2]);\n        }\n        else {\n       \
    \     return ((l[n / 2 - 1] + l[n / 2]) / 2f);\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015727
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long n = (long)l.Count;\n     \
    \   if (n == 0L) {\n            return 0.0f;\n        }\n\n        List<long>\
    \ sort = new List<long>(l);\n        sort.Sort();\n        if (n % 2L == 1L) {\n\
    \            return sort[n / 2L];\n        }\n\n        return (sort[n / 2L -\
    \ 1L] + sort[n / 2L]) / 2.0f;\n\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3vi1g3ce.cs(23,25): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp3vi1g3ce.cs(26,22): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp3vi1g3ce.cs(26,42): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015727
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long count = (long)l.Count;\n \
    \       long median = count / (long)2L;\n        l.Sort();\n        if (count\
    \ % (long)2L == (long)0L) {\n            return (float)((l[(int)median] + l[(int)(median\
    \ - (long)1L)]) / (long)2L);\n        }\n        else {\n            return (float)l[(int)median];\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e45647d060e64530b91751f1a16accec>:0 \n"
  stdout: ''
  timestamp: 1660015727
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        int m = l.Count\
    \ / 2;\n        if (l.Count % 2 == 0) {\n            return (float)(l[m - 1] +\
    \ l[m]) / 2f;\n        }\n        else {\n            return (float)l[m];\n  \
    \      }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015727
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int i = l.Count / 2;\n        if\
    \ (l.Count % 2 == 0) {\n            // Handle even number of elements.\n     \
    \       float median = (l[i] + l[i - 1]) / 2.0f;\n            return median;\n\
    \        } else {\n            // Handle odd number of elements.\n           \
    \ return l[i];\n        }\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <51fc18a2a8464aef9b222107ad9d33a6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <51fc18a2a8464aef9b222107ad9d33a6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015727
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        if (l.Count\
    \ == 0) {\n            return 0;\n        }\n        int left = 0;\n        int\
    \ right = l.Count - 1;\n        int length = right - left + 1;\n        int median\
    \ = left + length / 2;\n        if (length % 2 == 1) {\n            return l[median];\n\
    \        }\n        else {\n            return (l[median - 1] + l[median]) / 2.0f;\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015727
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long len = l.Count;\n        long\
    \ sum = (long)0L;\n        foreach (long elem in l) {\n            sum += elem;\n\
    \        }\n        float mean = (float)sum / (float)len;\n        long ssum =\
    \ (long)0L;\n        foreach (long elem in l) {\n            long tmp = elem -\
    \ (long)mean;\n            ssum += tmp * tmp;\n        }\n        float variance\
    \ = (float)ssum / (float)len;\n        float sigma = (float)Math.Sqrt((double)variance);\n\
    \        float sigmam = sigma / (float)Math.Sqrt((double)len);\n        return\
    \ sigmam;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd23393acb904764b22f6aa14a5e0db0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd23393acb904764b22f6aa14a5e0db0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015727
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        if ((l.Count\
    \ % 2L) == 1L) {\n            return (float)l[(l.Count / 2L)];\n        }\n\n\
    \        return ((float)l[(l.Count / 2L) - 1L] + (float)l[(l.Count / 2L)]) / 2f;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo3qjga7k.cs(17,30): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpo3qjga7k.cs(20,26): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpo3qjga7k.cs(20,59): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015727
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long count = (long)l.Count;\n \
    \       if (count == (long)0L) {\n            return (float)0L;\n        }\n\n\
    \        l.Sort();\n        if (count % (long)2L == (long)0L) {\n            return\
    \ ((float)l[(int)((count / (long)2L) - (long)1L)] + (float)l[(int)(count / (long)2L)])\
    \ / (float)2L;\n        }\n\n        return (float)l[(int)(count / (long)2L)];\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015727
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        return (float)((l[(l.Count)\
    \ / 2] + l[(l.Count - 1) / 2]) / 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <05cbf3731c0e4c16a2b19f68cb695878>:0 \n"
  stdout: ''
  timestamp: 1660015727
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        if (l.Count\
    \ % 2 == 1) {\n            return (float)l[l.Count / 2];\n        } else {\n \
    \           return (float)(l[l.Count / 2 - 1] + l[l.Count / 2]) / 2;\n       \
    \ }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015727
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        int sz = l.Count;\n\
    \        if (sz % 2 == 1) {\n            return (float)l[sz / 2];\n        }\n\
    \        else {\n            return (float)(l[sz / 2 - 1] + l[sz / 2]) / 2f;\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015727
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        // Sort list.\n        l.Sort();\n\
    \        // Return median.\n        if (l.Count % 2 == 0) {\n            // Even\
    \ number of elements.\n            long a = l[l.Count / 2 - 1];\n            long\
    \ b = l[l.Count / 2];\n            return (a + b) / 2f;\n        } else {\n  \
    \          // Odd number of elements.\n            return l[l.Count / 2];\n  \
    \      }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015728
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        return l[l.Count\
    \ / 2];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <781c5ebbe77b4f32911c139a530e60d6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <781c5ebbe77b4f32911c139a530e60d6>:0 \n"
  stdout: ''
  timestamp: 1660015728
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int len = l.Count;\n        l.Sort();\n\
    \        if (len % 2 == 1) {\n            return (float)l[len / 2];\n        }\
    \ else {\n            return (float)((l[len / 2 - 1] + l[len / 2]) / 2.0);\n \
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015728
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        long len = (long)l.Count;\n\
    \        if (len % 2L == 1L) {\n            return (float)l[len / 2L];\n     \
    \   }\n\n        return ((float)l[len / 2L - 1L] + (float)l[len / 2L]) / 2f;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpn8bxsp_g.cs(18,29): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpn8bxsp_g.cs(21,26): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpn8bxsp_g.cs(21,52): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015728
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int c = l.Count;\n        int half\
    \ = c / 2;\n        l.Sort();\n        if (c % 2 == 0) {\n            return (float)((l[half\
    \ - 1] + l[half]) / 2);\n        } else {\n            return (float)l[half];\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efbb831e405140fa9f7ffed80fba898e>:0 \n"
  stdout: ''
  timestamp: 1660015728
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        if ((l.Count % 2L) == 0L) {\n \
    \           float x = (float)l[(l.Count / 2L) - 1L];\n            float y = (float)l[(l.Count\
    \ / 2L)];\n            return (x + y) / 2f;\n        }\n        else {\n     \
    \       return (float)l[(l.Count / 2L)];\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiz9uhymd.cs(16,32): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpiz9uhymd.cs(17,33): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpiz9uhymd.cs(21,30): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015728
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        return (float)((l[l.Count\
    \ / 2 - 1] + l[l.Count / 2]) / 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2027378b92f42639d682850c8789c23>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.Median (System.Collections.Generic.List`1[T] l) [0x0000f] in <c2027378b92f42639d682850c8789c23>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00061] in <c2027378b92f42639d682850c8789c23>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.Median\
    \ (System.Collections.Generic.List`1[T] l) [0x0000f] in <c2027378b92f42639d682850c8789c23>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00061] in <c2027378b92f42639d682850c8789c23>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015728
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        if (l.Count == 0) {\n         \
    \   return 0.0f;\n        }\n        if (l.Count == 1) {\n            return (float)l[0];\n\
    \        }\n        if (l.Count == 2) {\n            return (float)(l[0] + l[1])\
    \ / 2.0f;\n        }\n        l.Sort();\n        if (l.Count % 2 == 1) {\n   \
    \         return (float)l[l.Count / 2];\n        }\n        else {\n         \
    \   return (float)(l[l.Count / 2 - 1] + l[l.Count / 2]) / 2.0f;\n        }\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015728
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        int len = l.Count;\n\
    \        if (len % 2 == 1) {\n            return (float)l[len / 2];\n        }\n\
    \        else {\n            return (float)(l[len / 2 - 1] + l[len / 2]) / 2;\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015728
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        long x = 0L;\n\
    \        long y = 0L;\n        for (long i = 0L; i < l.Count; i++) {\n       \
    \     if (i % 2L == 0L) {\n                x = l[(int)i];\n            }\n   \
    \         else {\n                y = l[(int)i];\n            }\n\n        }\n\
    \n        if (l.Count % 2L == 0L) {\n            return (float)((x + y) / 2L);\n\
    \        }\n\n        return (float)x;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cd0d471eb761409f9bec1f2c0acf77a8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cd0d471eb761409f9bec1f2c0acf77a8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015728
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int index = l.Count / 2;\n    \
    \    if (l.Count % 2 == 0) {\n            return (float)((l[index] + l[index -\
    \ 1]) / 2.0f);\n        } else {\n            return (float)l[index];\n      \
    \  }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <939ad39e817445e1ac0c2be0d5c8c616>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <939ad39e817445e1ac0c2be0d5c8c616>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015728
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        //median of even and odd numbers\n\
    \        l.Sort();\n        if (((l.Count) % (2L)) == (0L)) {\n            return\
    \ ((((float)(l[(((l.Count) / (2L)) - (1L))])) + ((float)(l[((l.Count) / (2L))])))\
    \ / (2.0f));\n        }\n        else {\n            return ((float)(l[((l.Count)\
    \ / (2L))]));\n        }\n\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfzgr985f.cs(18,34): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpfzgr985f.cs(18,78): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpfzgr985f.cs(21,32): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015728
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int n = l.Count;\n        if (n\
    \ == 0) {\n            return 0;\n        }\n        l.Sort();\n        if (n\
    \ % 2 == 1) {\n            return l[n / 2];\n        }\n        else {\n     \
    \       return (l[n / 2 - 1] + l[n / 2]) / 2.0f;\n        }\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015728
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int i = l.Count / 2;\n        int\
    \ j = l.Count / 2;\n        if (l.Count % 2 == 0) {\n            i--;\n      \
    \  }\n        l.Sort();\n        return (float)((l[i] + l[j]) / 2.0);\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015728
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        int n = l.Count;\n\
    \        if (n % 2 == 1) {\n            return (float)l[n / 2];\n        }\n \
    \       else {\n            return (float)(l[n / 2 - 1] + l[n / 2]) / 2;\n   \
    \     }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015728
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        int n = l.Count;\n\
    \        if (n % 2 == 1) {\n            return (float)l[n / 2];\n        }\n \
    \       else {\n            return (float)(l[n / 2 - 1] + l[n / 2]) / 2;\n   \
    \     }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015728
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        if (l.Count\
    \ % 2 == 1) {\n            return (float)l[l.Count / 2];\n        } else {\n \
    \           return (float)((l[l.Count / 2] + l[l.Count / 2 - 1]) / 2);\n     \
    \   }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c96e0a159ad3419ab5b9f9a3bafc7617>:0 \n"
  stdout: ''
  timestamp: 1660015728
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        return ((float)(l[(int)((long)(l.Count)\
    \ / (long)2L)]) + (float)(l[(int)((long)(l.Count) / (long)2L - (long)1L)]) / (float)2L);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c53e534fd2d040a9885195cd8ec3e699>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c53e534fd2d040a9885195cd8ec3e699>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.Median (System.Collections.Generic.List`1"
  stdout: ''
  timestamp: 1660015728
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        long __a = (long)l.Count;\n\
    \        if ((__a & (long)1L) == (long)0L) {\n            return (float)(((long)l[__a\
    \ / (long)2L - (long)1L] + (long)l[__a / (long)2L]) / (long)2L);\n        }\n\n\
    \        return (float)l[__a / (long)2L];\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqolynbvr.cs(18,37): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpqolynbvr.cs(18,74): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpqolynbvr.cs(21,25): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015728
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        long h = (long)l.Count();\n\
    \        long m = h / 2L;\n        if (h % 2L == 0L) {\n            return (float)((l[(int)m]\
    \ + l[(int)(m - 1L)]) / 2L);\n        }\n        else {\n            return (float)l[(int)m];\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <75a3d27954684dc78ae48bc9398b5639>:0 \n"
  stdout: ''
  timestamp: 1660015728
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        int m = l.Count\
    \ / 2;\n        return (l.Count % 2 == 0) ? (l[m - 1] + l[m]) / 2f : l[m];\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015728
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        return (float)(l[(int)((ulong)l.Count\
    \ >> (int)1UL)] + l[(int)((ulong)(l.Count - 1L) >> (int)1UL)]) / 2f;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015728
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        long i = l.Count\
    \ / 2;\n        if (l.Count % 2 == 0) {\n            return (float)(l[(int)i]\
    \ + l[(int)(i - 1L)]) / 2f;\n        }\n\n        return (float)l[(int)i];\n\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015728
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        if (l.Count\
    \ % 2 == 1) {\n            return (float)l[l.Count / 2];\n        } else {\n \
    \           return (float)(l[l.Count / 2 - 1] + l[l.Count / 2]) / 2;\n       \
    \ }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015727
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        List<long> nl = l.OrderBy(x =>\
    \ x).ToList();\n        long n = nl.Count;\n        if (n % 2 == 1) {\n      \
    \      return nl[n / 2];\n        }\n        return (nl[n / 2 - 1] + nl[n / 2])\
    \ / 2.0f;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiryrsyd_.cs(18,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpiryrsyd_.cs(20,20): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpiryrsyd_.cs(20,36): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015728
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int n = l.Count;\n        if (n\
    \ % 2 == 1) {\n            long ll = (long)Math.Ceiling((float)n / 2);\n     \
    \       long rr = n - ll;\n            return (float)(l[(int)ll - 1] + l[(int)rr])\
    \ / 2;\n        }\n        long r = (long)Math.Ceiling((float)n / 2);\n      \
    \  return (float)l[(int)r - 1];\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <db6644f0e29744cdad972093a1c89e5a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <db6644f0e29744cdad972093a1c89e5a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015728
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long i = 0L;\n        long j =\
    \ 0L;\n        long n = (long)l.Count;\n        long n2 = 0L;\n        for (long\
    \ k = 0L; k < n; k++) {\n            if (l[(int)k] < l[(int)i]) {\n          \
    \      i = k;\n            }\n            if (l[(int)k] > l[(int)j]) {\n     \
    \           j = k;\n            }\n        }\n        n2 = n / 2L;\n        if\
    \ (n % 2L == 0L) {\n            long sum = l[(int)i] + l[(int)j];\n          \
    \  return (float)(sum / 2L);\n        }\n        return (float)l[(int)n2];\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a728b7cf71b64683a37ed72620af6f2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a728b7cf71b64683a37ed72620af6f2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015729
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        if (l.Count\
    \ == 0)\n        {\n            return 0.0f;\n        }\n\n        if (l.Count\
    \ % 2 == 1)\n        {\n            return l[l.Count / 2];\n        }\n\n    \
    \    return (l[l.Count / 2 - 1] + l[l.Count / 2]) / 2.0f;\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015728
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        List<long> temp = new List<long>(l);\n\
    \        temp.Sort();\n        if (temp.Count % 2 == 1) {\n            return\
    \ temp[temp.Count / 2];\n        }\n        else {\n            return (temp[temp.Count\
    \ / 2 - 1] + temp[temp.Count / 2]) / 2.0f;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015729
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        if ((l.Count\
    \ % 2L) == 0L) {\n            return (((float)(l[(l.Count / 2L) - 1L] + l[l.Count\
    \ / 2L])) / 2f);\n        }\n\n        return (float)l[l.Count / 2L];\n\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp07n_r4r1.cs(17,32): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp07n_r4r1.cs(17,57): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp07n_r4r1.cs(20,25): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015728
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        if ((l.Count\
    \ % 2L) == 0L) {\n            return ((float)(l[(l.Count / 2L) - 1L] + l[l.Count\
    \ / 2L]) / 2f);\n        }\n        else {\n            return l[l.Count / 2L];\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7oiwlhw2.cs(17,31): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp7oiwlhw2.cs(17,56): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp7oiwlhw2.cs(20,22): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015728
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        int n = l.Count;\n\
    \        if (n % 2 == 1) {\n            return (float)l[n / 2];\n        }\n \
    \       else {\n            return (float)(l[n / 2 - 1] + l[n / 2]) / 2;\n   \
    \     }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015728
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        long n = (long)l.Count;\n\
    \        long n2 = n / (long)2L;\n        if (n % (long)2L == (long)0L) {\n  \
    \          return (float)((float)(l[(int)n2] + l[(int)(n2 - (long)1L)]) / (float)2L);\n\
    \        }\n        return (float)l[(int)n2];\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015729
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        var len = (long)l.Count;\n\
    \        long n = len / 2L;\n        if (len % 2L == 1L) {\n            return\
    \ (float)l[(int)n];\n        }\n        else {\n            return (float)((l[(int)n]\
    \ + l[(int)(n - 1L)]) / 2L);\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <af047042b2b7497c947a48133bc3ec02>:0 \n"
  stdout: ''
  timestamp: 1660015729
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        var l2 = l.OrderBy((x) => x).ToList();\n\
    \        var n = l2.Count();\n        if (n % 2 == 1) {\n            return l2[n\
    \ / 2];\n        } else {\n            return (l2[n / 2 - 1] + l2[n / 2]) / 2f;\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015729
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        if ((l.Count\
    \ % 2L) == 0L) {\n            return (((float)(l[(l.Count / 2L) - 1L] + l[l.Count\
    \ / 2L])) / 2f);\n        }\n        else {\n            return (float)l[l.Count\
    \ / 2L];\n        }\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl0wxupb4.cs(17,32): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpl0wxupb4.cs(17,57): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpl0wxupb4.cs(20,29): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015728
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long size = l.Count;\n        long\
    \ middle = (long) (size / 2L);\n        if (size % 2L == 1L) {\n            return\
    \ (float) l[(int) middle];\n        } else {\n            return (float) (l[(int)\
    \ middle] + l[(int) (middle - 1L)]) / 2f;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6be4158c16c34f8a9c8c84918517b8a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6be4158c16c34f8a9c8c84918517b8a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015729
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        var ordered = l.OrderBy((long x)\
    \ => x).ToList();\n        var n = ordered.Count;\n        var t = ordered[n /\
    \ 2];\n        if (n % 2 == 0) {\n            t += ordered[n / 2 - 1];\n     \
    \       t /= 2.0f;\n        }\n        return t;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7m2fw9m4.cs(20,13): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015729
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        long n = (long)l.Count;\n\
    \        if (n == 0L) {\n            return 0f;\n        }\n        if (n % 2L\
    \ == 1L) {\n            return (float)l[(int)(n / 2L)];\n        }\n        return\
    \ ((float)l[(int)(n / 2L - 1L)] + (float)l[(int)(n / 2L)]) / 2f;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015729
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int size = l.Count;\n        l.Sort();\n\
    \        if (size % 2 == 0) {\n            return (float)(l[size / 2] + l[size\
    \ / 2 - 1]) / 2;\n        } else {\n            return (float)l[size / 2];\n \
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015729
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        // l.Sort();\n        var c = l.Count();\n\
    \        var half = c / 2;\n        return (c % 2 != 0) ? l[half] : (l[half -\
    \ 1] + l[half]) / 2.0f;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4532051197264197973cfe46651666f0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4532051197264197973cfe46651666f0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015729
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int n = l.Count;\n        l.Sort();\n\
    \        if (n % 2 == 1) {\n            return (float)l[n / 2];\n        } else\
    \ {\n            return (float)(l[n / 2 - 1] + l[n / 2]) / 2;\n        }\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015729
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long n = (long)l.Count;\n     \
    \   long tmp = 0L;\n        long median = (long)0L;\n        for (long i = (long)0L;\
    \ i < n; i++) {\n            for (long j = (long)0L; j < n - i - (long)1L; j++)\
    \ {\n                if (l[(int)(j)] > l[(int)(j + (long)1L)]) {\n           \
    \         tmp = l[(int)(j)];\n                    l[(int)(j)] = l[(int)(j + (long)1L)];\n\
    \                    l[(int)(j + (long)1L)] = tmp;\n                }\n      \
    \      }\n        }\n        if (n % (long)2L == (long)0L) {\n            median\
    \ = (l[(int)(n / (long)2L - (long)1L)] + l[(int)(n / (long)2L)]) / (long)2L;\n\
    \        }\n        else {\n            median = l[(int)(n / (long)2L)];\n   \
    \     }\n        return (float)median;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7be71d0d34ee41bcb808530fd5b54826>:0 \n"
  stdout: ''
  timestamp: 1660015729
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long _l = 0L;\n        foreach\
    \ (var i in l) {\n            _l += i;\n        }\n        return ((float)_l)\
    \ / ((float)l.Count);\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <72fcfea5a5504aa0a2e935a4a3bc671f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <72fcfea5a5504aa0a2e935a4a3bc671f>:0 \n"
  stdout: ''
  timestamp: 1660015729
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        var c = l.Count();\n        if\
    \ (c % 2 == 1) {\n            return l[c / 2];\n        } else {\n           \
    \ return (l[c / 2 - 1] + l[c / 2]) / 2.0f;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6768df82534749a58dd35149e590f441>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6768df82534749a58dd35149e590f441>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015729
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long n = (long)l.Count;\n     \
    \   long n2 = n / 2L;\n        float m;\n        if (n % 2L == 0L) {\n       \
    \     m = ((float)((l[(int)n2] + l[(int)(n2 - 1L)])) / 2f);\n        }\n     \
    \   else {\n            m = (float)l[(int)n2];\n        }\n        return m;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <00a93dfc3a374777974c2ddb3b881480>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <00a93dfc3a374777974c2ddb3b881480>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015729
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        var tmp = l.ToArray();\n      \
    \  Array.Sort(tmp);\n        int n = tmp.Length;\n        if (n % 2 == 1) {\n\
    \            return tmp[n / 2];\n        } else {\n            return (tmp[n /\
    \ 2 - 1] + tmp[n / 2]) / 2.0f;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015729
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        var mid = (l.Count\
    \ + 1) / 2;\n        if (l.Count % 2 == 0) {\n            var x = l[mid - 1];\n\
    \            var y = l[mid];\n            return (x + y) / 2f;\n        }\n  \
    \      else {\n            return l[mid - 1];\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015729
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        var count = l.Count;\n        var\
    \ middle = count / 2;\n        long temp = 0;\n        for (int i = 0; i < count;\
    \ i++) {\n            for (int j = 0; j < count - 1; j++) {\n                if\
    \ (l[j] > l[j + 1]) {\n                    temp = l[j + 1];\n                \
    \    l[j + 1] = l[j];\n                    l[j] = temp;\n                }\n \
    \           }\n        }\n        return count % 2 == 1 ? l[middle] : (l[middle\
    \ - 1] + l[middle]) / 2.0f;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015729
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        long length\
    \ = (long)l.Count;\n        if (length == 0L) {\n            return 0f;\n    \
    \    }\n        if (length % 2L == 0L) {\n            return (float)((l[(int)((length\
    \ / 2L) - 1L)] + l[(int)(length / 2L)]) / 2L);\n        }\n        return (float)l[(int)(length\
    \ / 2L)];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <66bd5f6ec0884bd5a4714f30fe892a57>:0 \n"
  stdout: ''
  timestamp: 1660015729
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int n = l.Count;\n        if (n\
    \ % 2 == 1) {\n            return (float)l[n / 2];\n        }\n        else {\n\
    \            return (float)((l[n / 2 - 1] + l[n / 2]) / 2.0);\n        }\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f6935ae6e6f46008ebb9b70d560f8c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f6935ae6e6f46008ebb9b70d560f8c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015729
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long n = (long)l.Count;\n     \
    \   long n2 = n / 2L;\n        l.Sort();\n        if (n % 2L == 0L) {\n      \
    \      return (float)((l[(int)n2 - 1L] + l[(int)n2]) / 2L);\n        }\n     \
    \   return (float)l[(int)n2];\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp513ku40a.cs(19,31): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015729
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        var _tup_1 = (l).Sort();\n    \
    \    List<long> sorted = _tup_1.Item1;\n        long _ = _tup_1.Item2;\n     \
    \   return MedianSorted(sorted);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps2ksr84u.cs(15,13): error CS0815: Cannot assign void to an implicitly-typed
    variable

    /tmp/tmps2ksr84u.cs(18,16): error CS0103: The name ''MedianSorted'' does not exist
    in the current context

    '
  timestamp: 1660015729
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        if (l.Count == 0) {\n         \
    \   return 0.0f;\n        }\n        int half = l.Count / 2;\n        l.Sort();\n\
    \        if (l.Count % 2 == 0) {\n            return (float)(l[half - 1] + l[half])\
    \ / 2.0f;\n        }\n        else {\n            return (float)l[half];\n   \
    \     }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015729
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        if (((l.Count)\
    \ % (2L)) == (0L)) {\n            return ((((float)(l[(((l.Count) / (2L)) - (1L))]))\
    \ + ((float)(l[((l.Count) / (2L))]))) / (2f));\n        }\n        else {\n  \
    \          return ((float)(l[((l.Count) / (2L))]));\n        }\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpy1ww74k4.cs(17,34): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpy1ww74k4.cs(17,78): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpy1ww74k4.cs(20,32): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015729
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        int n = l.Count;\n\
    \        if (n == 0) {\n            return 0;\n        }\n\n        if (n % 2\
    \ == 1) {\n            return l[n / 2];\n        }\n\n        return (l[n / 2\
    \ - 1] + l[n / 2]) / 2f;\n\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015729
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        // INSERT YOUR CODE HERE\n    \
    \    l.Sort();\n        if (l.Count % 2 == 0) {\n            return (float)(l[l.Count\
    \ / 2] + l[l.Count / 2 - 1]) / 2;\n        } else {\n            return (float)l[l.Count\
    \ / 2];\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015729
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long sum = 0L;\n        long s\
    \ = 0L;\n        long u = 0L;\n        long v = 0L;\n        long w = 0L;\n  \
    \      long a = 0L;\n        long b = 0L;\n        long c = 0L;\n        long\
    \ d = 0L;\n        long n = (long)l.Count;\n        long n2 = n / 2L;\n      \
    \  sum = 0L;\n        foreach (long l1 in l) {\n            sum += l1;\n     \
    \   }\n        s = sum;\n        foreach (long l1 in l) {\n            u = s -\
    \ l1;\n            v = u - l1;\n            w = v - l1;\n            a = s - v;\n\
    \            b = u - w;\n            c = b + l1;\n            d = c - l1;\n  \
    \          if (a > n2) {\n                break;\n            }\n            s\
    \ = d;\n        }\n        return (float)l[(int)((n - 1L) - (a - n2))];\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <911b084325a844ebbcaae541647fac47>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.Median (System.Collections.Generic.List`1[T] l) [0x000d6] in <911b084325a844ebbcaae541647fac47>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00061] in <911b084325a844ebbcaae541647fac47>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.Median\
    \ (System.Collections.Generic.List`1[T] l) [0x000d6] in <911b084325a844ebbcaae541647fac47>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00061] in <911b084325a844ebbcaae541647fac47>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long[] larr = l.ToArray();\n  \
    \      int arrlen = larr.Length;\n        int split = (int)Math.Ceiling((decimal)arrlen\
    \ / 2);\n        if (arrlen % 2 == 0) {\n            return (float)(larr[split\
    \ - 1] + larr[split]) / 2;\n        } else {\n            return (float)larr[split\
    \ - 1];\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4387a6f95bfa4f1dbb6671f99b163288>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4387a6f95bfa4f1dbb6671f99b163288>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        return (float)l[(int)(((long)l.Count)\
    \ / 2L)];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <54f8b3253ede4e0a91e04bc78d0738e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <54f8b3253ede4e0a91e04bc78d0738e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        int length =\
    \ l.Count;\n        int mid = length / 2;\n        return (float)((((length %\
    \ 2) == 1) ? l[mid] : (((double)l[mid]) + l[(mid - 1)])) / (double)2);\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ef62bfe2a5194ab39795771cd6dbb934>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ef62bfe2a5194ab39795771cd6dbb934>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        if (l.Count\
    \ % 2 == 1) {\n            return (float)l[l.Count / 2];\n        } else {\n \
    \           return (float)(l[l.Count / 2 - 1] + l[l.Count / 2]) / 2;\n       \
    \ }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015727
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int n = l.Count;\n        l.Sort();\n\
    \        if (n % 2 != 0) {\n            return (float)l[n / 2];\n        }\n \
    \       else {\n            return (float)(l[n / 2] + l[n / 2 - 1]) / 2f;\n  \
    \      }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        var tmp = l.OrderBy((long it) =>\
    \ it).ToList();\n        if (tmp.Count % 2 == 1) {\n            return (float)tmp[tmp.Count\
    \ / 2];\n        }\n        else {\n            return (float)(tmp[tmp.Count /\
    \ 2 - 1] + tmp[tmp.Count / 2]) / 2f;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015730
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        var lCopy = l.ToList();\n     \
    \   lCopy.Sort();\n        var n = lCopy.Count;\n        if (n == 0) {\n     \
    \       return 0;\n        }\n\n        return (float)(n % 2L == 0L ? (lCopy[n\
    \ / 2L - 1L] + lCopy[n / 2L]) / 2f : lCopy[n / 2L]);\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx33mmsy0.cs(22,46): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpx33mmsy0.cs(22,67): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpx33mmsy0.cs(22,89): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015729
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        long s = 0L;\n\
    \        long n = (long)l.Count;\n        foreach (long e in l) {\n          \
    \  s += e;\n        }\n        if (n % 2L == 0L) {\n            return (l[(int)((n\
    \ / 2L) - 1L)] + l[(int)(n / 2L)]) / 2.0f;\n        }\n        return l[(int)(n\
    \ / 2L)];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015730
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        // TODO: Implement me\n       \
    \ List<long> num = new List<long>(l);\n        long n = (long)num.Count();\n \
    \       long n2 = n / 2L;\n        if (n % 2L == 1L) {\n            return num[n2];\n\
    \        }\n        else {\n            float f = (float)(num[n2 - 1L] + num[n2]);\n\
    \            return f / 2.0f;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpg5g9icps.cs(20,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpg5g9icps.cs(23,35): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpg5g9icps.cs(23,50): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015729
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        if (l.Count % 2 == 1) {\n     \
    \       return l[l.Count / 2];\n        }\n        else {\n            long a\
    \ = l[l.Count / 2 - 1];\n            long b = l[l.Count / 2];\n            return\
    \ (a + b) / 2.0f;\n        }\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <479a6dc30e354b47bf5597702e81ea8c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <479a6dc30e354b47bf5597702e81ea8c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int n = l.Count;\n        List<long>\
    \ l_copy = new List<long>(l);\n        l_copy.Sort();\n        if (n % 2 == 1)\
    \ {\n            return (float)l_copy[n / 2];\n        }\n        else {\n   \
    \         return (float)((l_copy[n / 2 - 1] + l_copy[n / 2]) / 2.0f);\n      \
    \  }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        var sl = l.OrderBy((i) => i).ToList();\n\
    \        var mid = sl.Count / 2;\n        return sl.Count % 2 == 0 ? ((float)(sl[mid\
    \ - 1] + sl[mid])) / 2 : sl[mid];\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int n = l.Count;\n        int half\
    \ = n / 2;\n        if (n % 2 == 1) {\n            return l[half];\n        }\
    \ else {\n            return (l[half] + l[half - 1]) / 2.0f;\n        }\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <21e68007392043c4b0141fa4f3ee9fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <21e68007392043c4b0141fa4f3ee9fe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        if (l.Count == 0) {\n         \
    \   return 0.0f;\n        }\n        List<long> lt = l.OrderBy(x => x).ToList();\n\
    \        int len = lt.Count;\n        if (len % 2 == 1) {\n            return\
    \ (float)lt[len / 2];\n        }\n        else {\n            return (float)(lt[len\
    \ / 2 - 1] + lt[len / 2]) / 2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        return ((float)(l[(int)((l.Count\
    \ / (float)2L) - (float)1L)] + l[(int)(l.Count / (float)2L)])) / (float)2L;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <017a9effbec3438492b3c59d625dddf5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <017a9effbec3438492b3c59d625dddf5>:0 \n"
  stdout: ''
  timestamp: 1660015730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        List<long> copy = new List<long>(l);\n\
    \        copy.Sort();\n        long length = (long)copy.Count;\n        if (length\
    \ == 0L) {\n            return 0.0f;\n        }\n        if (length % 2L == 1L)\
    \ {\n            return (float)copy[(int)(length / 2L)];\n        }\n        else\
    \ {\n            return (float)((float)(copy[(int)(length / 2L) - 1]) + (float)(copy[(int)(length\
    \ / 2L)]) / 2.0f);\n        }\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efa144ca41c24754a26eb33576dd24cb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efa144ca41c24754a26eb33576dd24cb>:0 \n"
  stdout: ''
  timestamp: 1660015730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        if (((((l.Count) % (2L)) == (0L))\
    \ || (((l.Count) % (2L)) == (1L)))) {\n            return (float)((float)((l[((int)((float)((float)((l.Count)\
    \ / (2L))) + ((float)((float)((l.Count) % (2L)) / (2L)))))] + (l[((int)((float)((float)((l.Count)\
    \ / (2L))) + ((float)((float)((l.Count) % (2L)) / (2L)))))])) / (2L)));\n    \
    \    }\n        else {\n            return (float)(l[((int)((float)((float)((l.Count)\
    \ / (2L))) + ((float)((float)((l.Count) % (2L)) / (2L)))))]);\n        }\n\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b1be839ed93b4d089773aa6d32f2ed3e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b1be839ed93b4d089773aa6d32f2ed3e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015730
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        if ((len(l) == (long)0L)) {\n \
    \           return (float)0L;\n        }\n\n        {\n            long n__prev1\
    \ = n;\n\n            foreach (var (_, __n) in l)\n            {\n           \
    \     n = __n;\n                if (n < (long)0L)\n                {\n       \
    \             throw new InvalidOperationException(\"Cannot compute median of negative\
    \ numbers\");\n                }\n\n            }\n\n            n = n__prev1;\n\
    \        }\n\n        var l2 = new List<long>(l);\n        l2.Sort();\n      \
    \  return Median(l2);\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwnlqfpcz.cs(15,14): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpwnlqfpcz.cs(20,29): error CS0103: The name ''n'' does not exist in the
    current context

    /tmp/tmpwnlqfpcz.cs(22,38): error CS1061: ''long'' does not contain a definition
    for ''Deconstruct'' and no accessible extension method ''Deconstruct'' accepting
    a first argument of type ''long'' could be found (are you missing a using directive
    or an assembly reference?)

    /tmp/tmpwnlqfpcz.cs(22,38): error CS8129: No suitable ''Deconstruct'' instance
    or extension method was found for type ''long'', with 2 out parameters and a void
    return type.

    /tmp/tmpwnlqfpcz.cs(22,27): error CS8130: Cannot infer the type of implicitly-typed
    deconstruction variable ''_''.

    /tmp/tmpwnlqfpcz.cs(22,27): error CS8183: Cannot infer the type of implicitly-typed
    discard.

    /tmp/tmpwnlqfpcz.cs(22,30): error CS8130: Cannot infer the type of implicitly-typed
    deconstruction variable ''__n''.

    /tmp/tmpwnlqfpcz.cs(24,17): error CS0103: The name ''n'' does not exist in the
    current context

    /tmp/tmpwnlqfpcz.cs(25,21): error CS0103: The name ''n'' does not exist in the
    current context

    /tmp/tmpwnlqfpcz.cs(32,13): error CS0103: The name ''n'' does not exist in the
    current context

    '
  timestamp: 1660015730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        return l[l.Count\
    \ / 2];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <781c5ebbe77b4f32911c139a530e60d6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <781c5ebbe77b4f32911c139a530e60d6>:0 \n"
  stdout: ''
  timestamp: 1660015728
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int n = l.Count;\n        l.Sort();\n\
    \        if (n % 2 == 1) {\n            return (float)l[n / 2];\n        } else\
    \ {\n            return (float)(l[n / 2 - 1] + l[n / 2]) / 2;\n        }\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015729
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        if (l.Count\
    \ % 2 == 1) {\n            // odd\n            return (float)l[l.Count / 2];\n\
    \        } else {\n            // even\n            return (float)((double)l[l.Count\
    \ / 2 - 1] + (double)l[l.Count / 2]) / 2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        // Write your code here.\n    \
    \    l.Sort();\n        long index = l.Count / 2;\n        if (l.Count % 2 ==\
    \ 0) {\n            return (float)(l[(int)index] + l[(int)index - 1]) / 2;\n \
    \       }\n        return (float)l[(int)index];\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015730
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long n = (long)l.Count;\n     \
    \   long i = n / 2L;\n        l.Sort();\n        if (n % 2L == 0L) {\n       \
    \     return (float)((double)(l[(int)i - 1L] + l[(int)i]) / 2.0);\n        }\n\
    \n        return (float)l[(int)i];\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpklux_cx8.cs(19,39): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        long sz = l.Count;\n\
    \        if (sz % 2L == 1L) {\n            return (float)l[(int)((sz - 1L) / 2L)];\n\
    \        }\n\n        return (float)(l[(int)(sz / 2L)] + l[(int)((sz / 2L) - 1L)])\
    \ / 2.0f;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015730
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        float f;\n        int n = l.Count;\n\
    \        int m = n / 2;\n        l.Sort();\n        if (n % 2 == 0) {\n      \
    \      f = ((float)(l[m - 1L] + l[m])) / 2f;\n        }\n        else {\n    \
    \        f = (float)l[m];\n        }\n        return f;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpud55u1no.cs(20,28): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        if (l.Count\
    \ == 0) {\n            return 0;\n        }\n        else if (l.Count % 2 == 1)\
    \ {\n            return l[l.Count / 2];\n        }\n        else {\n         \
    \   long a = l[l.Count / 2 - 1];\n            long b = l[l.Count / 2];\n     \
    \       return (a + b) / 2.0f;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        float med = (float)0;\n       \
    \ l.Sort();\n        if (l.Count % 2 == 0) {\n            med = (float)(l[l.Count\
    \ / 2] + l[l.Count / 2 - 1]) / 2;\n        }\n        else {\n            med\
    \ = (float)l[l.Count / 2];\n        }\n        return med;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        if (l.Count == 0) {\n         \
    \   return 0.0f;\n        }\n        // Sort our list first.\n        l.Sort();\n\
    \        if (l.Count % 2 == 1) {\n            // Our list is odd.\n          \
    \  return (float)l[l.Count / 2];\n        }\n        else {\n            // Our\
    \ list is even.\n            return (float)(l[l.Count / 2] + l[l.Count / 2 - 1])\
    \ / 2.0f;\n        }\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015730
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        return ((l[(l.Count/2)-1]\
    \ + l[l.Count/2]) / 2.0f);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dcdfff103f18473ab9a78bb31de6c2d7>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.Median (System.Collections.Generic.List`1[T] l) [0x0000f] in <dcdfff103f18473ab9a78bb31de6c2d7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00061] in <dcdfff103f18473ab9a78bb31de6c2d7>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.Median\
    \ (System.Collections.Generic.List`1[T] l) [0x0000f] in <dcdfff103f18473ab9a78bb31de6c2d7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00061] in <dcdfff103f18473ab9a78bb31de6c2d7>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015730
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int len = (int)l.Count;\n     \
    \   if (len == 0L) {\n            return (float)0L;\n        }\n\n        // Make\
    \ a sorted copy of elements in l.\n        var a = new long[len];\n        {\n\
    \            long index = 0L;\n            long _index0 = 0L;\n            long\
    \ __index0 = 0L;\n            long _rhs = len;\n            long __rhs = _rhs;\n\
    \            for (index = _index0; index < __rhs; index++) {\n               \
    \ a[index] = l[index];\n            }\n        }\n\n        // Find median element.\n\
    \        if (len % 2L == 0L) {\n            long low = a[len / 2L - 1L];\n   \
    \         long high = a[len / 2L];\n            return (float)((low + high) /\
    \ 2L);\n        }\n\n        return (float)a[len / 2L];\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpumkv4ox4.cs(29,30): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpumkv4ox4.cs(25,18): warning CS0219: The variable ''__index0'' is assigned
    but its value is never used

    '
  timestamp: 1660015730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int n = l.Count;\n        if (n\
    \ == 0) {\n            return 0;\n        }\n        long[] v = new long[n];\n\
    \        for (int i = 0; i < n; i++) {\n            v[i] = l[i];\n        }\n\
    \        Array.Sort(v);\n        if (n % 2 == 1) {\n            return v[n / 2];\n\
    \        }\n        else {\n            return (v[n / 2 - 1] + v[n / 2]) / 2;\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <861d562657d540b8b82362b9ff74e273>:0 \n"
  stdout: ''
  timestamp: 1660015731
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        int count =\
    \ l.Count;\n        if (count % 2 == 0) {\n            long sum = l[count / 2\
    \ - 1] + l[count / 2];\n            return (float)sum / 2;\n        }\n      \
    \  else {\n            return (float)l[count / 2];\n        }\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015730
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int n = l.Count;\n        if (n\
    \ == 0) {\n            return (float)0L;\n        }\n        if (n == 1) {\n \
    \           return (float)l[0L];\n        }\n        if (n == 2) {\n         \
    \   return (float)(l[0L] + l[1L]) / (float)2L;\n        }\n        List<long>\
    \ p = new List<long>(l);\n        Sort(p);\n        if (n % 2L == 1L) {\n    \
    \        return (float)p[n / 2L];\n        }\n        return (float)(p[n / 2L\
    \ - 1L] + p[n / 2L]) / (float)2L;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgxh9e1b1.cs(20,29): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpgxh9e1b1.cs(23,30): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpgxh9e1b1.cs(23,38): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpgxh9e1b1.cs(26,9): error CS0103: The name ''Sort'' does not exist in the
    current context

    /tmp/tmpgxh9e1b1.cs(28,29): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpgxh9e1b1.cs(30,26): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpgxh9e1b1.cs(30,43): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015730
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        var sorted = (l.OrderBy((x) =>\
    \ x)).ToList();\n        var idx = (int)((sorted.Count - 1) / 2.0f);\n       \
    \ var med = sorted[idx];\n        if (sorted.Count % 2 == 0) {\n            med\
    \ = (med + sorted[idx + 1]) / 2.0f;\n        }\n        return med;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdyxejp5z.cs(19,19): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int i = l.Count / 2;\n        l.Sort();\n\
    \        if (l.Count % 2 == 1) {\n            return (float)l[i];\n        }\n\
    \        else {\n            return (float)(l[i - 1] + l[i]) / 2;\n        }\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        if (l.Count\
    \ % 2 == 1) {\n            return (float)l[l.Count / 2];\n        }\n        return\
    \ (float)(l[l.Count / 2 - 1] + l[l.Count / 2]) / 2;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int a = l.Count / 2;\n        float\
    \ b = (float) l[a];\n        if (l.Count % 2 == 0) {\n            b = ((float)\
    \ l[a] + (float) l[a - 1]) / 2f;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76a2d603b84f42829f06c80ee4d973c3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76a2d603b84f42829f06c80ee4d973c3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015731
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        var n = l.Count;\n        if (n\
    \ == 0) {\n            return 0;\n        }\n        if (n == 1) {\n         \
    \   return l[0];\n        }\n        l.Sort();\n        if (n % 2 == 1) {\n  \
    \          return l[n / 2];\n        }\n        return (l[n / 2 - 1] + l[n / 2])\
    \ / 2f;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015731
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long median = default(long);\n\
    \        long odd = default(long);\n        if (l.Count % 2L == 0L) {\n      \
    \      odd = 0L;\n        }\n        else {\n            odd = 1L;\n        }\n\
    \n        median = l.Count / 2L;\n        long a = l[(int)median];\n        long\
    \ b = l[(int)(median - 1L + odd)];\n        return (float)((double)(a + b) / 2.0);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e94d76708a624990a786bf4ca848bebd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e94d76708a624990a786bf4ca848bebd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015731
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int n = l.Count;\n        long\
    \ x = n / 2;\n        // sort the list\n        l.Sort();\n        if (n % 2 ==\
    \ 1) {\n            return (float)l[(int)x];\n        }\n        return (float)((double)(l[(int)x\
    \ - 1L] + l[(int)x]) / 2.0);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplkoeo5pl.cs(22,35): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015730
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        float median = 0f;\n        var\
    \ ordered = l.OrderBy((x) => x).ToList();\n        int count = ordered.Count;\n\
    \        if (count % 2 == 0) {\n            // Number of elements is even\n  \
    \          median = (float)(ordered[count / 2] + ordered[count / 2 - 1]) / 2;\n\
    \        } else {\n            // Number of elements is odd\n            median\
    \ = (float)ordered[count / 2];\n        }\n        return median;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015731
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        var sorted = l.OrderBy((long x)\
    \ => x).ToList();\n        long mid = (long)sorted.Count / (long)2L;\n       \
    \ if ((sorted.Count % (long)2L) == (long)0L) {\n            return (float)((sorted[(int)mid]\
    \ + sorted[(int)(mid - (long)1L)]) / (long)2L);\n        }\n\n        return (float)sorted[(int)mid];\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f204e1216fed4656b316b316ee0eb06b>:0 \n"
  stdout: ''
  timestamp: 1660015731
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long sum = 0L;\n        long min\
    \ = Int64.MaxValue;\n        long max = Int64.MinValue;\n        foreach (long\
    \ a in l) {\n            sum += a;\n            if (a < min) {\n             \
    \   min = a;\n            }\n            if (a > max) {\n                max =\
    \ a;\n            }\n        }\n        sum -= (min + max);\n        return (float)sum\
    \ / (float)(l.Count - 2);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fa794ed74ffc4d168800be935a0cb35e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fa794ed74ffc4d168800be935a0cb35e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015731
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long n = l.Count;\n        long\
    \ middle = (long)Math.Floor(((double)n) / 2);\n        l.Sort();\n        if (n\
    \ % 2 == 1) {\n            return (float)l[middle];\n        }\n        else {\n\
    \            return (float)(((double)l[middle - 1L]) + ((double)l[middle])) /\
    \ 2f;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0yrzd9o6.cs(19,29): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp0yrzd9o6.cs(22,39): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp0yrzd9o6.cs(22,66): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015731
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        // Copy to a temp list because\
    \ we need to sort it\n        var t = new List<long>(l);\n        t.Sort();\n\
    \        var n = t.Count;\n        if (n % 2 == 1) {\n            return t[n /\
    \ 2];\n        } else {\n            return ((float)(t[n / 2 - 1] + t[n / 2]))\
    \ / 2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015731
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int len = l.Count;\n        int\
    \ index = len / 2;\n        if (len % 2 == 0) {\n            long v1 = l[index];\n\
    \            long v2 = l[index - 1];\n            return (v1 + v2) / 2.0f;\n \
    \       } else {\n            return l[index];\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a2f1c43dfae7451fac8310a47faaeaf2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a2f1c43dfae7451fac8310a47faaeaf2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015731
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int size = l.Count;\n        l.Sort();\n\
    \        if (size % 2 == 0) {\n            return (float)((l[size / 2 - 1] + l[size\
    \ / 2]) / 2);\n        }\n        else {\n            return (float)l[size / 2];\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <68aa0e576fdc4362b42771c43694662b>:0 \n"
  stdout: ''
  timestamp: 1660015731
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long total = (long)0L;\n      \
    \  foreach (var x in l) {\n            total += x;\n        }\n\n        var list\
    \ = l.ToList();\n        list.Sort();\n        if (list.Count % 2L == 0L) {\n\
    \            return (float)((list[list.Count / 2L - 1L] + list[list.Count / 2L])\
    \ / 2L);\n        }\n\n        return (float)list[list.Count / 2L];\n\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqz0lfkjz.cs(23,34): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpqz0lfkjz.cs(23,63): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpqz0lfkjz.cs(26,28): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015731
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        int n = l.Count;\n\
    \        if (n % 2 == 1) {\n            return (float)l[n / 2];\n        }\n \
    \       else {\n            return (float)((l[n / 2 - 1] + l[n / 2]) / 2.0);\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015731
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        float ret = 0.0f;\n        List<long>\
    \ sorted = new List<long>(l);\n        sorted.Sort();\n        int n = sorted.Count;\n\
    \        if (n % 2 == 0) {\n            ret = (float)(sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2;\n        } else {\n            ret = (float)sorted[n / 2];\n    \
    \    }\n        return ret;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015731
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long n = (long)l.Count;\n     \
    \   long m = n >> 1;\n        long k = ((n & 1L) == 1L) ? m : (m - 1L);\n    \
    \    var i = l.OrderBy<long, long>((long x) => x).ToList();\n        return ((i[(int)k]\
    \ + i[(int)(k + 1L)]) / 2.0f);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <127678389948431ebea83089df31c8e0>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.Median (System.Collections.Generic.List`1[T] l) [0x00050] in <127678389948431ebea83089df31c8e0>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00061] in <127678389948431ebea83089df31c8e0>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.Median\
    \ (System.Collections.Generic.List`1[T] l) [0x00050] in <127678389948431ebea83089df31c8e0>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00061] in <127678389948431ebea83089df31c8e0>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015731
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        if (l.Count\
    \ == 0) {\n            return (float)0L;\n        }\n        if (l.Count % 2 ==\
    \ 1) {\n            return (float)l[l.Count / 2];\n        }\n        else {\n\
    \            return (float)((l[l.Count / 2] + l[l.Count / 2 - 1]) / 2);\n    \
    \    }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60e57a5cd10c4b65befb668319dd2498>:0 \n"
  stdout: ''
  timestamp: 1660015731
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        if ((l.Count)\
    \ % 2 == 1) {\n            return (float)l[l.Count / 2];\n        } else {\n \
    \           return (((float)l[l.Count / 2]) + ((float)l[(l.Count / 2) - 1])) /\
    \ 2f;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015731
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        int len = l.Count;\n\
    \        if (len % 2 == 1) {\n            return (float)l[len / 2];\n        }\n\
    \        else {\n            return (float)(l[len / 2 - 1] + l[len / 2]) / 2;\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015728
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        int n = l.Count;\n\
    \        int m = n / 2;\n        if (n % 2 == 1) {\n            return (float)l[m];\n\
    \        }\n        else {\n            return (float)((l[m - 1] + l[m]) / 2.0);\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015731
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int i = 0;\n        int n = l.Count;\n\
    \        List<long> t = new List<long>(l);\n        t.Sort();\n        if (n %\
    \ 2 == 1) {\n            i = n / 2;\n            return (float)t[i];\n       \
    \ }\n        else {\n            i = n / 2;\n            return (float)(t[i] +\
    \ t[i - 1]) / 2f;\n        }\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015731
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        float a = 0f;\n        float b\
    \ = 0f;\n        float c = 0f;\n        float d = 0f;\n        float e = 0f;\n\
    \        if (l.Count() > 5) {\n            l.Sort();\n            a = l[0];\n\
    \            b = l[1];\n            c = l[2];\n            d = l[3];\n       \
    \     e = l[4];\n        }\n        else {\n            a = l[0];\n          \
    \  b = l[1];\n            c = l[2];\n            d = l[3];\n            e = l[4];\n\
    \        }\n        var ret = ((a + b + c + d + e) / (float)5L);\n        return\
    \ ret;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <808f2c2a335845a5aaf5512261578f06>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.Median (System.Collections.Generic.List`1[T] l) [0x00072] in <808f2c2a335845a5aaf5512261578f06>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00061] in <808f2c2a335845a5aaf5512261578f06>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.Median\
    \ (System.Collections.Generic.List`1[T] l) [0x00072] in <808f2c2a335845a5aaf5512261578f06>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00061] in <808f2c2a335845a5aaf5512261578f06>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015731
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        float ans =\
    \ 0;\n        int i = l.Count;\n        if (i % 2 == 0) {\n            ans = (float)((l[i\
    \ / 2 - 1] + l[i / 2]) / 2);\n        }\n        else {\n            ans = (float)l[i\
    \ / 2];\n        }\n        return ans;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e17bb9c601d640788c824c2447f2c32c>:0 \n"
  stdout: ''
  timestamp: 1660015731
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        if (l.Count == 0) {\n         \
    \   return 0;\n        }\n\n        // Sorts in place.\n        l.Sort();\n  \
    \      if (l.Count % 2 == 1) {\n            return l[l.Count / 2];\n        }\n\
    \n        return (l[l.Count / 2 - 1] + l[l.Count / 2]) / 2.0f;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015731
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        int __il__1\
    \ = (int)0L;\n        for (int i = 0; i < l.Count; i++) {\n            long t\
    \ = l[i];\n            l[i] = l[__il__1];\n            l[__il__1] = t;\n     \
    \       __il__1 = __il__1 + 1;\n        }\n        long mid = (long)l.Count /\
    \ (long)2L;\n        if ((l.Count % (long)2L) == (long)0L) {\n            return\
    \ (float)((l[(int)mid] + l[(int)(mid - (long)1L)]) / (long)2L);\n        }\n \
    \       else {\n            return (float)l[(int)mid];\n        }\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4a6d78ab152f4ba496324443548e637c>:0 \n"
  stdout: ''
  timestamp: 1660015731
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int n = l.Count;\n        long[]\
    \ arr = l.ToArray();\n        Array.Sort(arr);\n        if (n % 2 == 1) {\n  \
    \          return arr[n / 2];\n        }\n        return (arr[n / 2 - 1] + arr[n\
    \ / 2]) / 2f;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015731
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int n = l.Count;\n        l.Sort();\n\
    \        if (n % 2 == 1) {\n            return (float)l[n / 2];\n        }\n \
    \       else {\n            return (float)(l[n / 2 - 1] + l[n / 2]) / 2;\n   \
    \     }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015731
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        if (l.Count % 2 == 1) {\n     \
    \       return (float)l[l.Count / 2];\n        } else {\n            return (float)((l[l.Count\
    \ / 2] + l[l.Count / 2 - 1]) / 2.0);\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cbee29414871469fb6122ed145543800>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cbee29414871469fb6122ed145543800>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015732
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long n = (long)l.Count;\n     \
    \   if (n == (long)0L) {\n            return 0;\n        }\n\n        l.Sort();\n\
    \        if (n % (long)2L == (long)0L) {\n            return (float)(l[(int)((n\
    \ / (long)2L) - (long)1L)] + l[(int)(n / (long)2L)]) / (float)2L;\n        }\n\
    \n        return (float)l[(int)(n / (long)2L)];\n\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015731
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long sum = 0L;\n        long cnt\
    \ = 0L;\n        foreach (var v in l) {\n            sum += v;\n            cnt\
    \ += 1L;\n        }\n        return (float)(sum / cnt);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0b2a2cfb161f4c89beb82b7160094eeb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0b2a2cfb161f4c89beb82b7160094eeb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015732
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        float v = (float)l[l.Count / 2L];\n\
    \        if (l.Count % 2L == 0L) {\n            v = (v + (float)l[l.Count / 2L\
    \ - 1L]) / 2f;\n        }\n\n        return v;\n\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdf2fv0jd.cs(15,28): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpdf2fv0jd.cs(17,31): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015731
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        // Debug.Assert(l.Count != 0);\n\
    \        l.Sort();\n        if (l.Count % 2 == 1) {\n            return (float)l[l.Count\
    \ / 2];\n        }\n        else {\n            return (float)((float)l[l.Count\
    \ / 2 - 1] + (float)l[l.Count / 2]) / 2f;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015732
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        if ((l.Count\
    \ % 2L) == 1L) {\n            return (float)l[(l.Count / 2L)];\n        }\n  \
    \      else {\n            return ((float)(l[(l.Count / 2L) - 1L] + l[(l.Count\
    \ / 2L)]) / 2.0f);\n        }\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2j6ildnf.cs(17,30): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp2j6ildnf.cs(20,31): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp2j6ildnf.cs(20,57): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015731
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        // >>> l.Sort()\n        // >>>\
    \ l\n        // [1, 2, 3, 4, 5]\n        l.Sort();\n        // >>> import math\n\
    \        // >>> math.Floor((float)l.Count() / (float)2L)\n        // (float)2L\n\
    \        // >>> l[(int)2L]\n        // (int)3L\n        if (l.Count() % 2 == 1)\
    \ {\n            return (float)l[(int)Math.Floor((float)l.Count() / (float)2L)];\n\
    \        }\n        else {\n            return ((float)l[(int)Math.Floor((float)l.Count()\
    \ / (float)2L)] + (float)l[(int)Math.Floor((float)l.Count() / (float)2L) - 1])\
    \ / (float)2L;\n        }\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015732
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        int mid = l.Count\
    \ / 2;\n        if (l.Count % 2 == 1) {\n            return (float)l[mid];\n \
    \       }\n        else {\n            return (float)((l[mid] + l[mid - 1]) /\
    \ 2.0);\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015732
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        List<long> sorted = l.OrderBy(x\
    \ => x).ToList();\n        if (((sorted.Count) % (2L)) == (0L)) {\n          \
    \  long midIndex = (sorted.Count) / (2L);\n            return (((float)(sorted[midIndex]))\
    \ + ((float)(sorted[(midIndex - 1L)]))) / (2f);\n        }\n        return (float)(sorted[((sorted.Count)\
    \ / (2L))]);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj1h723ud.cs(18,37): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpj1h723ud.cs(18,68): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpj1h723ud.cs(20,32): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015732
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long size = (long)l.Count;\n  \
    \      long mid = (long)(size / 2L);\n        if (size % 2L == 1L) {\n       \
    \     return (float)l[(int)mid];\n        }\n\n        return (float)((l[(int)mid]\
    \ + l[(int)(mid - 1L)]) / 2L);\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bf60f495960c4332980b46aa9f50be6e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bf60f495960c4332980b46aa9f50be6e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015732
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        float half = l.Count / 2;\n   \
    \     l.Sort();\n        return l.Count % 2 == 0 ? (l[(int)Math.Ceiling(half)]\
    \ + l[(int)Math.Floor(half)]) / 2.0f : l[(int)Math.Floor(half)];\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bfded370b12a42e89be787cf7f740d5e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bfded370b12a42e89be787cf7f740d5e>:0 \n"
  stdout: ''
  timestamp: 1660015732
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        if ((l.Count)\
    \ % 2L == 0L) {\n            return ((float)(l[(l.Count) / 2L - 1L] + l[(l.Count)\
    \ / 2L]) / 2f);\n        }\n        else {\n            return (float)l[(l.Count)\
    \ / 2L];\n        }\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0w1z0gda.cs(17,31): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp0w1z0gda.cs(17,56): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp0w1z0gda.cs(20,29): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015732
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        var len = l.Count;\n\
    \        var h = len / 2;\n        if (len % 2 == 0) {\n            return (float)((l[h\
    \ - 1] + l[h]) / 2.0f);\n        } else {\n            return (float)l[h];\n \
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015732
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        var s = new SortedSet<long>(l);\n\
    \        int mid = s.Count / 2;\n        if (s.Count % 2 == 0) {\n           \
    \ return ((float)(s.ElementAt(mid - 1) + s.ElementAt(mid))) / 2;\n        }\n\
    \        else {\n            return (float)s.ElementAt(mid);\n        }\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <57758d957cb74c988bbefb80f56debd7>:0 \n"
  stdout: ''
  timestamp: 1660015732
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int n = l.Count;\n        l.Sort();\n\
    \        if (n % 2 == 1) {\n            return (float)l[n / 2];\n        }\n \
    \       else {\n            return (float)((double)(l[n / 2 - 1L] + l[n / 2])\
    \ / 2.0);\n        }\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjdueyo83.cs(21,39): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015732
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        var length =\
    \ l.Count;\n        if (length % 2 == 0) {\n            return (float)((l[length\
    \ / 2 - 1] + l[length / 2]) / 2.0);\n        } else {\n            return (float)l[length\
    \ / 2];\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015732
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int n = l.Count;\n        l.Sort();\n\
    \        if (n % 2 == 1) {\n            return (float)l[n / 2];\n        } else\
    \ {\n            return (float)(l[n / 2 - 1] + l[n / 2]) / 2;\n        }\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015729
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int n = l.Count;\n        l.Sort();\n\
    \        float med = 0;\n        if (n % 2 == 0) {\n            med = (float)((float)(l[n\
    \ / 2] + l[n / 2 - 1]) / 2.0f);\n        }\n        else {\n            med =\
    \ (float)l[n / 2];\n        }\n        return med;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015732
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int n = l.Count;\n        var c\
    \ = l.OrderBy(x => x).ToList();\n        return (float)(c[n / 2] + c[(n - 1) /\
    \ 2]) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015732
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long n = l.Count;\n        long\
    \ m = n / 2;\n        l.Sort();\n        if (n % 2 == 1) {\n            return\
    \ (float)l[m];\n        }\n        else {\n            return (float)(l[m - 1]\
    \ + l[m]) / 2.0f;\n        }\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphonr8bm7.cs(19,29): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmphonr8bm7.cs(22,30): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmphonr8bm7.cs(22,41): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015732
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        if (l.Count % 2 == 1) {\n     \
    \       return l[l.Count / 2];\n        } else {\n            return (l[l.Count\
    \ / 2 - 1] + l[l.Count / 2]) / 2.0f;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0b8adac4d6084598a06656892507b543>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0b8adac4d6084598a06656892507b543>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015732
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long[] ls = l.ToArray();\n    \
    \    Array.Sort(ls);\n        int m = ls.Length / 2;\n        return (ls.Length\
    \ % 2 == 0) ? (ls[m] + ls[m - 1]) / 2.0f : ls[m];\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015732
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        if (l.Count\
    \ % 2 == 1) {\n            return (float)l[l.Count / 2];\n        }\n        else\
    \ {\n            return (float)(l[l.Count / 2 - 1] + l[l.Count / 2]) / 2;\n  \
    \      }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015732
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int m = l.Count / 2;\n        if\
    \ (l.Count % 2 == 0) {\n            return (float)(l[m] + l[m - 1]) / 2f;\n  \
    \      } else {\n            return (float)l[m];\n        }\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d40ba1ea211c4821ab92e2cf44fae0ca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d40ba1ea211c4821ab92e2cf44fae0ca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015732
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int count = l.Count;\n        long\
    \ middle = count / 2;\n        if (count % 2 == 1) {\n            return l[middle];\n\
    \        }\n        else {\n            return (l[middle] + l[middle - 1]) / 2.0f;\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpudbq4n49.cs(18,22): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpudbq4n49.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpudbq4n49.cs(21,35): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015732
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        if (l.Count == 0) {\n         \
    \   return 0.0f;\n        }\n        List<long> ll = new List<long>(l);\n    \
    \    ll.Sort();\n        long mid = ll.Count / 2;\n        if (ll.Count % 2 ==\
    \ 0) {\n            return (float)((ll[mid] + ll[mid - 1]) / 2);\n        }\n\
    \        else {\n            return (float)ll[mid];\n        }\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9hraruyg.cs(22,32): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp9hraruyg.cs(22,42): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp9hraruyg.cs(25,30): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015732
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        if (l.Count < 1) {\n          \
    \  throw new ArgumentException(\"The input list must contain at least one element.\"\
    );\n        }\n        if (l.Count % 2 == 1) {\n            return l[l.Count /\
    \ 2];\n        }\n        else {\n            return (l[l.Count / 2] + l[l.Count\
    \ / 2 - 1]) / 2.0f;\n        }\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1be058d141764675820412116410867a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1be058d141764675820412116410867a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015732
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long num = (long)0L;\n        long\
    \ num2 = (long)0L;\n        long num3 = (long)0L;\n        long num4 = (long)0L;\n\
    \        long num5 = (long)0L;\n        long num6 = (long)0L;\n        long num7\
    \ = (long)0L;\n        long num8 = (long)0L;\n        long num9 = (long)0L;\n\
    \        long num10 = (long)0L;\n        long num11 = (long)0L;\n        long\
    \ num12 = (long)0L;\n        long num13 = (long)0L;\n        long num14 = (long)0L;\n\
    \        long num15 = (long)0L;\n        long num16 = (long)0L;\n        long\
    \ num17 = (long)0L;\n        long num18 = (long)0L;\n        long num19 = (long)0L;\n\
    \        long num20 = (long)0L;\n        long num21 = (long)0L;\n        long\
    \ num22 = (long)0L;\n        long num23 = (long)0L;\n        long num24 = (long)0L;\n\
    \        long num25 = (long)0L;\n        long num26 = (long)0L;\n        long\
    \ num27 = (long)0L;\n        long num28 = (long)0L;\n        long num29 = (long)0L;\n\
    \        long num30 = (long)0L;\n        long num31 = (long)0L;\n        long\
    \ num32 = (long)0L;\n        long num33 = (long)0L;\n        long num34 = (long)0L;\n\
    \        long num35 = (long)0L;\n        long num36 = (long)0L;\n        long\
    \ num37 = (long)0L;\n        long num38 = (long)0L;\n        long num39 = (long)0L;\n\
    \        long num40 = (long)0L;\n        long num41 = (long)0L;\n        long\
    \ num42 = (long)0L;\n        long num43 = (long)\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr8ta8pz9.cs(57,28): error CS1525: Invalid expression term ''}''

    /tmp/tmpr8ta8pz9.cs(57,28): error CS1002: ; expected

    '
  timestamp: 1660015732
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int n = l.Count;\n        l.Sort();\n\
    \        if (n % 2 == 1) {\n            return (float)l[n / 2];\n        } else\
    \ {\n            return (float)(l[n / 2 - 1] + l[n / 2]) / 2;\n        }\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015729
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        var ll = l.Count();\n        var\
    \ m = ll / 2;\n        if (ll % 2 == 0) {\n            return (l[m - 1] + l[m])\
    \ / 2f;\n        } else {\n            return l[m];\n        }\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1beb0baaa65445e8add4344e03aec14f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1beb0baaa65445e8add4344e03aec14f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015732
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        if (((l.Count) == (0L))) {\n  \
    \          throw new ArgumentOutOfRangeException();\n        }\n        else {\n\
    \            long __ilast = (l.Count) - (1L);\n            for (long __i = (0L);\
    \ __i <= __ilast; __i++) {\n                long x = l[(int)__i];\n          \
    \      l[(int)__i] = (long)Math.Abs((double)x);\n            }\n            l.Sort();\n\
    \            long idx = (long)(((l.Count) / (float)2f) + (((l.Count) % (float)2f)\
    \ / (float)2f));\n            return (float)l[(int)idx];\n        }\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <504c5bc4a9d94b0397a9dd5d4e77be70>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <504c5bc4a9d94b0397a9dd5d4e77be70>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.Median (System.Collections.Generic.List`1"
  stdout: ''
  timestamp: 1660015733
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        return ((float)(l[(int)(l.Count()\
    \ / (long)2L)]) + (float)(l[(int)((l.Count() - (long)1L) / (long)2L)]) / (float)(2L));\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e80a7fa94d444d0587c217d9d718d4ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e80a7fa94d444d0587c217d9d718d4ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015733
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int n = l.Count;\n        if (n\
    \ == 0)\n        {\n            return 0;\n        }\n\n        l.Sort();\n  \
    \      if (n % 2 == 1)\n        {\n            return l[n / 2];\n        }\n\n\
    \        return (l[n / 2 - 1] + l[n / 2]) / 2.0f;\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015733
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        // >>> l.Sort(((a, b) => a - b));\n\
    \        l.Sort();\n        // >>> l\n        // [1, 2, 3, 4, 5]\n        var\
    \ n = l.Count();\n        // >>> n\n        // (int)5\n        if (n % 2 == 1)\
    \ {\n            // >>> l[(n - 1) / 2]\n            // (long)3\n            return\
    \ l[(n - 1) / 2];\n        }\n        else {\n            // >>> float(l[n / 2]\
    \ + l[n / 2 - 1]) / 2\n            // (float)3\n            return (float)(l[n\
    \ / 2] + l[n / 2 - 1]) / 2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015733
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        if (l.Count == 0) {\n         \
    \   return (float)0L;\n        }\n        if (l.Count == 1) {\n            return\
    \ (float)l[0L];\n        }\n        List<long> sorted = l.ToList();\n        sorted.Sort();\n\
    \        if (sorted.Count % 2L == 1L) {\n            return (float)sorted[sorted.Count\
    \ / 2L];\n        }\n        return ((float)sorted[sorted.Count / 2L - 1L] + (float)sorted[sorted.Count\
    \ / 2L]) / (float)2L;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgom3vw4o.cs(19,29): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpgom3vw4o.cs(24,34): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpgom3vw4o.cs(26,31): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpgom3vw4o.cs(26,71): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015732
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        return (float)(l[l.Count\
    \ / 2] + l[(l.Count + 1) / 2]) / 2;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <57d221716394457badda054f829f3af9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <57d221716394457badda054f829f3af9>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.Median (System.Collections.Generic.List`1"
  stdout: ''
  timestamp: 1660015733
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        if ((l.Count) == (0L)) {\n    \
    \        return 0f;\n        }\n\n        l.Sort();\n        return (((l.Count)\
    \ % (2L)) == (0L)) ? (((float)(l[((l.Count) / (2L)) - (1L)])) + ((float)(l[(l.Count)\
    \ / (2L)]))) / (2f) : ((float)(l[(l.Count) / (2L)]));\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpes5yygi6.cs(20,59): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpes5yygi6.cs(20,101): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpes5yygi6.cs(20,142): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015733
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int n = l.Count;\n        if (n\
    \ % 2 == 1) {\n            return (float)l[n / 2];\n        }\n        else {\n\
    \            return (float)(l[n / 2 - 1] + l[n / 2]) / 2;\n        }\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <59ff53fb459c445a8d266ed34f0e0960>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <59ff53fb459c445a8d266ed34f0e0960>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015733
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        if (l.Count\
    \ % 2 == 1) {\n            return (float)l[l.Count / 2];\n        }\n        else\
    \ {\n            return (float)((l[l.Count / 2] + l[l.Count / 2 - 1]) / 2);\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8757fc90cfc84581ae687ee9a4388676>:0 \n"
  stdout: ''
  timestamp: 1660015733
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int n = l.Count;\n        int mid\
    \ = n / 2;\n        float ans = (n % 2 == 1) ? l[mid] : ((float)(l[mid - 1] +\
    \ l[mid])) / (float)2L;\n        return ans;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2a7b291dcd334f01a22bb11420e6ae7a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2a7b291dcd334f01a22bb11420e6ae7a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015733
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        // Sort the list.\n        l.Sort();\n\
    \n        // Get the length of the list.\n        int length = l.Count;\n\n  \
    \      // Is the list length even?\n        if (length % 2 == 0) {\n         \
    \   // Get the middle two numbers and return the average of them.\n          \
    \  return (float)((float)(l[length / 2 - 1] + l[length / 2]) / 2.0f);\n      \
    \  }\n\n        // Return the middle number.\n        return (float)l[length /\
    \ 2];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015733
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        int N = l.Count;\n        long[]\
    \ a = l.ToArray();\n        int mid = (N-1)/2;\n        long temp;\n        for\
    \ (int i = 0; i <= mid; i++) {\n            for (int j = i; j < N; j++) {\n  \
    \              if (a[i] > a[j]) {\n                    temp = a[i];\n        \
    \            a[i] = a[j];\n                    a[j] = temp;\n                }\n\
    \            }\n        }\n        if (N % 2 == 0) {\n            return (float)(a[mid]\
    \ + a[mid+1])/2;\n        } else {\n            return (float)a[mid];\n      \
    \  }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <843441606e4f4d78ba074736bdc57a70>:0 \n"
  stdout: ''
  timestamp: 1660015733
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        if (l.Count == 0)\n        {\n\
    \            return 0;\n        }\n\n        l.Sort();\n        var m = l.Count\
    \ / 2;\n        if (l.Count % 2 == 0)\n        {\n            return (float)(l[m\
    \ - 1] + l[m]) / 2;\n        }\n\n        return l[m];\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015733
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long s = 0L;\n        long x =\
    \ 0L;\n        long i = 0L;\n        long n = (long)l.Count;\n        long j =\
    \ n / 2L;\n        while (i < j) {\n            x = l[(int)i];\n            l[(int)i]\
    \ = l[(int)(n - i - 1L)];\n            l[(int)(n - i - 1L)] = x;\n           \
    \ i = i + 1L;\n        }\n        float ret = 0.0f;\n        if (n % 2L == 0L)\
    \ {\n            ret = (((float)l[(int)(n / 2L - 1L)] + (float)l[(int)(n / 2L)])\
    \ / 2.0f);\n        }\n        else {\n            ret = (float)l[(int)(n / 2L)];\n\
    \        }\n        return ret;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d42636fb4d5d4a6d97659ee7e3d847a8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d42636fb4d5d4a6d97659ee7e3d847a8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015733
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        long middle\
    \ = (long)l.Count / (long)2L;\n        if ((l.Count % (long)2L) == (long)0L) {\n\
    \            return (float)((l[(int)middle] + l[(int)(middle - (long)1L)]) / (long)2L);\n\
    \        }\n\n        return (float)l[(int)middle];\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60448c2357c14298b59e5c75668e015a>:0 \n"
  stdout: ''
  timestamp: 1660015733
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        if (l.Count\
    \ % 2 == 1) {\n            return (float)l[l.Count / 2];\n        }\n        return\
    \ (float)(l[l.Count / 2 - 1] + l[l.Count / 2]) / 2f;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015733
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        long len = (long)l.Count;\n\
    \        long half = len / (long)2L;\n        if (len % (long)2L == (long)0L)\
    \ {\n            return (float)(l[(int)half - 1L] + l[(int)half]) / (float)2L;\n\
    \        }\n\n        return (float)l[(int)half];\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmnxhotf2.cs(19,30): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015733
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        float m = 0;\n        int n = l.Count;\n\
    \        if (n % 2 == 0) {\n            m = ((float)(l[n / 2 - 1] + l[n / 2]))\
    \ / (float)2;\n        }\n        else {\n            m = (float)l[n / 2];\n \
    \       }\n        return m;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9539926637614dbebac8daba8a973969>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9539926637614dbebac8daba8a973969>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660015733
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long sum = 0L;\n        long count\
    \ = 0L;\n        foreach (long v in l) {\n            sum += v;\n            count++;\n\
    \        }\n        float m = (float)sum / (float)count;\n        return m;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d02ede43062e49629cdb7c10d5428390>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d02ede43062e49629cdb7c10d5428390>:0 \n"
  stdout: ''
  timestamp: 1660015733
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        int length =\
    \ l.Count;\n        float median = (float)0L;\n        if (length % (long)2L ==\
    \ (long)0L) {\n            median = (float)((l[length / (long)2L - (long)1L] +\
    \ l[length / (long)2L]) / (long)2L);\n        }\n        else {\n            median\
    \ = (float)l[length / (long)2L];\n        }\n\n        return median;\n\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp53r6t8wc.cs(19,33): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp53r6t8wc.cs(19,67): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp53r6t8wc.cs(22,31): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015733
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        if (l.Count() == 0) {\n       \
    \     return float.NaN;\n        }\n        l.Sort();\n        if (l.Count() %\
    \ 2 == 1) {\n            return (float)l[l.Count() / 2];\n        }\n        else\
    \ {\n            return (float)(l[l.Count() / 2 - 1] + l[l.Count() / 2]) / 2;\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015733
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        int n = l.Count;\n\
    \        int m = n / 2;\n        if (n % 2 == 1) {\n            return (float)l[m];\n\
    \        }\n        else {\n            return (float)(l[m - 1] + l[m]) / 2;\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015733
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        if ((l.Count % 2L) == 0L) {\n \
    \           return ((float)(l[l.Count / 2L] + l[(l.Count / 2L) - 1L]) / 2f);\n\
    \        }\n        else {\n            return l[l.Count / 2L];\n        }\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgwi1tjc7.cs(16,31): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpgwi1tjc7.cs(16,49): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpgwi1tjc7.cs(19,22): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015733
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        if (l.Count == 0) {\n         \
    \   return 0.0f;\n        }\n        l.Sort();\n        var c = l.Count;\n   \
    \     if (c % 2 == 1) {\n            return l[c / 2];\n        }\n        return\
    \ ((l[c / 2] + l[c / 2 - 1]) / 2.0f);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015733
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        long len = (long)l.Count;\n\
    \        long mid = (long)(len / 2L);\n        if (len % 2L == 0L) {\n       \
    \     return (float)((l[(int)mid] + l[(int)(mid - 1L)]) / 2L);\n        }\n\n\
    \        return (float)l[(int)mid];\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <801524405a2642f7b2702fc49558f469>:0 \n"
  stdout: ''
  timestamp: 1660015734
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        var s = new SortedSet<long>(l);\n\
    \        if (s.Count % 2 == 1) {\n            return (float)s.ElementAt(s.Count\
    \ / 2);\n        } else {\n            return (float)(s.ElementAt(s.Count / 2)\
    \ + s.ElementAt(s.Count / 2 - 1)) / 2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <74ec300c7bc54ddb876295af2e8af5c2>:0 \n"
  stdout: ''
  timestamp: 1660015734
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        long n = (long)l.Count;\n\
    \        if (n % 2L == 1L) {\n            return l[n / 2L];\n        }\n\n   \
    \     return (l[n / 2L - 1L] + l[n / 2L]) / 2.0f;\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9m7nuxh4.cs(18,22): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp9m7nuxh4.cs(21,19): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp9m7nuxh4.cs(21,36): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015733

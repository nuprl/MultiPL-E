language: cs
name: HumanEval_67_fruit_distribution
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] parts = s.Split(' ');\n        long num_apples = long.Parse(parts[0]);\n\
    \        long num_oranges = long.Parse(parts[3]);\n        return n - num_apples\
    \ - num_oranges;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long result = 0;\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fd6e35d2642c4475985eaf802a11c00e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fd6e35d2642c4475985eaf802a11c00e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008844
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  int apples = 0;\n        int oranges = 0;\n        bool isApple = true;\n \
    \       for (int i = 0; i < s.Length; i++) {\n            if (s[i] == ' ') {\n\
    \                isApple = false;\n                continue;\n            }\n\
    \            if (s[i] == 'a') {\n                isApple = true;\n           \
    \     continue;\n            }\n            if (s[i] == 'd') {\n             \
    \   continue;\n            }\n            if (isApple) {\n                apples\
    \ *= 10;\n                apples += (s[i] - '0');\n            } else {\n    \
    \            oranges *= 10;\n                oranges += (s[i] - '0');\n      \
    \      }\n        }\n        return n - (apples + oranges);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5\
    \ apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <10d569602a0b4e64ab589a12b657ffd8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <10d569602a0b4e64ab589a12b657ffd8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008844
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  int apples = int.Parse(s.Split(\"apples\")[0].Trim().Split(\" \")[0]);\n  \
    \      int oranges = int.Parse(s.Split(\"oranges\")[0].Trim().Split(\" \")[2]);\n\
    \        return n - apples - oranges;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00045]\
    \ in <d1a4f09d4e69402ab31310366b4f7bbe>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <d1a4f09d4e69402ab31310366b4f7bbe>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00045]\
    \ in <d1a4f09d4e69402ab31310366b4f7bbe>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <d1a4f09d4e69402ab31310366b4f7bbe>:0 \n"
  stdout: ''
  timestamp: 1660008843
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] fruits = s.Split(new string[] { \" and \" }, StringSplitOptions.None);\n\
    \        long ret = 0;\n        for (int i = 0; i < fruits.Length; i++) {\n  \
    \          string[] t = fruits[i].Split(' ');\n            ret += (n - long.Parse(t[0]))\
    \ / int.Parse(t[1]);\n        }\n        return ret;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and\
    \ 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00035]\
    \ in <402d1546d52b42b194e6d3736af98a34>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <402d1546d52b42b194e6d3736af98a34>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00035]\
    \ in <402d1546d52b42b194e6d3736af98a34>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <402d1546d52b42b194e6d3736af98a34>:0 \n"
  stdout: ''
  timestamp: 1660008843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] lst = s.Split(' ');\n        string first = lst[0];\n        string\
    \ sec = lst[3];\n        return n - long.Parse(first) - long.Parse(sec);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] num = s.Split(' ');\n        return n - Convert.ToInt64(num[0]) -\
    \ Convert.ToInt64(num[3]);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) ==\
    \ (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L))\
    \ == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"),\
    \ (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] fruit = s.Split(' ');\n        int mango = (int)n - int.Parse(fruit[0])\
    \ - int.Parse(fruit[3]);\n        return mango;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6\
    \ oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var strs = s.Split(' ');\n        int a = int.Parse(strs[0]);\n        int\
    \ o = int.Parse(strs[3]);\n        return n - a - o;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and\
    \ 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008844
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] InputText = s.Split(' ');\n        long totalApples = Int64.Parse(InputText[0]);\n\
    \        long totalOranges = Int64.Parse(InputText[3]);\n        long totalMangoes\
    \ = n - totalApples - totalOranges;\n        return totalMangoes;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008843
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  return n - s.Split(' ').Where(x => x.Equals(\"apples\") || x.Equals(\"oranges\"\
    )).Sum(x => long.Parse(x.Substring(0, x.Length - 1)));\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and\
    \ 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<FruitDistribution>b__0_1 (System.String x) [0x0000f] in\
    \ <4add8fddef444f83a72d7fc3d7c6c850>:0 \n  at System.Linq.Enumerable.Sum[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source, System.Func`2[T,TResult]\
    \ selector) [0x0002f] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.FruitDistribution\
    \ (System.String s, System.Int64 n) [0x0002f] in <4add8fddef444f83a72d7fc3d7c6c850>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <4add8fddef444f83a72d7fc3d7c6c850>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<FruitDistribution>b__0_1 (System.String x) [0x0000f] in\
    \ <4add8fddef444f83a72d7fc3d7c6c850>:0 \n  at System.Linq.Enumerable.Sum[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source, System.Func`2[T,TResult]\
    \ selector) [0x0002f] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.FruitDistribution\
    \ (System.String s, System.Int64 n) [0x0002f] in <4add8fddef444f83a72d7fc3d7c6c850>:0\
    \ \n  at Problem.Main (System.String[] args) "
  stdout: ''
  timestamp: 1660008844
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // a + o + m = n\n        // a + o = n - m\n        // a + o = n - (n - (a\
    \ + o))\n        // 2a + 2o = 2n\n        // a + o = n\n        // o = n - a\n\
    \        // m = n - (a + o)\n        // m = n - (a + n - a)\n        // m = n\
    \ - 2a\n        // m = n - 2(n - m)\n        // 3m = 2n\n        // m = 2n / 3\n\
    \        return 2L * n / 3L;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) ==\
    \ (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L))\
    \ == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"),\
    \ (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9aaa6696b72445595abcace9b897f1e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9aaa6696b72445595abcace9b897f1e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008844
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  int numberOfApple = 0;\n        int numberOfOrange = 0;\n        s = s.Replace(\"\
    \ \", \"\");\n        s = s.Replace(\"and\", \"\");\n        string[] split =\
    \ s.Split('o');\n        if (split.Length == 2) {\n            numberOfApple =\
    \ int.Parse(split[0]);\n            numberOfOrange = int.Parse(split[1]);\n  \
    \      }\n        else {\n            s = s.Split('a')[1];\n            numberOfOrange\
    \ = int.Parse(s);\n        }\n        long numberOfMango = n - (numberOfApple\
    \ + numberOfOrange);\n        return numberOfMango;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and\
    \ 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00040]\
    \ in <badfe0f053a64326be7bf11d9d2c816e>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <badfe0f053a64326be7bf11d9d2c816e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00040]\
    \ in <badfe0f053a64326be7bf11d9d2c816e>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <badfe0f053a64326be7bf11d9d2c816e>:0 \n"
  stdout: ''
  timestamp: 1660008843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // your code goes here\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <09df333e6d3049958e8ec26ce36e022e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <09df333e6d3049958e8ec26ce36e022e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008844
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // write your code here\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) ==\
    \ (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L))\
    \ == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"),\
    \ (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpg8zymdfd.cs(23,24): error CS0161: ''Problem.FruitDistribution(string,
    long)'': not all code paths return a value

    '
  timestamp: 1660008843
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] fru = s.Split(' ');\n        long apples = long.Parse(fru[0]);\n \
    \       long oranges = long.Parse(fru[2]);\n        return n - (apples + oranges);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014]\
    \ in <5e72a63bee744463bf58386e402f025a>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <5e72a63bee744463bf58386e402f025a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014]\
    \ in <5e72a63bee744463bf58386e402f025a>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <5e72a63bee744463bf58386e402f025a>:0 \n"
  stdout: ''
  timestamp: 1660008844
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // Write your code here\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <21968ee47000489cb3e3a6e0ac86d044>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <21968ee47000489cb3e3a6e0ac86d044>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008844
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] items = s.Split(\" \");\n        int apples = Int32.Parse(items[0]);\n\
    \        int oranges = Int32.Parse(items[3]);\n        return n - (apples + oranges);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008843
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long apples = GetFruitCount(s, \"apples\");\n        long oranges = GetFruitCount(s,\
    \ \"oranges\");\n        long mangoes = n - apples - oranges;\n        return\
    \ mangoes;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpozlb1904.cs(24,23): error CS0103: The name ''GetFruitCount'' does not
    exist in the current context

    /tmp/tmpozlb1904.cs(25,24): error CS0103: The name ''GetFruitCount'' does not
    exist in the current context

    '
  timestamp: 1660008843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] tokens = s.Split(' ');\n        long num_apples = Int64.Parse(tokens[0]);\n\
    \        long num_oranges = Int64.Parse(tokens[3]);\n        long num_mangoes\
    \ = n - num_apples - num_oranges;\n        return num_mangoes;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5\
    \ apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // Your code here\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27e37344cf7c4c468238676aee5c6bbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27e37344cf7c4c468238676aee5c6bbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008844
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // variables declaration\n        string[] distribution = s.Split(new string[]\
    \ { \"and\" }, StringSplitOptions.None);\n        long apples = long.Parse(distribution[0].Substring(0,\
    \ distribution[0].IndexOf(\" \")));\n        long oranges = long.Parse(distribution[1].Substring(0,\
    \ distribution[1].IndexOf(\" \")));\n        long mangoes = n - (apples + oranges);\n\
    \        return mangoes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) == (8L));\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L)) == (10L));\n\
    \    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (100L)) == (95L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (5L)) == (0L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"), (120L)) ==\
    \ (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00049]\
    \ in <bd0162e2c25d43b782a9c0990d38f531>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <bd0162e2c25d43b782a9c0990d38f531>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00049]\
    \ in <bd0162e2c25d43b782a9c0990d38f531>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <bd0162e2c25d43b782a9c0990d38f531>:0 \n"
  stdout: ''
  timestamp: 1660008844
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] A = s.Split(\" \");\n        int apples = int.Parse(A[0]);\n     \
    \   int oranges = int.Parse(A[3]);\n        int sum = apples + oranges;\n    \
    \    return n - sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) == (8L));\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L)) == (10L));\n\
    \    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (100L)) == (95L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (5L)) == (0L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"), (120L)) ==\
    \ (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008843
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long num = s.Split(' ').Select(x => long.Parse(x)).Sum();\n        return n\
    \ - num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<FruitDistribution>b__0_0 (System.String x) [0x00000] in\
    \ <f7971a386e214adbbcb1906386d5146e>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].MoveNext\
    \ () [0x0003a] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.Sum\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x00025] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0002e]\
    \ in <f7971a386e214adbbcb1906386d5146e>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <f7971a386e214adbbcb1906386d5146e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<FruitDistribution>b__0_0 (System.String x) [0x00000] in\
    \ <f7971a386e214adbbcb1906386d5146e>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].MoveNext\
    \ () [0x0003a] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.Sum\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x00025] in <e540098dd111461e919c58"
  stdout: ''
  timestamp: 1660008844
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] raw = s.Split(' ');\n        long a = Convert.ToInt64(raw[0]);\n \
    \       long o = Convert.ToInt64(raw[3]);\n        return n - a - o;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008844
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var sArray = s.Split(\" \");\n        int apple = int.Parse(sArray[0]);\n \
    \       int orange = int.Parse(sArray[3]);\n        var total = apple + orange;\n\
    \        var mango = n - total;\n        return mango;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and\
    \ 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008844
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] applesAndOranges = s.Split(new char[] { ' ', 'a', 'n', 'd' }, StringSplitOptions.RemoveEmptyEntries);\n\
    \        long totalApples = long.Parse(applesAndOranges[0]);\n        long totalOranges\
    \ = long.Parse(applesAndOranges[1]);\n        long totalMangoes = n - totalApples\
    \ - totalOranges;\n        return totalMangoes;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6\
    \ oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00023]\
    \ in <aa294677ad9d45b3b031366cf2bbab5e>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <aa294677ad9d45b3b031366cf2bbab5e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00023]\
    \ in <aa294677ad9d45b3b031366cf2bbab5e>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <aa294677ad9d45b3b031366cf2bbab5e>:0 \n"
  stdout: ''
  timestamp: 1660008844
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long sum = s.Where(c => char.IsDigit(c)).Sum(c => (long)Char.GetNumericValue(c));\n\
    \        return n - sum;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) == (8L));\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L)) == (10L));\n\
    \    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (100L)) == (95L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (5L)) == (0L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"), (120L)) ==\
    \ (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2d87486fb3334d75aa9a2d01b759717b>:0 \n"
  stdout: ''
  timestamp: 1660008844
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] split = s.Split(' ');\n        long numApples = long.Parse(split[0]);\n\
    \        long numOranges = long.Parse(split[3]);\n        return n - numApples\
    \ - numOranges;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008844
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  s = s.Replace(\"apples and \", \"\").Replace(\" oranges\", \"\");\n       \
    \ var nums = s.Split(' ');\n        return n - (long.Parse(nums[0]) + long.Parse(nums[1]));\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008844
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] inp = s.Split(' ');\n        long apples = Int64.Parse(inp[0]);\n\
    \        long oranges = Int64.Parse(inp[2]);\n        return n - apples - oranges;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014]\
    \ in <fb980beefa7741cba5c27b4d07ed84b4>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <fb980beefa7741cba5c27b4d07ed84b4>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014]\
    \ in <fb980beefa7741cba5c27b4d07ed84b4>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <fb980beefa7741cba5c27b4d07ed84b4>:0 \n"
  stdout: ''
  timestamp: 1660008844
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // Write your code here\n        // To print results to the standard output\
    \ you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello\
    \ world!\");\n        long[] arr = s.Split(' ').Select(long.Parse).ToArray();\n\
    \        return n - arr.Sum();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) ==\
    \ (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L))\
    \ == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"),\
    \ (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0001b]\
    \ in <f68f68a560d24f8b905192ac29a475f6>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <f68f68a560d24f8b905192ac29a475f6>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0001b]\
    \ in <f68f68a560d24f8b905192ac29a475f6>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <f68f68a560d24f"
  stdout: ''
  timestamp: 1660008844
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var data = s.Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);\n\
    \        int a = int.Parse(data[0]);\n        int o = int.Parse(data[2]);\n  \
    \      return n - a - o;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) == (8L));\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L)) == (10L));\n\
    \    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (100L)) == (95L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (5L)) == (0L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"), (120L)) ==\
    \ (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0001d]\
    \ in <5b3ef36e8d0f426283b37f656d1f3a63>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <5b3ef36e8d0f426283b37f656d1f3a63>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0001d]\
    \ in <5b3ef36e8d0f426283b37f656d1f3a63>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <5b3ef36e8d0f426283b37f656d1f3a63>:0 \n"
  stdout: ''
  timestamp: 1660008844
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var mystring = s.Split(\" \");\n        int numofApples = int.Parse(mystring[0]);\n\
    \        int numofOranges = int.Parse(mystring[3]);\n        return n - (numofApples\
    \ + numofOranges);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008844
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] arr = s.Split(\" \");\n        if (long.Parse(arr[0]) + long.Parse(arr[4])\
    \ <= n)\n            return n - (long.Parse(arr[0]) + long.Parse(arr[4]));\n \
    \       else\n            return -1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00016]\
    \ in <273f3dd1346b46b0baefb9a2c935f49d>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <273f3dd1346b46b0baefb9a2c935f49d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00016]\
    \ in <273f3dd1346b46b0baefb9a2c935f49d>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <273f3dd1346b46b0baefb9a2c935f49d>:0 \n"
  stdout: ''
  timestamp: 1660008844
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // write your code here\n        var value = s.Split(new string[] { \" and\
    \ \" }, StringSplitOptions.None);\n        var apple = long.Parse(value[0].Split('\
    \ ')[0]);\n        var orange = long.Parse(value[1].Split(' ')[0]);\n        return\
    \ n - (apple + orange);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) == (8L));\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L)) == (10L));\n\
    \    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (100L)) == (95L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (5L)) == (0L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"), (120L)) ==\
    \ (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008844
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var spl = s.Split(' ');\n        var a = long.Parse(spl[0]);\n        var o\
    \ = long.Parse(spl[3]);\n        return n - a - o;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6\
    \ oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008844
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // Your code comes here\n        string[] fruits = s.Split(' ');\n        long\
    \ numFruits = Convert.ToInt64(fruits[0]);\n        numFruits += Convert.ToInt64(fruits[2]);\n\
    \        return n - numFruits;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) ==\
    \ (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L))\
    \ == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"),\
    \ (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt64\
    \ (System.String value) [0x0000c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014] in\
    \ <5797becb50934e0e98f38013ec44b7c8>:0 \n  at Problem.Main (System.String[] args)\
    \ [0x00001] in <5797becb50934e0e98f38013ec44b7c8>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt64\
    \ (System.String value) [0x0000c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014] in\
    \ <5797becb50934e0e98f38013ec44b7c8>:0 \n  at Problem.Main (System.String[] args)\
    \ [0x00001] in <5797becb50934e0e98f38013ec44b7c8>:0 \n"
  stdout: ''
  timestamp: 1660008844
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  if(string.IsNullOrEmpty(s)) {\n            return n;\n        }\n        int\
    \ sum = 0;\n        string[] split = s.Split(\" \");\n        if(split[0] != \"\
    0\") {\n            sum += int.Parse(split[0]);\n        }\n        if(split[3]\
    \ != \"0\") {\n            sum += int.Parse(split[3]);\n        }\n        return\
    \ n - sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008844
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  int numApple = Convert.ToInt32(s.Split(' ')[0]);\n        int numOrange = Convert.ToInt32(s.Split('\
    \ ')[3]);\n        return n - numApple - numOrange;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and\
    \ 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008844
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long sum = 0;\n        string[] split_str = s.Split(\" \");\n        string[]\
    \ apple_str = split_str[0].Split(\"\");\n        string[] orange_str = split_str[2].Split(\"\
    \");\n        List<string> apple_list = new List<string>();\n        List<string>\
    \ orange_list = new List<string>();\n        foreach (string letter in apple_str)\
    \ {\n            apple_list.Add(letter);\n        }\n        foreach (string letter\
    \ in orange_str) {\n            orange_list.Add(letter);\n        }\n        apple_list.Remove(\"\
    a\");\n        apple_list.Remove(\"n\");\n        apple_list.Remove(\"d\");\n\
    \        orange_list.Remove(\"a\");\n        orange_list.Remove(\"n\");\n    \
    \    orange_list.Remove(\"d\");\n        foreach (string letter in apple_list)\
    \ {\n            sum += Convert.ToInt64(letter);\n        }\n        foreach (string\
    \ letter in orange_list) {\n            sum += Convert.ToInt64(letter);\n    \
    \    }\n        return n - sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) ==\
    \ (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L))\
    \ == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"),\
    \ (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt64\
    \ (System.String value) [0x0000c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00130] in\
    \ <7c9033c5a94d48b8a10c08658b95a4ca>:0 \n  at Problem.Main (System.String[] args)\
    \ [0x00001] in <7c9033c5a94d48b8a10c08658b95a4ca>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt64\
    \ (System.String value) [0x0000c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00130] in\
    \ <7c9033c5a94d48b8a10c08658b95a4ca>:0 \n  at Problem.Main (System.String[] args)\
    \ [0x00001] in <7c9033c5a94d48b8a10c08658b95a4ca>:0 \n"
  stdout: ''
  timestamp: 1660008844
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // Write your code here\n        // To print results to the standard output\
    \ you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello\
    \ world!\");\n        long mango = n;\n        string str = s.Replace(\"and\"\
    , \"\");\n        string[] num = str.Split(' ');\n        if (num.Length == 0)\
    \ {\n            return n;\n        }\n        for (int i = 0; i < num.Length;\
    \ i += 2) {\n            mango -= long.Parse(num[i]);\n        }\n        return\
    \ mango;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00033]\
    \ in <0ae8c7fc6adf4d14bef2d017437b61a2>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <0ae8c7fc6adf4d14bef2d017437b61a2>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00033]\
    \ in <0ae8c7fc6adf4d14bef2d017437b61a2>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <0ae8c7fc6adf4d14bef2d017437b61a2>:0 \n"
  stdout: ''
  timestamp: 1660008844
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  int apples = 0;\n        int oranges = 0;\n        string[] applesAndOranges\
    \ = s.Split(\" \");\n        for (int i = 0; i < applesAndOranges.Length; i++)\
    \ {\n            if (applesAndOranges[i] == \"apples\")\n                apples\
    \ = int.Parse(applesAndOranges[i - 1]);\n            if (applesAndOranges[i] ==\
    \ \"oranges\")\n                oranges = int.Parse(applesAndOranges[i - 1]);\n\
    \        }\n        long mango = n - (apples + oranges);\n        return mango;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008844
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var fruits = s.Split(new string[] { \"and\" }, StringSplitOptions.None);\n\
    \        int apples = int.Parse(fruits[0].Split(' ')[0]);\n        int oranges\
    \ = int.Parse(fruits[1].Split(' ')[1]);\n        return n - (apples + oranges);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008844
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // Write your code here\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <21968ee47000489cb3e3a6e0ac86d044>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <21968ee47000489cb3e3a6e0ac86d044>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008844
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] sArr = s.Split(new[] { \" and \" }, StringSplitOptions.None);\n  \
    \      int a = int.Parse(sArr[0].Split(new[] { \" \" }, StringSplitOptions.None)[0]);\n\
    \        int o = int.Parse(sArr[1].Split(new[] { \" \" }, StringSplitOptions.None)[0]);\n\
    \        return n - a - o;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) ==\
    \ (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L))\
    \ == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"),\
    \ (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008844
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var array = s.Split(\" \");\n        var apples = long.Parse(array[0]);\n \
    \       var oranges = long.Parse(array[3]);\n        var totalfruits = apples\
    \ + oranges;\n        return n - totalfruits;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008844
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long apples, oranges;\n        apples = oranges = 0;\n        string[] tokens\
    \ = s.Split(' ');\n        apples = long.Parse(tokens[0]);\n        oranges =\
    \ long.Parse(tokens[3]);\n        return n - (apples + oranges);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5\
    \ apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008845
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // put your code here\n        // please don't use Console.WriteLine \n   \
    \     // It is only for displaying the answers\n        // return the total number\
    \ of mangoes in the basket\n        return n - s.Split(\" \").Select(x => int.Parse(x)).Sum();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<FruitDistribution>b__0_0 (System.String x) [0x00000] in\
    \ <950287f6f6ce4ae6a11a3b09bb649d34>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].MoveNext\
    \ () [0x0003a] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.Sum\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x00024] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00032]\
    \ in <950287f6f6ce4ae6a11a3b09bb649d34>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <950287f6f6ce4ae6a11a3b09bb649d34>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<FruitDistribution>b__0_0 (System.String x) [0x00000] in\
    \ <950287f6f6ce4ae6a11a3b09bb649d34>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].MoveNext\
    \ () [0x0003a] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.Sum\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x00024] in <e540098dd111461e919c58"
  stdout: ''
  timestamp: 1660008845
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] numbers = s.Split(' ');\n        int x = int.Parse(numbers[0]);\n\
    \        int y = int.Parse(numbers[3]);\n        return n - x - y;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008845
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var fruits = s.Split(' ');\n        var apples = long.Parse(fruits[0]);\n \
    \       var oranges = long.Parse(fruits[2]);\n        return n - (apples + oranges);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014]\
    \ in <ede07f830f404eebbd41523412ccbe57>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <ede07f830f404eebbd41523412ccbe57>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014]\
    \ in <ede07f830f404eebbd41523412ccbe57>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <ede07f830f404eebbd41523412ccbe57>:0 \n"
  stdout: ''
  timestamp: 1660008845
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long result = 0;\n        // Your code goes here\n        string[] fruits =\
    \ s.Split(' ');\n        for (int i = 0; i < fruits.Length; i += 2) {\n      \
    \      if (fruits[i].Equals(\"apples\")) {\n                n -= long.Parse(fruits[i\
    \ - 1]);\n            } else if (fruits[i].Equals(\"oranges\")) {\n          \
    \      n -= long.Parse(fruits[i - 1]);\n            }\n        }\n        result\
    \ = n;\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) ==\
    \ (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L))\
    \ == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"),\
    \ (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <765699ca3d214834b7047a07c1b2e7ff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <765699ca3d214834b7047a07c1b2e7ff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008845
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] s_splited = s.Split(' ');\n        int n_apples = int.Parse(s_splited[0]);\n\
    \        int n_oranges = int.Parse(s_splited[3]);\n        return n - n_apples\
    \ - n_oranges;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008845
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // Your code here\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27e37344cf7c4c468238676aee5c6bbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27e37344cf7c4c468238676aee5c6bbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008844
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] stringNumber = s.Split(' ');\n        int[] number = new int[2];\n\
    \        for (int i = 0; i < stringNumber.Length; i++) {\n            stringNumber[i]\
    \ = stringNumber[i].Replace(\"and\", \"\");\n            number[i] = int.Parse(stringNumber[i]);\n\
    \        }\n        return n - (number[0] + number[1]);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and\
    \ 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0002c]\
    \ in <3aa50b45dab24af881a88a5fac03a36f>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <3aa50b45dab24af881a88a5fac03a36f>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0002c]\
    \ in <3aa50b45dab24af881a88a5fac03a36f>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <3aa50b45dab24af881a88a5fac03a36f>:0 \n"
  stdout: ''
  timestamp: 1660008845
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var ss = s.Split(\" \");\n        long a = Convert.ToInt64(ss[0]);\n      \
    \  long o = Convert.ToInt64(ss[3]);\n        return n - a - o;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5\
    \ apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008845
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  return (long)n - (long)s.Split(' ').Select(x => x.Split('a')[0]).Sum(x => long.Parse(x));\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<FruitDistribution>b__0_1 (System.String x) [0x00000] in\
    \ <157649a5a29144ab9ec13ddf9a2e6068>:0 \n  at System.Linq.Enumerable.Sum[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source, System.Func`2[T,TResult]\
    \ selector) [0x0002f] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.FruitDistribution\
    \ (System.String s, System.Int64 n) [0x0002f] in <157649a5a29144ab9ec13ddf9a2e6068>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <157649a5a29144ab9ec13ddf9a2e6068>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<FruitDistribution>b__0_1 (System.String x) [0x00000] in\
    \ <157649a5a29144ab9ec13ddf9a2e6068>:0 \n  at System.Linq.Enumerable.Sum[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source, System.Func`2[T,TResult]\
    \ selector) [0x0002f] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.FruitDistribution\
    \ (System.String s, System.Int64 n) [0x0002f] in <157649a5a29144ab9ec13ddf9a2e6068>:0\
    \ \n  at Problem.Main (System.String[] args) "
  stdout: ''
  timestamp: 1660008845
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long count = 0;\n        int app_num = int.Parse(s.Split(\" \")[0]);\n    \
    \    int or_num = int.Parse(s.Split(\" \")[4]);\n        count = n - app_num -\
    \ or_num;\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00024]\
    \ in <8c5acf9bcab94942b5d6619beaaf7ce7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <8c5acf9bcab94942b5d6619beaaf7ce7>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00024]\
    \ in <8c5acf9bcab94942b5d6619beaaf7ce7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <8c5acf9bcab94942b5d6619beaaf7ce7>:0 \n"
  stdout: ''
  timestamp: 1660008845
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var parts = s.Split(\" and \");\n        var numApples = long.Parse(parts[0].Replace(\"\
    \ apples\", \"\"));\n        var numOranges = long.Parse(parts[1].Replace(\" oranges\"\
    , \"\"));\n        return n - numApples - numOranges;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and\
    \ 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008845
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // replace the code below\n        var  split=s.Split(\" \");\n        long\
    \ app=long.Parse(split[0]);\n        long ora=long.Parse(split[2]);\n        return\
    \ n-app-ora;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00017]\
    \ in <58d5db9647474cc8b00d2482d2d267a4>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <58d5db9647474cc8b00d2482d2d267a4>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00017]\
    \ in <58d5db9647474cc8b00d2482d2d267a4>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <58d5db9647474cc8b00d2482d2d267a4>:0 \n"
  stdout: ''
  timestamp: 1660008845
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] arr = s.Split(' ');\n        return n - Int64.Parse(arr[0]) - Int64.Parse(arr[2]);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014]\
    \ in <091ef31298d6434b80e86be982907bd2>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <091ef31298d6434b80e86be982907bd2>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014]\
    \ in <091ef31298d6434b80e86be982907bd2>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <091ef31298d6434b80e86be982907bd2>:0 \n"
  stdout: ''
  timestamp: 1660008845
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] numbers = s.Split(new string[] { \"and\", \" \", \"apples\", \"oranges\"\
    \ }, StringSplitOptions.RemoveEmptyEntries);\n        if (long.Parse(numbers[0])\
    \ + long.Parse(numbers[1]) <= n) {\n            return n - (long.Parse(numbers[0])\
    \ + long.Parse(numbers[1]));\n        }\n        else {\n            return -1;\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008845
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] parts = s.Split(' ');\n        int a = Int32.Parse(parts[0]);\n  \
    \      int o = Int32.Parse(parts[2]);\n        return n - a - o;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5\
    \ apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014]\
    \ in <111255c810c644fd80019e9e52902cc6>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <111255c810c644fd80019e9e52902cc6>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014]\
    \ in <111255c810c644fd80019e9e52902cc6>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <111255c810c644fd80019e9e52902cc6>:0 \n"
  stdout: ''
  timestamp: 1660008845
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var words = s.Split(' ');\n        var apples = Convert.ToInt64(words[0]);\n\
    \        var oranges = Convert.ToInt64(words[2]);\n        return n - apples -\
    \ oranges;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt64\
    \ (System.String value) [0x0000c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014] in\
    \ <d5c267b0ddc447908e9d78b232d3d397>:0 \n  at Problem.Main (System.String[] args)\
    \ [0x00001] in <d5c267b0ddc447908e9d78b232d3d397>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt64\
    \ (System.String value) [0x0000c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014] in\
    \ <d5c267b0ddc447908e9d78b232d3d397>:0 \n  at Problem.Main (System.String[] args)\
    \ [0x00001] in <d5c267b0ddc447908e9d78b232d3d397>:0 \n"
  stdout: ''
  timestamp: 1660008845
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var c = s.Split(new string[] { \" and \" }, StringSplitOptions.None);\n   \
    \     var a = long.Parse(c[0].Split(' ')[0]);\n        var o = long.Parse(c[1].Split('\
    \ ')[0]);\n        return n - a - o;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008845
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var digits = new long[2];\n        for (int i = 0; i < 2; i++) {\n        \
    \    var start = s.IndexOf(' ');\n            var word = s.Substring(0, start);\n\
    \            digits[i] = long.Parse(word);\n            s = s.Substring(start\
    \ + 4);\n        }\n        return n - digits[0] - digits[1];\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5\
    \ apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0001f]\
    \ in <a230dbd90b70458fa476940fe3efaa1d>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <a230dbd90b70458fa476940fe3efaa1d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0001f]\
    \ in <a230dbd90b70458fa476940fe3efaa1d>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <a230dbd90b70458fa476940fe3efaa1d>:0 \n"
  stdout: ''
  timestamp: 1660008845
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var s_split = s.Split(' ');\n        var a = int.Parse(s_split[0]);\n     \
    \   var o = int.Parse(s_split[2]);\n        var m = n - a - o;\n        return\
    \ m;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014]\
    \ in <ce4bfa80adf34c99a64d36edbc95aa6d>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <ce4bfa80adf34c99a64d36edbc95aa6d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014]\
    \ in <ce4bfa80adf34c99a64d36edbc95aa6d>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <ce4bfa80adf34c99a64d36edbc95aa6d>:0 \n"
  stdout: ''
  timestamp: 1660008845
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  int i = 0;\n        while (s[i] >= '0' && s[i] <= '9') {\n            i++;\n\
    \        }\n        string a = s.Substring(0, i);\n        i += 5;\n        string\
    \ b = s.Substring(i, s.Length - i - 7);\n        return n - long.Parse(a) - long.Parse(b);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00051]\
    \ in <b2924bb0ced942309c697253be3be81e>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <b2924bb0ced942309c697253be3be81e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00051]\
    \ in <b2924bb0ced942309c697253be3be81e>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <b2924bb0ced942309c697253be3be81e>:0 \n"
  stdout: ''
  timestamp: 1660008845
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // ...\n        return 0;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) ==\
    \ (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L))\
    \ == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"),\
    \ (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b6fed2044089461f9dd84f6e5fa40b3a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b6fed2044089461f9dd84f6e5fa40b3a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008845
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long orange = long.Parse(s.Split(\" and \")[1].Split(\" oranges\")[0]);\n \
    \       long apple = long.Parse(s.Split(\" and \")[0].Split(\" \")[0]);\n    \
    \    long mango = n - orange - apple;\n        return mango;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5\
    \ apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008845
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // your code here\n        throw new NotImplementedException();\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <c86e30b842ba418bad7298117d17a5fb>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]\
    \ in <c86e30b842ba418bad7298117d17a5fb>:0 \n"
  stdout: ''
  timestamp: 1660008845
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // your solution goes here\n        int a = int.Parse(s.Split(' ')[0]);\n \
    \       int o = int.Parse(s.Split(' ')[3]);\n        return n - a - o;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008846
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // please write your code here\n        // you can take a look at the test\
    \ cases for example\n        int count = 0;\n        bool isorange = false;\n\
    \        bool isapple = false;\n        foreach (char i in s)\n        {\n   \
    \         if (i == ' ')\n            {\n                if (isorange)\n      \
    \          {\n                    isorange = false;\n                }\n     \
    \           else if (isapple)\n                {\n                    isapple\
    \ = false;\n                }\n            }\n            else if (i == 'a')\n\
    \            {\n                isapple = true;\n            }\n            else\
    \ if (i == 'o')\n            {\n                isorange = true;\n           \
    \ }\n            else if (i == 'n')\n            {\n                if (isorange)\n\
    \                {\n                    count--;\n                }\n        \
    \        else if (isapple)\n                {\n                    count--;\n\
    \                }\n            }\n            else if (Char.IsDigit(i))\n   \
    \         {\n                if (isorange)\n                {\n              \
    \      count += Int32.Parse(i.ToString());\n                }\n              \
    \  else if (isapple)\n                {\n                    count += Int32.Parse(i.ToString());\n\
    \                }\n            }\n        }\n        return n - count;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b75037f6ea374d228a97320d5863b8ba>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b75037f6ea374d228a97320d5863b8ba>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008846
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var count = s.Split(' ');\n        var aCount = Int64.Parse(count[0]);\n  \
    \      var oCount = Int64.Parse(count[2]);\n        return n - aCount - oCount;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014]\
    \ in <2fe77d616882495ebfa6446533b2b784>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <2fe77d616882495ebfa6446533b2b784>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014]\
    \ in <2fe77d616882495ebfa6446533b2b784>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <2fe77d616882495ebfa6446533b2b784>:0 \n"
  stdout: ''
  timestamp: 1660008846
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // Your code goes here\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2cebb865e71a41388c9a9dd281452866>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2cebb865e71a41388c9a9dd281452866>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008846
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  s = s.Replace(\" \", \"\");\n        int a = int.Parse(s.Split('a')[0]);\n\
    \        int o = int.Parse(s.Split('a')[1].Split('o')[0]);\n        return n -\
    \ (a + o);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00037]\
    \ in <a3b1aceb8162428eb3e9d57a17c809ec>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <a3b1aceb8162428eb3e9d57a17c809ec>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00037]\
    \ in <a3b1aceb8162428eb3e9d57a17c809ec>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <a3b1aceb8162428eb3e9d57a17c809ec>:0 \n"
  stdout: ''
  timestamp: 1660008846
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // A dividing line to divide the problem into two subproblems:\n        //\
    \ 1. Get the number of apples and oranges.\n        // 2. Calculate the total\
    \ number of mangoes.\n        string[] ss = s.Split(' ');\n        long apples\
    \ = long.Parse(ss[0]);\n        long oranges = long.Parse(ss[2]);\n        return\
    \ n - apples - oranges;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) == (8L));\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L)) == (10L));\n\
    \    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (100L)) == (95L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (5L)) == (0L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"), (120L)) ==\
    \ (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014]\
    \ in <7a7c7458dca1442aacff0c50ff3461bb>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <7a7c7458dca1442aacff0c50ff3461bb>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014]\
    \ in <7a7c7458dca1442aacff0c50ff3461bb>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <7a7c7458dca1442aacff0c50ff3461bb>:0 \n"
  stdout: ''
  timestamp: 1660008846
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] arr = s.Split(' ');\n        long num_of_apples = Convert.ToInt64(arr[0]);\n\
    \        long num_of_oranges = Convert.ToInt64(arr[4]);\n        return n - num_of_apples\
    \ - num_of_oranges;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) == (8L));\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L)) == (10L));\n\
    \    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (100L)) == (95L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (5L)) == (0L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"), (120L)) ==\
    \ (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt64\
    \ (System.String value) [0x0000c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014] in\
    \ <7588ca4d872740e592a4cbd2ca29c2e7>:0 \n  at Problem.Main (System.String[] args)\
    \ [0x00001] in <7588ca4d872740e592a4cbd2ca29c2e7>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt64\
    \ (System.String value) [0x0000c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014] in\
    \ <7588ca4d872740e592a4cbd2ca29c2e7>:0 \n  at Problem.Main (System.String[] args)\
    \ [0x00001] in <7588ca4d872740e592a4cbd2ca29c2e7>:0 \n"
  stdout: ''
  timestamp: 1660008846
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var nums = s.Split(' ');\n        var apples = Convert.ToInt64(nums[0]);\n\
    \        var oranges = Convert.ToInt64(nums[4]);\n        return n - apples -\
    \ oranges;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt64\
    \ (System.String value) [0x0000c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014] in\
    \ <eb4db8b26ca14deba8235d6ffb52e8ae>:0 \n  at Problem.Main (System.String[] args)\
    \ [0x00001] in <eb4db8b26ca14deba8235d6ffb52e8ae>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt64\
    \ (System.String value) [0x0000c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014] in\
    \ <eb4db8b26ca14deba8235d6ffb52e8ae>:0 \n  at Problem.Main (System.String[] args)\
    \ [0x00001] in <eb4db8b26ca14deba8235d6ffb52e8ae>:0 \n"
  stdout: ''
  timestamp: 1660008846
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  if (s == null || n < 0) {\n            throw new Exception(\"Bad input values\"\
    );\n        }\n        int apple = 0;\n        int orange = 0;\n        if (s.Contains(\"\
    apples\")) {\n            apple = int.Parse(s.Substring(0, s.IndexOf(\"apples\"\
    )));\n        }\n        if (s.Contains(\"oranges\")) {\n            orange =\
    \ int.Parse(s.Substring(s.IndexOf(\"and\") + 4, s.IndexOf(\"oranges\") - s.IndexOf(\"\
    and\") - 4));\n        }\n        return n - (apple + orange);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5\
    \ apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008846
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  //Check if the string could be converted to long\n        long fruit;\n   \
    \     long.TryParse(s, out fruit);\n        //If it could not be converted to\
    \ long return -1\n        if (fruit == 0) {\n            return -1;\n        }\n\
    \        //Find the number of mango by using algebra\n        long mango = (n\
    \ * (n - 1)) / 2 - fruit;\n        //If the mango is negative return -1\n    \
    \    if (mango < 0) {\n            return -1;\n        }\n        //Otherwise\
    \ return the number of mango\n        return mango;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and\
    \ 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e826cc7c5dc444e6b3b8e0148126901f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e826cc7c5dc444e6b3b8e0148126901f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008846
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var parts = s.Split(\" and \");\n        var appls = long.Parse(parts[0].Split(\"\
    \ \")[0]);\n        var orngs = long.Parse(parts[1].Split(\" \")[0]);\n      \
    \  return n - appls - orngs;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) ==\
    \ (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L))\
    \ == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"),\
    \ (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008846
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var r = s.Split(\" \");\n        var a = long.Parse(r[0]);\n        var o =\
    \ long.Parse(r[3]);\n        return n - a - o;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6\
    \ oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008846
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // method to extract the number from string\n        // of the form \"1 apples\
    \ and 2 oranges\"\n        int ExtractNum(string str) {\n            int res =\
    \ 0;\n            for (int i = 0; i < str.Length; i++) {\n                if (char.IsDigit(str[i]))\
    \ {\n                    res = res * 10 + (str[i] - '0');\n                }\n\
    \            }\n            return res;\n        }\n        // get both numbers\n\
    \        int a = ExtractNum(s.Split(' ')[0]);\n        int b = ExtractNum(s.Split('\
    \ ')[2]);\n        // total number of mango is difference between all fruits\n\
    \        // and number of orange and apples\n        return n - (a + b);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a8b4a1a6efcb4b7daf1d98417c1388cf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a8b4a1a6efcb4b7daf1d98417c1388cf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008846
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var numberofApples = 0;\n        var numberofOranges = 0;\n        var numberofMangoes\
    \ = 0;\n        var array1 = s.Split(\" \");\n        numberofApples = int.Parse(array1[0]);\n\
    \        numberofOranges = int.Parse(array1[2]);\n        numberofMangoes = (int)n\
    \ - numberofApples - numberofOranges;\n        return numberofMangoes;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0001d]\
    \ in <e54064a582674b15a39554c38c803157>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <e54064a582674b15a39554c38c803157>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0001d]\
    \ in <e54064a582674b15a39554c38c803157>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <e54064a582674b15a39554c38c803157>:0 \n"
  stdout: ''
  timestamp: 1660008846
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] s_arr = s.Split(' ');\n        // num_oranges - the number of oranges\
    \ in the given string\n        long num_oranges = long.Parse(s_arr[3]);\n    \
    \    // num_apples - the number of apples in the given string\n        long num_apples\
    \ = long.Parse(s_arr[0]);\n        // ret_val - the number of mango fruits\n \
    \       long ret_val = n - num_apples - num_oranges;\n        return ret_val;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008846
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long sum = 0;\n        long count = 0;\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            if (s[i] != ' ' && s[i] != 'a' && s[i] != 'n' && s[i] !=\
    \ 'd' && s[i] != 'o' && s[i] != 'r' && s[i] != 'g' && s[i] != 'e' && s[i] != 's')\
    \ {\n                sum = (sum * 10) + (s[i] - '0');\n            }\n       \
    \ }\n        return n - sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) ==\
    \ (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L))\
    \ == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"),\
    \ (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7daa2baed4204c03b58d468f97280517>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7daa2baed4204c03b58d468f97280517>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008846
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var arr = s.Split(new[] { ' ' });\n        var total = (int)n;\n        var\
    \ apples = int.Parse(arr[0]);\n        var oranges = int.Parse(arr[2]);\n    \
    \    return total - (apples + oranges);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0001f]\
    \ in <b9af568d52ca4c7aa6428a144ec84ba3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <b9af568d52ca4c7aa6428a144ec84ba3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0001f]\
    \ in <b9af568d52ca4c7aa6428a144ec84ba3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <b9af568d52ca4c7aa6428a144ec84ba3>:0 \n"
  stdout: ''
  timestamp: 1660008846
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var ss = s.Split(new char[] { ' ', 'a', 'n', 'd' }, StringSplitOptions.RemoveEmptyEntries);\n\
    \        var A = long.Parse(ss[0]);\n        var O = long.Parse(ss[1]);\n    \
    \    return n - A - O;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) == (8L));\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L)) == (10L));\n\
    \    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (100L)) == (95L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (5L)) == (0L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"), (120L)) ==\
    \ (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00023]\
    \ in <feb3c4dc3fd443ba98255464e60f5f2e>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <feb3c4dc3fd443ba98255464e60f5f2e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00023]\
    \ in <feb3c4dc3fd443ba98255464e60f5f2e>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <feb3c4dc3fd443ba98255464e60f5f2e>:0 \n"
  stdout: ''
  timestamp: 1660008846
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  int a = int.Parse(s.Split()[0]);\n        int o = int.Parse(s.Split()[2]);\n\
    \        return n - a - o;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) ==\
    \ (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L))\
    \ == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"),\
    \ (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0001f]\
    \ in <b2d8c4e166a645388f7e5bae839c200d>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <b2d8c4e166a645388f7e5bae839c200d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0001f]\
    \ in <b2d8c4e166a645388f7e5bae839c200d>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <b2d8c4e166a645388f7e5bae839c200d>:0 \n"
  stdout: ''
  timestamp: 1660008846
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  int app = 0;\n        int ora = 0;\n        for (int i = 0; i < s.Length; i++)\
    \ {\n            if (s[i] >= '0' && s[i] <= '9') {\n                if (s[i -\
    \ 1] == 'a') {\n                    app = app * 10 + s[i] - '0';\n           \
    \     } else {\n                    ora = ora * 10 + s[i] - '0';\n           \
    \     }\n            }\n        }\n        if (app + ora > n) {\n            return\
    \ -1;\n        }\n        return n - app - ora;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6\
    \ oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside\
    \ the bounds of the array.\n  at Problem.FruitDistribution (System.String s, System.Int64\
    \ n) [0x0002b] in <9cbff86f880d44e5b4dde09b792b156c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <9cbff86f880d44e5b4dde09b792b156c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of\
    \ the array.\n  at Problem.FruitDistribution (System.String s, System.Int64 n)\
    \ [0x0002b] in <9cbff86f880d44e5b4dde09b792b156c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <9cbff86f880d44e5b4dde09b792b156c>:0 \n"
  stdout: ''
  timestamp: 1660008846
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4963621d4da848b480929f572256e324>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4963621d4da848b480929f572256e324>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008846
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // Write your code here\n        // To print results to the standard output\
    \ you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello\
    \ world!\");\n        var r = s.Split(' ');\n        var a = long.Parse(r[0]);\n\
    \        var o = long.Parse(r[3]);\n        return n - a - o;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5\
    \ apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008846
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var numbers = s.Split(' ').Select(int.Parse).ToArray();\n        return n -\
    \ numbers.Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0001b]\
    \ in <d09489e857cf4e898f5d13b6191c33b1>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <d09489e857cf4e898f5d13b6191c33b1>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0001b]\
    \ in <d09489e857cf4e898f5d13b6191c33b1>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <d09489e857cf4e"
  stdout: ''
  timestamp: 1660008846
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  int total = 0;\n        string[] t = s.Split(' ');\n        total += int.Parse(t[0]);\n\
    \        total += int.Parse(t[2]);\n        return n - total;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5\
    \ apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00018]\
    \ in <aff956ee3957447196cc47245084020e>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <aff956ee3957447196cc47245084020e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00018]\
    \ in <aff956ee3957447196cc47245084020e>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <aff956ee3957447196cc47245084020e>:0 \n"
  stdout: ''
  timestamp: 1660008846
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var input = s.Split(new[] { \" and \" }, StringSplitOptions.None);\n      \
    \  var oranges = long.Parse(input[1].Split(' ')[0]);\n        var apples = long.Parse(input[0].Split('\
    \ ')[0]);\n        return n - oranges - apples;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6\
    \ oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008847
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // Your code goes here\n        var array = s.Split(' ');\n        var total\
    \ = int.Parse(array[0]) + int.Parse(array[2]);\n        return n - total;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00013]\
    \ in <70e774fc9d19488c90e80787e8e911d1>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <70e774fc9d19488c90e80787e8e911d1>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00013]\
    \ in <70e774fc9d19488c90e80787e8e911d1>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <70e774fc9d19488c90e80787e8e911d1>:0 \n"
  stdout: ''
  timestamp: 1660008846
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long ans = 0;\n        string[] s_parsed = s.Split(new string[] {\"and\"},\
    \ StringSplitOptions.None);\n        string[] s_parsed_1 = s_parsed[0].Split(new\
    \ string[] {\" \"}, StringSplitOptions.None);\n        string[] s_parsed_2 = s_parsed[1].Split(new\
    \ string[] {\" \"}, StringSplitOptions.None);\n        int a_t = Int32.Parse(s_parsed_1[0]);\n\
    \        int o_t = Int32.Parse(s_parsed_2[1]);\n        ans = n - (a_t + o_t);\n\
    \        return ans;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) == (8L));\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L)) == (10L));\n\
    \    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (100L)) == (95L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (5L)) == (0L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"), (120L)) ==\
    \ (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008847
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // This is a stub. Please replace it with your own implementation.\n      \
    \  var total = 0;\n        var fruit = s.Split(' ');\n        if (fruit[1] ==\
    \ \"apples\") {\n            total = (int.Parse(fruit[0]) * 1) + (int.Parse(fruit[2])\
    \ * 2);\n        } else {\n            total = (int.Parse(fruit[0]) * 2) + (int.Parse(fruit[2])\
    \ * 1);\n        }\n        return n - total;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00027]\
    \ in <7d029ad729f14b67aaa3ea16729f3aeb>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <7d029ad729f14b67aaa3ea16729f3aeb>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00027]\
    \ in <7d029ad729f14b67aaa3ea16729f3aeb>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <7d029ad729f14b67aaa3ea16729f3aeb>:0 \n"
  stdout: ''
  timestamp: 1660008847
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // Your code goes here \n        return n;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17dfe5be3ce54c74a349a744acf40971>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17dfe5be3ce54c74a349a744acf40971>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008847
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // Your code goes here\n        var words = s.Split(' ');\n        var num_apples\
    \ = long.Parse(words[0]);\n        var num_oranges = long.Parse(words[2]);\n \
    \       return n - num_apples - num_oranges;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014]\
    \ in <09150f2ce12b42c2ba94c96a5c848f4f>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <09150f2ce12b42c2ba94c96a5c848f4f>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014]\
    \ in <09150f2ce12b42c2ba94c96a5c848f4f>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <09150f2ce12b42c2ba94c96a5c848f4f>:0 \n"
  stdout: ''
  timestamp: 1660008847
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var str = s.Split(' ');\n        var a = str[0].Split('a');\n        var o\
    \ = str[2].Split('o');\n        var apples = long.Parse(a[0]);\n        var oranges\
    \ = long.Parse(o[0]);\n        var mangoes = n - apples - oranges;\n        return\
    \ mangoes;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0002c]\
    \ in <fae55ad4211f49bc8bad20f5119807ed>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <fae55ad4211f49bc8bad20f5119807ed>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0002c]\
    \ in <fae55ad4211f49bc8bad20f5119807ed>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <fae55ad4211f49bc8bad20f5119807ed>:0 \n"
  stdout: ''
  timestamp: 1660008847
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var l = s.Split(new string[] {\" and \"}, StringSplitOptions.None);\n     \
    \   var total_apples = long.Parse(l[0].Split(' ')[0]);\n        var total_oranges\
    \ = long.Parse(l[1].Split(' ')[0]);\n        return n - total_apples - total_oranges;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008847
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] splitted = s.Split(\" \");\n        long apples = long.Parse(splitted[0]);\n\
    \        long oranges = long.Parse(splitted[2]);\n        return n - apples -\
    \ oranges;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00017]\
    \ in <2e809296017241d1a60cd608c4dd6e81>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <2e809296017241d1a60cd608c4dd6e81>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00017]\
    \ in <2e809296017241d1a60cd608c4dd6e81>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <2e809296017241d1a60cd608c4dd6e81>:0 \n"
  stdout: ''
  timestamp: 1660008847
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  return n - (long)s.Split(new string[] { \"and\" }, StringSplitOptions.None)\n\
    \            .Select(x => (long)int.Parse(x.Trim().Split(' ')[0]))\n         \
    \   .Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008847
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  //Determine which fruits are in the equation\n        string[] SplitEquation\
    \ = s.Split(' ');\n        //Get fruit types\n        string[] FruitTypes = SplitEquation.Where((s,\
    \ i) => i % 2 == 1).ToArray();\n        //Get fruit counts\n        string[] FruitCounts\
    \ = SplitEquation.Where((s, i) => i % 2 == 0).ToArray();\n        //Verify the\
    \ equation\n        if (FruitTypes.Contains(\"mangoes\")) {\n            throw\
    \ new ArgumentException();\n        }\n        //Convert the equation to a list\n\
    \        List<long> FruitCountList = new List<long>();\n        for (int i = 0;\
    \ i < FruitCounts.Length; i++) {\n            FruitCountList.Add(long.Parse(FruitCounts[i]));\n\
    \        }\n        //Calculate the number of fruits in the basket\n        long\
    \ FruitSum = 0;\n        foreach (long l in FruitCountList) {\n            FruitSum\
    \ += l;\n        }\n        //Calculate the number of mangoes\n        long numOfMangoes\
    \ = n - FruitSum;\n        //Return the number of mangoes\n        return numOfMangoes;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00085]\
    \ in <dc77259610544ec3993de8bb1242865e>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <dc77259610544ec3993de8bb1242865e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00085]\
    \ in <dc77259610544ec3993de8bb1242865e>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <dc77259610544ec3993de8bb1242865e>:0 \n"
  stdout: ''
  timestamp: 1660008847
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] orangesAndApples = s.Split(new string[] { \"apples and \", \" oranges\"\
    \ }, StringSplitOptions.None);\n        int oranges = int.Parse(orangesAndApples[1]);\n\
    \        int apples = int.Parse(orangesAndApples[0]);\n        return n - oranges\
    \ - apples;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008847
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long sum = 0;\n        foreach (var c in s)\n            if (char.IsDigit(c))\n\
    \                sum += (long)char.GetNumericValue(c);\n        return n - sum;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <59cd46618a1b44728d93d6f978ade24a>:0 \n"
  stdout: ''
  timestamp: 1660008847
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] s_split = s.Split(' ');\n        int numApples = int.Parse(s_split[0]);\n\
    \        int numOranges = int.Parse(s_split[3]);\n        return n - numApples\
    \ - numOranges;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008847
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  int a = 0, b = 0;\n        int i = 0;\n        for (; i < s.Length; i++) {\n\
    \            if (s[i] == ' ') {\n                break;\n            }\n     \
    \       a = a * 10 + s[i] - '0';\n        }\n        for (i++; i < s.Length; i++)\
    \ {\n            if (s[i] == ' ') {\n                break;\n            }\n \
    \           b = b * 10 + s[i] - '0';\n        }\n        return n - a - b;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <11b1e9f90a3c4cf8b54d1e2f0ea34f49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <11b1e9f90a3c4cf8b54d1e2f0ea34f49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008847
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  return (long)n -\n               Convert.ToInt64(s.Split(' ')[0]) -\n     \
    \          Convert.ToInt64(s.Split(' ')[4]);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt64\
    \ (System.String value) [0x0000c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0001c] in\
    \ <b73aac1ab61a451180ac09e55d709ee1>:0 \n  at Problem.Main (System.String[] args)\
    \ [0x00001] in <b73aac1ab61a451180ac09e55d709ee1>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt64\
    \ (System.String value) [0x0000c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0001c] in\
    \ <b73aac1ab61a451180ac09e55d709ee1>:0 \n  at Problem.Main (System.String[] args)\
    \ [0x00001] in <b73aac1ab61a451180ac09e55d709ee1>:0 \n"
  stdout: ''
  timestamp: 1660008847
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var tokens = s.Split(' ');\n        var apples = int.Parse(tokens[0]);\n  \
    \      var oranges = int.Parse(tokens[3]);\n        var mangoes = n - apples -\
    \ oranges;\n        return mangoes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008847
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] list = s.Split(\" \");\n        long res = n - long.Parse(list[0])\
    \ - long.Parse(list[4]);\n        return res;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00017]\
    \ in <1b1f9215c9b6413bbe150a4b3d4f274b>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <1b1f9215c9b6413bbe150a4b3d4f274b>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00017]\
    \ in <1b1f9215c9b6413bbe150a4b3d4f274b>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <1b1f9215c9b6413bbe150a4b3d4f274b>:0 \n"
  stdout: ''
  timestamp: 1660008847
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var words = s.Split(\" \");\n        var numApples = int.Parse(words[0]);\n\
    \        var numOranges = int.Parse(words[3]);\n        return n - numApples -\
    \ numOranges;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008847
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long sum = 0L;\n        string [] words = s.Split(new char[] {' '});\n    \
    \    for (int i = 0; i < words.Length; i+=2) {\n            sum += Convert.ToInt64(words[i]);\n\
    \        }\n        return n - sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt64\
    \ (System.String value) [0x0000c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0001b] in\
    \ <6fad2e7c0fcf4b9f80614585438f3055>:0 \n  at Problem.Main (System.String[] args)\
    \ [0x00001] in <6fad2e7c0fcf4b9f80614585438f3055>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt64\
    \ (System.String value) [0x0000c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0001b] in\
    \ <6fad2e7c0fcf4b9f80614585438f3055>:0 \n  at Problem.Main (System.String[] args)\
    \ [0x00001] in <6fad2e7c0fcf4b9f80614585438f3055>:0 \n"
  stdout: ''
  timestamp: 1660008847
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // Your code goes here.\n        // Good luck!\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6\
    \ oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpoxk8j7g1.cs(23,24): error CS0161: ''Problem.FruitDistribution(string,
    long)'': not all code paths return a value

    '
  timestamp: 1660008847
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // declare variable\n        long appleCount = 0L;\n        long orangeCount\
    \ = 0L;\n        // count how many of each we have\n        for (int i = 0; i\
    \ < s.Length; i++) {\n            if (s[i] == 'a') {\n                appleCount++;\n\
    \            } else if (s[i] == 'o') {\n                orangeCount++;\n     \
    \       }\n        }\n        // return\n        return n - appleCount - orangeCount;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5e760a75f6c4ad0a56a7c6e613bd60c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5e760a75f6c4ad0a56a7c6e613bd60c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008847
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  int a, o;\n        string[] split = s.Split(' ');\n        if (split[1] ==\
    \ \"apples\") {\n            a = int.Parse(split[0]);\n            o = int.Parse(split[4]);\n\
    \        } else {\n            a = int.Parse(split[4]);\n            o = int.Parse(split[0]);\n\
    \        }\n        return n - a - o;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00026]\
    \ in <273999b55d2f40019243e9f9bb81f744>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <273999b55d2f40019243e9f9bb81f744>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00026]\
    \ in <273999b55d2f40019243e9f9bb81f744>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <273999b55d2f40019243e9f9bb81f744>:0 \n"
  stdout: ''
  timestamp: 1660008847
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long n1 = 0, n2 = 0;\n        s = s.Replace(\" oranges\", \"\").Replace(\"\
    \ apples\", \"\");\n        int total = 0;\n        foreach (char c in s) {\n\
    \            if (c == ' ')\n                continue;\n            if (c == 'a')\
    \ {\n                total = 0;\n                continue;\n            }\n  \
    \          if (c == 'o') {\n                n1 = long.Parse(s.Substring(0, total));\n\
    \                n2 = long.Parse(s.Substring(total + 1));\n                break;\n\
    \            }\n            total++;\n        }\n        long n3 = n - n1 - n2;\n\
    \        return n3;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) == (8L));\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L)) == (10L));\n\
    \    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (100L)) == (95L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (5L)) == (0L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"), (120L)) ==\
    \ (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c403cdfc07954f7e9acc82ade6e893f4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c403cdfc07954f7e9acc82ade6e893f4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008847
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  if (s == null || n < 3) return 0;\n        var split = s.Split(' ');\n    \
    \    var a = long.Parse(split[0]);\n        var o = long.Parse(split[2]);\n  \
    \      if (a + o > n) return 0;\n        return n - a - o;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5\
    \ apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00029]\
    \ in <55f7023610f14feb9c5f5dbce7058a01>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <55f7023610f14feb9c5f5dbce7058a01>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00029]\
    \ in <55f7023610f14feb9c5f5dbce7058a01>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <55f7023610f14feb9c5f5dbce7058a01>:0 \n"
  stdout: ''
  timestamp: 1660008847
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long apples = long.Parse(s.Split(' ')[0]);\n        long oranges = long.Parse(s.Split('\
    \ ')[3]);\n        return n - apples - oranges;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6\
    \ oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008847
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long apples = 0;\n        long oranges = 0;\n        foreach (char x in s)\
    \ {\n            if (x >= '0' && x <= '9') {\n                if (apples == 0)\n\
    \                    apples = apples * 10 + (long)(x - '0');\n               \
    \ else if (oranges == 0)\n                    oranges = oranges * 10 + (long)(x\
    \ - '0');\n            }\n        }\n        return n - apples - oranges;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6b504a1605084f83976bb14f99fe1d49>:0 \n"
  stdout: ''
  timestamp: 1660008847
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // to avoid overflow we can use BigInteger.\n        // BigInteger is a Structure\
    \ that Represents an arbitrarily large integer.\n        // https://docs.microsoft.com/en-us/dotnet/api/system.numerics.biginteger?view=netframework-4.8\n\
    \        // this function will return the number of mangoes in the basket.\n \
    \       int apples = Convert.ToInt32(s.Split(\" \")[0]);\n        int oranges\
    \ = Convert.ToInt32(s.Split(\" \")[4]);\n        return (long) n - apples - oranges;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00021] in\
    \ <fcf07c8464f948e9b355b747cb977ad1>:0 \n  at Problem.Main (System.String[] args)\
    \ [0x00001] in <fcf07c8464f948e9b355b747cb977ad1>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00021] in\
    \ <fcf07c8464f948e9b355b747cb977ad1>:0 \n  at Problem.Main (System.String[] args)\
    \ [0x00001] in <fcf07c8464f948e9b355b747cb977ad1>:0 \n"
  stdout: ''
  timestamp: 1660008847
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var split = s.Split(' ');\n        var num_apples = long.Parse(split[0]);\n\
    \        var num_oranges = long.Parse(split[3]);\n        return n - num_apples\
    \ - num_oranges;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008847
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  return n - s.Split(\" and \").Select(f => {\n            string[] spl = f.Split(\"\
    \ \");\n            return long.Parse(spl[0]) + long.Parse(spl[2]);\n        }).Sum();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside\
    \ the bounds of the array.\n  at Problem+<>c.<FruitDistribution>b__0_0 (System.String\
    \ f) [0x00016] in <d6276ffa22514326b4d261c91768c725>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].MoveNext\
    \ () [0x0003a] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.Sum\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x00025] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00032]\
    \ in <d6276ffa22514326b4d261c91768c725>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <d6276ffa22514326b4d261c91768c725>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of\
    \ the array.\n  at Problem+<>c.<FruitDistribution>b__0_0 (System.String f) [0x00016]\
    \ in <d6276ffa22514326b4d261c91768c725>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].MoveNext\
    \ () [0x0003a] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.Sum\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x00025] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00032]\
    \ in <d6276ffa22514326b4d261c91768c725>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <d6276ffa22514326b4d261c91768c725>:0 \n"
  stdout: ''
  timestamp: 1660008847
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] str = s.Split(' ');\n        string num_of_ap = str[0];\n        string\
    \ num_of_or = str[3];\n        long ap = Convert.ToInt64(num_of_ap);\n       \
    \ long or = Convert.ToInt64(num_of_or);\n        long min = ap;\n        if (or\
    \ < min) {\n            min = or;\n        }\n        return n - min;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <276c50153d154f719a3475f7a80b161b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <276c50153d154f719a3475f7a80b161b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008847
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // Your answer goes here.\n        long apples = 0, oranges = 0;\n        string[]\
    \ words = s.Split(' ');\n        for (int i = 0; i < words.Length; i += 2) {\n\
    \            if (words[i + 1] == \"apples\") {\n                apples = long.Parse(words[i]);\n\
    \            } else {\n                oranges = long.Parse(words[i]);\n     \
    \       }\n        }\n        return n - apples - oranges;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5\
    \ apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00039]\
    \ in <283b31cff3ad421ca0f5b6034915ba0e>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <283b31cff3ad421ca0f5b6034915ba0e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00039]\
    \ in <283b31cff3ad421ca0f5b6034915ba0e>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <283b31cff3ad421ca0f5b6034915ba0e>:0 \n"
  stdout: ''
  timestamp: 1660008847
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] nums = s.Split(' ');\n        int a = int.Parse(nums[0]);\n      \
    \  int o = int.Parse(nums[3]);\n        long m = n - a - o;\n        return m;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008847
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var N = n;\n        s = s.Replace(\"apples\", \"\").Replace(\"oranges\", \"\
    \").Replace(\"and\", \"\").Replace(\" \", \"\");\n        var spt = s.Split(new\
    \ char[] { '+' });\n        long x = long.Parse(spt[0]);\n        long y = long.Parse(spt[1]);\n\
    \        return n - x - y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) ==\
    \ (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L))\
    \ == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"),\
    \ (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside\
    \ the bounds of the array.\n  at Problem.FruitDistribution (System.String s, System.Int64\
    \ n) [0x0005d] in <d2b905e3b42f4132b0292c032b9966f9>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <d2b905e3b42f4132b0292c032b9966f9>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of\
    \ the array.\n  at Problem.FruitDistribution (System.String s, System.Int64 n)\
    \ [0x0005d] in <d2b905e3b42f4132b0292c032b9966f9>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <d2b905e3b42f4132b0292c032b9966f9>:0 \n"
  stdout: ''
  timestamp: 1660008847
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // write your code here\n        throw new NotImplementedException();\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <a20e4ae06ab544aa829f96661f483482>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]\
    \ in <a20e4ae06ab544aa829f96661f483482>:0 \n"
  stdout: ''
  timestamp: 1660008847
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] parts = s.Split(' ');\n        long a = long.Parse(parts[0]);\n  \
    \      long o = long.Parse(parts[2]);\n        return n - a - o;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5\
    \ apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014]\
    \ in <3049cc9b507d4e3b93bde837ab831200>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <3049cc9b507d4e3b93bde837ab831200>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014]\
    \ in <3049cc9b507d4e3b93bde837ab831200>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <3049cc9b507d4e3b93bde837ab831200>:0 \n"
  stdout: ''
  timestamp: 1660008847
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long a = 0, o = 0;\n        foreach (char c in s) {\n            if (c == 'a')\
    \ a++;\n            if (c == 'o') o++;\n        }\n        return n - a - o;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <11ad6796c9a24d32bd33b60282280db9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <11ad6796c9a24d32bd33b60282280db9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008847
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  if (n <= 0) {\n            return 0;\n        }\n        string[] a = s.Split(\"\
    \ \");\n        long m = int.Parse(a[0]);\n        long o = int.Parse(a[2]);\n\
    \        long total = m + o;\n        long mango = n - total;\n        return\
    \ mango;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0002d]\
    \ in <ab9c32180e6849368d02b85b135ef37b>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <ab9c32180e6849368d02b85b135ef37b>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0002d]\
    \ in <ab9c32180e6849368d02b85b135ef37b>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <ab9c32180e6849368d02b85b135ef37b>:0 \n"
  stdout: ''
  timestamp: 1660008847
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long stringToLong = long.Parse(s.Split(' ')[0]) + long.Parse(s.Split(' ')[3]);\n\
    \        return n - stringToLong;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008847
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var parts = s.Split(\" and \");\n        var apples = long.Parse(parts[0].Split(\"\
    \ \")[0]);\n        var oranges = long.Parse(parts[1].Split(\" \")[0]);\n    \
    \    var total = apples + oranges;\n        return n - total;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5\
    \ apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008847
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // Write your code here.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) ==\
    \ (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L))\
    \ == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"),\
    \ (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7_1h154v.cs(23,24): error CS0161: ''Problem.FruitDistribution(string,
    long)'': not all code paths return a value

    '
  timestamp: 1660008847
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long total_count = 0;\n        int index = s.IndexOf(\" and \");\n        string[]\
    \ fruits = s.Split(' and ');\n        long orange_count = long.Parse(fruits[1].Split('\
    \ ')[0]);\n        long apple_count = long.Parse(fruits[0].Split(' ')[0]);\n \
    \       total_count = orange_count + apple_count;\n        return n - total_count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp44i0ioeq.cs(26,35): error CS1012: Too many characters in character literal

    '
  timestamp: 1660008847
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long mango = n;\n        string[] array = s.Split(\" \");\n        mango -=\
    \ Convert.ToInt64(array[0])+Convert.ToInt64(array[4]);\n        return mango;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt64\
    \ (System.String value) [0x0000c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00019] in\
    \ <11d3de8408414b798b23f13102e07daf>:0 \n  at Problem.Main (System.String[] args)\
    \ [0x00001] in <11d3de8408414b798b23f13102e07daf>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt64\
    \ (System.String value) [0x0000c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00019] in\
    \ <11d3de8408414b798b23f13102e07daf>:0 \n  at Problem.Main (System.String[] args)\
    \ [0x00001] in <11d3de8408414b798b23f13102e07daf>:0 \n"
  stdout: ''
  timestamp: 1660008847
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  //long[] numbers = s.Split(\" \").Select(r => Convert.ToInt64(r)).ToArray();\n\
    \        var numbers = s.Split(\" \").Select(x => long.Parse(x)).ToArray();\n\
    \        return n - numbers.Sum();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<FruitDistribution>b__0_0 (System.String x) [0x00000] in\
    \ <360afc19b84d4167be8dbafffc935d7c>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00031]\
    \ in <360afc19b84d4167be8dbafffc935d7c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <360afc19b84d4167be8dbafffc935d7c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<FruitDistribution>b__0_0 (System.String x) [0x00000] in\
    \ <360afc19b84d4167be8dbafffc935d7c>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in"
  stdout: ''
  timestamp: 1660008848
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var words = s.Split(' ');\n        var apples = long.Parse(words[0]);\n   \
    \     var oranges = long.Parse(words[2]);\n        var total = apples + oranges;\n\
    \        var mangos = n - total;\n        return mangos;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and\
    \ 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014]\
    \ in <b29d34141d8e40779ee20d3f23f38275>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <b29d34141d8e40779ee20d3f23f38275>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014]\
    \ in <b29d34141d8e40779ee20d3f23f38275>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <b29d34141d8e40779ee20d3f23f38275>:0 \n"
  stdout: ''
  timestamp: 1660008848
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // >>> YOUR CODE HERE <<<\n        string a = s.Split(\" \")[0];\n        string\
    \ o = s.Split(\" \")[3];\n        long a_int = Int64.Parse(a);\n        long o_int\
    \ = Int64.Parse(o);\n        long m_int = n - a_int - o_int;\n        return m_int;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008848
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // Your code here\n        long t = 0;\n        string[] k = s.Split(' ');\n\
    \        t = n - (long.Parse(k[0]) + long.Parse(k[4]));\n        return t;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00017]\
    \ in <44f5279c64f04ae4a452fc8e4f1deb75>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <44f5279c64f04ae4a452fc8e4f1deb75>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00017]\
    \ in <44f5279c64f04ae4a452fc8e4f1deb75>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <44f5279c64f04ae4a452fc8e4f1deb75>:0 \n"
  stdout: ''
  timestamp: 1660008848
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var splitted_string = s.Split(\" \");\n        var apples = long.Parse(splitted_string[0]);\n\
    \        var oranges = long.Parse(splitted_string[4]);\n        var mangoes =\
    \ n - apples - oranges;\n        return mangoes;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6\
    \ oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00017]\
    \ in <f70739e93d2245baa5e710ea12cea420>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <f70739e93d2245baa5e710ea12cea420>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00017]\
    \ in <f70739e93d2245baa5e710ea12cea420>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <f70739e93d2245baa5e710ea12cea420>:0 \n"
  stdout: ''
  timestamp: 1660008848
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  int i = s.IndexOf(\" and \");\n        int apples = int.Parse(s.Substring(0,\
    \ i));\n        int oranges = int.Parse(s.Substring(i + 5));\n        return n\
    \ - apples - oranges;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) == (8L));\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L)) == (10L));\n\
    \    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (100L)) == (95L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (5L)) == (0L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"), (120L)) ==\
    \ (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00015]\
    \ in <b1da9bd4f3ac43b39c646814dea688c0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <b1da9bd4f3ac43b39c646814dea688c0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00015]\
    \ in <b1da9bd4f3ac43b39c646814dea688c0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <b1da9bd4f3ac43b39c646814dea688c0>:0 \n"
  stdout: ''
  timestamp: 1660008848
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] tokens = s.Split(' ');\n        int numApples = int.Parse(tokens[0]);\n\
    \        int numOranges = int.Parse(tokens[3]);\n        return n - numApples\
    \ - numOranges;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008848
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var a = s.Split(' ')[0];\n        var b = s.Split(' ')[2];\n        long c\
    \ = n - Int64.Parse(a) - Int64.Parse(b);\n        return c;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5\
    \ apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00020]\
    \ in <de61cb42aac14c4ab1e7e0f3047015e9>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <de61cb42aac14c4ab1e7e0f3047015e9>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00020]\
    \ in <de61cb42aac14c4ab1e7e0f3047015e9>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <de61cb42aac14c4ab1e7e0f3047015e9>:0 \n"
  stdout: ''
  timestamp: 1660008848
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // Your code here\n        int numberApples = 0;\n        int numberOranges\
    \ = 0;\n        string[] arr = s.Split(\" and \");\n        string[] arrNum =\
    \ arr[0].Split(\" \");\n        numberApples = Convert.ToInt32(arrNum[0]);\n \
    \       arrNum = arr[1].Split(\" \");\n        numberOranges = Convert.ToInt32(arrNum[0]);\n\
    \        return n - numberApples - numberOranges;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6\
    \ oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008848
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // Your code goes here\n        string[] fruits = s.Split(\" \");\n       \
    \ int x = Convert.ToInt32(fruits[0]);\n        int y = Convert.ToInt32(fruits[2]);\n\
    \        return n-x-y;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) == (8L));\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L)) == (10L));\n\
    \    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (100L)) == (95L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (5L)) == (0L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"), (120L)) ==\
    \ (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00017] in\
    \ <d84c596b46584e5ca387ac93a2b3446c>:0 \n  at Problem.Main (System.String[] args)\
    \ [0x00001] in <d84c596b46584e5ca387ac93a2b3446c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00017] in\
    \ <d84c596b46584e5ca387ac93a2b3446c>:0 \n  at Problem.Main (System.String[] args)\
    \ [0x00001] in <d84c596b46584e5ca387ac93a2b3446c>:0 \n"
  stdout: ''
  timestamp: 1660008848
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  return n - (Int64.Parse(s.Split(' ')[0]) + Int64.Parse(s.Split(' ')[4]));\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0001b]\
    \ in <e9a19754a29c4af4a5a630c294fe6033>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <e9a19754a29c4af4a5a630c294fe6033>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0001b]\
    \ in <e9a19754a29c4af4a5a630c294fe6033>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <e9a19754a29c4af4a5a630c294fe6033>:0 \n"
  stdout: ''
  timestamp: 1660008848
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // you have to fill in the body of this function\n        int apples = s.Split(\"\
    \ \")[0];\n        int oranges = s.Split(\" \")[2];\n        long mangoes = n\
    \ - (apples + oranges);\n        return mangoes;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6\
    \ oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0z2k99pp.cs(25,22): error CS0029: Cannot implicitly convert type ''string''
    to ''int''

    /tmp/tmp0z2k99pp.cs(26,23): error CS0029: Cannot implicitly convert type ''string''
    to ''int''

    '
  timestamp: 1660008848
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] split = s.Split(new[] { \" \" }, StringSplitOptions.None);\n     \
    \   int apples = int.Parse(split[0]);\n        int oranges = int.Parse(split[3]);\n\
    \        return n - apples - oranges;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008848
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var s1 = s.Split(\"and\")[0].Split(\" \");\n        var s2 = s.Split(\"and\"\
    )[1].Split(\" \");\n        var a = int.Parse(s1[0]);\n        var o = int.Parse(s2[1]);\n\
    \        return n - a - o;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) ==\
    \ (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L))\
    \ == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"),\
    \ (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008848
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // your code here\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <022dd72ca06d48a1863fb2f5f61c338a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <022dd72ca06d48a1863fb2f5f61c338a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008848
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // s represents the number of apples and oranges in the basket\n        //\
    \ n represents the total number of fruits in the basket\n        var words = s.Split(new\
    \ char[] { ' ', 'a', 'n', 'd' }, StringSplitOptions.RemoveEmptyEntries);\n   \
    \     int a = int.Parse(words[0]);\n        int o = int.Parse(words[1]);\n   \
    \     return n - a - o;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) == (8L));\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L)) == (10L));\n\
    \    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (100L)) == (95L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (5L)) == (0L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"), (120L)) ==\
    \ (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00023]\
    \ in <439316ee8e16407da9d0edfcdab1f5be>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <439316ee8e16407da9d0edfcdab1f5be>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00023]\
    \ in <439316ee8e16407da9d0edfcdab1f5be>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <439316ee8e16407da9d0edfcdab1f5be>:0 \n"
  stdout: ''
  timestamp: 1660008848
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long mango = (n - (s.Split(' ')[0][0] - '0') - (s.Split(' ')[3][0] - '0'));\n\
    \        return mango;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) == (8L));\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L)) == (10L));\n\
    \    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (100L)) == (95L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (5L)) == (0L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"), (120L)) ==\
    \ (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f6bab4894ca54a8e831b21d15f89fdc2>:0 \n"
  stdout: ''
  timestamp: 1660008848
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // your code goes here...\n        var t = s.Replace(\"apples\", \"\").Replace(\"\
    oranges\", \"\").Replace(\"and\", \"\").Replace(\" \", \"\");\n        var total\
    \ = long.Parse(t);\n        return n - total;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3d485539e25e4be5bf48030d6ce30380>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3d485539e25e4be5bf48030d6ce30380>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008848
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] Fruits = s.Split(' ');\n        long apples = long.Parse(Fruits[0]);\n\
    \        long oranges = long.Parse(Fruits[3]);\n        if (apples == 0 && oranges\
    \ == 0)\n            return n;\n        if (apples == 0 && oranges != 0)\n   \
    \         return n - oranges;\n        if (apples != 0 && oranges == 0)\n    \
    \        return n - apples;\n        if (apples != 0 && oranges != 0)\n      \
    \      return n - apples - oranges;\n        return -1;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and\
    \ 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008848
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  s = s.Replace(\" \", \"\");\n        var parts = s.Split('a', 'o');\n     \
    \   long apples = long.Parse(parts[0]);\n        long oranges = long.Parse(parts[1]);\n\
    \        long sum = apples + oranges;\n        return n - sum;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5\
    \ apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00033]\
    \ in <e2536b6e97054d688c28df6741480731>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <e2536b6e97054d688c28df6741480731>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00033]\
    \ in <e2536b6e97054d688c28df6741480731>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <e2536b6e97054d688c28df6741480731>:0 \n"
  stdout: ''
  timestamp: 1660008848
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // Your code goes here\n        // You may also define new functions\n    \
    \    string[] strArr = s.Split(new string[] { \" and \" }, StringSplitOptions.None);\n\
    \        var numApples = Int64.Parse(strArr[0].Split(' ')[0]);\n        var numOranges\
    \ = Int64.Parse(strArr[1].Split(' ')[0]);\n        var numMangoes = n - numApples\
    \ - numOranges;\n        return numMangoes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008848
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  int sum = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if\
    \ (char.IsDigit(s[i])) {\n                sum += (int)s[i] - '0';\n          \
    \  }\n        }\n        return n - sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c71ceb9533d9434fb1893f43fed4489d>:0 \n"
  stdout: ''
  timestamp: 1660008848
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // Your code here...\n        int apples = 0;\n        int oranges = 0;\n \
    \       string[] input = s.Split(\" \");\n        foreach (string word in input)\
    \ {\n            if (word == \"apples\") {\n                apples = int.Parse(input[0]);\n\
    \            }\n            if (word == \"oranges\") {\n                oranges\
    \ = int.Parse(input[2]);\n            }\n        }\n        long result = n -\
    \ (apples + oranges);\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00053]\
    \ in <103ce970633a49ddbd733c1ce64284f8>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <103ce970633a49ddbd733c1ce64284f8>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00053]\
    \ in <103ce970633a49ddbd733c1ce64284f8>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <103ce970633a49ddbd733c1ce64284f8>:0 \n"
  stdout: ''
  timestamp: 1660008848
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long t = 0;\n        foreach (char c in s) {\n            if (c > '0' && c\
    \ <= '9')\n                t = t * 10 + (c - '0');\n        }\n        return\
    \ n - t;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c6ff85ac180d47bab1425e00a4f9e8cf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c6ff85ac180d47bab1425e00a4f9e8cf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008848
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var dict = new Dictionary<string, long>();\n        dict.Add(\"apples\", 0);\n\
    \        dict.Add(\"oranges\", 0);\n        var fruitAndNum = s.Split(' ');\n\
    \        for (int i = 0; i < fruitAndNum.Length; i+=2) {\n            dict[fruitAndNum[i+1]]\
    \ = Convert.ToInt64(fruitAndNum[i]);\n        }\n        return n - dict[\"apples\"\
    ] - dict[\"oranges\"];\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) == (8L));\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L)) == (10L));\n\
    \    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (100L)) == (95L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (5L)) == (0L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"), (120L)) ==\
    \ (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt64\
    \ (System.String value) [0x0000c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00032] in\
    \ <69c51d3d1ab447d49c218a4230b99461>:0 \n  at Problem.Main (System.String[] args)\
    \ [0x00001] in <69c51d3d1ab447d49c218a4230b99461>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt64\
    \ (System.String value) [0x0000c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00032] in\
    \ <69c51d3d1ab447d49c218a4230b99461>:0 \n  at Problem.Main (System.String[] args)\
    \ [0x00001] in <69c51d3d1ab447d49c218a4230b99461>:0 \n"
  stdout: ''
  timestamp: 1660008848
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // Your code goes here.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) ==\
    \ (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L))\
    \ == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"),\
    \ (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphhxul7cd.cs(23,24): error CS0161: ''Problem.FruitDistribution(string,
    long)'': not all code paths return a value

    '
  timestamp: 1660008848
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var parts = s.Split(new [] { \" \" }, StringSplitOptions.RemoveEmptyEntries);\n\
    \        var apples = parts[0];\n        var oranges = parts[2];\n        var\
    \ totalApples = int.Parse(apples);\n        var totalOranges = int.Parse(oranges);\n\
    \        return n - totalApples - totalOranges;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6\
    \ oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00026]\
    \ in <f51fe5055f9c44cbb1ecd48067529c09>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <f51fe5055f9c44cbb1ecd48067529c09>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00026]\
    \ in <f51fe5055f9c44cbb1ecd48067529c09>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <f51fe5055f9c44cbb1ecd48067529c09>:0 \n"
  stdout: ''
  timestamp: 1660008849
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var k = s.Split(\" \");\n        var a = k[0].TrimEnd(\" apples\".ToCharArray());\n\
    \        var b = k[2].TrimEnd(\" oranges\".ToCharArray());\n        var x = long.Parse(a);\n\
    \        var y = long.Parse(b);\n        return n - x - y;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5\
    \ apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0003b]\
    \ in <620c0c9c07af4950838cc082bef03199>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <620c0c9c07af4950838cc082bef03199>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0003b]\
    \ in <620c0c9c07af4950838cc082bef03199>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <620c0c9c07af4950838cc082bef03199>:0 \n"
  stdout: ''
  timestamp: 1660008849
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var apples = (int)s.TakeWhile(x => x != ' ').Aggregate(\"\", (x, y) => x +\
    \ y);\n        var oranges = (int)s.SkipWhile(x => x != ' ').Skip(10).TakeWhile(x\
    \ => x != ' ').Aggregate(\"\", (x, y) => x + y);\n        var mangoes = n - apples\
    \ - oranges;\n        return mangoes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzengs_qf.cs(24,22): error CS0030: Cannot convert type ''string'' to ''int''

    /tmp/tmpzengs_qf.cs(25,23): error CS0030: Cannot convert type ''string'' to ''int''

    '
  timestamp: 1660008849
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] fruit = s.Split(\" \");\n        long apple = Int64.Parse(fruit[0]);\n\
    \        long orange = Int64.Parse(fruit[2]);\n        long mango = n - (apple\
    \ + orange);\n        return mango;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00017]\
    \ in <8b2a7b60a5f145b4af007f51b4c1a31a>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <8b2a7b60a5f145b4af007f51b4c1a31a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00017]\
    \ in <8b2a7b60a5f145b4af007f51b4c1a31a>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <8b2a7b60a5f145b4af007f51b4c1a31a>:0 \n"
  stdout: ''
  timestamp: 1660008849
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // your code here\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <022dd72ca06d48a1863fb2f5f61c338a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <022dd72ca06d48a1863fb2f5f61c338a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008848
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // Write code here.\n        return -1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <847e5ef8252d4752922d588bb2919052>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <847e5ef8252d4752922d588bb2919052>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008849
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] arr = s.Split(\" \");\n        long num = long.Parse(arr[0]);\n  \
    \      if (arr[1] == \"oranges\") {\n            num = long.Parse(arr[2]);\n \
    \       }\n        return n - num;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b2c2a7d4a3b3477a8a92292651200688>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b2c2a7d4a3b3477a8a92292651200688>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008849
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long b=0,m=0;\n        for(int i=0;i<s.Length;i++) {\n            if(s[i]=='a')\n\
    \                b+=2;\n            else if(s[i]=='o')\n                b+=3;\n\
    \        }\n        m=n-b;\n        return m;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d623ab75701947ba9a6eac33b7c80f5a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d623ab75701947ba9a6eac33b7c80f5a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008849
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var splited = s.Split(new string[] { \"and\" }, StringSplitOptions.None);\n\
    \        var apples = long.Parse(splited[0].Trim().Split(' ')[0]);\n        var\
    \ oranges = long.Parse(splited[1].Trim().Split(' ')[0]);\n        return n - apples\
    \ - oranges;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008849
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // string s is the counting for number of each fruits\n        var words =\
    \ s.Split(\" \");\n        var numberOfApples = long.Parse(words[0]);\n      \
    \  var numberOfOranges = long.Parse(words[3]);\n        return n - numberOfApples\
    \ - numberOfOranges;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) == (8L));\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L)) == (10L));\n\
    \    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (100L)) == (95L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (5L)) == (0L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"), (120L)) ==\
    \ (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008849
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // Write your code here!\n        return 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6\
    \ oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cd035a9529534e56991eca0092f4c4d8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cd035a9529534e56991eca0092f4c4d8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008849
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  if (n == 0) {\n            return 0;\n        }\n        long[] d = s.Split(new\
    \ char[] { ' ', 'a', 'n', 'd', 'o', 'r', 'g', 'e', 's' }, StringSplitOptions.RemoveEmptyEntries).Select(x\
    \ => long.Parse(x)).ToArray();\n        long x = d[0];\n        long y = d[1];\n\
    \        long ans = 0;\n        for (long i = 0; i < n; i++) {\n            long\
    \ a = (i - y) / 3;\n            long b = (i - x) / 3;\n            if (x + 3 *\
    \ a + y + 3 * b == i && a >= 0 && b >= 0) {\n                ans++;\n        \
    \    }\n        }\n        return ans;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<FruitDistribution>b__0_0 (System.String x) [0x00000] in\
    \ <60920456a3044770a43d5b81f0ad4866>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00053]\
    \ in <60920456a3044770a43d5b81f0ad4866>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <60920456a3044770a43d5b81f0ad4866>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<FruitDistribution>b__0_0 (System.String x) [0x00000] in\
    \ <60920456a3044770a43d5b81f0ad4866>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in"
  stdout: ''
  timestamp: 1660008849
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long oranges = long.Parse(s.Split(' ')[0]);\n        long apples = long.Parse(s.Split('\
    \ ')[2]);\n        return n - oranges - apples;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6\
    \ oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0001b]\
    \ in <9bbb15d8b6cb4110b0b035e077e6167b>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <9bbb15d8b6cb4110b0b035e077e6167b>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0001b]\
    \ in <9bbb15d8b6cb4110b0b035e077e6167b>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <9bbb15d8b6cb4110b0b035e077e6167b>:0 \n"
  stdout: ''
  timestamp: 1660008849
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long num = 0;\n        string[] split = s.Split(\" \");\n        long apple\
    \ = Int64.Parse(split[0]);\n        long orange = Int64.Parse(split[3]);\n   \
    \     num = n - apple - orange;\n        return num;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and\
    \ 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008849
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // Write your code here\n        // To print results to the standard output\
    \ you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello\
    \ world!\");\n        string[] t = s.Split(\" \");\n        int a = Int32.Parse(t[0]);\n\
    \        int o = Int32.Parse(t[2]);\n        return n - a - o;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5\
    \ apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00017]\
    \ in <36eab6d263a049789af2e76a6330d7ee>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <36eab6d263a049789af2e76a6330d7ee>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00017]\
    \ in <36eab6d263a049789af2e76a6330d7ee>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <36eab6d263a049789af2e76a6330d7ee>:0 \n"
  stdout: ''
  timestamp: 1660008849
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // Write your code here.\n        string[] parts = s.Split(\" \");\n      \
    \  long o = Int64.Parse(parts[0]);\n        long a = Int64.Parse(parts[2]);\n\
    \        long total = n - (o + a);\n        return total;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and\
    \ 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00017]\
    \ in <2a0f5fbf325846348a335ef7b168d1ad>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <2a0f5fbf325846348a335ef7b168d1ad>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00017]\
    \ in <2a0f5fbf325846348a335ef7b168d1ad>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <2a0f5fbf325846348a335ef7b168d1ad>:0 \n"
  stdout: ''
  timestamp: 1660008849
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long total_apples = 0;\n        long total_oranges = 0;\n        string[] substrs\
    \ = s.Split(' ');\n        total_apples = long.Parse(substrs[0]);\n        total_oranges\
    \ = long.Parse(substrs[3]);\n        return n - (total_apples + total_oranges);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008849
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  if (s == null || n <= 0) {\n            return -1;\n        }\n        // Write\
    \ your code here\n        return -1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8a599f429ac44b6b9d01acfe9c7949d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8a599f429ac44b6b9d01acfe9c7949d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008849
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long numOfApples = 0, numOfOranges = 0;\n        long sum = 0;\n        string\
    \ tmp = \"\";\n        for (int i = 0; i < s.Length; i++) {\n            if (s[i]\
    \ == ' ') {\n                if (sum == 0) {\n                    numOfApples\
    \ = long.Parse(tmp);\n                    tmp = \"\";\n                    sum\
    \ = 1;\n                } else {\n                    numOfOranges = long.Parse(tmp);\n\
    \                    tmp = \"\";\n                }\n            } else if (s[i]\
    \ != 'a' && s[i] != 'n' && s[i] != 'd') {\n                tmp += s[i];\n    \
    \        }\n        }\n        return n - numOfApples - numOfOranges;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0004c]\
    \ in <128603295670447f9693339ecdf14fcc>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <128603295670447f9693339ecdf14fcc>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0004c]\
    \ in <128603295670447f9693339ecdf14fcc>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <128603295670447f9693339ecdf14fcc>:0 \n"
  stdout: ''
  timestamp: 1660008849
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var fruits = s.Split(new[] { \" and \" }, StringSplitOptions.None);\n     \
    \   var array = new long[2];\n        for (int i = 0; i < 2; i++) {\n        \
    \    var fruit = fruits[i].Split(new[] { \" \" }, StringSplitOptions.None);\n\
    \            array[i] = long.Parse(fruit[0]);\n        }\n        return n - array[0]\
    \ - array[1];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008849
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var s_split = s.Split(new char[] { ' ' });\n        var apples = Int64.Parse(s_split[0]);\n\
    \        var oranges = Int64.Parse(s_split[2]);\n        var mangoes = n - apples\
    \ - oranges;\n        return mangoes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0001c]\
    \ in <e43a91255f334285a19cb6717937f722>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <e43a91255f334285a19cb6717937f722>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x0001c]\
    \ in <e43a91255f334285a19cb6717937f722>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <e43a91255f334285a19cb6717937f722>:0 \n"
  stdout: ''
  timestamp: 1660008849
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var numbers = s.Split(' ');\n        var total = int.Parse(numbers[0]) + int.Parse(numbers[3]);\n\
    \        return n - total;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) ==\
    \ (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L))\
    \ == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"),\
    \ (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008849
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] parts = s.Split(\" \");\n        long a = Convert.ToInt64(parts[0]);\n\
    \        long o = Convert.ToInt64(parts[3]);\n        return n - a - o;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008849
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  // write your code here\n        long[] num = new long[2];\n        int idx\
    \ = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (s[i] ==\
    \ ' ') {\n                num[idx] = long.Parse(s.Substring(0, i));\n        \
    \        s = s.Substring(i + 1);\n                break;\n            }\n    \
    \    }\n        s = s.Substring(0, s.Length - 1);\n        idx = 1;\n        for\
    \ (int i = 0; i < s.Length; i++) {\n            if (s[i] == ' ') {\n         \
    \       num[idx] = long.Parse(s.Substring(0, i));\n                s = s.Substring(i\
    \ + 1);\n                break;\n            }\n        }\n        return n -\
    \ num[0] - num[1];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00087]\
    \ in <c3bf92a46cc346f3a9ff0cdfd31de2da>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <c3bf92a46cc346f3a9ff0cdfd31de2da>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00087]\
    \ in <c3bf92a46cc346f3a9ff0cdfd31de2da>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <c3bf92a46cc346f3a9ff0cdfd31de2da>:0 \n"
  stdout: ''
  timestamp: 1660008849
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var stringArr = s.Split(' ');\n        var apple = Convert.ToInt64(stringArr[0]);\n\
    \        var orange = Convert.ToInt64(stringArr[3]);\n        var total = n -\
    \ (apple + orange);\n        return total;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L))\
    \ == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"),\
    \ (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008849
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var arr = s.Split(' ');\n        long apples = long.Parse(arr[0]);\n      \
    \  long oranges = long.Parse(arr[2]);\n        long mangoes = n - apples - oranges;\n\
    \        return mangoes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) == (8L));\n\
    \    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L)) == (10L));\n\
    \    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"), (3L)) == (2L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (100L)) == (95L));\n\
    \    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"), (5L)) == (0L));\n\
    \    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"), (120L)) ==\
    \ (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014]\
    \ in <5ab9dd441faf4130914019eb08e0a7fe>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <5ab9dd441faf4130914019eb08e0a7fe>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00014]\
    \ in <5ab9dd441faf4130914019eb08e0a7fe>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <5ab9dd441faf4130914019eb08e0a7fe>:0 \n"
  stdout: ''
  timestamp: 1660008850
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  long ans = 0;\n        int i = 0;\n        while (i < s.Length && s[i] != '\
    \ ') {\n            ans = ans * 10 + (s[i] - '0');\n            i++;\n       \
    \ }\n        while (i < s.Length && s[i] != ' ') {\n            i++;\n       \
    \ }\n        i += 4;\n        while (i < s.Length && s[i] != ' ') {\n        \
    \    ans = ans * 10 + (s[i] - '0');\n            i++;\n        }\n        return\
    \ n - ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7474baf3449b475bb5f430c69c8c41c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7474baf3449b475bb5f430c69c8c41c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1660008850
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var s_ = s.Split(' ');\n        var a = Int64.Parse(s_[0]);\n        var o\
    \ = Int64.Parse(s_[3]);\n        return n - a - o;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6\
    \ oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008850
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var split = s.Split(\" \");\n        var appleCount = Convert.ToInt64(split[0]);\n\
    \        var orangeCount = Convert.ToInt64(split[3]);\n        return n - appleCount\
    \ - orangeCount;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008850
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  int index = s.IndexOf(\" and \");\n        int apples = int.Parse(s.Substring(0,\
    \ index));\n        int oranges = int.Parse(s.Substring(index + 5));\n       \
    \ return n - apples - oranges;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (19L)) ==\
    \ (8L));\n    Debug.Assert(FruitDistribution((\"5 apples and 6 oranges\"), (21L))\
    \ == (10L));\n    Debug.Assert(FruitDistribution((\"0 apples and 1 oranges\"),\
    \ (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"1 apples and 0 oranges\"\
    ), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"2 apples and 3 oranges\"\
    ), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"1 apples and 100 oranges\"\
    ), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00015]\
    \ in <505d5a9abef444f3a9992790634f0782>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <505d5a9abef444f3a9992790634f0782>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Input string was not in a correct format.\n\
    \  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow, System.String\
    \ overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.FruitDistribution (System.String s, System.Int64 n) [0x00015]\
    \ in <505d5a9abef444f3a9992790634f0782>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <505d5a9abef444f3a9992790634f0782>:0 \n"
  stdout: ''
  timestamp: 1660008850
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  int apples = int.Parse(s.Split(\" \")[0]);\n        int oranges = int.Parse(s.Split(\"\
    \ \")[3]);\n        return n - apples - oranges;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6\
    \ oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008850
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  string[] fruit_counts = s.Split(\" and \");\n        int apple_count = int.Parse(fruit_counts[0].Split(\"\
    \ \")[0]);\n        int orange_count = int.Parse(fruit_counts[1].Split(\" \")[0]);\n\
    \        return n - (apple_count + orange_count);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and 6\
    \ oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008850
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var ss = s.Split(' ');\n        return n - long.Parse(ss[0]) - long.Parse(ss[3]);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008850
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var new_string = s.Split(\" \");\n        var total_fruits = 0;\n        for\
    \ (int i = 0; i < new_string.Length; i++) {\n            if(new_string[i] == \"\
    apples\") {\n                total_fruits += Int32.Parse(new_string[i-1]);\n \
    \           } else if(new_string[i] == \"oranges\") {\n                total_fruits\
    \ += Int32.Parse(new_string[i-1]);\n            }\n        }\n        var number_of_mangoes\
    \ = n - total_fruits;\n        return number_of_mangoes;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"5 apples and\
    \ 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"5 apples\
    \ and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008850
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var str = s.Split(' ');\n        var a = Int64.Parse(str[0]);\n        var\
    \ o = Int64.Parse(str[3]);\n        var m = n - a - o;\n        return m;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008850
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // In this task, you will be given a string that represents\
    \ a number of apples and oranges \n    // that are distributed in a basket of\
    \ fruit this basket contains \n    // apples, oranges, and mango fruits. Given\
    \ the string that represents the total number of \n    // the oranges and apples\
    \ and an integer that represent the total number of the fruits \n    // in the\
    \ basket return the number of the mango fruits in the basket.\n    // for examble:\n\
    \    // >>> FruitDistribution((\"5 apples and 6 oranges\"), (19L))\n    // (8L)\n\
    \    // >>> FruitDistribution((\"0 apples and 1 oranges\"), (3L))\n    // (2L)\n\
    \    // >>> FruitDistribution((\"2 apples and 3 oranges\"), (100L))\n    // (95L)\n\
    \    // >>> FruitDistribution((\"100 apples and 1 oranges\"), (120L))\n    //\
    \ (19L)\n    public static long FruitDistribution(string s, long n) {\n      \
    \  var appleDistribution = long.Parse(s.Split(\" and \")[0].Split(\" \")[0]);\n\
    \        var orangeDistribution = long.Parse(s.Split(\" and \")[1].Split(\" \"\
    )[0]);\n        return n - appleDistribution - orangeDistribution;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
    5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
    0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
    2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
    1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660008850

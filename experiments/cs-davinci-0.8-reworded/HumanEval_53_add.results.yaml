language: cs
name: HumanEval_53_add
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long carry = x & y;\n        long result = x ^ y;\n        while
    (carry != 0) {\n            long shiftedcarry = carry << 1;\n            carry
    = result & shiftedcarry;\n            result ^= shiftedcarry;\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        while (y != 0) {\n            long carry = x & y;\n            x
    = x ^ y;\n            y = carry << 1;\n        }\n        return x;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n
    \   Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) ==
    (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long a = (x & y) << 1;\n        long b = x ^ y;\n        if
    (a == 0) return b;\n        return Add(a, b);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        // Insert your solution here\n        return -1;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L))
    == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <190668f892ae48afa8b60b897790922a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <190668f892ae48afa8b60b897790922a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        if (y == 0) {\n            return x;\n        } else {\n
    \           return Add(x ^ y, (x & y) << 1);\n        }\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long res = x + y;\n        return res;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n
    \   Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) ==
    (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        throw new NotImplementedException();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n
    \   Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) ==
    (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation
    is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <28c48412b75c4017a4f97380fd197d97>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method
    or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]
    in <28c48412b75c4017a4f97380fd197d97>:0 \n"
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long result = x + y;\n        // Check for overflow\n        Debug.Assert(result
    > x);\n        return result;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))
    == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Add (System.Int64 x, System.Int64 y) [0x00000] in <bccb068acdb84b29a6b2dbccb7ba8d29>:0
    \n  at Problem.Main (System.String[] args) [0x00000] in <bccb068acdb84b29a6b2dbccb7ba8d29>:0
    \n"
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        if (y == 0) {\n            return x;\n        }\n        else
    {\n            return Add(x ^ y, (x & y) << 1);\n        }\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n
    \   Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) ==
    (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        var ((xh, xl), (yh, yl)) = Split(x, y);\n        var L =
    xl + yl;\n        var H = (xh + yh) + (L >> 64);\n        return Join(H, L);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0aag1sil.cs(15,36): error CS0103: The name ''Split'' does not exist in
    the current context

    /tmp/tmp0aag1sil.cs(15,15): error CS8130: Cannot infer the type of implicitly-typed
    deconstruction variable ''xh''.

    /tmp/tmp0aag1sil.cs(15,19): error CS8130: Cannot infer the type of implicitly-typed
    deconstruction variable ''xl''.

    /tmp/tmp0aag1sil.cs(15,25): error CS8130: Cannot infer the type of implicitly-typed
    deconstruction variable ''yh''.

    /tmp/tmp0aag1sil.cs(15,29): error CS8130: Cannot infer the type of implicitly-typed
    deconstruction variable ''yl''.

    /tmp/tmp0aag1sil.cs(18,16): error CS0103: The name ''Join'' does not exist in
    the current context

    '
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long xy = x ^ y;\n        long xa = x & y;\n        long
    a = xa << 1;\n        return Add(xy, a);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1660028111
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long r = 0L;\n        long c = 0L;\n        c = (x & y)
    << 1;\n        r = x ^ y;\n        while (c != 0L) {\n            long t = r;\n
    \           r = r ^ c;\n            c = (t & c) << 1;\n        }\n        return
    r;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        // x + y = x XOR y + 2 * (x AND y)\n        long a = x ^
    y;\n        long b = (x & y) << 1;\n        return Add(a, b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n
    \   Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) ==
    (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1660028111
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return (long)((ulong)x + (ulong)y);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        // TODO: your code here\n        return 0;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n
    \   Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) ==
    (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8cab0e7abe1749a28770d34d2eae8525>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8cab0e7abe1749a28770d34d2eae8525>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long r = x;\n        r += y;\n        return r;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L))
    == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        // TODO: Implement (Problem 1)\n        return x + y;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long answer = x;\n        for (long i = 0; i < y; i++) {\n
    \           answer++;\n        }\n        return answer;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        // Your implementation goes here\n        // return default(long);\n
    \       return (x + y);\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) ==
    (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long result = x + y;\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n
    \   Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) ==
    (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long a = x ^ y;\n        long b = (x & y) << 1;\n        while
    (b != 0) {\n            long c = a ^ b;\n            long d = (a & b) << 1;\n
    \           a = c;\n            b = d;\n        }\n        return a;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L))
    == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        //\n        // YOUR CODE GOES HERE\n        //\n        return
    0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <710b65a7a84043ffb6d579a86e9f1b86>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <710b65a7a84043ffb6d579a86e9f1b86>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        while (y != 0) {\n            var carry = x & y;\n            x
    = x ^ y;\n            y = carry << 1;\n        }\n        return x;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n
    \   Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) ==
    (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long z = x + y;\n        return z;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long r = x + y;\n        if (x < 0) {\n            if (y
    < 0) {\n                if (r >= 0) {\n                    throw new System.OverflowException();\n
    \               }\n            } else {\n                if (r < 0) {\n                    throw
    new System.OverflowException();\n                }\n            }\n        } else
    {\n            if (y > 0) {\n                if (r <= 0) {\n                    throw
    new System.OverflowException();\n                }\n            } else {\n                if
    (r > 0) {\n                    throw new System.OverflowException();\n                }\n
    \           }\n        }\n        return r;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.OverflowException: Arithmetic operation
    resulted in an overflow.\n  at Problem.Add (System.Int64 x, System.Int64 y) [0x00078]
    in <1d66068814f34ebdab65ef0a0a2b4ff9>:0 \n  at Problem.Main (System.String[] args)
    [0x00014] in <1d66068814f34ebdab65ef0a0a2b4ff9>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.OverflowException: Arithmetic operation resulted in an overflow.\n  at
    Problem.Add (System.Int64 x, System.Int64 y) [0x00078] in <1d66068814f34ebdab65ef0a0a2b4ff9>:0
    \n  at Problem.Main (System.String[] args) [0x00014] in <1d66068814f34ebdab65ef0a0a2b4ff9>:0
    \n"
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return (long)((ulong)x + (ulong)y);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        // Your code goes here\n        return x + y;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n
    \   Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) ==
    (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        if (x < y) {\n            return Add(y, x);\n        }\n
    \       return x + y;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        // Your code goes here\n        return x + y;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n
    \   Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) ==
    (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long result = 0;\n        long carryIn = 0;\n        for
    (int i = 0; i < 64; i++) {\n            long xi = (x >> i) & 1;\n            long
    yi = (y >> i) & 1;\n            long s = xi ^ yi ^ carryIn;\n            long
    carryOut = (xi & yi) | (xi & carryIn) | (yi & carryIn);\n            result |=
    (s << i);\n            carryIn = carryOut;\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long k = x + y;\n        // Subtract two numbers x and y\n
    \       // >>> Sub((2L), (3L))\n        // (4294967293L)\n        // >>> Sub((5L),
    (7L))\n        // (4294967288L)\n        long Sub(long x, long y) {\n            long
    k = x - y;\n            // Multiply two numbers x and y\n            // >>> Mul((2L),
    (3L))\n            // (6L)\n            // >>> Mul((5L), (7L))\n            //
    (35L)\n            long Mul(long x, long y) {\n                long k = x * y;\n
    \               // Divide two numbers x and y\n                // >>> Div((2L),
    (3L))\n                // (0L)\n                // >>> Div((5L), (7L))\n                //
    (0L)\n                long Div(long x, long y) {\n                    long k =
    x / y;\n                    // Compare two numbers x and y\n                    //
    >>> Cmp((2L), (3L))\n                    // (1L)\n                    // >>> Cmp((5L),
    (7L))\n                    // (1L)\n                    long Cmp(long x, long
    y) {\n                        long k = x.CompareTo(y);\n                        //
    Return the smallest of two numbers x and y\n                        // >>> Min((2L),
    (3L))\n                        // (2L)\n                        // >>> Min((5L),
    (7L))\n                        // (5L)\n                        long Min(long
    x, long y) {\n                            long k = Math.Min(x, y);\n                            //
    Return the greatest of two numbers x and y\n                            // >>>
    Max((2L), (3L))\n                            // (3L)\n                            //
    >>> Max((5L), (7L))\n                            // (7L)\n                            long
    Max(long x, long y) {\n                                long k = Math.Max(x, y);\n
    \                               // Power two numbers x and y\n                                //
    >>> Pow((2L), (3L))\n                                // (8L)\n                                //
    >>> Pow((5L), (7L\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo16737hc.cs(63,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpo16737hc.cs(71,2): error CS1513: } expected

    '
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long a = x + y;\n        if (a < 0) {\n            throw
    new OverflowException();\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        if (x == 0) {\n            return y;\n        }\n        return
    Add(y, x ^ y);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1660028112
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long t;\n        if (x == 0) {\n            return y;\n
    \       }\n        if (y == 0) {\n            return x;\n        }\n        for
    (; ; ) {\n            t = x ^ y;\n            y = (x & y) << 1;\n            x
    = t;\n            if (y == 0) {\n                break;\n            }\n        }\n
    \       return x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long r = 0L;\n        long c = 0L;\n        long xx = x;\n
    \       long yy = y;\n        for (long i = 0L; i < 64L; i++) {\n            long
    a = (((long)(xx & 1L)));\n            long b = (((long)(yy & 1L)));\n            r
    = ((r << 1L) | ((a ^ b) ^ c));\n            c = (((a & b) | (b & c)) | (c & a));\n
    \           xx = (((long)(xx >> 1L)));\n            yy = (((long)(yy >> 1L)));\n
    \       }\n        return r;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))
    == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2jugqk_y.cs(22,19): error CS0019: Operator ''<<'' cannot be applied to
    operands of type ''long'' and ''long''

    /tmp/tmp2jugqk_y.cs(24,27): error CS0019: Operator ''>>'' cannot be applied to
    operands of type ''long'' and ''long''

    /tmp/tmp2jugqk_y.cs(25,27): error CS0019: Operator ''>>'' cannot be applied to
    operands of type ''long'' and ''long''

    '
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        int CLZ1 = CLZ(x);\n        int CLZ2 = CLZ(y);\n        if
    (CLZ1 != CLZ2) {\n            if (CLZ1 > CLZ2) {\n                x >>= CLZ1 -
    CLZ2;\n            } else {\n                y >>= CLZ2 - CLZ1;\n            }\n
    \       }\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1e9lzwg7.cs(15,20): error CS0103: The name ''CLZ'' does not exist in the
    current context

    /tmp/tmp1e9lzwg7.cs(16,20): error CS0103: The name ''CLZ'' does not exist in the
    current context

    '
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        // TODO: Implement this function\n        //throw new NotImplementedException();\n
    \       return x + y;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        const long m = 0x7fffffffffffffff;\n        return (x +
    y) % m;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return (x + y);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        // Calculate sum of two numbers, no overflow\n        return
    (x + y);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        // Fill this in.\n        long sum = 0;\n        long carry
    = 0;\n        while (y != 0)\n        {\n            sum = x ^ y;\n            carry
    = (x & y) << 1;\n            x = sum;\n            y = carry;\n        }\n        return
    x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        if (x == 0) {\n            return y;\n        } else if
    (y == 0) {\n            return x;\n        } else {\n            return Add(x
    ^ y, (x & y) << 1);\n        }\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))
    == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long carry, sum;\n        carry = x & y;\n        sum =
    x ^ y;\n        while (carry != 0) {\n            long shiftedcarry = carry <<
    1;\n            carry = sum & shiftedcarry;\n            sum = sum ^ shiftedcarry;\n
    \       }\n        return sum;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))
    == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        if (x < 0L) {\n            throw new Exception(\"Failed
    precondition of Add: x < 0L\");\n        }\n        if (y < 0L) {\n            throw
    new Exception(\"Failed precondition of Add: y < 0L\");\n        }\n        long
    result = x + y;\n        if (result < 0L) {\n            throw new Exception(\"Failed
    postcondition of Add: Add(x, y) < 0L\");\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        if (x == 0) {\n            return y;\n        }\n        else
    if (y == 0) {\n            return x;\n        }\n        else {\n            return
    x + y;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        int count = 0;\n        long z = 0;\n        while (y !=
    0) {\n            z = x ^ y;\n            y = (x & y) << 1;\n            x = z;\n
    \           count++;\n        }\n        Console.WriteLine(count);\n        return
    z;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <096a1d2c80294a2db05482b6d0b3a6bc>:0
    \n"
  stdout: '1

    0

    2

    3

    3

    '
  timestamp: 1660028107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return (long)((BigInteger)x + (BigInteger)y);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n
    \   Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) ==
    (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long z = x + y;\n        // TODO: Write your code here\n
    \       // throw new NotImplementedException();\n        return z;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n
    \   Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) ==
    (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long z = x + y;\n        return z;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        // Implement your solution here\n\n        return x + y;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return (x + y);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        // Your code goes here.\n        return x + y;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L))
    == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        const long mask = 0xFFFFFFFF;\n        long tmp1 = (x &
    mask) + (y & mask);\n        long tmp2 = ((x >> 32) + (y >> 32) + (tmp1 >> 32))
    & mask;\n        return (tmp2 << 32) | (tmp1 & mask);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        //return x + y;\n        const int N = 2000000;\n        long[]
    res = new long[N];\n        int carry = 0;\n        int i = 0;\n        while
    (x > 0 || y > 0) {\n            long s = x % 10 + y % 10 + carry;\n            carry
    = (int)(s / 10);\n            res[i] = s % 10;\n            i++;\n            x
    /= 10;\n            y /= 10;\n        }\n        while (carry > 0) {\n            res[i]
    = carry % 10;\n            carry /= 10;\n            i++;\n        }\n        long
    r = 0;\n        for (int j = 0; j < i; j++) {\n            r = r * 10 + res[j];\n
    \       }\n        return r;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))
    == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6b58e671cd24a2e8a5f5305498a2f70>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6b58e671cd24a2e8a5f5305498a2f70>:0
    \n"
  stdout: ''
  timestamp: 1660028107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return y == 0 ? x : Add(x ^ y, (x & y) << 1);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n
    \   Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) ==
    (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long t = x + y;\n        return t;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        // Why is the `const` needed?\n        const long n = (long)
    1e9 + 7;\n        long ret = x + y;\n        if (ret < 0) {\n            ret +=
    n;\n        }\n        return ret % n;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        if (y == 0) {\n            return x;\n        } else {\n
    \           return Add(x ^ y, (x & y) << 1);\n        }\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        if (x < 0) {\n            return Add(-x, -y);\n        }\n
    \       if (y < 0) {\n            return Add(x, -y);\n        }\n        if (x
    < y) {\n            return Add(y, x);\n        }\n        long z = x + y;\n        return
    z;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long output = x + y;\n        if (output < 0) {\n            //
    In case of integer overflow\n            output += (1L << 32);\n        }\n        return
    output;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        if (x < 0)\n            throw new System.ArgumentException(\"x
    must be non-negative\", \"x\");\n        if (y < 0)\n            throw new System.ArgumentException(\"y
    must be non-negative\", \"y\");\n        if (x == 0)\n            return y;\n
    \       if (y == 0)\n            return x;\n        if (x > 0xffffffffffffffff
    - y)\n            throw new System.ArgumentException(\"Result too large\", \"x
    + y\");\n        return x + y;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))
    == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4o9518oh.cs(23,17): error CS0034: Operator ''-'' is ambiguous on operands
    of type ''ulong'' and ''long''

    '
  timestamp: 1660028107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long z = x + y;\n        return z;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long xor, and, temp;\n        and = x & y;\n        xor
    = x ^ y;\n        while (and != 0) {\n            and <<= 1;\n            temp
    = xor ^ and;\n            and &= xor;\n            xor = temp;\n        }\n        return
    xor;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        if (y == 0) {\n            return x;\n        }\n        return
    Add(x ^ y, (x & y) << 1);\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) ==
    (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return ((x) + (y));\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        int iterations = 0;\n        // Inputs: two numbers x and
    y\n        // Output: the sum of x and y\n        // Constraints: x and y are
    not allowed to change\n        //              You cannot declare new variables\n
    \       // Tips:\n        // x ^ y stores the bits that are different between
    x and y\n        // x & y stores the bits that are the same between x and y\n
    \       // x &= (x - 1) drops the lowest set bit of x\n        // x << 1 multiplies
    x by 2\n        // x << n multiplies x by 2^n\n        // x >> n divides x by
    2^n\n\n        // Try to add x and y by recursively calling add\n\n        iterations++;\n
    \       return y;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <aef8378fdb2c4d8c8c68985927af9662>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <aef8378fdb2c4d8c8c68985927af9662>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660028107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long sum = 0;\n        long carry = 0;\n        while (y
    != 0) {\n            sum = x ^ y;\n            carry = (x & y) << 1;\n            x
    = sum;\n            y = carry;\n        }\n        return x;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n
    \   Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) ==
    (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return BigInteger.Add(x, y);\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpetp5x5vp.cs(15,16): error CS0266: Cannot implicitly convert type ''System.Numerics.BigInteger''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660028107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long temp;\n        if (x == 0) {\n            return y;\n
    \       }\n        if (y == 0) {\n            return x;\n        }\n        if
    (x < 0 && y < 0) {\n            return Add(Add(~x, ~y), 1);\n        }\n        if
    (x < 0) {\n            return Sub(y, ~x);\n        }\n        if (y < 0) {\n            return
    Sub(x, ~y);\n        }\n        while (y != 0) {\n            temp = x ^ y;\n
    \           y = (x & y) << 1;\n            x = temp;\n        }\n        return
    x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_sd841p1.cs(26,20): error CS0103: The name ''Sub'' does not exist in the
    current context

    /tmp/tmp_sd841p1.cs(29,20): error CS0103: The name ''Sub'' does not exist in the
    current context

    '
  timestamp: 1660028107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return (x) + (y);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        if (x < 0 || y < 0) {\n            throw new ArgumentException(\"Both
    arguments must be positive.\");\n        }\n        return x + y;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n
    \   Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) ==
    (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028108
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long c = x ^ y;\n        long s = x & y;\n        s = s
    << 1;\n        while (s != 0) {\n            long temp = c;\n            c = c
    ^ s;\n            s = temp & s;\n            s = s << 1;\n        }\n        return
    c;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028108
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        // Check if either argument is negative\n        if (x <
    0 || y < 0) {\n            throw new ArgumentException(\"Negative values not allowed\");\n
    \       }\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028108
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return (0);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <06155f82392f48ef97dca7d6a0df4b5a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <06155f82392f48ef97dca7d6a0df4b5a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660028108
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        // return x + y;\n        return BitOp.Add(x, y);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L))
    == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpggwjdwk6.cs(16,16): error CS0103: The name ''BitOp'' does not exist in
    the current context

    '
  timestamp: 1660028108
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return (x + y);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long sum = x + y;\n        return sum;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n
    \   Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) ==
    (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028108
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        // Your code goes here.\n        return x + y;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L))
    == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long carry = (x & y) << 1;\n        long sum = x ^ y;\n
    \       if (carry != 0)\n            return Add(sum, carry);\n        else\n            return
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028108
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        if (x == 0) return y;\n        if (y == 0) return x;\n        if
    (x < 0) throw new Exception();\n        if (y < 0) throw new Exception();\n        return
    Add(x ^ y, (x & y) << 1);\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) ==
    (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028108
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        throw new NotImplementedException();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n
    \   Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) ==
    (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation
    is not implemented.\n  at Problem.Main (System.String[] args) [0x00001] in <28c48412b75c4017a4f97380fd197d97>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method
    or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00001]
    in <28c48412b75c4017a4f97380fd197d97>:0 \n"
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return (long)((ulong)x + (ulong)y);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        if (x < 0)\n            throw new Exception(\"Assertion:
    x >= 0\");\n        if (y < 0)\n            throw new Exception(\"Assertion: y
    >= 0\");\n        return x + y;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))
    == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028108
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return (long)((BigInteger)x + (BigInteger)y);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n
    \   Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) ==
    (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        // replace with your solution\n        return x + y;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L))
    == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028108
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        int x_mask = (int) x & 0xffffffff;\n        int y_mask =
    (int) y & 0xffffffff;\n        long ans = x_mask + y_mask;\n        return ans;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcq58qmgq.cs(15,22): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpcq58qmgq.cs(16,22): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660028108
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        // Math.\n        return x + y;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028108
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long ans = x + y;\n        if ((ans >= 0) != (x >= 0) &&
    (ans >= 0) != (y >= 0))\n            throw new Exception(\"Addition overflow\");\n
    \       return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),
    (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),
    (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028108
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long z = x + y;\n        return z;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return 0;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))
    == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2e2816908fb54fbea17096e81ac4ed20>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2e2816908fb54fbea17096e81ac4ed20>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660028108
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        while (y != 0) {\n            long carry = x & y;\n            x
    = x ^ y;\n            y = carry << 1;\n        }\n        return x;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n
    \   Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) ==
    (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        // Your code here\n        return (x + y);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n
    \   Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) ==
    (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028108
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        if (x == 0) return y;\n        if (y == 0) return x;\n        return
    Add(x ^ y, (x & y) << 1);\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) ==
    (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028108
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        long result = 0;\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n
    \   Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) ==
    (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),
    (5L)) == (12L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c082df1a1e0a467195ac9c3dec1bfdef>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c082df1a1e0a467195ac9c3dec1bfdef>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660028108
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Add two numbers x and y\n    // >>> Add((2L), (3L))\n    //
    (5L)\n    // >>> Add((5L), (7L))\n    // (12L)\n    public static long Add(long
    x, long y) {\n        return x + y;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),
    (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),
    (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660028106

name: HumanEval_64_vowels_count
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Write a function vowels_count which takes a string representing\n\
  \    // a word as input and returns the number of vowels in the string.\n    //\
  \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    // vowel,\
  \ but only when it is at the end of the given word.\n    // Example:\n    // >>>\
  \ VowelsCount((\"abcde\"))\n    // (2L)\n    // >>> VowelsCount((\"ACEDY\"))\n \
  \   // (3L)\n    public static long VowelsCount(string s) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(VowelsCount((\"\
  abcde\")) == (2L));\n    Debug.Assert(VowelsCount((\"Alone\")) == (3L));\n    Debug.Assert(VowelsCount((\"\
  key\")) == (2L));\n    Debug.Assert(VowelsCount((\"bye\")) == (1L));\n    Debug.Assert(VowelsCount((\"\
  keY\")) == (2L));\n    Debug.Assert(VowelsCount((\"bYe\")) == (1L));\n    Debug.Assert(VowelsCount((\"\
  ACEDY\")) == (3L));\n    }\n\n}\n"
completions: ['        return s.ToLower().Count(c => "aeiouy".Contains(c));', '        throw
    new NotImplementedException();', "        long vowels = 0;\n        char[] Vowels\
    \ = new char[] { 'a', 'e', 'i', 'o', 'u', 'y' };\n        for (int i = 0; i <\
    \ s.Length; i++) {\n            if (Vowels.Contains(s[i])) {\n               \
    \ vowels++;\n            }\n        }\n        if (s[s.Length - 1] == 'y') {\n\
    \            vowels--;\n        }\n        return vowels;", "        return s.Count(c\
    \ => c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' &&\
    \ s.IndexOf(c) == s.Length - 1));", '        throw new NotImplementedException();',
  "        string Vowels = \"aeiou\";\n        long count = 0;\n        char[] c =\
    \ s.ToCharArray();\n        for (int i = 0; i < c.Length; i++) {\n           \
    \ if (Vowels.Contains(c[i].ToString().ToLower())) {\n                count++;\n\
    \            }\n        }\n        if (c[c.Length - 1].ToString().ToLower() ==\
    \ \"y\") {\n            count++;\n        }\n        return count;", '        return
    0;', "        var count = 0L;\n        var lastVowel = '\\0';\n        foreach\
    \ (var letter in s) {\n            if (IsVowel(letter)) {\n                if\
    \ (lastVowel != letter) {\n                    count++;\n                }\n \
    \               lastVowel = letter;\n            } else {\n                lastVowel\
    \ = '\\0';\n            }\n        }\n        return count;", "        long v\
    \ = 0;\n        char[] vowels = { 'a', 'e', 'i', 'o', 'u', 'y' };\n        foreach\
    \ (char c in s) {\n            if (vowels.Contains(c)) {\n                v++;\n\
    \            }\n        }\n        if (vowels.Contains(s[s.Length - 1])) {\n \
    \           v--;\n        }\n        return v;", '        throw new NotImplementedException();',
  "        int count = 0;\n        char[] vowels = { 'a', 'e', 'i', 'o', 'u', 'y'\
    \ };\n        char[] checkVowels = { 'a', 'e', 'i', 'o', 'u' };\n        int lastChar\
    \ = s.Length - 1;\n        for (int i = 0; i < s.Length; i++) {\n            for\
    \ (int j = 0; j < checkVowels.Length; j++) {\n                if (s[i] == checkVowels[j])\
    \ {\n                    count++;\n                }\n            }\n        \
    \    if (s[i] == 'y' && i != lastChar) {\n                count++;\n         \
    \   }\n        }\n        return count;", "        long len = s.Length;\n    \
    \    long answer = 0;\n        for (int i = 0; i < len; i++) {\n            if\
    \ ((s[i] == 'a') || (s[i] == 'e') || (s[i] == 'i') || (s[i] == 'o') || (s[i] ==\
    \ 'u')) {\n                answer++;\n            }\n            if ((i == len\
    \ - 1) && (s[i] == 'y')) {\n                answer++;\n            }\n       \
    \ }\n        return answer;", "        long n = 0;\n        int vowelsLength =\
    \ \"aeiou\".Length;\n        bool yIsVowel = false;\n        for (int i = 0; i\
    \ < s.Length; i++) {\n            bool isVowel = false;\n            for (int\
    \ j = 0; j < vowelsLength; j++) {\n                if (s[i] == \"aeiou\"[j]) {\n\
    \                    isVowel = true;\n                    break;\n           \
    \     }\n            }\n            if (s[i] == 'y') {\n                yIsVowel\
    \ = true;\n            } else {\n                yIsVowel = false;\n         \
    \   }\n            if (isVowel || yIsVowel) {\n                n++;\n        \
    \    }\n        }\n        return n;", "        var count = 0L;\n        var isVowel\
    \ = false;\n        for (var i = 0; i < s.Length; i++) {\n            if (i <\
    \ s.Length - 1) {\n                isVowel = (s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u');\n            } else {\n             \
    \   isVowel = (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u' || s[i] == 'y');\n            }\n            if (isVowel) {\n       \
    \         count++;\n            }\n        }\n        return count;", '        throw
    new NotImplementedException();', "        int counter = 0;\n        bool atEnd\
    \ = false;\n        for (int i = 0; i < s.Length; i++) {\n            char c =\
    \ s[i];\n            if (i == s.Length - 1) {\n                atEnd = true;\n\
    \            }\n            if (isVowel(c, atEnd)) {\n                counter++;\n\
    \            }\n        }\n        return counter;", "        // REPLACE THIS\
    \ LINE WITH YOUR CODE\n        long count = 0;\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            switch (s[i]) {\n                case 'a':\n           \
    \     case 'e':\n                case 'i':\n                case 'o':\n      \
    \          case 'u':\n                    count++;\n                    break;\n\
    \                case 'y':\n                    if (i == s.Length - 1) {\n   \
    \                     count++;\n                    }\n                    break;\n\
    \            }\n        }\n        return count;", "        var set = new HashSet<char>\
    \ { 'a', 'e', 'i', 'o', 'u', 'y' };\n        return s.Count(c => set.Contains(c));",
  '        throw new NotImplementedException();', '        throw new NotImplementedException();',
  "        long n = 0;\n        for (int i = 0; i < s.Length; i++) {\n           \
    \ switch (s[i]) {\n                case 'a': case 'e': case 'i': case 'o': case\
    \ 'u':\n                    n++;\n                    break;\n               \
    \ case 'y':\n                    if (i + 1 == s.Length) {\n                  \
    \      n++;\n                    }\n                    break;\n            }\n\
    \        }\n        return n;", '        return s.Where(c => "aeiouAEIOU".Contains(c)).Count();',
  "        // TODO: Implement me\n        int counter = 0;\n        for (int i = 0;\
    \ i < s.Length; i++) {\n            if (s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u') {\n                counter++;\n         \
    \   }\n        }\n        if (s[s.Length - 1] == 'y') {\n            counter++;\n\
    \        }\n        return counter;", "        long count = 0;\n        for (int\
    \ i = 0; i < s.Length; i++) {\n            char ch = s[i];\n            if (ch\
    \ == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {\n            \
    \    count++;\n            }\n            if (ch == 'y' && i == s.Length - 1)\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        bool vowels_end = true;\n        for (int i =\
    \ 0; i < s.Length; i++) {\n            if (s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u') {\n                vowels_end = false;\n\
    \                count++;\n            }\n            else if (s[i] == 'y') {\n\
    \                if (vowels_end == true) {\n                    count++;\n   \
    \             }\n                vowels_end = true;\n            }\n         \
    \   else {\n                vowels_end = true;\n            }\n        }\n   \
    \     return count;", "        long count = 0;\n        foreach (char c in s)\
    \ {\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n                count += 1;\n            }\n        }\n        if (s.EndsWith(\"\
    y\")) {\n            count += 1;\n        }\n        return count;", "       \
    \ long result = 0;\n        for (int i = 0; i < s.Length; i++) {\n           \
    \ if (i == s.Length - 1 && s[i] == 'y') {\n                result++;\n       \
    \     } else if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n                result++;\n            }\n        }\n        return\
    \ result;", '        return -1;', "        long count = 0;\n        s = s.ToLower();\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (s[i] == 'a' ||\
    \ s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n              \
    \  count++;\n            }\n        }\n        if (s[s.Length - 1] == 'y') {\n\
    \            count++;\n        }\n        return count;", "        long result\
    \ = 0;\n        // your code here\n        return result;", "        long count\
    \ = 0;\n        for (int i = 0; i < s.Length; i++) {\n            char c = s[i];\n\
    \            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n \
    \               count++;\n            if (c == 'y' && i != s.Length - 1)\n   \
    \             count++;\n        }\n        return count;", "        long count\
    \ = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (\"aeiouy\"\
    .Contains(s[i].ToString())) {\n                count++;\n            }\n     \
    \   }\n        if (s.EndsWith(\"y\")) {\n            count++;\n        }\n   \
    \     return count;", "        long count = 0;\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] ==\
    \ 'o' || s[i] == 'u') {\n                count++;\n            }\n           \
    \ if (s[i] == 'y' && i == s.Length - 1) {\n                count++;\n        \
    \    }\n        }\n        return count;", "        // Fill this up\n        return\
    \ 0;", "        long count = 0;\n        foreach (char c in s) {\n           \
    \ if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n          \
    \      count++;\n            }\n        }\n        if (s.EndsWith(\"y\")) {\n\
    \            count++;\n        }\n        return count;", "        var vowels\
    \ = \"aeiouyAEIOUY\";\n        long count = 0;\n        foreach (var c in s) {\n\
    \            if (vowels.Contains(c)) {\n                count++;\n           \
    \ }\n        }\n        return count;", "        int count = 0;\n        for (int\
    \ i = 0; i < s.Length; i++) {\n            if (s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u') {\n                count++;\n        \
    \    }\n        }\n        if (s[s.Length - 1] == 'y')\n            count++;\n\
    \        return count;", "        //throw new NotImplementedException();\n   \
    \     long count = 0;\n        foreach (char c in s)\n        {\n            if\
    \ (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n            {\n\
    \                count++;\n            }\n        }\n        if (s[s.Length -\
    \ 1] == 'y')\n        {\n            count++;\n        }\n        return count;",
  "        long count = 0;\n        if (s.Length == 0) return count;\n        for\
    \ (int i = 0; i < s.Length; i++) {\n            if (s[i] == 'a' || s[i] == 'e'\
    \ || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n                count++;\n\
    \            }\n            if (s[i] == 'y' && i == s.Length - 1) {\n        \
    \        count++;\n            }\n        }\n        return count;", "       \
    \ long n = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \            n++;\n            }\n            if (s[i] == 'y' && i != s.Length\
    \ - 1) {\n                n++;\n            }\n        }\n        return n;",
  "        string vowels = \"aeiouy\";\n        int count = 0;\n        for (int i\
    \ = 0; i < s.Length; i++) {\n            if (vowels.Contains(s[i])) {\n      \
    \          count++;\n            }\n        }\n        if (s.EndsWith(\"y\"))\
    \ {\n            count++;\n        }\n        return count;", "        // TODO:\
    \ Implement this function\n        return 0;", "        // replace \"return 0\"\
    \ with the correct code\n        return 0;", "        // TODO: Fill in this function\n\
    \        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n     \
    \       if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n                count++;\n            }\n            if (s[i] == 'y'\
    \ && i == s.Length - 1) {\n                count++;\n            }\n        }\n\
    \        return count;", '        return s.Count(c => "aeiouAEIOU".Contains(c));',
  "        int count = 0;\n        char[] vowels = new char[] { 'a', 'e', 'i', 'o',\
    \ 'u', 'y' };\n        for (int i = 0; i < s.Length; i++) {\n            if (vowels.Contains(char.ToLower(s[i])))\
    \ {\n                count++;\n            }\n        }\n        if (s.Length\
    \ > 1 && s[s.Length - 1] == 'y') {\n            count--;\n        }\n        return\
    \ count;", "        return s.Count(c => c == 'a' || c == 'e' || c == 'i' || c\
    \ == 'o' || c == 'u' || (c == 'y' && s.IndexOf(c) == s.Length - 1));", "     \
    \   long count = 0;\n        foreach (char c in s) {\n            if (\"aeiouyAEIOUY\"\
    .Contains(c))\n                count++;\n        }\n        return count;", " \
    \       // your code here\n        return 0;", '        throw new NotImplementedException();',
  "        long r = 0;\n        bool YIsVowel = false;\n        foreach (char c in\
    \ s) {\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n                r++;\n            } else if (c == 'y') {\n              \
    \  YIsVowel = true;\n            }\n        }\n        if (YIsVowel) {\n     \
    \       r++;\n        }\n        return r;", "        //throw new NotImplementedException();\n\
    \        int count = 0;\n        for (int i = 0; i < s.Length; i++)\n        {\n\
    \            if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u')\n            {\n                count++;\n            }\n          \
    \  else if (s[i] == 'y' && i == s.Length - 1)\n            {\n               \
    \ count++;\n            }\n        }\n        return count;", "        // Write\
    \ your code here\n        return 0;", "        // Write your code here\n     \
    \   long ret = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if\
    \ (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n\
    \                ret++;\n            }\n        }\n        if (s[s.Length - 1]\
    \ == 'y') {\n            ret++;\n        }\n        return ret;", "        long\
    \ ans = 0;\n        for (int i = 0; i < s.Length; i++) {\n            char ch\
    \ = s[i];\n            if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' ||\
    \ ch == 'u') {\n                ans++;\n            }\n            if (ch == 'y'\
    \ && i == s.Length - 1) {\n                ans++;\n            }\n        }\n\
    \        return ans;", "        long count = 0;\n        string[] vowels = new\
    \ string[] { \"a\", \"e\", \"i\", \"o\", \"u\", \"y\" };\n        for (int i =\
    \ 0; i < s.Length; i++) {\n            if (i == 0) {\n                if (vowels.Contains(s[i].ToString().ToLower()))\
    \ {\n                    count++;\n                }\n            } else if (i\
    \ == s.Length - 1) {\n                if (vowels.Contains(s[i].ToString().ToLower()))\
    \ {\n                    count++;\n                }\n            } else {\n \
    \               if (vowels.Contains(s[i].ToString().ToLower())) {\n          \
    \          count++;\n                }\n            }\n        }\n        return\
    \ count;", "        int cnt = 0;\n        for (int i = 0; i < s.Length; i++) {\n\
    \            if (IsVowel(s[i])) {\n                cnt++;\n            }\n   \
    \     }\n        return cnt;", "        long count = 0;\n        for (int i =\
    \ 0; i < s.Length; i++) {\n            if (i == s.Length - 1 && s[i] == 'y') {\n\
    \                count++;\n            } else if (s[i] == 'a' || s[i] == 'e' ||\
    \ s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n                count++;\n   \
    \         }\n        }\n        return count;", '        return s.Count(c => "aeiouyAEIOUY".Contains(c));',
  "        string lower = s.ToLower();\n        if(lower[lower.Length - 1] == 'y')\
    \ {\n            return lower.Replace(\"a\", \"\").Replace(\"e\", \"\").Replace(\"\
    i\", \"\").Replace(\"o\", \"\").Replace(\"u\", \"\").Replace(\"y\", \"\").Length\
    \ == lower.Length - 1 ? 1 : 0;\n        }\n        return lower.Replace(\"a\"\
    , \"\").Replace(\"e\", \"\").Replace(\"i\", \"\").Replace(\"o\", \"\").Replace(\"\
    u\", \"\").Length == lower.Length ? 0 : 1;", "        // Your code here\n    \
    \    long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n         \
    \   if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n\
    \                count++;\n            if (s[i] == 'y' && i != s.Length - 1)\n\
    \                count++;\n        }\n        return count;", "        if (s ==\
    \ null) {\n            throw new ArgumentNullException(\"s\", \"The argument cannot\
    \ be null\");\n        }\n        var chars = new char[] { 'a', 'e', 'i', 'o',\
    \ 'u', 'y' };\n        int result = 0;\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            char c = char.ToLower(s[i]);\n            if (chars.Contains(c))\
    \ {\n                result++;\n            }\n        }\n        return result;",
  "        // FIXME: Write your code here!\n        long count = 0;\n        string\
    \ vowels = \"aeiouy\";\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (vowels.Contains(s[i].ToString())) {\n                count++;\n    \
    \        }\n        }\n        if (s.Length > 1 && s[s.Length - 1] == 'y') {\n\
    \            count--;\n        }\n        return count;", "        if (string.IsNullOrEmpty(s))\
    \ {\n            return 0;\n        }\n        string vowels = \"aeiouy\";\n \
    \       // string vowels = \"abcde\";\n        long count = 0;\n        int lastIndex\
    \ = s.Length - 1;\n        for (int i = 0; i < s.Length; i++) {\n            if\
    \ (vowels.Contains(s[i])) {\n                count++;\n            }\n       \
    \     if (s[i] == 'y' && i != lastIndex) {\n                count--;\n       \
    \     }\n        }\n        return count;", "        var n = 0L;\n        var\
    \ isYVowel = false;\n        foreach (var c in s) {\n            switch (c) {\n\
    \                case 'a':\n                case 'e':\n                case 'i':\n\
    \                case 'o':\n                case 'u':\n                    n++;\n\
    \                    break;\n                case 'y':\n                    isYVowel\
    \ = true;\n                    break;\n                default:\n            \
    \        isYVowel = false;\n                    break;\n            }\n      \
    \  }\n        if (isYVowel) {\n            n++;\n        }\n        return n;",
  "        // TODO: Replace this with your code\n        return -1;", "        long\
    \ n = 0;\n        bool i=false;\n        char[] vowels = {'a','e','i','o','u','y'};\n\
    \        for (int j = 0; j < s.Length; j++) {\n            for (int k = 0; k <\
    \ vowels.Length; k++) {\n                if (s[j] == vowels[k]) {\n          \
    \          n += 1;\n                    i = true;\n                    break;\n\
    \                }\n            }\n            if (i) {\n                i = false;\n\
    \                continue;\n            }\n            if (s[j] == 'y') {\n  \
    \              n += 1;\n            }\n        }\n        return n;", "      \
    \  long count = 0;\n        char last = '\\0';\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            if (\"aeiouy\".Contains(s[i])) {\n                if (i\
    \ == s.Length - 1 || s[i] != 'y') {\n                    count++;\n          \
    \      }\n            }\n            last = s[i];\n        }\n        return count;",
  "        // Your code here.\n        return 0;", '        return s.Where(x => "aeiouAEIOU".Contains(x)).Count();',
  "        // Write your code here\n        long count = 0;\n        for (int i =\
    \ 0; i < s.Length; i++) {\n            if (s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u')\n                count++;\n          \
    \  if (s[i] == 'y' && i != s.Length - 1)\n                count++;\n        }\n\
    \        return count;", '        return 0;', "        // Your code goes here\n\
    \        long count = 0;\n        foreach (char c in s) {\n            if (c ==\
    \ 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n                count++;\n\
    \            }\n        }\n        if (s[s.Length - 1] == 'y') {\n           \
    \ count++;\n        }\n        return count;", "        long count = 0;\n    \
    \    s = s.ToLower();\n        char[] vowels = new char[] { 'a', 'e', 'i', 'o',\
    \ 'u' };\n        for (int i = 0; i < s.Length; i++) {\n            if (vowels.Contains(s[i]))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        char[] vowels = { 'a', 'e', 'i', 'o', 'u', 'y' };\n        long c = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            for (int j = 0; j <\
    \ vowels.Length; j++) {\n                if (s[i] == vowels[j]) {\n          \
    \          c++;\n                }\n            }\n        }\n        if (c >\
    \ 0 && (s[s.Length - 1] == 'y')) {\n            c++;\n        }\n        return\
    \ c;", '        return 0;', '        return 0;', "        long count = 0;\n  \
    \      foreach (char ch in s) {\n            if (\"aeiou\".Contains(ch)) {\n \
    \               count++;\n            }\n        }\n        return count;", " \
    \       long cnt = 0;\n        bool end = false;\n        foreach (char c in s)\
    \ {\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n                cnt++;\n            }\n            if (c == 'y') {\n    \
    \            end = true;\n            } else {\n                end = false;\n\
    \            }\n        }\n        if (end) {\n            cnt++;\n        }\n\
    \        return cnt;", "        char[] c = s.ToLower().ToCharArray();\n      \
    \  int count = 0;\n        for (int i = 0; i < c.Length; i++) {\n            if\
    \ (c[i] == 'a' || c[i] == 'e' || c[i] == 'i' || c[i] == 'o' || c[i] == 'u') {\n\
    \                count++;\n            }\n            if (c[i] == 'y' && i !=\
    \ c.Length - 1) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        string vowels = \"aeiou\"\
    ;\n        if (s.Length == 0) return 0;\n        if (vowels.Contains(s[0])) count++;\n\
    \        if (s.Length == 1) return count;\n        return count + VowelsCount(s.Substring(1));",
  "        // Write your code here!\n        return 0;", '        return s.Where(c
    => "aeiouyAEIOUY".Contains(c)).Count();', "        long vowels = 0;\n        for\
    \ (int i = 0; i < s.Length; i++) {\n            if (new char[] { 'a', 'e', 'i',\
    \ 'o', 'u' }.Contains(s[i])) {\n                vowels++;\n            }\n   \
    \     }\n        if (s.EndsWith(\"y\")) {\n            vowels++;\n        }\n\
    \        return vowels;", "        // Write your code here\n        return 0;",
  "        char[] chars = s.ToCharArray();\n        char[] vowels = { 'a', 'e', 'i',\
    \ 'o', 'u', 'y' };\n        long count = 0;\n        if (chars.Length == 0) {\n\
    \            return 0;\n        } else {\n            for (int i = 0; i < chars.Length;\
    \ i++) {\n                if (vowels.Contains(chars[i])) {\n                 \
    \   count++;\n                }\n            }\n            if (vowels.Contains(chars[chars.Length\
    \ - 1])) {\n                return count;\n            } else {\n            \
    \    return count - 1;\n            }\n        }", '        throw new NotImplementedException();',
  '        return s.Count(c => "aeiouyAEIOUY".Contains(c));', "        // TODO: Your\
    \ code here.\n        // However, note that some code will be inserted here.\n\
    \        return 0;", "        long vowelCount = 0;\n        //char[] vowels =\
    \ new char[] {'a', 'e', 'i', 'o', 'u'};\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            switch (s[i]) {\n                case 'a':\n           \
    \     case 'e':\n                case 'i':\n                case 'o':\n      \
    \          case 'u':\n                    vowelCount++;\n                    break;\n\
    \                case 'y':\n                    if (i == s.Length - 1) {\n   \
    \                     vowelCount++;\n                    }\n                 \
    \   break;\n            }\n        }\n        return vowelCount;", "        long\
    \ total = 0;\n        foreach (char c in s) {\n            if (c == 'a' || c ==\
    \ 'e' || c == 'i' || c == 'o' || c == 'u')\n                total++;\n       \
    \ }\n        if (s.EndsWith(\"y\"))\n            total++;\n        return total;",
  "        int vowels = 0;\n        string upp = s.ToUpper();\n        for (int i\
    \ = 0; i < s.Length; i++) {\n            char c = upp[i];\n            if (c ==\
    \ 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n                vowels++;\n\
    \            }\n        }\n        if (upp[s.Length - 1] == 'Y') {\n         \
    \   vowels++;\n        }\n        return vowels;", '        return (long)s.ToLower().Count(c
    => "aeiouy".Contains(c));', "        var vowels = new HashSet<char>() { 'a', 'e',\
    \ 'i', 'o', 'u', 'y' };\n        int vowelCount = 0;\n        for (int i = 0;\
    \ i < s.Length; i++) {\n            if (vowels.Contains(s[i])) {\n           \
    \     vowelCount++;\n            }\n        }\n        return vowelCount;", " \
    \       long count = 0;\n        int length = s.Length;\n        for (int i =\
    \ 0; i < length; i++) {\n            char c = s[i];\n            if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n                count++;\n\
    \            }\n            if (c == 'y' && i < length - 1) {\n              \
    \  count++;\n            }\n        }\n        return count;", "        string\
    \ alphabet = \"aeiouy\";\n        long answer = 0;\n        foreach (char c in\
    \ s) {\n            if (alphabet.Contains(c)) {\n                answer++;\n \
    \           }\n        }\n        return answer;", "        var vowelCount = 0;\n\
    \        var lastLetter = ' ';\n        foreach (var letter in s) {\n        \
    \    if (\"aeiouy\".Contains(letter)) {\n                vowelCount++;\n     \
    \       }\n            lastLetter = letter;\n        }\n        if (\"aeiou\"\
    .Contains(lastLetter)) {\n            vowelCount--;\n        }\n        return\
    \ vowelCount;", "        long count = 0;\n        for (var i = 0; i < s.Length;\
    \ i++) {\n            if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] ==\
    \ 'o' || s[i] == 'u') {\n                count++;\n            }\n           \
    \ if (s[i] == 'y' && i == s.Length - 1) {\n                count++;\n        \
    \    }\n        }\n        return count;", "        long count = 0;\n        s\
    \ = s.ToLower();\n        if (s.EndsWith(\"y\")) {\n            count++;\n   \
    \     }\n        for (int i = 0; i < s.Length; i++) {\n            if (s[i] ==\
    \ 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n       \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  // TODO: Implement this function\n        long vowels = 0;\n        char[]\
    \ vowelsarray = { 'a', 'e', 'i', 'o', 'u', 'y' };\n        char[] chars = s.ToCharArray();\n\
    \        bool prevletter = false;\n        bool lastletter = false;\n        bool\
    \ lastletter2 = false;\n        for (int i = 0; i < chars.Length; i++)\n     \
    \   {\n            char item = chars[i];\n            item = Char.ToLower(item);\n\
    \            if (i == chars.Length - 1)\n            {\n                lastletter\
    \ = true;\n            }\n            if (i == chars.Length - 2)\n           \
    \ {\n                lastletter2 = true;\n            }\n            if (vowelsarray.Contains(item))\n\
    \            {\n                if (lastletter && item != 'y')\n             \
    \   {\n                    vowels++;\n                }\n                else\
    \ if (lastletter2 && item == 'y')\n                {\n                    vowels++;\n\
    \                }\n                else if (!lastletter2 && !lastletter)\n  \
    \              {\n                    vowels++;\n                }\n         \
    \   }\n        }\n        return vowels;", '        return s.Where(c => "aeiouAEIOU".Contains(c)).LongCount();',
  "        var vowels = new HashSet<char>();\n        vowels.Add('a');\n        vowels.Add('e');\n\
    \        vowels.Add('i');\n        vowels.Add('o');\n        vowels.Add('u');\n\
    \        var count = 0;\n        for (var i = 0; i < s.Length; i++) {\n      \
    \      if (vowels.Contains(char.ToLower(s[i]))) {\n                count++;\n\
    \            }\n        }\n        if (s.Length >= 2 &&\n            (s[s.Length\
    \ - 1] == 'y' || s[s.Length - 1] == 'Y') &&\n            !vowels.Contains(char.ToLower(s[s.Length\
    \ - 2]))) {\n            count++;\n        }\n        return count;", "      \
    \  long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n           \
    \ if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\
    \ {\n                count++;\n            }\n        }\n        return count;",
  '        return s.Count(c => "aeiouyAEIOUY".Contains(c));', "        var vowels\
    \ = \"AEIOUYaeiouy\";\n        int count = 0;\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            if (vowels.Contains(s[i])) {\n                count++;\n\
    \            }\n        }\n        return count;", "        // TODO: Implement\
    \ solution\n        return 0;", '        return s.Count(c => "aeiouyAEIOUY".Contains(c));',
  "        // Your code goes here\n        s = s.ToLower();\n        long count =\
    \ 0;\n        for (int i = 0; i < s.Length; i++) {\n            switch (s[i])\
    \ {\n                case 'a':\n                case 'e':\n                case\
    \ 'i':\n                case 'o':\n                case 'u':\n               \
    \     count++;\n                    break;\n                case 'y':\n      \
    \              if (i == s.Length - 1) {\n                        count++;\n  \
    \                  }\n                    break;\n            }\n        }\n \
    \       return count;", "        long count = 0;\n        char[] vowels = new\
    \ char[] { 'a', 'e', 'i', 'o', 'u', 'y' };\n        char[] chars = s.ToCharArray();\n\
    \        bool y_vowel = false;\n        for (int i = 0; i < chars.Length; i++)\
    \ {\n            char c = chars[i];\n            if (c == 'y') {\n           \
    \     y_vowel = true;\n            } else if (vowels.Contains(c)) {\n        \
    \        y_vowel = false;\n                count++;\n            } else {\n  \
    \              y_vowel = false;\n            }\n        }\n        if (y_vowel)\
    \ {\n            count++;\n        }\n        return count;", "        s = s.ToLower();\n\
    \        long c = 0;\n        string vowels = \"aeiouy\";\n        foreach (char\
    \ ch in s) {\n            if (vowels.Contains(ch))\n                c++;\n   \
    \     }\n        if (!vowels.Contains(s[s.Length - 1]))\n            c--;\n  \
    \      return c;", "        long vowel = 0;\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            char c = s[i];\n            if (c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u') {\n                vowel++;\n            }\n\
    \            if (c == 'y' && i == s.Length - 1) {\n                vowel++;\n\
    \            }\n        }\n        return vowel;", "        // your code goes\
    \ here\n        return 1;", '        return 0;', "        var vowels = new HashSet<char>(\"\
    aeiouy\");\n        var count = 0;\n        var special = false;\n        foreach\
    \ (var c in s) {\n            if (vowels.Contains(c)) {\n                count++;\n\
    \                special = false;\n            } else {\n                special\
    \ = true;\n            }\n        }\n        if (special && vowels.Contains(s[s.Length\
    \ - 1])) {\n            count++;\n        }\n        return count;", "       \
    \ // TODO: write your implementation here.\n        long result = 0;\n       \
    \ s = s.ToLower();\n        for (int i = 0; i < s.Length; i++) {\n           \
    \ if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\
    \ {\n                result++;\n            }\n        }\n        if (s[s.Length\
    \ - 1] == 'y') {\n            result++;\n        }\n        return result;", " \
    \       // Replace with correct answer.\n        return 0;", "        // TODO\n\
    \        long sum = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n                sum++;\n            }\n        }\n        if (s[s.Length\
    \ - 1] == 'y') {\n            sum++;\n        }\n        return sum;", "     \
    \   return s.Where(c => c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ || c == 'y').Count();", "        // Your code here.\n        return -1;", " \
    \       // TODO: implement VowelsCount\n        return 0;", "        int count\
    \ = 0;\n        s = s.ToLower();\n        //If its a vowel increment count\n \
    \       foreach (char character in s) {\n            if (character == 'a' || character\
    \ == 'e' || character == 'i' || character == 'o' || character == 'u') {\n    \
    \            count++;\n            }\n        }\n        //If the last letter\
    \ is a 'y' increment count\n        if (s[s.Length - 1] == 'y') {\n          \
    \  count++;\n        }\n        return count;", "        int count = 0;\n    \
    \    for (int i = 0; i < s.Length; i++) {\n            if (s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n                count++;\n\
    \            }\n        }\n        if (s[s.Length - 1] == 'y') {\n           \
    \ count++;\n        }\n        return count;", '        throw new NotImplementedException();',
  "        long vowelCount = 0;\n        foreach (char c in s) {\n            switch\
    \ (c) {\n                case 'a':\n                case 'e':\n              \
    \  case 'i':\n                case 'o':\n                case 'u':\n         \
    \       case 'y':\n                    vowelCount++;\n                    break;\n\
    \            }\n        }\n        return vowelCount;", "        long cnt = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            switch (s[i]) {\n \
    \               case 'a':\n                case 'e':\n                case 'i':\n\
    \                case 'o':\n                case 'u':\n                    cnt++;\n\
    \                    break;\n                case 'y':\n                    if\
    \ (i == s.Length - 1) {\n                        cnt++;\n                    }\n\
    \                    break;\n            }\n        }\n        return cnt;", '        return
    s.ToLower().Where(x => "aeiouy".Contains(x)).Count();', "        return s.Where(c\
    \ => c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' &&\
    \ (s.Length == 1 || s[s.Length - 1] == 'y'))).Count();", "        long count =\
    \ 0;\n        for (int i = 0; i < s.Length; i++) {\n            var vowel = s[i];\n\
    \            if (vowel == 'a' || vowel == 'e' || vowel == 'i' || vowel == 'o'\
    \ || vowel == 'u') {\n                count++;\n            }\n            if\
    \ (vowel == 'y' && i != s.Length - 1) {\n                count++;\n          \
    \  }\n        }\n        return count;", "        long count = 0;\n        int\
    \ len = s.Length;\n        for (int i = 0; i < len; i++) {\n            if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \            count++;\n            }\n            if (s[i] == 'y' && i < len -\
    \ 1) {\n                continue;\n            }\n            if (s[i] == 'y'\
    \ && i == len - 1) {\n                count++;\n            }\n        }\n   \
    \     return count;", "        // TODO: implement\n        return 0;", '        return
    s.Where(c => "aeiouyAEIOUY".Contains(c)).Where(c => !("aeiouAEIOU".Contains(c)
    && s.Last() != c)).Count();', "        long ret = 0;\n        for (int i = 0;\
    \ i < s.Length; i++) {\n            char c = s[i];\n            if (i == s.Length\
    \ - 1 && c == 'y')\n                ret++;\n            else if (c == 'a' || c\
    \ == 'e' || c == 'i' || c == 'o' || c == 'u')\n                ret++;\n      \
    \  }\n        return ret;", "        long vowels = 0;\n        for (int i = 0;\
    \ i < s.Length; i++) {\n            switch (s[i]) {\n                case 'a':\n\
    \                case 'e':\n                case 'i':\n                case 'o':\n\
    \                case 'u':\n                    vowels++;\n                  \
    \  break;\n                case 'y':\n                    if (i == s.Length -\
    \ 1) {\n                        vowels++;\n                    }\n           \
    \         break;\n            }\n        }\n        return vowels;", "       \
    \ // Write your code here.\n        return -1;", "        // The Java solution\
    \ would use s.length() to determine the end\n        // of the string.\n     \
    \   long answer = 0;\n        for (int i = 0; i < s.Length; i++) {\n         \
    \   char c = s[i];\n            // The .ToLower() method takes a char and returns\
    \ the lowercase char.\n            if (c == 'a' || c == 'e' || c == 'i' || c ==\
    \ 'o' || c == 'u' ||\n                (c == 'y' && i == s.Length - 1)) {\n   \
    \             answer++;\n            }\n        }\n        return answer;", " \
    \       // TODO: Your answer here\n        long result = 0;\n        bool flag\
    \ = false;\n        for (int i = 0; i < s.Length; i++) {\n            if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \            result += 1;\n            }\n            if (s[i] == 'y') {\n   \
    \             flag = true;\n            }\n        }\n        if (flag) {\n  \
    \          result += 1;\n        }\n        return result;", "        long count\
    \ = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (s[i] ==\
    \ 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n       \
    \         count++;\n            }\n        }\n        if (s[s.Length - 1] == 'y')\
    \ {\n            count++;\n        }\n        return count;", '        throw new
    NotImplementedException();', "        // IMPLEMENT ME!\n        int count = 0;\n\
    \        int length = s.Length;\n        int charval;\n        for (int i = 0;\
    \ i < length; i++) {\n            charval = s[i];\n            if (charval ==\
    \ 65 || charval == 69 || charval == 73 || charval == 79 || charval == 85) {\n\
    \                count++;\n            }\n            else if (charval == 97 ||\
    \ charval == 101 || charval == 105 || charval == 111 || charval == 117) {\n  \
    \              count++;\n            }\n            else if (charval == 121) {\n\
    \                if (i == length - 1) {\n                    count++;\n      \
    \          }\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        s = s.ToLower();\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] ==\
    \ 'o' || s[i] == 'u') {\n                count++;\n            }\n        }\n\
    \        if (s[s.Length - 1] == 'y') {\n            count++;\n        }\n    \
    \    return count;", "        string ss = s.ToLower();\n        long n = 0;\n\
    \        for (int i = 0; i < ss.Length; i++) {\n            if (ss[i] == 'a' ||\
    \ ss[i] == 'e' || ss[i] == 'i' || ss[i] == 'o' || ss[i] == 'u') {\n          \
    \      n++;\n            }\n        }\n        if (ss[ss.Length - 1] == 'y') {\n\
    \            n++;\n        }\n        return n;", "        s = s.ToLower();\n\
    \        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n     \
    \       if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n                count++;\n            }\n        }\n        if (s[s.Length\
    \ - 1] == 'y') {\n            count++;\n        }\n        return count;", '        throw
    new NotImplementedException();', "        // YOUR CODE HERE\n        return 0;",
  "        // YOUR CODE HERE\n        return -1;", "        long result = 0;\n   \
    \     for (int i = 0; i < s.Length; i++) {\n            var ch = s[i];\n     \
    \       if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {\n\
    \                result += 1;\n            }\n            if (ch == 'y' && i ==\
    \ s.Length - 1) {\n                result += 1;\n            }\n        }\n  \
    \      return result;", "        // ADD YOUR CODE HERE\n        int count = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (s[i] == 'a' ||\
    \ s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n                count++;\n\
    \        }\n        if (s[s.Length - 1] == 'y')\n            count++;\n      \
    \  return count;", "        long count = 0;\n        // Your solution here.\n\
    \        return count;", '        return s.Count(c => "aeiouyAEIOUY".Contains(c));',
  "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     switch (s[i]) {\n                case 'a':\n                case 'e':\n\
    \                case 'i':\n                case 'o':\n                case 'u':\n\
    \                    count++;\n                    break;\n                case\
    \ 'y':\n                    if (i == s.Length - 1) {\n                       \
    \ count++;\n                    }\n                    break;\n            }\n\
    \        }\n        return count;", "        // Fill in the code for this function.\n\
    \        return 0;", "        long count = 0;\n        char prev = '\\0';\n  \
    \      foreach (char ch in s) {\n            char c = Char.ToLower(ch);\n    \
    \        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n   \
    \             count++;\n            }\n            prev = c;\n        }\n    \
    \    if (prev == 'y') {\n            count++;\n        }\n        return count;",
  "        long count = 0;\n        if (s[s.Length - 1] == 'y') {\n            count++;\n\
    \        }\n        foreach (char c in s) {\n            if (c == 'a' || c ==\
    \ 'e' || c == 'i' || c == 'o' || c == 'u') {\n                count++;\n     \
    \       }\n        }\n        return count;", "        long count = 0;\n     \
    \   for (int i = 0; i < s.Length; i++) {\n            if (IsVowel(s[i])) {\n \
    \               count++;\n            }\n        }\n        return count;", '        return
    0;', "        long count = 0;\n        char[] vowels = { 'a', 'e', 'i', 'o', 'u',\
    \ 'y' };\n        if (s[s.Length - 1] == 'y')\n            count++;\n        for\
    \ (int i = 0; i < s.Length - 1; i++) {\n            if (vowels.Contains(s[i]))\n\
    \                count++;\n        }\n        return count;", "        // TODO\n\
    \        return 0;", "        var count = 0L;\n        for (var i = 0; i < s.Length;\
    \ i++) {\n            var c = s[i];\n            if ((c == 'a') || (c == 'e')\
    \ || (c == 'i') || (c == 'o') || (c == 'u')) {\n                count++;\n   \
    \         }\n            if ((c == 'y') && (i == s.Length - 1)) {\n          \
    \      count++;\n            }\n        }\n        return count;", "        string\
    \ vowels = \"aeiouy\";\n        int count = 0;\n        foreach (char c in s)\
    \ {\n            if (vowels.Contains(c))\n                count++;\n        }\n\
    \        if (count > 0 && vowels.Contains(s[s.Length - 1]))\n            count--;\n\
    \        return count;", "        long c = 0;\n        char[] v = new char[] {\
    \ 'a', 'e', 'i', 'o', 'u', 'y' };\n        for (int i = 0; i < s.Length; i++)\
    \ {\n            if (v.Contains(s[i])) {\n                c++;\n            }\n\
    \        }\n        if (s.EndsWith(\"y\")) {\n            c++;\n        }\n  \
    \      return c;", '        return s.Count(v => "aeiouyAEIOUY".Contains(v));',
  "        string new_s = s.ToLower();\n        int count = 0;\n        foreach (char\
    \ ch in new_s) {\n            if (ch == 'a' || ch == 'e' || ch == 'i' || ch ==\
    \ 'o' || ch == 'u') {\n                count += 1;\n            }\n        }\n\
    \        if (count != 0 && new_s[new_s.Length - 1] == 'y') {\n            count\
    \ += 1;\n        }\n        return count;", "        // TODO\n        return 1;",
  '        throw new NotImplementedException();', "        // Replace this code with\
    \ your own.\n        int count = 0;\n        for (int i = 0; i < s.Length; i++)\
    \ {\n            char c = s[i];\n            if (c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u') {\n                count++;\n            }\n  \
    \          if (c == 'y' && i == s.Length - 1) {\n                count++;\n  \
    \          }\n        }\n        return count;", "        long num = 0;\n    \
    \    s = s.ToLower();\n        for (int i = 0; i < s.Length; i++) {\n        \
    \    if (i == s.Length - 1 && s[i] == 'y') {\n                num++;\n       \
    \     } else if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n                num++;\n            }\n        }\n        return\
    \ num;", "        int vCount = 0;\n        char[] vowels = new char[] { 'a', 'e',\
    \ 'i', 'o', 'u', 'y' };\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      foreach (char c in vowels) {\n                if (c == char.ToLower(s[i]))\
    \ {\n                    vCount++;\n                }\n            }\n       \
    \ }\n        if (vCount > 0 && char.ToLower(s[s.Length - 1]) != 'y') {\n     \
    \       vCount--;\n        }\n        return vCount;", '        return s.ToLower().ToCharArray().Where(x
    => "aeiouy".Contains(x)).LongCount();', "        long vowelCount = 0;\n      \
    \  for (int i = 0; i < s.Length; i++) {\n            if (s[i] == 'a' || s[i] ==\
    \ 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n                vowelCount++;\n\
    \            if (s[i] == 'y' && i == s.Length - 1)\n                vowelCount++;\n\
    \        }\n        return vowelCount;", "        long count = 0;\n        for\
    \ (int i = 0; i < s.Length; i++) {\n            if (s[i] == 'a' || s[i] == 'e'\
    \ || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n                count++;\n\
    \            }\n            if (s[i] == 'y' && i == s.Length - 1) {\n        \
    \        count++;\n            }\n        }\n        return count;", "       \
    \ long vowelCount = 0;\n        bool endWord = false;\n        bool atEnd = false;\n\
    \        bool capital = false;\n        for (int i = 0; i < s.Length; i++) {\n\
    \            endWord = false;\n            atEnd = false;\n            capital\
    \ = false;\n            if (i + 1 == s.Length) {\n                atEnd = true;\n\
    \            }\n            if (s[i] == 'a' || s[i] == 'A') {\n              \
    \  vowelCount++;\n            }\n            if (s[i] == 'e' || s[i] == 'E') {\n\
    \                vowelCount++;\n            }\n            if (s[i] == 'i' ||\
    \ s[i] == 'I') {\n                vowelCount++;\n            }\n            if\
    \ (s[i] == 'o' || s[i] == 'O') {\n                vowelCount++;\n            }\n\
    \            if (s[i] == 'u' || s[i] == 'U') {\n                vowelCount++;\n\
    \            }\n            if (s[i] == 'y' || s[i] == 'Y') {\n              \
    \  if (atEnd) {\n                    vowelCount++;\n                }\n      \
    \      }\n        }\n        return vowelCount;", "        long c = 0;\n     \
    \   if (s[s.Length - 1] == 'a' || s[s.Length - 1] == 'e' || s[s.Length - 1] ==\
    \ 'i' || s[s.Length - 1] == 'o' || s[s.Length - 1] == 'u' || s[s.Length - 1] ==\
    \ 'y') {\n            c++;\n        }\n        for (int i = 0; i < s.Length -\
    \ 1; i++) {\n            if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i]\
    \ == 'o' || s[i] == 'u') {\n                c++;\n            }\n        }\n \
    \       return c;", "        s = s.ToLower();\n        long count = 0;\n     \
    \   for (int i = 0; i < s.Length; i++) {\n            if (s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n                count++;\n\
    \            }\n        }\n        if (s[s.Length - 1] == 'y') {\n           \
    \ count++;\n        }\n        return count;", "        long count = 0;\n    \
    \    bool lastIsY = false;\n        foreach (char c in s) {\n            lastIsY\
    \ = false;\n            switch (c) {\n                case 'a':\n            \
    \    case 'e':\n                case 'i':\n                case 'o':\n       \
    \         case 'u':\n                    count++;\n                    break;\n\
    \                case 'y':\n                    lastIsY = true;\n            \
    \        break;\n            }\n        }\n        if (lastIsY) {\n          \
    \  count++;\n        }\n        return count;", "        // Implement this function\n\
    \        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n     \
    \       if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n                count++;\n            }\n        }\n        if (s[s.Length\
    \ - 1] == 'y') {\n            count++;\n        }\n        return count;", " \
    \       // TODO: Implement this function.\n        return s.Count(c => c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.Length - 1\
    \ == s.IndexOf(c)));", "        long count = 0;\n        int i = 0;\n        while\
    \ (i < s.Length) {\n            if (i == s.Length - 1 && s[i] == 'y')\n      \
    \          count++;\n            else if (s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u')\n                count++;\n            i++;\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < s.Length; i++) {\n            char c = s[i];\n            if (c ==\
    \ 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n                count++;\n\
    \            }\n            if (c == 'y' && i == s.Length - 1) {\n           \
    \     count++;\n            }\n        }\n        return count;", "        if\
    \ (s == null)\n            throw new ArgumentNullException(\"s\");\n        return\
    \ s.Count(\n            c => c == 'a' || c == 'e' || c == 'i' || c == 'o' || c\
    \ == 'u' ||\n                 (c == 'y' && s.Last() == 'y'));", '        throw
    new NotImplementedException();', "        var count = 0L;\n        for (var i\
    \ = 0; i < s.Length; i++) {\n            if (\"aeiouy\".Contains(s[i])) {\n  \
    \              count++;\n            }\n        }\n        return count;", " \
    \       long cnt = 0;\n        foreach (char c in s) {\n            if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n                cnt++;\n \
    \       }\n        if (s.EndsWith(\"y\"))\n            cnt++;\n        return\
    \ cnt;", "        long cnt = 0;\n        for (int i = 0; i < s.Length; i++) {\n\
    \            char c = s[i];\n            if (c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n                cnt++;\n            }\n        \
    \    if (c == 'y' && i == s.Length - 1) {\n                cnt++;\n          \
    \  }\n        }\n        return cnt;", '        throw new NotImplementedException();',
  "        var count = 0L;\n        // write your code here\n        if (string.IsNullOrEmpty(s))\
    \ return count;\n        if (s.Length == 1) return ((new[] { 'a', 'e', 'i', 'o',\
    \ 'u', 'y' }).Contains(s[0])) ? 1 : 0;\n        var vowels = new[] { 'a', 'e',\
    \ 'i', 'o', 'u' };\n        foreach (var c in s)\n        {\n            if (vowels.Contains(c))\
    \ count++;\n        }\n        if (s[s.Length - 1] == 'y') count++;\n        return\
    \ count;", "        long c = 0;\n        for (int i = 0; i < s.Length; i++) {\n\
    \            if (\"aeiou\".Contains(s[i])) {\n                c++;\n         \
    \   }\n        }\n        if (s.EndsWith(\"y\")) {\n            c++;\n       \
    \ }\n        return c;", "        long count = 0;\n        char[] vowels = {'a',\
    \ 'e', 'i', 'o', 'u'};\n        foreach (char c in s) {\n            if (vowels.Contains(c))\
    \ {\n                count++;\n            }\n        }\n        if (s.Last()\
    \ == 'y') {\n            count++;\n        }\n        return count;", '        throw
    new NotImplementedException();', "        long n = 0;\n        int c1 = 0;\n \
    \       foreach (char c in s) {\n            if (c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u') {\n                n++;\n            }\n      \
    \      if (c == 'y') {\n                c1++;\n            }\n        }\n    \
    \    if (c1 > 0) {\n            n += c1;\n        }\n        return n;", "   \
    \     int count = 0;\n        for (int i = 0; i < s.Length; i++) {\n         \
    \   if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\
    \ {\n                count++;\n            }\n        }\n        if (s[s.Length\
    \ - 1] == 'y') {\n            count++;\n        }\n        return count;", " \
    \       int n = s.Length;\n        int count = 0;\n        for (int i = 0; i <\
    \ n; i++) {\n            if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i]\
    \ == 'o' || s[i] == 'u')\n                count++;\n        }\n        if (s[n\
    \ - 1] == 'y')\n            count++;\n        return count;", '        return
    3;', "        // TODO: Implement vowels_count function\n        return -1;", '        return
    s.Count(v => "aeiouyAEIOUY".Contains(v));', "        int n = s.Length;\n     \
    \   int res = 0;\n        for (int i = 0; i < n; i++) {\n            char c =\
    \ s[i];\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c ==\
    \ 'u') {\n                res++;\n            }\n            if (c == 'y' && i\
    \ != n - 1) {\n                res++;\n            }\n        }\n        return\
    \ res;", '        throw new NotImplementedException();', "        string lower\
    \ = s.ToLower();\n        int count = 0;\n        for (int i = 0; i < lower.Length;\
    \ i++) {\n            char ch = lower[i];\n            if (ch == 'a' || ch ==\
    \ 'e' || ch == 'i' || ch == 'o' || ch == 'u') {\n                count++;\n  \
    \          }\n        }\n        // If we get to the end of the string, and the\
    \ last character\n        // is a 'y', count that as a vowel.\n        if (lower[lower.Length\
    \ - 1] == 'y') {\n            count++;\n        }\n        return count;", " \
    \       long result = 0;\n        for (int i = 0; i < s.Length; i++) {\n     \
    \       switch (char.ToLower(s[i])) {\n                case 'a':\n           \
    \     case 'e':\n                case 'i':\n                case 'o':\n      \
    \          case 'u':\n                    result++;\n                    break;\n\
    \                case 'y':\n                    if (i != s.Length - 1) {\n   \
    \                     break;\n                    }\n                    result++;\n\
    \                    break;\n            }\n        }\n        return result;",
  '        return s.Where(c => "aeiouyAEIOUY".Contains(c)).Count();', "        //\
    \ NOTE: Ruby's String class has a convenient method called\n        // count(substring)\
    \ which can be used to count the number of\n        // occurrence of a substring\
    \ inside a string.\n        // For example:\n        // s = \"hello world\"\n\
    \        // s.count(\"l\") # => 3\n        // s.count(\"lo\") # => 2\n       \
    \ // s.count(\"llo\") # => 1\n        // s.count(\"z\") # => 0\n        // Hint:\
    \ You may find that method useful.\n        // TODO: Write your code here.\n \
    \       int Vowels = 0;\n        for (int i = 0; i < s.Length; i++)\n        {\n\
    \            if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u')\n            {\n                Vowels++;\n            }\n         \
    \   else if (s[i] == 'y' && i == s.Length - 1)\n            {\n              \
    \  Vowels++;\n            }\n        }\n        return Vowels;"]
stop_tokens:
- "\n    }\n"

language: cs
name: HumanEval_74_total_match
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        Func<List<string>, int> sumLen = (lst) =>\
    \ lst.Sum(s => s.Length);\n        return sumLen(lst1) <= sumLen(lst2) ? lst1\
    \ : lst2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3ea80ac25f7b4f86b640a5d5dee230bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3ea80ac25f7b4f86b640a5d5dee230bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // Variables for the for loop\n        string\
    \ s;\n        int i = 0;\n        int size1 = 0;\n        int size2 = 0;\n   \
    \     // Calculate the total length of all strings in the list\n        while\
    \ (i < lst1.Count) {\n            s = lst1[i];\n            size1 = size1 + s.Length;\n\
    \            i = i + 1;\n        }\n        i = 0;\n        while (i < lst2.Count)\
    \ {\n            s = lst2[i];\n            size2 = size2 + s.Length;\n       \
    \     i = i + 1;\n        }\n        // Compare the size of the two lists and\
    \ return the smaller one\n        if (size1 < size2) {\n            return lst1;\n\
    \        } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <871af0b936be45ae92f3345c0f31a265>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <871af0b936be45ae92f3345c0f31a265>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        if (lst1.Count < lst2.Count) {\n       \
    \     return lst1;\n        } else if (lst1.Count > lst2.Count) {\n          \
    \  return lst2;\n        } else {\n            int i = 0;\n            foreach\
    \ (string str in lst1) {\n                i += str.Length;\n            }\n  \
    \          int j = 0;\n            foreach (string str in lst2) {\n          \
    \      j += str.Length;\n            }\n            if (i < j) {\n           \
    \     return lst1;\n            } else if (i > j) {\n                return lst2;\n\
    \            } else {\n                return lst1;\n            }\n        }\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <59b44e95b7ea4a128c79d1ae8cc74421>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <59b44e95b7ea4a128c79d1ae8cc74421>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int count1 = 0;\n        int count2 = 0;\n\
    \        for (int i = 0; i < lst1.Count; i++) {\n            count1 += lst1[i].Length;\n\
    \        }\n        for (int i = 0; i < lst2.Count; i++) {\n            count2\
    \ += lst2[i].Length;\n        }\n        if (count1 < count2) {\n            return\
    \ lst1;\n        }\n        else {\n            return lst2;\n        }\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fb88f9045ba84df9aeafd2079985c568>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fb88f9045ba84df9aeafd2079985c568>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int f = 0;\n        int s = 0;\n       \
    \ foreach (string str in lst1)\n            f += str.Length;\n        foreach\
    \ (string str in lst2)\n            s += str.Length;\n        if (f < s)\n   \
    \         return lst1;\n        else\n            return lst2;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60f8861bef49465b9df926961687e860>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60f8861bef49465b9df926961687e860>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976745
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return new List<string>();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2506213113174a2f93ea593f7cd7576a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2506213113174a2f93ea593f7cd7576a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        var listToReturn = lst1;\n        var charCount1\
    \ = lst1.Aggregate(0, (s, i) => s + i.Length);\n        var charCount2 = lst2.Aggregate(0,\
    \ (s, i) => s + i.Length);\n        if (charCount1 > charCount2) {\n         \
    \   listToReturn = lst2;\n        }\n        return listToReturn;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f9e2b9c0bb614454a725f271b8ca7e0d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f9e2b9c0bb614454a725f271b8ca7e0d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int lst1C = 0;\n        int lst2C = 0;\n\
    \        for (int i = 0; i < lst1.Count; i++) {\n            lst1C += lst1[i].Length;\n\
    \        }\n        for (int i = 0; i < lst2.Count; i++) {\n            lst2C\
    \ += lst2[i].Length;\n        }\n        if (lst1C < lst2C) {\n            return\
    \ lst1;\n        } else {\n            return lst2;\n        }\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0e38356fda9c464db356dcb645eb65ed>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0e38356fda9c464db356dcb645eb65ed>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int lst1Sum = 0;\n        int lst2Sum =\
    \ 0;\n        foreach (string str in lst1) {\n            lst1Sum += str.Length;\n\
    \        }\n        foreach (string str in lst2) {\n            lst2Sum += str.Length;\n\
    \        }\n        if (lst1Sum == lst2Sum) {\n            return lst1;\n    \
    \    }\n        if (lst1Sum < lst2Sum) {\n            return lst1;\n        }\n\
    \        else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <410086e3972d4c0384af94af0e866871>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <410086e3972d4c0384af94af0e866871>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        if (lst1.Count() == 0 && lst2.Count() ==\
    \ 0) return lst1;\n        int total = 0;\n        foreach (string s in lst1)\
    \ {\n            total += s.Length;\n        }\n        int total2 = 0;\n    \
    \    foreach (string s in lst2) {\n            total2 += s.Length;\n        }\n\
    \        if (total == total2) return lst1;\n        else if (total < total2) return\
    \ lst1;\n        else return lst2;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65f65f8d2865429db964c5f36c75a378>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65f65f8d2865429db964c5f36c75a378>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976745
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        if (lst1.Count == 0 && lst2.Count == 0)\
    \ return lst1;\n        int count1 = 0;\n        int count2 = 0;\n        foreach\
    \ (string s in lst1) {\n            count1 += s.Length;\n        }\n        foreach\
    \ (string s in lst2) {\n            count2 += s.Length;\n        }\n        if\
    \ (count1 == count2) return lst1;\n        if (count1 < count2) return lst1;\n\
    \        return lst2;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <37d06d252db7489dad62b8cad9dc3e8d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <37d06d252db7489dad62b8cad9dc3e8d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int n1 = 0;\n        int n2 = 0;\n     \
    \   foreach (string s in lst1) {\n            n1 += s.Length;\n        }\n   \
    \     foreach (string s in lst2) {\n            n2 += s.Length;\n        }\n \
    \       if (n1 == n2) {\n            return lst1;\n        }\n        return n1\
    \ < n2 ? lst1 : lst2;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b5fd8c90a924677987a80448fd28793>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b5fd8c90a924677987a80448fd28793>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n\
    \        foreach (string s in lst1) {\n            total1 += s.Length;\n     \
    \   }\n        foreach (string s in lst2) {\n            total2 += s.Length;\n\
    \        }\n        if (total1 == total2) {\n            return lst1;\n      \
    \  }\n        else if (total1 < total2) {\n            return lst1;\n        }\n\
    \        else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7e84c052f6e34c7bbc6a6fb4f610355e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7e84c052f6e34c7bbc6a6fb4f610355e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976745
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        throw new Exception(\"Not implemented.\"\
    );\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.Exception: Not implemented.\n  at Problem.Main\
    \ (System.String[] args) [0x0000b] in <25f5bf1f083e42e2b4978a938f14ef25>:0 \n\
    [ERROR] FATAL UNHANDLED EXCEPTION: System.Exception: Not implemented.\n  at Problem.Main\
    \ (System.String[] args) [0x0000b] in <25f5bf1f083e42e2b4978a938f14ef25>:0 \n"
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int s1 = 0;\n        int s2 = 0;\n     \
    \   foreach (string s in lst1) {\n            s1 += s.Length;\n        }\n   \
    \     foreach (string s in lst2) {\n            s2 += s.Length;\n        }\n \
    \       if (s1 < s2) {\n            return lst1;\n        } else {\n         \
    \   return lst2;\n        }\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a5c7634251734338932228a6cd1a0301>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a5c7634251734338932228a6cd1a0301>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int one = 0;\n        int two = 0;\n   \
    \     for (int i = 0; i < lst1.Count; i++) {\n            one += lst1[i].Length;\n\
    \        }\n        for (int i = 0; i < lst2.Count; i++) {\n            two +=\
    \ lst2[i].Length;\n        }\n        if (one < two) {\n            return lst1;\n\
    \        } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d19381b91aa14c50b2b620b13761e901>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d19381b91aa14c50b2b620b13761e901>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int lst1_total = 0;\n        int lst2_total\
    \ = 0;\n        foreach (string i in lst1) {\n            lst1_total += i.Length;\n\
    \        }\n        foreach (string i in lst2) {\n            lst2_total += i.Length;\n\
    \        }\n        if (lst1_total < lst2_total) {\n            return lst1;\n\
    \        } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba2866dcbaf74afca7409c95bea959df>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba2866dcbaf74afca7409c95bea959df>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // fill in here\n        int total1 = 0;\n\
    \        int total2 = 0;\n        foreach (string str in lst1) {\n           \
    \ total1 += str.Length;\n        }\n        foreach (string str in lst2) {\n \
    \           total2 += str.Length;\n        }\n        if (total1 < total2) {\n\
    \            return lst1;\n        } else if (total1 > total2) {\n           \
    \ return lst2;\n        } else {\n            return lst1;\n        }\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3445ec3d4a3747e085bc09c3e3dcc2d5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3445ec3d4a3747e085bc09c3e3dcc2d5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int res1 = 0;\n        foreach (string s\
    \ in lst1) {\n            res1 += s.Length;\n        }\n        int res2 = 0;\n\
    \        foreach (string s in lst2) {\n            res2 += s.Length;\n       \
    \ }\n        if (res1 < res2) {\n            return lst1;\n        } else {\n\
    \            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <809720c5bb854445b055e996704a3bf9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <809720c5bb854445b055e996704a3bf9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976745
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int lst1Count = 0;\n        int lst2Count\
    \ = 0;\n        foreach (string val in lst1) {\n            lst1Count += val.Length;\n\
    \        }\n        foreach (string val in lst2) {\n            lst2Count += val.Length;\n\
    \        }\n        if (lst1Count < lst2Count) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7f9ed463eb504affa197261de121b352>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7f9ed463eb504affa197261de121b352>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n\
    \        foreach (string s in lst1) {\n            total1 += s.Length;\n     \
    \   }\n        foreach (string s in lst2) {\n            total2 += s.Length;\n\
    \        }\n        if (total1 < total2) {\n            return lst1;\n       \
    \ } else if (total2 < total1) {\n            return lst2;\n        } else {\n\
    \            return lst1;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <52f6d717d84f4f2a993d762ff3de66ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <52f6d717d84f4f2a993d762ff3de66ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // your code here\n        return new List<string>();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <93a724ade4024f65b5901876a5effe96>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <93a724ade4024f65b5901876a5effe96>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int s1 = 0;\n        foreach (string s in\
    \ lst1)\n            s1 += s.Length;\n        int s2 = 0;\n        foreach (string\
    \ s in lst2)\n            s2 += s.Length;\n        if (s1 < s2)\n            return\
    \ lst1;\n        else if (s2 < s1)\n            return lst2;\n        else\n \
    \           return lst1;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a661923a26d744e7b395931099ceb8ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a661923a26d744e7b395931099ceb8ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976746
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return lst1.Count < lst2.Count ? lst1 :\
    \ lst2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a8acb5ffdb624ea1bf69a3d9cd72c707>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a8acb5ffdb624ea1bf69a3d9cd72c707>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976746
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // *** Write your code here. ***\n     \
    \   List<string> result = lst1;\n        int count1 = 0;\n        int count2 =\
    \ 0;\n        int index = 0;\n        while (index < lst1.Count()) {\n       \
    \     count1 += lst1[index].Length;\n            index++;\n        }\n       \
    \ index = 0;\n        while (index < lst2.Count()) {\n            count2 += lst2[index].Length;\n\
    \            index++;\n        }\n        if (count1 < count2) {\n           \
    \ result = lst1;\n        } else if (count1 > count2) {\n            result =\
    \ lst2;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <672d7202c2174379a088924516f40e94>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <672d7202c2174379a088924516f40e94>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976746
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        if (lst1.Count() == 0 && lst2.Count() ==\
    \ 0) {\n            return lst1;\n        } else if (lst1.Count() == 0) {\n  \
    \          return lst2;\n        } else if (lst2.Count() == 0) {\n           \
    \ return lst1;\n        }\n        // The function body is just a sample. It passes\
    \ only the first two tests.\n        // It is missing some situations (last three\
    \ tests).\n        // Modify it to pass all tests.\n        int lst1len = 0;\n\
    \        int lst2len = 0;\n        foreach (string str in lst1) {\n          \
    \  lst1len += str.Length;\n        }\n        foreach (string str in lst2) {\n\
    \            lst2len += str.Length;\n        }\n        if (lst1len == lst2len)\
    \ {\n            return lst1;\n        } else if (lst1len < lst2len) {\n     \
    \       return lst1;\n        } else {\n            return lst2;\n        }\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1d853c2dcf1548a69a22231457d237e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1d853c2dcf1548a69a22231457d237e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976746
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return (lst1.Sum(x => x.Length) <= lst2.Sum(x\
    \ => x.Length)) ? lst1 : lst2;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <423c531d7553402f9c7a8f1538fcdada>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <423c531d7553402f9c7a8f1538fcdada>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976746
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int sum1 = 0;\n        foreach (string str\
    \ in lst1) {\n            sum1 += str.Length;\n        }\n        int sum2 = 0;\n\
    \        foreach (string str in lst2) {\n            sum2 += str.Length;\n   \
    \     }\n        if (sum1 <= sum2) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27eed428ffb74b558137d7e1e68faae4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <27eed428ffb74b558137d7e1e68faae4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976746
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        //Write your code here\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <301a080a3914497fbe263a732d545bc2>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <301a080a3914497fbe263a732d545bc2>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976746
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // TODO\n        return null;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <e101430c26a548b691bb774ca6123a43>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <e101430c26a548b691bb774ca6123a43>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976746
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        throw new NotImplementedException();\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x0000b] in <302838cb32e84e1da3ac8d7d5a1a9b67>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x0000b]\
    \ in <302838cb32e84e1da3ac8d7d5a1a9b67>:0 \n"
  stdout: ''
  timestamp: 1659976746
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        if (lst1.Sum(s => s.Length) < lst2.Sum(s\
    \ => s.Length)) {\n            return lst1;\n        }\n        return lst2;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <45b9844ee55c48c5ad40cce7ccd40774>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <45b9844ee55c48c5ad40cce7ccd40774>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976746
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        var total1 = lst1.Sum(x => x.Length);\n\
    \        var total2 = lst2.Sum(x => x.Length);\n        if (total1 < total2)\n\
    \            return lst1;\n        else\n            return lst2;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b3eccc444f424ea093e9361fc53b134c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b3eccc444f424ea093e9361fc53b134c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976746
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // By Jaden Arcenal\n        int total1\
    \ = 0;\n        int total2 = 0;\n        for (int i = 0; i < lst1.Count; i++)\
    \ {\n            total1 += lst1[i].Length;\n        }\n        for (int i = 0;\
    \ i < lst2.Count; i++) {\n            total2 += lst2[i].Length;\n        }\n \
    \       if (total1 < total2) {\n            return lst1;\n        } else if (total2\
    \ < total1) {\n            return lst2;\n        } else {\n            return\
    \ lst1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3d6c7f33f2704687b4645a721b2fe6ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3d6c7f33f2704687b4645a721b2fe6ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976746
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n\
    \        for (int i = 0; i < lst1.Count; i++) {\n            total1 += lst1[i].Length;\n\
    \        }\n        for (int i = 0; i < lst2.Count; i++) {\n            total2\
    \ += lst2[i].Length;\n        }\n        if (total1 == total2) {\n           \
    \ return lst1;\n        }\n        if (total1 < total2) {\n            return\
    \ lst1;\n        }\n        return lst2;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <418f969b888d4a19944503d1e4a044e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <418f969b888d4a19944503d1e4a044e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976746
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // Write your code here\n        return\
    \ lst1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <551b4183ad4242e4ba4f81c3342fb166>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <551b4183ad4242e4ba4f81c3342fb166>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976746
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int num1 = 0;\n        int num2 = 0;\n \
    \       foreach (string s in lst1) {\n            num1 += s.Length;\n        }\n\
    \        foreach (string s in lst2) {\n            num2 += s.Length;\n       \
    \ }\n        if (num1 <= num2) {\n            return lst1;\n        } else {\n\
    \            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4aa660f078bd4a4d8a895da2289faf5e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4aa660f078bd4a4d8a895da2289faf5e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976746
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // lst1.Sum(i => i.Length) < lst2.Sum(i\
    \ => i.Length) ? lst1 : lst2;\n        int sum1 = 0;\n        int sum2 = 0;\n\
    \        foreach (string str in lst1)\n            sum1 += str.Length;\n     \
    \   foreach (string str in lst2)\n            sum2 += str.Length;\n        return\
    \ sum1 < sum2 ? lst1 : lst2;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <25af153538994acba15009640604b9af>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <25af153538994acba15009640604b9af>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976746
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        List<string> result = new List<string>();\n\
    \        int count1 = 0;\n        foreach (string item in lst1) {\n          \
    \  count1 += item.Length;\n        }\n        int count2 = 0;\n        foreach\
    \ (string item in lst2) {\n            count2 += item.Length;\n        }\n   \
    \     if (count1 < count2) {\n            result = lst1;\n        } else if (count1\
    \ > count2) {\n            result = lst2;\n        } else {\n            result\
    \ = lst1;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <86f09b1042fa4502982167f8dd4d7f72>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <86f09b1042fa4502982167f8dd4d7f72>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976746
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        //place code here\n        int lst1Count\
    \ = 0;\n        int lst2Count = 0;\n        foreach (string item in lst1)\n  \
    \      {\n            lst1Count += item.Length;\n        }\n        foreach (string\
    \ item in lst2)\n        {\n            lst2Count += item.Length;\n        }\n\
    \        if (lst1Count < lst2Count)\n        {\n            return lst1;\n   \
    \     }\n        return lst2;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce7cb5688153481e909da68df2f83328>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce7cb5688153481e909da68df2f83328>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976746
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int total = 0;\n        foreach (string\
    \ s in lst1) {\n            total += s.Length;\n        }\n        int total2\
    \ = 0;\n        foreach (string s in lst2) {\n            total2 += s.Length;\n\
    \        }\n        if (total < total2) {\n            return lst1;\n        }\
    \ else {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <817b6127b2f3460e96bcb2f31bf80403>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <817b6127b2f3460e96bcb2f31bf80403>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976746
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // Write your code here...\n        return\
    \ null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <0fb13f7ed6ef4eeab628cca55cfbb462>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <0fb13f7ed6ef4eeab628cca55cfbb462>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976746
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int totalChars1 = 0;\n        foreach (string\
    \ s in lst1) {\n            totalChars1 += s.Length;\n        }\n        int totalChars2\
    \ = 0;\n        foreach (string s in lst2) {\n            totalChars2 += s.Length;\n\
    \        }\n        if (totalChars1 == totalChars2) {\n            return lst1;\n\
    \        }\n        if (totalChars1 < totalChars2) {\n            return lst1;\n\
    \        }\n        else {\n            return lst2;\n        }\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <75620045c1c0467aac2a79f174d122be>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <75620045c1c0467aac2a79f174d122be>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976746
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int tot1 = 0;\n        int tot2 = 0;\n \
    \       for (int i = 0; i < lst1.Count; i++) {\n            tot1 += lst1[i].Length;\n\
    \        }\n        for (int i = 0; i < lst2.Count; i++) {\n            tot2 +=\
    \ lst2[i].Length;\n        }\n        if (tot1 == tot2) {\n            return\
    \ lst1;\n        }\n        else if (tot1 < tot2) {\n            return lst1;\n\
    \        }\n        else {\n            return lst2;\n        }\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e95fd21e520441839c7461ec555afb0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e95fd21e520441839c7461ec555afb0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976746
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int t1 = 0;\n        int t2 = 0;\n     \
    \   foreach (string i in lst1) {\n            t1 += i.Length;\n        }\n   \
    \     foreach (string i in lst2) {\n            t2 += i.Length;\n        }\n \
    \       if (t1 < t2) {\n            return lst1;\n        } else {\n         \
    \   return lst2;\n        }\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba4f5c42ee904a9db5ff2f5655cd8553>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ba4f5c42ee904a9db5ff2f5655cd8553>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976746
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // Your Code here\n        int lst1TotalCharCount\
    \ = 0;\n        int lst2TotalCharCount = 0;\n        foreach (string element in\
    \ lst1) {\n            lst1TotalCharCount += element.Length;\n        }\n    \
    \    foreach (string element in lst2) {\n            lst2TotalCharCount += element.Length;\n\
    \        }\n        if (lst1TotalCharCount > lst2TotalCharCount) {\n         \
    \   return lst2;\n        } else {\n            return lst1;\n        }\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6cb8f74ea9f148cbb753dbd7c84f64b4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6cb8f74ea9f148cbb753dbd7c84f64b4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return lst1.Sum(x => x.Length) < lst2.Sum(x\
    \ => x.Length) ? lst1 : lst2;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0486c15910d74c399cc760dbc444172c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0486c15910d74c399cc760dbc444172c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        //Define return value list\n        List<string>\
    \ return_value = new List<string>();\n        //Define lst1 Char count\n     \
    \   int lst1_char_count = 0;\n        //Loop through lst1 and add to lst1_char_count\n\
    \        foreach (string str in lst1) {\n            lst1_char_count += str.Length;\n\
    \        }\n        //Define lst2 Char count\n        int lst2_char_count = 0;\n\
    \        //Loop through lst2 and add to lst2_char_count\n        foreach (string\
    \ str in lst2) {\n            lst2_char_count += str.Length;\n        }\n    \
    \    //Checks who is smaller and sets return_value to the corresponding list\n\
    \        if (lst1_char_count < lst2_char_count) {\n            return_value =\
    \ lst1;\n        } else if (lst1_char_count > lst2_char_count) {\n           \
    \ return_value = lst2;\n        } else {\n            return_value = lst1;\n \
    \       }\n        //Return return_value\n        return return_value;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2fe1075d8d944658815e915d0f44b112>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2fe1075d8d944658815e915d0f44b112>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976747
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976745
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // replace this code with your solution\n\
    \        return null;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <d89e01c781e5454195890dbbdf10cb2e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <d89e01c781e5454195890dbbdf10cb2e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return lst1.Sum(s => s.Length) < lst2.Sum(s\
    \ => s.Length) ? lst1 : lst2;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <767051eccbb54b788fc2a16aef3ee380>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <767051eccbb54b788fc2a16aef3ee380>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int lst1Total = 0;\n        int lst2Total\
    \ = 0;\n        for (int i = 0; i < lst1.Count; i++) {\n            lst1Total\
    \ += lst1[i].Length;\n        }\n        for (int i = 0; i < lst2.Count; i++)\
    \ {\n            lst2Total += lst2[i].Length;\n        }\n        if (lst1Total\
    \ <= lst2Total) {\n            return lst1;\n        } else {\n            return\
    \ lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e3fa2586e6d44d05bbd8e4ac1bd2f961>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e3fa2586e6d44d05bbd8e4ac1bd2f961>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        if (lst1.Count == 0 && lst2.Count == 0)\
    \ return lst1;\n        int length1 = lst1.Sum(s => s.Length);\n        int length2\
    \ = lst2.Sum(s => s.Length);\n        if (length1 <= length2) return lst1;\n \
    \       return lst2;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8c0b059a3e3448ef82e72b10dc50e179>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8c0b059a3e3448ef82e72b10dc50e179>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // Do not write anything outside of the\
    \ function\n        // Do not modify this function's parameters/arguments\n  \
    \      // Do not read from the console\n        // Read from standard input instead\n\
    \        // Do not print to the console\n\n        // Use Recursion\n        //\
    \ return null;\n        if(lst1.Count == 0 && lst2.Count == 0) {\n           \
    \ return new List<string>();\n        } else if(lst1.Count == 0 && lst2.Count\
    \ != 0) {\n            return new List<string>();\n        } else if(lst1.Count\
    \ != 0 && lst2.Count == 0) {\n            return lst1;\n        } else {\n   \
    \         int count1 = 0;\n            int count2 = 0;\n            foreach(string\
    \ word in lst1) {\n                count1 += word.Length;\n            }\n   \
    \         foreach(string word in lst2) {\n                count2 += word.Length;\n\
    \            }\n            if(count1 == count2) {\n                return lst1;\n\
    \            } else if(count1 < count2) {\n                return lst1;\n    \
    \        } else {\n                return lst2;\n            }\n        }\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff308a2b8e934371b1c64483fb128215>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff308a2b8e934371b1c64483fb128215>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976747
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // Type your solution here\n        return\
    \ null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <310d315d387f44ab91d168be7a006791>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <310d315d387f44ab91d168be7a006791>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int total1 = 0;\n        foreach (string\
    \ x in lst1) {\n            total1 += x.Length;\n        }\n        int total2\
    \ = 0;\n        foreach (string x in lst2) {\n            total2 += x.Length;\n\
    \        }\n        if (total1 < total2) {\n            return lst1;\n       \
    \ } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5b7ad84cf2d45d8be0afe76b8cec4b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5b7ad84cf2d45d8be0afe76b8cec4b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // your code here\n        //\n        return\
    \ lst1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a9a977c7d59d4d6c8b9c4e08290ff476>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a9a977c7d59d4d6c8b9c4e08290ff476>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976747
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        throw new NotImplementedException();\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x0000b] in <302838cb32e84e1da3ac8d7d5a1a9b67>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x0000b]\
    \ in <302838cb32e84e1da3ac8d7d5a1a9b67>:0 \n"
  stdout: ''
  timestamp: 1659976746
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        List<string> lst3 = new List<string>();\n\
    \        return lst3;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e6b595a10aa849cd984d2e4a509ab4df>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e6b595a10aa849cd984d2e4a509ab4df>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976747
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // Write your code here\n        // The\
    \ following code is not correct, but it generates a correct answer.\n        //\
    \ return lst1;\n        return null;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <c1021d60651442c6b2fbc50c1e151550>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <c1021d60651442c6b2fbc50c1e151550>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // return totalMatch(lst1, lst2);\n    \
    \    return lst1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd334ef8006145dca08ee0b69d97a24a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd334ef8006145dca08ee0b69d97a24a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return lst1.Sum(x => x.Length) < lst2.Sum(x\
    \ => x.Length) ? lst1 : lst2;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0486c15910d74c399cc760dbc444172c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0486c15910d74c399cc760dbc444172c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // your code goes here.\n        return\
    \ lst1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b3af3c2805bd4d1caed71eaa051327a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b3af3c2805bd4d1caed71eaa051327a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        if (lst1.Count == 0 && lst2.Count == 0)\
    \ {\n            return new List<string>();\n        }\n        else if (lst1.Count\
    \ == 0) {\n            return lst2;\n        }\n        else if (lst2.Count ==\
    \ 0) {\n            return lst1;\n        }\n        else {\n            int sum1\
    \ = 0;\n            int sum2 = 0;\n            foreach (string str in lst1) {\n\
    \                foreach (char ch in str) {\n                    sum1 += (int)ch;\n\
    \                }\n            }\n            foreach (string str in lst2) {\n\
    \                foreach (char ch in str) {\n                    sum2 += (int)ch;\n\
    \                }\n            }\n            if (sum1 < sum2) {\n          \
    \      return lst1;\n            }\n            else if (sum2 < sum1) {\n    \
    \            return lst2;\n            }\n            else {\n               \
    \ return lst1;\n            }\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <50f6716229fd407f8b7cb31e3a3a9835>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <50f6716229fd407f8b7cb31e3a3a9835>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976747
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // your code here\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <f5d0d995a5504ca59378c24f6bbab5bb>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <f5d0d995a5504ca59378c24f6bbab5bb>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n\
    \        foreach (string s in lst1)\n            total1 += s.Length;\n       \
    \ foreach (string s in lst2)\n            total2 += s.Length;\n        if (total1\
    \ < total2)\n            return lst1;\n        else\n            return lst2;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e8d56d24bdc43aa8d426ef319f2603f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e8d56d24bdc43aa8d426ef319f2603f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        if(lst1.Sum(s => s.Length) < lst2.Sum(s\
    \ => s.Length)) {\n            return lst1;\n        }\n        return lst2;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff33285a4ef1472b83ab7299c21d56c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff33285a4ef1472b83ab7299c21d56c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        if(lst1.Sum(s => s.Length) <= lst2.Sum(s\
    \ => s.Length)) {\n            return lst1;\n        }\n        return lst2;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d3d19052d05846baac12677516e16b67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d3d19052d05846baac12677516e16b67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // your code here\n        int count1 =\
    \ 0;\n        int count2 = 0;\n        foreach (string s in lst1)\n        {\n\
    \            count1 += s.Length;\n        }\n        foreach (string s in lst2)\n\
    \        {\n            count2 += s.Length;\n        }\n        if (count1 ==\
    \ count2)\n        {\n            return lst1;\n        }\n        else if (count1\
    \ < count2)\n        {\n            return lst1;\n        }\n        else\n  \
    \      {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3af738fb6ce74343b233d95a24586cdf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3af738fb6ce74343b233d95a24586cdf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int lst1count = 0;\n        int lst2count\
    \ = 0;\n        foreach (string item in lst1) {\n            lst1count += item.Length;\n\
    \        }\n        foreach (string item in lst2) {\n            lst2count +=\
    \ item.Length;\n        }\n        if (lst1count < lst2count) {\n            return\
    \ lst1;\n        } else {\n            return lst2;\n        }\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7cb66cb0b8dd49fd9435a9f987dbc8f6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7cb66cb0b8dd49fd9435a9f987dbc8f6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976747
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        throw new NotImplementedException();\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x0000b] in <302838cb32e84e1da3ac8d7d5a1a9b67>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x0000b]\
    \ in <302838cb32e84e1da3ac8d7d5a1a9b67>:0 \n"
  stdout: ''
  timestamp: 1659976746
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int len1 = 0;\n        int len2 = 0;\n \
    \       foreach (string str in lst1) {\n            len1 += str.Length;\n    \
    \    }\n        foreach (string str in lst2) {\n            len2 += str.Length;\n\
    \        }\n        if (len1 == len2) {\n            return lst1;\n        }\n\
    \        if (len1 < len2) {\n            return lst1;\n        }\n        return\
    \ lst2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <41257f5d1f0c4a2ba5f6b1108c5c9f41>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <41257f5d1f0c4a2ba5f6b1108c5c9f41>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int lst1_total = 0;\n        int lst2_total\
    \ = 0;\n        foreach (string str in lst1) {\n            lst1_total += str.Length;\n\
    \        }\n        foreach (string str in lst2) {\n            lst2_total +=\
    \ str.Length;\n        }\n        if (lst1_total < lst2_total) {\n           \
    \ return lst1;\n        } else {\n            return lst2;\n        }\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <215cc7e0c17342fd8e515589fa580cc8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <215cc7e0c17342fd8e515589fa580cc8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int counter1 = 0;\n        int counter2\
    \ = 0;\n        foreach (string s in lst1) {\n            counter1 += s.Length;\n\
    \        }\n        foreach (string s in lst2) {\n            counter2 += s.Length;\n\
    \        }\n        if (counter1 < counter2) {\n            return lst1;\n   \
    \     } else if (counter1 > counter2) {\n            return lst2;\n        } else\
    \ {\n            return lst1;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <19002769771d48ff8bbabb2816129a43>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <19002769771d48ff8bbabb2816129a43>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return (lst1.Sum(s => s.Length) < lst2.Sum(s\
    \ => s.Length)) ? lst1 : lst2;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fe44fc09a3db44a093879b2a3f174d46>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fe44fc09a3db44a093879b2a3f174d46>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // your code\n        return null;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <3d82ca34b06d4e1085af42ed797222a1>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <3d82ca34b06d4e1085af42ed797222a1>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // lst1 and lst2 are lists of strings\n\
    \        // return the list that has total number of chars less than the other\
    \ list.\n        // if the two lists have the same number of chars, return the\
    \ first list.\n        int sum1 = 0;\n        int sum2 = 0;\n        foreach (string\
    \ s in lst1) {\n            sum1 += s.Length;\n        }\n        foreach (string\
    \ s in lst2) {\n            sum2 += s.Length;\n        }\n        if (sum1 > sum2)\
    \ {\n            return lst2;\n        } else {\n            return lst1;\n  \
    \      }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2961da1d5ff3430a805f89fd20969d09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2961da1d5ff3430a805f89fd20969d09>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // Your code goes here.\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp37e2u0e0.cs(23,32): error CS0161: ''Problem.TotalMatch(List<string>, List<string>)'':
    not all code paths return a value

    '
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n\
    \        for (int i = 0; i < lst1.Count; i++) {\n            total1 += lst1[i].Length;\n\
    \        }\n        for (int i = 0; i < lst2.Count; i++) {\n            total2\
    \ += lst2[i].Length;\n        }\n        if (total1 < total2) {\n            return\
    \ lst1;\n        } else {\n            return lst2;\n        }\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <df533e0ceebc4cc194cef513f9df963e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <df533e0ceebc4cc194cef513f9df963e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int length1 = 0;\n        int length2 =\
    \ 0;\n        foreach (string lst in lst1) {\n            length1 += lst.Length;\n\
    \        }\n        foreach (string lst in lst2) {\n            length2 += lst.Length;\n\
    \        }\n        if (length1 == length2) {\n            return lst1;\n    \
    \    }\n        if (length1 < length2) {\n            return lst1;\n        }\n\
    \        else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <75097d5e2c164dd5815c481767a59f32>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <75097d5e2c164dd5815c481767a59f32>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // CODE HERE\n        throw new NotImplementedException();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x0000b] in <48b5722b21fc4048bdbc96bd3982383a>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x0000b]\
    \ in <48b5722b21fc4048bdbc96bd3982383a>:0 \n"
  stdout: ''
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        List<string> smallList = null;\n       \
    \ if (lst1.Count < lst2.Count) {\n            smallList = lst1;\n        } else\
    \ {\n            smallList = lst2;\n        }\n        return smallList;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0eea3577b8794e9daf636119bf2152f6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0eea3577b8794e9daf636119bf2152f6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // Your code goes here\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpoeo99vah.cs(23,32): error CS0161: ''Problem.TotalMatch(List<string>, List<string>)'':
    not all code paths return a value

    '
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n \
    \       foreach (string s in lst1) {\n            sum1 += s.Length;\n        }\n\
    \        foreach (string s in lst2) {\n            sum2 += s.Length;\n       \
    \ }\n        if (sum1 == sum2) {\n            return lst1;\n        }\n      \
    \  if (sum1 < sum2) {\n            return lst1;\n        }\n        return lst2;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e75a7cd4e7934cf9a20b02fb8fc992c7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e75a7cd4e7934cf9a20b02fb8fc992c7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        List<string> result = new List<string>();\n\
    \        if (SumChars(lst1) < SumChars(lst2))\n            result = lst1;\n  \
    \      else\n            result = lst2;\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzbwkaj67.cs(25,13): error CS0103: The name ''SumChars'' does not exist
    in the current context

    /tmp/tmpzbwkaj67.cs(25,30): error CS0103: The name ''SumChars'' does not exist
    in the current context

    '
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // >>> YOUR CODE HERE\n        int lst1total\
    \ = 0;\n        int lst2total = 0;\n        foreach (string s in lst1) {\n   \
    \         lst1total += s.Length;\n        }\n        foreach (string s in lst2)\
    \ {\n            lst2total += s.Length;\n        }\n        if (lst1total < lst2total)\
    \ {\n            return lst1;\n        } else if (lst1total > lst2total) {\n \
    \           return lst2;\n        } else {\n            return lst1;\n       \
    \ }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4dccdcecc23d4b68964f385ac32913aa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4dccdcecc23d4b68964f385ac32913aa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // fill in here\n        return new List<string>();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <91bff971f1164d68974a6dbccac90dcb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <91bff971f1164d68974a6dbccac90dcb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // fill in code here\n        int lst1_len\
    \ = 0;\n        int lst2_len = 0;\n        for (int i = 0; i < lst1.Count; i++)\
    \ {\n            lst1_len += lst1[i].Length;\n        }\n        for (int i =\
    \ 0; i < lst2.Count; i++) {\n            lst2_len += lst2[i].Length;\n       \
    \ }\n        if (lst1_len == lst2_len) {\n            return lst1;\n        }\n\
    \        else if (lst1_len < lst2_len) {\n            return lst1;\n        }\n\
    \        else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3aff7dd5410f4e4b9b44cdd5ccef646a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3aff7dd5410f4e4b9b44cdd5ccef646a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        if (lst1.Select(s => s.Length).Sum() < lst2.Select(s\
    \ => s.Length).Sum()) {\n            return lst1;\n        } else {\n        \
    \    return lst2;\n        }\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2fe58afaf5b0454a8770e6d356ba5f93>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2fe58afaf5b0454a8770e6d356ba5f93>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int x = 0;\n        int y = 0;\n       \
    \ for (int i = 0; i < lst1.Count; i++) {\n            x += lst1[i].Length;\n \
    \       }\n        for (int i = 0; i < lst2.Count; i++) {\n            y += lst2[i].Length;\n\
    \        }\n        if (x == y) {\n            return lst1;\n        }\n     \
    \   if (x < y) {\n            return lst1;\n        }\n        return lst2;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <beaa78f268f642d4aa32c83e9d5347fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <beaa78f268f642d4aa32c83e9d5347fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n \
    \       foreach (string s in lst1)\n            sum1 += s.Length;\n        foreach\
    \ (string s in lst2)\n            sum2 += s.Length;\n        if (sum1 == sum2)\n\
    \            return lst1;\n        else if (sum1 < sum2)\n            return lst1;\n\
    \        else\n            return lst2;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65966e3d52814dbaa7cfec4128376c96>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65966e3d52814dbaa7cfec4128376c96>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n \
    \       for (int i = 0; i < lst1.Count; i++) {\n            sum1 += lst1[i].Length;\n\
    \        }\n        for (int i = 0; i < lst2.Count; i++) {\n            sum2 +=\
    \ lst2[i].Length;\n        }\n        if (sum1 < sum2) {\n            return lst1;\n\
    \        } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cb3e3bdad114958b13367cfe64f1b8c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cb3e3bdad114958b13367cfe64f1b8c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int lst1_total = 0;\n        int lst2_total\
    \ = 0;\n        foreach (string s in lst1) {\n            lst1_total += s.Length;\n\
    \        }\n        foreach (string s in lst2) {\n            lst2_total += s.Length;\n\
    \        }\n        if (lst1_total < lst2_total) {\n            return lst1;\n\
    \        } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee43daccc8349b49bc636c59bebaf7e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee43daccc8349b49bc636c59bebaf7e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return (lst1.Select(s => s.Length).Sum()\
    \ > lst2.Select(s => s.Length).Sum()) ? lst2 : lst1;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <08bec4fd6f0f428582e3125755ddc520>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <08bec4fd6f0f428582e3125755ddc520>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n \
    \       foreach (string s in lst1) {\n            sum1 += s.Length;\n        }\n\
    \        foreach (string s in lst2) {\n            sum2 += s.Length;\n       \
    \ }\n        if (sum1 < sum2) {\n            return lst1;\n        } else {\n\
    \            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a77f62ad71f94be2bccd101b0142ab00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a77f62ad71f94be2bccd101b0142ab00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n         int totalChars = 0;\n            foreach\
    \ (string s in lst1) {\n                totalChars += s.Length;\n            }\n\
    \            int totalChars2 = 0;\n            foreach (string s in lst2) {\n\
    \                totalChars2 += s.Length;\n            }\n            if (totalChars\
    \ <= totalChars2) {\n                return lst1;\n            }\n           \
    \ else {\n                return lst2;\n            }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <11ba92fa3efe47a5966c4b18fe0f02ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <11ba92fa3efe47a5966c4b18fe0f02ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // Fill your code here\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <f808db8f410e4e1ea61907bced96a655>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <f808db8f410e4e1ea61907bced96a655>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976748
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int a = 0;\n        int b = 0;\n       \
    \ foreach (string s in lst1) {\n            a += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            b += s.Length;\n        }\n     \
    \   if (a > b) {\n            return lst2;\n        } else {\n            return\
    \ lst1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b36f34f8e0bb48ce9c8021b1405eb8ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b36f34f8e0bb48ce9c8021b1405eb8ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // typecheck\n        Debug.Assert(lst1.Count\
    \ >= 0 && lst2.Count >= 0);\n        Debug.Assert(lst1.Count == 0 || !lst1.Any(str\
    \ => str.Length == 0));\n        Debug.Assert(lst2.Count == 0 || !lst2.Any(str\
    \ => str.Length == 0));\n        //if (lst1.Count == 0) { return lst2; }\n   \
    \     //if (lst2.Count == 0) { return lst1; }\n        return \n            lst1.Sum(str\
    \ => str.Length) <= lst2.Sum(str => str.Length) ? lst1 : lst2;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <36319f5a4c34483d8b4c9c58ff67178a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <36319f5a4c34483d8b4c9c58ff67178a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        var lst1Count = lst1.Sum(s => s.Length);\n\
    \        var lst2Count = lst2.Sum(s => s.Length);\n        if (lst1Count < lst2Count)\n\
    \            return lst1;\n        else if (lst2Count < lst1Count)\n         \
    \   return lst2;\n        else\n            return lst1;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fa442b975a0b416abbc2af512c6b007f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fa442b975a0b416abbc2af512c6b007f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n\
    \        foreach (string s in lst1) {\n            total1 += s.Length;\n     \
    \   }\n        foreach (string s in lst2) {\n            total2 += s.Length;\n\
    \        }\n        if (total1 < total2) {\n            return lst1;\n       \
    \ } else if (total2 < total1) {\n            return lst2;\n        } else {\n\
    \            return lst1;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <52f6d717d84f4f2a993d762ff3de66ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <52f6d717d84f4f2a993d762ff3de66ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return lst1.Sum(i => i.Length) < lst2.Sum(i\
    \ => i.Length) ? lst1 : lst2;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dd3360951f9c4d7592ac42db017c8e5f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dd3360951f9c4d7592ac42db017c8e5f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        if (lst1.Count == 0 && lst2.Count == 0)\
    \ return lst1;\n        int t1 = 0;\n        int t2 = 0;\n        foreach (string\
    \ s in lst1) t1 += s.Length;\n        foreach (string s in lst2) t2 += s.Length;\n\
    \        if (t1 == t2) return lst1;\n        return t1 < t2 ? lst1 : lst2;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4bb0ed61c5104904b12b25c394345334>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4bb0ed61c5104904b12b25c394345334>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return lst1.Sum(s => s.Length) < lst2.Sum(s\
    \ => s.Length) ? lst1 : lst2;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <767051eccbb54b788fc2a16aef3ee380>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <767051eccbb54b788fc2a16aef3ee380>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976747
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // insert your code here\n        return\
    \ null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <19457221a3ea4865a9c4d77ecb4b2005>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <19457221a3ea4865a9c4d77ecb4b2005>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976748
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        List<string> list1 = lst1;\n        List<string>\
    \ list2 = lst2;\n        int total_chars_1 = 0;\n        int total_chars_2 = 0;\n\
    \        foreach (string str in list1) {\n            total_chars_1 += str.Length;\n\
    \        }\n        foreach (string str in list2) {\n            total_chars_2\
    \ += str.Length;\n        }\n        if (total_chars_1 > total_chars_2) {\n  \
    \          return list2;\n        } else {\n            return list1;\n      \
    \  }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <87fcbaf54b634ce58eaa03f3a8320dec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <87fcbaf54b634ce58eaa03f3a8320dec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int lst1Sum = 0;\n        foreach (string\
    \ element in lst1) {\n            lst1Sum += element.Length;\n        }\n    \
    \    int lst2Sum = 0;\n        foreach (string element in lst2) {\n          \
    \  lst2Sum += element.Length;\n        }\n        if (lst1Sum < lst2Sum) {\n \
    \           return lst1;\n        } else {\n            return lst2;\n       \
    \ }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a179810c301f411cb949dd1cf127a783>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a179810c301f411cb949dd1cf127a783>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        var result = lst1.Select(m => m.Length).Sum()\
    \ < lst2.Select(m => m.Length).Sum() ? lst1 : lst2;\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0a2c574420954c47877ffde0b816bec1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0a2c574420954c47877ffde0b816bec1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976749
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n\
    \        foreach (string item in lst1) {\n            total1 += item.Length;\n\
    \        }\n        foreach (string item in lst2) {\n            total2 += item.Length;\n\
    \        }\n        if (total1 < total2) {\n            return lst1;\n       \
    \ } else if (total2 < total1) {\n            return lst2;\n        } else {\n\
    \            return lst1;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca86aec522304d01b1d241db718c6ae8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca86aec522304d01b1d241db718c6ae8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976749
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // your code goes here\n        List<string>\
    \ result = new List<string>();\n        List<int> lens = new List<int>();\n  \
    \      foreach (string str in lst1) {\n            lens.Add(str.Length);\n   \
    \     }\n        int total1 = lens.Sum();\n        lens.Clear();\n        foreach\
    \ (string str in lst2) {\n            lens.Add(str.Length);\n        }\n     \
    \   int total2 = lens.Sum();\n        if (total1 == total2) {\n            return\
    \ lst1;\n        }\n        if (total1 < total2) {\n            return lst1;\n\
    \        }\n        return lst2;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d446054d24bc4f14aa49d5d1bad75ca0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d446054d24bc4f14aa49d5d1bad75ca0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976749
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // your code goes here\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgj6hcs2c.cs(23,32): error CS0161: ''Problem.TotalMatch(List<string>, List<string>)'':
    not all code paths return a value

    '
  timestamp: 1659976748
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return lst1.Count > lst2.Count ? lst2 :\
    \ lst1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1a8c216fbba4441fa3b9e8669450e9ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1a8c216fbba4441fa3b9e8669450e9ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n \
    \       foreach (string s in lst1) {\n            sum1 += s.Length;\n        }\n\
    \        foreach (string s in lst2) {\n            sum2 += s.Length;\n       \
    \ }\n        if (sum1 <= sum2) {\n            return lst1;\n        } else {\n\
    \            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dceacddda30145e69681e9d0cf90594b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dceacddda30145e69681e9d0cf90594b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976749
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n\
    \        foreach (string s in lst1) {\n            total1 += s.Length;\n     \
    \   }\n        foreach (string s in lst2) {\n            total2 += s.Length;\n\
    \        }\n        if (total1 < total2) {\n            return lst1;\n       \
    \ } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3fb4684e9afb40f7978a065d92964d6f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3fb4684e9afb40f7978a065d92964d6f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976749
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int total1 = lst1.Sum(str => str.Length);\n\
    \        int total2 = lst2.Sum(str => str.Length);\n        if (total1 == total2)\
    \ {\n            return lst1;\n        }\n        return total1 < total2 ? lst1\
    \ : lst2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fe61d959633e418cba74f1628d9a2eef>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fe61d959633e418cba74f1628d9a2eef>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976749
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int lst1len = 0;\n        int lst2len =\
    \ 0;\n        foreach (string s in lst1)\n            lst1len += s.Length;\n \
    \       foreach (string s in lst2)\n            lst2len += s.Length;\n       \
    \ if (lst1len == lst2len)\n            return lst1;\n        if (lst1len < lst2len)\n\
    \            return lst1;\n        return lst2;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <64785a39add64ac2861284b65cb8f147>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <64785a39add64ac2861284b65cb8f147>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976749
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n \
    \       foreach (string str in lst1) {\n            sum1 += str.Length;\n    \
    \    }\n        foreach (string str in lst2) {\n            sum2 += str.Length;\n\
    \        }\n        if (sum1 <= sum2) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3d2b2b262d314400a85566fdd1b50e2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3d2b2b262d314400a85566fdd1b50e2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976749
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // Your code goes here\n        int sum1\
    \ = 0;\n        int sum2 = 0;\n        for (int i = 0; i < lst1.Count; i++)\n\
    \        {\n            sum1 += lst1[i].Length;\n        }\n        for (int i\
    \ = 0; i < lst2.Count; i++)\n        {\n            sum2 += lst2[i].Length;\n\
    \        }\n        if (sum1 > sum2)\n        {\n            return lst2;\n  \
    \      }\n        else\n        {\n            return lst1;\n        }\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2429a70f7aea41c78e07b56c49d44319>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2429a70f7aea41c78e07b56c49d44319>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976749
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n \
    \       for (int i = 0; i < lst1.Count; i++) {\n            sum1 += lst1[i].Length;\n\
    \        }\n        for (int i = 0; i < lst2.Count; i++) {\n            sum2 +=\
    \ lst2[i].Length;\n        }\n        if (sum1 < sum2) {\n            return lst1;\n\
    \        } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cb3e3bdad114958b13367cfe64f1b8c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cb3e3bdad114958b13367cfe64f1b8c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int lst1Tot = lst1.Select(s => s.Length).Sum();\n\
    \        int lst2Tot = lst2.Select(s => s.Length).Sum();\n        return lst1Tot\
    \ <= lst2Tot ? lst1 : lst2;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <80557fee2ec04f3b85352a4e342b4907>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <80557fee2ec04f3b85352a4e342b4907>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976749
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        //TODO\n        return null;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <9053e6f5e51143569e9d9d1b606b2548>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <9053e6f5e51143569e9d9d1b606b2548>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976749
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // your code here\n        if (lst1.Count()\
    \ == 0 && lst2.Count() == 0) {\n            return new List<string>();\n     \
    \   } else if (lst1.Count() == 0 && lst2.Count() != 0) {\n            return lst2;\n\
    \        } else if (lst1.Count() != 0 && lst2.Count() == 0) {\n            return\
    \ lst1;\n        } else {\n            //both lists not empty\n            int\
    \ lst1Total = 0;\n            int lst2Total = 0;\n            for (int i = 0;\
    \ i < lst1.Count(); i++) {\n                lst1Total += lst1[i].Length;\n   \
    \         }\n            for (int i = 0; i < lst2.Count(); i++) {\n          \
    \      lst2Total += lst2[i].Length;\n            }\n            if (lst1Total\
    \ == lst2Total) {\n                return lst1;\n            } else if (lst1Total\
    \ < lst2Total) {\n                return lst1;\n            } else {\n       \
    \         return lst2;\n            }\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b45ff522ea7747ba9a572da463641bc1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b45ff522ea7747ba9a572da463641bc1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976749
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // your code here.\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <b8ea3aa108bd4116b22f667748e015b9>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <b8ea3aa108bd4116b22f667748e015b9>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976749
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        throw new NotImplementedException();\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x0000b] in <302838cb32e84e1da3ac8d7d5a1a9b67>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x0000b]\
    \ in <302838cb32e84e1da3ac8d7d5a1a9b67>:0 \n"
  stdout: ''
  timestamp: 1659976746
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // CODE HERE\n        return lst1;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <12713c0200c9404cbe8e42f050e76c01>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <12713c0200c9404cbe8e42f050e76c01>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976749
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n\
    \        foreach (string str in lst1) {\n            total1 += str.Length;\n \
    \       }\n        foreach (string str in lst2) {\n            total2 += str.Length;\n\
    \        }\n        if (total1 == total2) {\n            return lst1;\n      \
    \  }\n        if (total1 < total2) {\n            return lst1;\n        }\n  \
    \      return lst2;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8b3348fa1a14175854af0092fcb12d9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8b3348fa1a14175854af0092fcb12d9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976749
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        if (lst1.Count() == 0) return lst2;\n  \
    \      if (lst2.Count() == 0) return lst1;\n        int sum1 = 0;\n        int\
    \ sum2 = 0;\n        foreach (string item in lst1) {\n            sum1 += item.Length;\n\
    \        }\n        foreach (string item in lst2) {\n            sum2 += item.Length;\n\
    \        }\n        if (sum1 == sum2) return lst1;\n        if (sum1 < sum2) return\
    \ lst1;\n        return lst2;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <21071af363b3469e8fa88465929b626c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <21071af363b3469e8fa88465929b626c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976749
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int t1 = 0;\n        foreach (string s in\
    \ lst1) {\n            t1 += s.Length;\n        }\n        int t2 = 0;\n     \
    \   foreach (string s in lst2) {\n            t2 += s.Length;\n        }\n   \
    \     if (t1 < t2) return lst1;\n        else return lst2;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7fa919f716ed4c059a076dbd6ee04747>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7fa919f716ed4c059a076dbd6ee04747>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976749
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int t1 = 0;\n        int t2 = 0;\n     \
    \   foreach (string s in lst1) {\n            t1 += s.Length;\n        }\n   \
    \     foreach (string s in lst2) {\n            t2 += s.Length;\n        }\n \
    \       if (t1 < t2) {\n            return lst1;\n        } else {\n         \
    \   return lst2;\n        }\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <768d20c7efe34a51bf85060580fdbb1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <768d20c7efe34a51bf85060580fdbb1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976749
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int len1 = 0;\n        int len2 = 0;\n \
    \       foreach (string x in lst1) {\n            len1 += x.Length;\n        }\n\
    \        foreach (string x in lst2) {\n            len2 += x.Length;\n       \
    \ }\n        if (len1 < len2) {\n            return lst1;\n        } else if (len2\
    \ < len1) {\n            return lst2;\n        } else {\n            return lst1;\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b50c6dee92f4ef3bcff8c85a4650db0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b50c6dee92f4ef3bcff8c85a4650db0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976749
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // 1. Find the total number of chars in\
    \ each list.\n        int lst1Sum = 0;\n        foreach (string s in lst1) {\n\
    \            lst1Sum += s.Length;\n        }\n        int lst2Sum = 0;\n     \
    \   foreach (string s in lst2) {\n            lst2Sum += s.Length;\n        }\n\
    \        // 2. Return the smaller list.\n        if (lst1Sum < lst2Sum) {\n  \
    \          return lst1;\n        } else {\n            return lst2;\n        }\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <177c0afff410452498bc17e36b585c08>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <177c0afff410452498bc17e36b585c08>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976749
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        var total1 = lst1.Select(s => s.Length).Sum();\n\
    \        var total2 = lst2.Select(s => s.Length).Sum();\n        if (total1 <\
    \ total2) {\n            return lst1;\n        } else {\n            return lst2;\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0360801ed997433a9e207f472456a7a4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0360801ed997433a9e207f472456a7a4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976749
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        if (lst1.Count == 0 && lst2.Count == 0)\
    \ {\n            return lst1;\n        }\n        int count1 = 0;\n        foreach\
    \ (string x in lst1) {\n            count1 += x.Length;\n        }\n        int\
    \ count2 = 0;\n        foreach (string x in lst2) {\n            count2 += x.Length;\n\
    \        }\n        if (count1 < count2) {\n            return lst1;\n       \
    \ }\n        if (count2 < count1) {\n            return lst2;\n        }\n   \
    \     return lst1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <497fc949cab84420a74589721b0491d9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <497fc949cab84420a74589721b0491d9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976749
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // INSERT YOUR CODE HERE\n        int total1\
    \ = 0;\n        int total2 = 0;\n        foreach (string s in lst1) {\n      \
    \      total1 += s.Length;\n        }\n        foreach (string s in lst2) {\n\
    \            total2 += s.Length;\n        }\n        if (total1 < total2) {\n\
    \            return lst1;\n        } else if (total1 > total2) {\n           \
    \ return lst2;\n        } else {\n            return lst1;\n        }\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <52334b137d184c3fb031f9f6c5daff6d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <52334b137d184c3fb031f9f6c5daff6d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976749
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int t1 = 0;\n        int t2 = 0;\n     \
    \   foreach (string s in lst1)\n            t1 += s.Length;\n        foreach (string\
    \ s in lst2)\n            t2 += s.Length;\n        if (t1 < t2)\n            return\
    \ lst1;\n        else\n            return lst2;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a68f1510904f4646b57b93718223d8bf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a68f1510904f4646b57b93718223d8bf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return (lst1.Sum(s => s.Length) < lst2.Sum(s\
    \ => s.Length)) ? lst1 : lst2;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fe44fc09a3db44a093879b2a3f174d46>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fe44fc09a3db44a093879b2a3f174d46>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976748
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int Sum_1 = 0;\n        int Sum_2 = 0;\n\
    \        for (int i = 0; i < lst1.Count; i++) {\n            Sum_1 += lst1[i].Length;\n\
    \        }\n        for (int i = 0; i < lst2.Count; i++) {\n            Sum_2\
    \ += lst2[i].Length;\n        }\n        if (Sum_1 < Sum_2) {\n            return\
    \ lst1;\n        }\n        else {\n            return lst2;\n        }\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c81da0a69fef4d318606649abb690b66>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c81da0a69fef4d318606649abb690b66>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976749
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int lst1Len = 0;\n        int lst2Len =\
    \ 0;\n        foreach (string s in lst1) {\n            lst1Len += s.Length;\n\
    \        }\n        foreach (string s in lst2) {\n            lst2Len += s.Length;\n\
    \        }\n        if (lst1Len < lst2Len) {\n            return lst1;\n     \
    \   } else if (lst2Len < lst1Len) {\n            return lst2;\n        } else\
    \ {\n            return lst1;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6dc78df5e78f4a73a60f117f9777a6f0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6dc78df5e78f4a73a60f117f9777a6f0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976749
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n\
    \        for (int i = 0; i < lst1.Count; i++) {\n            total1 += lst1[i].Length;\n\
    \        }\n        for (int i = 0; i < lst2.Count; i++) {\n            total2\
    \ += lst2[i].Length;\n        }\n        if (total1 <= total2) {\n           \
    \ return lst1;\n        } else {\n            return lst2;\n        }\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <edfe7c6e80d844febc3ec3ce46852472>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <edfe7c6e80d844febc3ec3ce46852472>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976749
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // Your code goes here\n        int num1\
    \ = 0;\n        int num2 = 0;\n        for (int i = 0; i < lst1.Count; i++)\n\
    \        {\n            num1 += lst1[i].Length;\n        }\n        for (int i\
    \ = 0; i < lst2.Count; i++)\n        {\n            num2 += lst2[i].Length;\n\
    \        }\n        if (num1 == num2)\n        {\n            return lst1;\n \
    \       }\n        else if (num1 < num2)\n        {\n            return lst1;\n\
    \        }\n        else\n        {\n            return lst2;\n        }\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a0e3617feea74152a9cbf7f9093de581>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a0e3617feea74152a9cbf7f9093de581>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976745
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        throw new NotImplementedException();\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x0000b] in <302838cb32e84e1da3ac8d7d5a1a9b67>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x0000b]\
    \ in <302838cb32e84e1da3ac8d7d5a1a9b67>:0 \n"
  stdout: ''
  timestamp: 1659976746
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int total1 = lst1.Sum(s => s.Length);\n\
    \        int total2 = lst2.Sum(s => s.Length);\n        if (total1 < total2) return\
    \ lst1;\n        if (total2 < total1) return lst2;\n        return lst1;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f6a45cbaf36f466f9a1e0e54de0fc54a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f6a45cbaf36f466f9a1e0e54de0fc54a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return (((lst1.Select((string str) => str.Length).Sum())\
    \ < (lst2.Select((string str) => str.Length).Sum())) ? lst1 : lst2);\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a826d8ea9ca46c28a699989307295b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a826d8ea9ca46c28a699989307295b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // your code here\n        List<string>\
    \ shortest = lst1.Count < lst2.Count ? lst1 : lst2;\n        List<string> longest\
    \ = lst1.Count < lst2.Count ? lst2 : lst1;\n        int shortestTotal = shortest.Sum(s\
    \ => s.Length);\n        int longestTotal = longest.Sum(s => s.Length);\n    \
    \    return shortestTotal < longestTotal ? shortest : longest;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <022a7dcf809f444b87658f35088ff748>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <022a7dcf809f444b87658f35088ff748>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // YOUR CODE HERE\n        return new List<string>();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f1fd7721f3649cfaba73fd50a5decb1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f1fd7721f3649cfaba73fd50a5decb1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        var total1 = lst1.Select(s => s.Length).Sum();\n\
    \        var total2 = lst2.Select(s => s.Length).Sum();\n        return total1\
    \ < total2 ? lst1 : lst2;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af50915ddd44263855a6224d12fdedd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2af50915ddd44263855a6224d12fdedd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int total1 = 0;\n        foreach (string\
    \ s in lst1) {\n            total1 += s.Length;\n        }\n        int total2\
    \ = 0;\n        foreach (string s in lst2) {\n            total2 += s.Length;\n\
    \        }\n        if (total1 < total2) {\n            return lst1;\n       \
    \ } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b750917ff04e4a82abbbbd6a4f9576e7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b750917ff04e4a82abbbbd6a4f9576e7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int totalChars1 = 0;\n        int totalChars2\
    \ = 0;\n        for (int i = 0; i < lst1.Count; i++) {\n            totalChars1\
    \ += lst1[i].Length;\n        }\n        for (int i = 0; i < lst2.Count; i++)\
    \ {\n            totalChars2 += lst2[i].Length;\n        }\n        if (totalChars1\
    \ < totalChars2)\n            return lst1;\n        else\n            return lst2;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8e3c04b090be4502bedf35aaec342d92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8e3c04b090be4502bedf35aaec342d92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // your code goes here\n        return new\
    \ List<string>();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <21760e61b73542faa22557423d65dff2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <21760e61b73542faa22557423d65dff2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n \
    \       foreach (string item in lst1) {\n            sum1 += item.Length;\n  \
    \      }\n        foreach (string item in lst2) {\n            sum2 += item.Length;\n\
    \        }\n        if (sum1 == sum2) {\n            return lst1;\n        }\n\
    \        if (sum1 < sum2) {\n            return lst1;\n        }\n        else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <877bfb744ef149ac9f341df893ee3e80>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <877bfb744ef149ac9f341df893ee3e80>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int t1 = 0;\n        foreach (string str\
    \ in lst1) {\n            t1 += str.Length;\n        }\n        int t2 = 0;\n\
    \        foreach (string str in lst2) {\n            t2 += str.Length;\n     \
    \   }\n        if (t1 < t2) {\n            return lst1;\n        } else {\n  \
    \          return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5b7a389db22048e8a3d9645117707650>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5b7a389db22048e8a3d9645117707650>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n\
    \        foreach (string item in lst1) {\n            total1 += item.Length;\n\
    \        }\n        foreach (string item in lst2) {\n            total2 += item.Length;\n\
    \        }\n        if (total1 < total2) {\n            return lst1;\n       \
    \ } else if (total2 < total1) {\n            return lst2;\n        } else {\n\
    \            return lst1;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca86aec522304d01b1d241db718c6ae8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca86aec522304d01b1d241db718c6ae8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976749
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        List<string> result = lst1;\n        int\
    \ list1_sum = 0;\n        int list2_sum = 0;\n        foreach (string item in\
    \ lst1) {\n            list1_sum += item.Length;\n        }\n        foreach (string\
    \ item in lst2) {\n            list2_sum += item.Length;\n        }\n        if\
    \ (list1_sum > list2_sum) {\n            result = lst2;\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c723d51dfd2c48ebafbd8545f8967a58>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c723d51dfd2c48ebafbd8545f8967a58>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        List<string> result = new List<string>();\n\
    \        if (TotalNumberOfChars(lst1) == TotalNumberOfChars(lst2)) {\n       \
    \     result = lst1;\n        } else if (TotalNumberOfChars(lst1) < TotalNumberOfChars(lst2))\
    \ {\n            result = lst1;\n        } else {\n            result = lst2;\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwhj9kkbq.cs(25,13): error CS0103: The name ''TotalNumberOfChars'' does
    not exist in the current context

    /tmp/tmpwhj9kkbq.cs(25,41): error CS0103: The name ''TotalNumberOfChars'' does
    not exist in the current context

    /tmp/tmpwhj9kkbq.cs(27,20): error CS0103: The name ''TotalNumberOfChars'' does
    not exist in the current context

    /tmp/tmpwhj9kkbq.cs(27,47): error CS0103: The name ''TotalNumberOfChars'' does
    not exist in the current context

    '
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int lst1Len = 0;\n        int lst2Len =\
    \ 0;\n        foreach (string s in lst1) {\n            lst1Len += s.Length;\n\
    \        }\n        foreach (string s in lst2) {\n            lst2Len += s.Length;\n\
    \        }\n        if (lst1Len <= lst2Len) {\n            return lst1;\n    \
    \    } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d7ace02ce7bf4093a5f6734a96a452e7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d7ace02ce7bf4093a5f6734a96a452e7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // If either list is empty, return the other\n\
    \        if (lst1.Count == 0) return lst2;\n        if (lst2.Count == 0) return\
    \ lst1;\n        // Sum the lengths of each list\n        int lst1len = 0;\n \
    \       int lst2len = 0;\n        for (int i = 0; i < lst1.Count; i++) {\n   \
    \         lst1len += lst1[i].Length;\n        }\n        for (int i = 0; i < lst2.Count;\
    \ i++) {\n            lst2len += lst2[i].Length;\n        }\n        // Return\
    \ the list with the shortest total\n        if (lst1len < lst2len) return lst1;\n\
    \        if (lst2len < lst1len) return lst2;\n        // Return the first list\
    \ if equal\n        return lst1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5b7e70782706424a9219b0792b20286d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5b7e70782706424a9219b0792b20286d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // Write your code here\n        return\
    \ lst1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <551b4183ad4242e4ba4f81c3342fb166>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <551b4183ad4242e4ba4f81c3342fb166>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976746
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // Your code goes here\n        int totalLength1\
    \ = 0;\n        int totalLength2 = 0;\n        foreach (string str in lst1) {\n\
    \            totalLength1 += str.Length;\n        }\n        foreach (string str\
    \ in lst2) {\n            totalLength2 += str.Length;\n        }\n        if (totalLength1\
    \ < totalLength2) {\n            return lst1;\n        } else {\n            return\
    \ lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <399d12d036bd491aa28fbc43779cdf34>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <399d12d036bd491aa28fbc43779cdf34>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmputyw9gn1.cs(24,16): error CS0029: Cannot implicitly convert type ''int''
    to ''System.Collections.Generic.List<string>''

    '
  timestamp: 1659976750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // Write your code here.\n        return\
    \ null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <746327845420420f9443c55bb6f39118>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <746327845420420f9443c55bb6f39118>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int tot1 = 0;\n        int tot2 = 0;\n \
    \       foreach (string s in lst1) {\n            tot1 += s.Length;\n        }\n\
    \        foreach (string s in lst2) {\n            tot2 += s.Length;\n       \
    \ }\n        if (tot1 <= tot2) {\n            return lst1;\n        } else {\n\
    \            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9660c3c705be4a198da28ef2d121d75c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9660c3c705be4a198da28ef2d121d75c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return lst1.Count < lst2.Count ? lst1 :\
    \ lst2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a8acb5ffdb624ea1bf69a3d9cd72c707>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a8acb5ffdb624ea1bf69a3d9cd72c707>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976746
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // YOUR CODE HERE\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <c3ae04d0f31545eaaa9c45a6ed33486c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <c3ae04d0f31545eaaa9c45a6ed33486c>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // insert your answer here\n        int\
    \ l1=0,l2=0;\n        foreach(string s in lst1)\n        {\n            l1+=s.Length;\n\
    \        }\n        foreach(string s in lst2)\n        {\n            l2+=s.Length;\n\
    \        }\n        if(l1<l2)\n        {\n            return lst1;\n        }\n\
    \        else\n        {\n            return lst2;\n        }\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ad9151e11d764f00a59638af4ae4e59c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ad9151e11d764f00a59638af4ae4e59c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        Func<List<string>, int> sum = new Func<List<string>,\
    \ int>((List<string> lst) => lst.Aggregate(0, (acc, str) => acc + str.Length));\n\
    \        return sum(lst1) <= sum(lst2) ? lst1 : lst2;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <55fd7896b6244e2fbe2f5e71863bb5b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <55fd7896b6244e2fbe2f5e71863bb5b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        List<string> x = lst1.Concat(lst2).ToList();\n\
    \        lst1.AddRange(lst2);\n        return lst1;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f9fe3d5f6bb242dc848cf17192d91f37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f9fe3d5f6bb242dc848cf17192d91f37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n\
    \        foreach (string s in lst1) {\n            total1 += s.Length;\n     \
    \   }\n        foreach (string s in lst2) {\n            total2 += s.Length;\n\
    \        }\n        if (total1 < total2) {\n            return lst1;\n       \
    \ } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3fb4684e9afb40f7978a065d92964d6f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3fb4684e9afb40f7978a065d92964d6f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976749
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // insert the solution to the problem here\n\
    \        return lst1;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dc7b6439cda44b0c8c1fe00d7ed91516>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dc7b6439cda44b0c8c1fe00d7ed91516>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // Your code here\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0yk4ws49.cs(23,32): error CS0161: ''Problem.TotalMatch(List<string>, List<string>)'':
    not all code paths return a value

    '
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int count1 = 0;\n        int count2 = 0;\n\
    \        foreach (string str in lst1) {\n            count1 += str.Length;\n \
    \       }\n        foreach (string str in lst2) {\n            count2 += str.Length;\n\
    \        }\n        if (count1 < count2) {\n            return lst1;\n       \
    \ } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <33b5aae5f7d1411a975144ad01f21cf4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <33b5aae5f7d1411a975144ad01f21cf4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // your code here\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <f5d0d995a5504ca59378c24f6bbab5bb>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <f5d0d995a5504ca59378c24f6bbab5bb>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return (lst1.Sum(x => x.Length) < lst2.Sum(x\
    \ => x.Length)) ? lst1 : lst2;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <020a6ddd20da41e082dcb6254f780ccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <020a6ddd20da41e082dcb6254f780ccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int lst1_total = 0;\n        int lst2_total\
    \ = 0;\n        // your code here\n        return lst1;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1b91d778077b4a47849e3e724b6853da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1b91d778077b4a47849e3e724b6853da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        if (lst1.Count == 0 && lst2.Count == 0)\
    \ {\n            return lst1;\n        }\n        var c1 = lst1.Sum(s => s.Length);\n\
    \        var c2 = lst2.Sum(s => s.Length);\n        if (c1 == c2) {\n        \
    \    return lst1;\n        }\n        return c1 < c2 ? lst1 : lst2;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88176f87a60f4cf89e69fc65cc1edcca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88176f87a60f4cf89e69fc65cc1edcca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976751
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // implement function here\n        return\
    \ null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <6292a3a2df8a4b79b6761de613bf15b2>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <6292a3a2df8a4b79b6761de613bf15b2>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976750
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int lst1Total = 0;\n        int lst2Total\
    \ = 0;\n        foreach (string s in lst1)\n            lst1Total += s.Length;\n\
    \        foreach (string s in lst2)\n            lst2Total += s.Length;\n    \
    \    if (lst1Total < lst2Total)\n            return lst1;\n        else\n    \
    \        return lst2;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3349587dc7d14e3fb86f8b5d57aa0100>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3349587dc7d14e3fb86f8b5d57aa0100>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // ToDo: Write code to solve the problem\n\
    \        //\n        // HINT:\n        // Call the Length property on strings\
    \ to get their number of chars.\n        //\n        // Buttons to help with answer\
    \ format:\n        // (new List<string>())\n        // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n        // (string)\"hi\"\n        // (string)\"admin\"\
    \n        return new List<string>();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dbf6955a6eb345d3b4f1309b7bf03923>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dbf6955a6eb345d3b4f1309b7bf03923>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // write your code here\n        var sum1\
    \ = lst1.Sum(s => s.Length);\n        var sum2 = lst2.Sum(s => s.Length);\n  \
    \      return sum1 <= sum2 ? lst1 : lst2;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a65129a8b7954a93bc501a820c872bd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a65129a8b7954a93bc501a820c872bd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int c1 = 0;\n        int c2 = 0;\n     \
    \   foreach (string s in lst1) {\n            c1 += s.Length;\n        }\n   \
    \     foreach (string s in lst2) {\n            c2 += s.Length;\n        }\n \
    \       if (c1 == c2) return lst1;\n        return c1 < c2 ? lst1 : lst2;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c024ee80a5e341c2a37b49acb50d0e9b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c024ee80a5e341c2a37b49acb50d0e9b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // Write code here\n        int lst1Total\
    \ = 0;\n        int lst2Total = 0;\n        for (int i = 0; i < lst1.Count; i++)\n\
    \        {\n            lst1Total += lst1[i].Length;\n        }\n        for (int\
    \ i = 0; i < lst2.Count; i++)\n        {\n            lst2Total += lst2[i].Length;\n\
    \        }\n        if (lst1Total == lst2Total)\n        {\n            return\
    \ lst1;\n        }\n        else if (lst1Total < lst2Total)\n        {\n     \
    \       return lst1;\n        }\n        else\n        {\n            return lst2;\n\
    \        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7b2ab0caaf1d4c3db546f7aa39a55de0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7b2ab0caaf1d4c3db546f7aa39a55de0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // Implement your solution here\n      \
    \  List<string> new_list = new List<string>();\n        int n_lst1 = 0;\n    \
    \    int n_lst2 = 0;\n        foreach (string s in lst1) {\n            n_lst1\
    \ += s.Length;\n        }\n        foreach (string s in lst2) {\n            n_lst2\
    \ += s.Length;\n        }\n        if (n_lst1 <= n_lst2) {\n            return\
    \ lst1;\n        }\n        else {\n            return lst2;\n        }\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c9da6225fb384045a0c8f9c2d91c7f77>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c9da6225fb384045a0c8f9c2d91c7f77>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976751
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // Your code goes here\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpoeo99vah.cs(23,32): error CS0161: ''Problem.TotalMatch(List<string>, List<string>)'':
    not all code paths return a value

    '
  timestamp: 1659976747
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        // return (lst1.Length <= lst2.Length) ?\
    \ lst1 : lst2;\n        return (lst1.Count() <= lst2.Count()) ? lst1 : lst2;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c0bd15be67c3410e8f6a68d089a62979>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c0bd15be67c3410e8f6a68d089a62979>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int count1 = 0;\n        int count2 = 0;\n\
    \        foreach (string s in lst1) {\n            count1 += s.Length;\n     \
    \   }\n        foreach (string s in lst2) {\n            count2 += s.Length;\n\
    \        }\n        if (count1 <= count2) {\n            return lst1;\n      \
    \  } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2d1b3c3a0e75426ebfad393628f8bed7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2d1b3c3a0e75426ebfad393628f8bed7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return lst1.Sum(x => x.Length) > lst2.Sum(x\
    \ => x.Length) ? lst2 : lst1;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7fb6b7d2a5644dda86926aa8eb902605>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7fb6b7d2a5644dda86926aa8eb902605>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976751
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00015] in <b01ddd660cf94eb69bff590615c74f9d>:0\
    \ \n"
  stdout: ''
  timestamp: 1659976745
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int t1 = 0;\n        foreach (string s in\
    \ lst1)\n            t1 += s.Length;\n        int t2 = 0;\n        foreach (string\
    \ s in lst2)\n            t2 += s.Length;\n        if (t1 <= t2)\n           \
    \ return lst1;\n        else\n            return lst2;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1737355cd31f4e71b3cdec689eebd064>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1737355cd31f4e71b3cdec689eebd064>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976751
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // >>> TotalMatch((new\
    \ List<string>()), (new List<string>()))\n    // (new List<string>())\n    //\
    \ >>> TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"})))\n    //\
    \ (new List<string>(new string[]{(string)\"hI\", (string)\"Hi\"}))\n    // >>>\
    \ TotalMatch((new List<string>(new string[]{(string)\"hi\", (string)\"admin\"\
    })), (new List<string>(new string[]{(string)\"hi\", (string)\"hi\", (string)\"\
    admin\", (string)\"project\"})))\n    // (new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))\n    // >>> TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
    hi\", (string)\"hi\"})))\n    // (new List<string>(new string[]{(string)\"hI\"\
    , (string)\"hi\", (string)\"hi\"}))\n    // >>> TotalMatch((new List<string>(new\
    \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
    2\", (string)\"3\", (string)\"4\", (string)\"5\"})))\n    // (new List<string>(new\
    \ string[]{(string)\"4\"}))\n    public static List<string> TotalMatch(List<string>\
    \ lst1, List<string> lst2) {\n        int len1 = lst1.Sum(str => str.Length);\n\
    \        int len2 = lst2.Sum(str => str.Length);\n        if (len1 < len2) {\n\
    \            return lst1;\n        } else if (len2 < len1) {\n            return\
    \ lst2;\n        } else {\n            return lst1;\n        }\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31f8378f23e947f2b3ff52d4af42b6aa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31f8378f23e947f2b3ff52d4af42b6aa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659976751

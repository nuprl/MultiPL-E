name: HumanEval_27_flip_case
language: python
results:
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpachoi5qc.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpachoi5qc.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpachoi5qc.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmclnc0l1.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpmclnc0l1.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpmclnc0l1.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxsvwzvtm.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpxsvwzvtm.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpxsvwzvtm.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '').lower()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsyaqdr33.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpsyaqdr33.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpsyaqdr33.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv87v54mr.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpv87v54mr.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpv87v54mr.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string and string.islower()\
    \ else string.lower()\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4ixlw11d.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp4ixlw11d.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp4ixlw11d.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string and string.islower()\
    \ else string.lower()\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphpnr2ime.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmphpnr2ime.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmphpnr2ime.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.istitle() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqyg6qn0i.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpqyg6qn0i.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpqyg6qn0i.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '')\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw42brktr.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpw42brktr.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpw42brktr.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.istitle() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpobs4oozp.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpobs4oozp.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpobs4oozp.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpve7robml.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpve7robml.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpve7robml.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4c8q09k4.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp4c8q09k4.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp4c8q09k4.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc40vkqfn.py\", line\
    \ 16, in <module>\n    test_check()\n  File \"/tmp/tmpc40vkqfn.py\", line 14,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpc40vkqfn.py\", line 10,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxuicm3n2.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpxuicm3n2.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpxuicm3n2.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string and string.islower()\
    \ else string.lower()\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbzew3i2x.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpbzew3i2x.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpbzew3i2x.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeob44ugq.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpeob44ugq.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpeob44ugq.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '')\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxn_3dr4i.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpxn_3dr4i.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpxn_3dr4i.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3lwbxx8k.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp3lwbxx8k.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp3lwbxx8k.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmg9n30w0.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpmg9n30w0.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpmg9n30w0.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '').lower()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_bt2uon5.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp_bt2uon5.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp_bt2uon5.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string and string.islower()\
    \ else string.lower()\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9g224uou.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp9g224uou.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp9g224uou.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string and string.islower()\
    \ else string.lower()\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvqx7zw3u.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpvqx7zw3u.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpvqx7zw3u.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '')\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpamguvvp5.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpamguvvp5.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpamguvvp5.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string in string.lower()\
    \ else string.lower()\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4zgoik21.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp4zgoik21.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp4zgoik21.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl_2wi5nj.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpl_2wi5nj.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpl_2wi5nj.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3whic0o5.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp3whic0o5.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp3whic0o5.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0cbyzb50.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp0cbyzb50.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp0cbyzb50.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string and string.islower()\
    \ else string.lower()\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj1ov1o0r.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpj1ov1o0r.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpj1ov1o0r.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpss64_37y.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpss64_37y.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpss64_37y.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcvitzo96.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpcvitzo96.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpcvitzo96.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '')\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzfd86ng9.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpzfd86ng9.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpzfd86ng9.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwu_nlhj9.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpwu_nlhj9.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpwu_nlhj9.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '')\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm9q4icyn.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpm9q4icyn.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpm9q4icyn.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7cbohyas.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp7cbohyas.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp7cbohyas.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp250nv5ce.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp250nv5ce.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp250nv5ce.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '').lower()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_c_p5png.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp_c_p5png.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp_c_p5png.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5n3sab3s.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp5n3sab3s.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp5n3sab3s.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string and string.islower()\
    \ else string.lower()\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptkg_qhq5.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmptkg_qhq5.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmptkg_qhq5.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzpr71lk0.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpzpr71lk0.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpzpr71lk0.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph7jq7m17.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmph7jq7m17.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmph7jq7m17.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '')\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprwkgybok.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmprwkgybok.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmprwkgybok.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.istitle() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1iod7up2.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp1iod7up2.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp1iod7up2.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.istitle() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpysdgtphr.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpysdgtphr.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpysdgtphr.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjb5yx58c.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpjb5yx58c.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpjb5yx58c.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '').lower()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_n04ytpt.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp_n04ytpt.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp_n04ytpt.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.istitle() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6ytwixj8.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp6ytwixj8.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp6ytwixj8.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '').lower()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps2_rraxq.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmps2_rraxq.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmps2_rraxq.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpctc_b3ui.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpctc_b3ui.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpctc_b3ui.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr63tf_pq.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpr63tf_pq.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpr63tf_pq.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfxg8zvxf.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpfxg8zvxf.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpfxg8zvxf.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps5mubtlt.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmps5mubtlt.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmps5mubtlt.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps481x0us.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmps481x0us.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmps481x0us.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.istitle() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpep8_p88_.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpep8_p88_.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpep8_p88_.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '')\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsqrc4odp.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpsqrc4odp.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpsqrc4odp.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8hvkk9r6.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp8hvkk9r6.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp8hvkk9r6.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4n03d5q5.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp4n03d5q5.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp4n03d5q5.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3zv99hk0.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp3zv99hk0.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp3zv99hk0.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '')\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph4rvf4ca.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmph4rvf4ca.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmph4rvf4ca.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.istitle() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv1e2c2_3.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpv1e2c2_3.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpv1e2c2_3.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string and string.islower()\
    \ else string.lower()\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd7fupjdy.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpd7fupjdy.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpd7fupjdy.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '')\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr59gjgwo.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpr59gjgwo.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpr59gjgwo.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplha1xabx.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmplha1xabx.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmplha1xabx.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '').lower()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph0_hfjdw.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmph0_hfjdw.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmph0_hfjdw.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '').replace('.', '')\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert\
    \ candidate('These violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpycbn6kmi.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpycbn6kmi.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpycbn6kmi.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.istitle() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9horqzac.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp9horqzac.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp9horqzac.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5xwo9qfr.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp5xwo9qfr.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp5xwo9qfr.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsezvvgwh.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpsezvvgwh.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpsezvvgwh.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string and string.islower()\
    \ else string.lower()\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfzdto3fm.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpfzdto3fm.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpfzdto3fm.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string and string.islower()\
    \ else string.lower()\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2rnqox03.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp2rnqox03.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp2rnqox03.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8skax12z.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp8skax12z.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp8skax12z.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string and string.islower()\
    \ else string.lower()\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2ur3689x.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp2ur3689x.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp2ur3689x.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplnexejv6.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmplnexejv6.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmplnexejv6.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa00np_2e.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpa00np_2e.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpa00np_2e.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string and string.islower()\
    \ else string.lower()\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppt_o1bsw.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmppt_o1bsw.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmppt_o1bsw.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string and string.islower()\
    \ else string.lower()\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_92zia7x.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp_92zia7x.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp_92zia7x.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '').lower()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8hx2n7n9.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp8hx2n7n9.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp8hx2n7n9.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '')\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph856mxxr.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmph856mxxr.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmph856mxxr.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyvv1gtg0.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpyvv1gtg0.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpyvv1gtg0.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppogl2pt5.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmppogl2pt5.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmppogl2pt5.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5qwqpxc_.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp5qwqpxc_.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp5qwqpxc_.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2wjcd93d.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp2wjcd93d.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp2wjcd93d.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string and string.islower()\
    \ else string.lower()\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx9wz6rfo.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpx9wz6rfo.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpx9wz6rfo.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string in string.lower()\
    \ else string.lower()\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxntx2r75.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpxntx2r75.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpxntx2r75.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd_lcr9ic.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpd_lcr9ic.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpd_lcr9ic.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.istitle() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2td8j6s5.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp2td8j6s5.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp2td8j6s5.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdbvbtxw2.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpdbvbtxw2.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpdbvbtxw2.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo1qvc0bs.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpo1qvc0bs.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpo1qvc0bs.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '')\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsud5orr9.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpsud5orr9.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpsud5orr9.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '')\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7yipblsn.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp7yipblsn.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp7yipblsn.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.istitle() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcniv3l7o.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpcniv3l7o.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpcniv3l7o.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '')\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpaon2f0op.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpaon2f0op.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpaon2f0op.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '').lower()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplom6gfox.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmplom6gfox.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmplom6gfox.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps7qqpfei.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmps7qqpfei.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmps7qqpfei.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzcufjxi8.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpzcufjxi8.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpzcufjxi8.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string and string.islower()\
    \ else string.lower()\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnukax17q.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpnukax17q.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpnukax17q.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp00bt7q4f.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp00bt7q4f.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp00bt7q4f.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string and string.islower()\
    \ else string.lower()\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpussulyoc.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpussulyoc.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpussulyoc.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '')\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyv0at40y.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpyv0at40y.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpyv0at40y.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqbldnew0.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpqbldnew0.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpqbldnew0.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.istitle() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsijicg73.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpsijicg73.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpsijicg73.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '')\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsc_bklir.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpsc_bklir.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpsc_bklir.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0w3__yiv.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp0w3__yiv.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp0w3__yiv.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '')\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwckx_6qz.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpwckx_6qz.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpwckx_6qz.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5lf2cdce.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp5lf2cdce.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp5lf2cdce.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdkdm8a4f.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpdkdm8a4f.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpdkdm8a4f.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '')\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq_hi2yyc.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpq_hi2yyc.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpq_hi2yyc.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1re6mi5y.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp1re6mi5y.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp1re6mi5y.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string and string.islower()\
    \ else string.lower()\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptppz15zf.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmptppz15zf.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmptppz15zf.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '')\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphwfzb2td.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmphwfzb2td.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmphwfzb2td.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc1msvd3n.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpc1msvd3n.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpc1msvd3n.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkyw_05zn.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpkyw_05zn.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpkyw_05zn.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduy2ja6k.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpduy2ja6k.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpduy2ja6k.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1mto7s90.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp1mto7s90.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp1mto7s90.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw73_jqsr.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpw73_jqsr.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpw73_jqsr.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr9dwo2tc.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpr9dwo2tc.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpr9dwo2tc.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string in string.lower()\
    \ else string.lower()\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4tnkfex8.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp4tnkfex8.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp4tnkfex8.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.istitle() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqqqf3mc1.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpqqqf3mc1.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpqqqf3mc1.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '')\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkxoc9nfc.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpkxoc9nfc.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpkxoc9nfc.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.istitle() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2l5dtft9.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp2l5dtft9.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp2l5dtft9.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string and string.islower()\
    \ else string.lower()\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp587degnz.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp587degnz.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp587degnz.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '')\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0cxvf5zm.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp0cxvf5zm.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp0cxvf5zm.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '').replace('.', '')\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert\
    \ candidate('These violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmple784v07.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmple784v07.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmple784v07.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '')\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphsaekaix.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmphsaekaix.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmphsaekaix.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxpgen9sw.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpxpgen9sw.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpxpgen9sw.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '')\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8qgn45tl.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp8qgn45tl.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp8qgn45tl.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '')\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1dx1yktm.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp1dx1yktm.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp1dx1yktm.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '')\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxdpgljlw.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpxdpgljlw.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpxdpgljlw.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '').lower()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lm4v397.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp0lm4v397.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp0lm4v397.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper().replace(' ', '').replace('_',\
    \ '').replace('-', '')\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt3xbof9b.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpt3xbof9b.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpt3xbof9b.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.swapcase()\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string and string.islower()\
    \ else string.lower()\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwunyufoi.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpwunyufoi.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpwunyufoi.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptabvz9on.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmptabvz9on.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmptabvz9on.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn953f8b4.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpn953f8b4.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmpn953f8b4.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \"\"\"\n    return string.upper() if string.islower() else string.lower()\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0klax7em.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmp0klax7em.py\", line 15,\
    \ in test_check\n    check(flip_case)\n  File \"/tmp/tmp0klax7em.py\", line 11,\
    \ in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception

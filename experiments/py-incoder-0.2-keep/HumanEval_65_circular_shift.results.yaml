name: HumanEval_65_circular_shift
language: python
results:
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc4idsi0w.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpc4idsi0w.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpc4idsi0w.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpc4idsi0w.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbajyorb3.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpbajyorb3.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpbajyorb3.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpbajyorb3.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphsk5byb5.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmphsk5byb5.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmphsk5byb5.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmphsk5byb5.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplschqw06.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmplschqw06.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmplschqw06.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmplschqw06.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n    \
    \    digits = digits[::-1]\n    return digits[shift:] + digits[:shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsb61bghm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpsb61bghm.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpsb61bghm.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppyoiq_cx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppyoiq_cx.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmppyoiq_cx.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmppyoiq_cx.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgoxmuwns.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpgoxmuwns.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpgoxmuwns.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpgoxmuwns.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa_gxxekz.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpa_gxxekz.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpa_gxxekz.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpa_gxxekz.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return \"\".join([str(int(digit))\
    \ for digit in str(x)[::-1]])\n    else:\n        return \"\".join([str(int(digit))\
    \ for digit in str(x)[shift:]])\n\n\ndef check(candidate):\n    assert candidate(100,\
    \ 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8)\
    \ == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11, 101)\
    \ == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvk4q52zb.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpvk4q52zb.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpvk4q52zb.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpvk4q52zb.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n    \
    \    digits = digits[::-1]\n    return digits[shift:] + digits[:shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3jx3n1yl.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp3jx3n1yl.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp3jx3n1yl.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpro1lo1iy.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpro1lo1iy.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpro1lo1iy.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpro1lo1iy.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3h5ia2mh.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp3h5ia2mh.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp3h5ia2mh.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp3h5ia2mh.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz20wtgh7.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpz20wtgh7.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpz20wtgh7.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpz20wtgh7.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppxriijr8.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmppxriijr8.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmppxriijr8.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmppxriijr8.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n    \
    \    digits = digits[::-1]\n    return digits[shift:] + digits[:shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbbftrf8y.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpbbftrf8y.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpbbftrf8y.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmtj0rgrt.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmtj0rgrt.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpmtj0rgrt.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpmtj0rgrt.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpimdv9ycy.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpimdv9ycy.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpimdv9ycy.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpimdv9ycy.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprgcws8f5.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmprgcws8f5.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmprgcws8f5.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmprgcws8f5.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzijtzj_j.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpzijtzj_j.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpzijtzj_j.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpzijtzj_j.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyioq9pde.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpyioq9pde.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpyioq9pde.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpyioq9pde.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpokarp0m4.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpokarp0m4.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpokarp0m4.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpokarp0m4.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return \"\".join([str(int(digit))\
    \ for digit in str(x)[::-1]])\n    else:\n        return \"\".join([str(int(digit))\
    \ for digit in str(x)[shift:]])\n\n\ndef check(candidate):\n    assert candidate(100,\
    \ 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8)\
    \ == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11, 101)\
    \ == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprsvt9no_.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmprsvt9no_.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmprsvt9no_.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmprsvt9no_.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpto8mqsf4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpto8mqsf4.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpto8mqsf4.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpto8mqsf4.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzzjqlmll.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpzzjqlmll.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpzzjqlmll.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpzzjqlmll.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqfb4rys8.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpqfb4rys8.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpqfb4rys8.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpqfb4rys8.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n    \
    \    return digits[::-1]\n    return digits[shift:] + digits[:shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppd9__bv6.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppd9__bv6.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmppd9__bv6.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp7zx4rhq.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpp7zx4rhq.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpp7zx4rhq.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpp7zx4rhq.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n    \
    \    digits = digits[::-1]\n    return digits[shift:] + digits[:shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6t4iab78.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp6t4iab78.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp6t4iab78.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdpwkaz_4.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpdpwkaz_4.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpdpwkaz_4.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpdpwkaz_4.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5us3o6d6.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp5us3o6d6.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp5us3o6d6.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp5us3o6d6.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuqn28x1f.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpuqn28x1f.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpuqn28x1f.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpuqn28x1f.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfjm7pdpi.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpfjm7pdpi.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpfjm7pdpi.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpfjm7pdpi.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8dwemxqa.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp8dwemxqa.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp8dwemxqa.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp8dwemxqa.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n    \
    \    digits = digits[::-1]\n    return digits[shift:] + digits[:shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnd56cxhl.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpnd56cxhl.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpnd56cxhl.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpixlljn64.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpixlljn64.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpixlljn64.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpixlljn64.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeykt5qnp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpeykt5qnp.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpeykt5qnp.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpeykt5qnp.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpampxo0qd.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpampxo0qd.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpampxo0qd.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpampxo0qd.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr43o7jz5.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpr43o7jz5.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpr43o7jz5.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpr43o7jz5.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1re8rh3t.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp1re8rh3t.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp1re8rh3t.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp1re8rh3t.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd9ncavrb.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpd9ncavrb.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpd9ncavrb.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpd9ncavrb.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0nic869x.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp0nic869x.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp0nic869x.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp0nic869x.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return \"\".join([str(int(digit))\
    \ for digit in str(x)[::-1]])\n    else:\n        return \"\".join([str(int(digit))\
    \ for digit in str(x)[shift:]])\n\n\ndef check(candidate):\n    assert candidate(100,\
    \ 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8)\
    \ == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11, 101)\
    \ == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1j1cyvmj.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp1j1cyvmj.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp1j1cyvmj.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp1j1cyvmj.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1rhazcf3.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp1rhazcf3.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp1rhazcf3.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp1rhazcf3.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_nkdrghc.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp_nkdrghc.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp_nkdrghc.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp_nkdrghc.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq2ktzbju.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpq2ktzbju.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpq2ktzbju.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpq2ktzbju.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_hh9vffn.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp_hh9vffn.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp_hh9vffn.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp_hh9vffn.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphlthqf2j.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmphlthqf2j.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmphlthqf2j.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmphlthqf2j.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n    \
    \    digits = digits[::-1]\n    return digits + str(int(digits[shift:]) + int(digits[:shift]))\n\
    \n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnz1asryn.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpnz1asryn.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpnz1asryn.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8lgm3bcd.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp8lgm3bcd.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp8lgm3bcd.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp8lgm3bcd.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfjp1o4hg.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpfjp1o4hg.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpfjp1o4hg.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpfjp1o4hg.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp425v39l1.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp425v39l1.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp425v39l1.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp425v39l1.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxjcfczs4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpxjcfczs4.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpxjcfczs4.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpxjcfczs4.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpora1eupn.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpora1eupn.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpora1eupn.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpora1eupn.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0awrhl4t.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp0awrhl4t.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp0awrhl4t.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp0awrhl4t.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph7g_g9rx.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmph7g_g9rx.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmph7g_g9rx.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmph7g_g9rx.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa6hsp7t8.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpa6hsp7t8.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpa6hsp7t8.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpa6hsp7t8.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvy86ym3t.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpvy86ym3t.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpvy86ym3t.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpvy86ym3t.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0ppbt2c5.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp0ppbt2c5.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp0ppbt2c5.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp0ppbt2c5.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqnv2g_6h.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpqnv2g_6h.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpqnv2g_6h.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpqnv2g_6h.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf3mz1xmp.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpf3mz1xmp.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpf3mz1xmp.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpf3mz1xmp.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2co5plnl.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp2co5plnl.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp2co5plnl.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp2co5plnl.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprxqk8vk9.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmprxqk8vk9.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmprxqk8vk9.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmprxqk8vk9.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwp7zggkd.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpwp7zggkd.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpwp7zggkd.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpwp7zggkd.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg9l8n5t8.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpg9l8n5t8.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpg9l8n5t8.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpg9l8n5t8.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb36gsbrw.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpb36gsbrw.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpb36gsbrw.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpb36gsbrw.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeiyqm1mp.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpeiyqm1mp.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpeiyqm1mp.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpeiyqm1mp.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return \"\".join([str(int(digit))\
    \ for digit in str(x)[::-1]])\n    else:\n        return \"\".join([str(int(digit))\
    \ for digit in str(x)[shift:]])\n\n\ndef check(candidate):\n    assert candidate(100,\
    \ 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8)\
    \ == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11, 101)\
    \ == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvva6ur_2.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpvva6ur_2.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpvva6ur_2.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpvva6ur_2.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuq0js9fx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpuq0js9fx.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpuq0js9fx.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpuq0js9fx.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n    \
    \    digits = digits[::-1]\n    return digits[shift:] + digits[:shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpseugd354.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpseugd354.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpseugd354.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n    \
    \    digits = digits[::-1]\n    return digits[shift:] + digits[:shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8evwna8n.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp8evwna8n.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp8evwna8n.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0j75liy9.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp0j75liy9.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp0j75liy9.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp0j75liy9.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv69uclfr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpv69uclfr.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpv69uclfr.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpv69uclfr.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkldwwdv1.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpkldwwdv1.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpkldwwdv1.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpkldwwdv1.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn9vtli5p.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpn9vtli5p.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpn9vtli5p.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpn9vtli5p.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4d7bpsrm.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4d7bpsrm.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp4d7bpsrm.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp4d7bpsrm.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd046dd1g.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpd046dd1g.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpd046dd1g.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpd046dd1g.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl2f78yep.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpl2f78yep.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpl2f78yep.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpl2f78yep.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn4vvjjkh.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpn4vvjjkh.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpn4vvjjkh.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpn4vvjjkh.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return \"\".join([str(int(digit))\
    \ for digit in str(x)[::-1]])\n    else:\n        return \"\".join([str(int(digit))\
    \ for digit in str(x)[shift:]])\n\n\ndef check(candidate):\n    assert candidate(100,\
    \ 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8)\
    \ == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11, 101)\
    \ == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfd0861wb.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpfd0861wb.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpfd0861wb.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpfd0861wb.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfl51epw1.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpfl51epw1.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpfl51epw1.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpfl51epw1.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4mcbauof.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4mcbauof.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp4mcbauof.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp4mcbauof.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5ah4g3le.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp5ah4g3le.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp5ah4g3le.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp5ah4g3le.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpva9x3ugo.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpva9x3ugo.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpva9x3ugo.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpva9x3ugo.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9xffomio.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp9xffomio.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp9xffomio.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp9xffomio.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4gh965js.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4gh965js.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp4gh965js.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp4gh965js.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp54hz8rxb.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp54hz8rxb.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp54hz8rxb.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp54hz8rxb.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfq_q6uxe.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpfq_q6uxe.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpfq_q6uxe.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpfq_q6uxe.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n    \
    \    digits = digits[::-1]\n    return digits[shift:] + digits[:shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgh3rdvm3.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpgh3rdvm3.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpgh3rdvm3.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpagd9w_t5.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpagd9w_t5.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpagd9w_t5.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpagd9w_t5.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3jyqk92g.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp3jyqk92g.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp3jyqk92g.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp3jyqk92g.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph_i_xzw8.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmph_i_xzw8.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmph_i_xzw8.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmph_i_xzw8.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzt36khg4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpzt36khg4.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpzt36khg4.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpzt36khg4.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpda9sjvzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpda9sjvzx.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpda9sjvzx.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpda9sjvzx.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvkfgy0qz.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpvkfgy0qz.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpvkfgy0qz.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpvkfgy0qz.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n    \
    \    return digits[::-1]\n    else:\n        return digits[shift:] + digits[:shift]\n\
    \n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvx_9gblz.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpvx_9gblz.py\", line 25,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpvx_9gblz.py\", line\
    \ 18, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsx0cg9g_.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpsx0cg9g_.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpsx0cg9g_.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpsx0cg9g_.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp20yigsn3.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp20yigsn3.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp20yigsn3.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp20yigsn3.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return \"\".join([str(int(digit))\
    \ for digit in str(x)[::-1]])\n    else:\n        return \"\".join([str(int(digit))\
    \ for digit in str(x)[shift:]])\n\n\ndef check(candidate):\n    assert candidate(100,\
    \ 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8)\
    \ == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11, 101)\
    \ == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_49agxtm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp_49agxtm.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp_49agxtm.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp_49agxtm.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpspc814nh.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpspc814nh.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpspc814nh.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpspc814nh.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps5kjb64i.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmps5kjb64i.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmps5kjb64i.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmps5kjb64i.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6c_kev_r.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp6c_kev_r.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp6c_kev_r.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp6c_kev_r.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n    \
    \    digits = digits[::-1]\n    return digits[shift:] + digits[:shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp22haha8.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpp22haha8.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpp22haha8.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzjlscxci.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpzjlscxci.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpzjlscxci.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpzjlscxci.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpon2ocy23.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpon2ocy23.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpon2ocy23.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpon2ocy23.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn_b1p7nl.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpn_b1p7nl.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpn_b1p7nl.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpn_b1p7nl.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpimurtuk9.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpimurtuk9.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpimurtuk9.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpimurtuk9.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg34ez4qt.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpg34ez4qt.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpg34ez4qt.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpg34ez4qt.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return \"\".join([str(int(digit))\
    \ for digit in str(x)[::-1]])\n    else:\n        return \"\".join([str(int(digit))\
    \ for digit in str(x)[shift:]])\n\n\ndef check(candidate):\n    assert candidate(100,\
    \ 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8)\
    \ == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11, 101)\
    \ == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmw9s5l78.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpmw9s5l78.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpmw9s5l78.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpmw9s5l78.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpndmpn2d6.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpndmpn2d6.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpndmpn2d6.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpndmpn2d6.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx1gdq166.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpx1gdq166.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpx1gdq166.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpx1gdq166.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0gr5lx8o.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp0gr5lx8o.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp0gr5lx8o.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp0gr5lx8o.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd40zky2r.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpd40zky2r.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpd40zky2r.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpd40zky2r.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmry3_y4t.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmry3_y4t.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpmry3_y4t.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpmry3_y4t.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbx71szm6.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpbx71szm6.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpbx71szm6.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpbx71szm6.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1q1u9r9g.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp1q1u9r9g.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp1q1u9r9g.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp1q1u9r9g.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprm8_wovd.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmprm8_wovd.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmprm8_wovd.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmprm8_wovd.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpma8127hh.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpma8127hh.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpma8127hh.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpma8127hh.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxkdomgl5.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpxkdomgl5.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpxkdomgl5.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpxkdomgl5.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4gy0bcax.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp4gy0bcax.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp4gy0bcax.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp4gy0bcax.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj37uz3u5.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpj37uz3u5.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpj37uz3u5.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpj37uz3u5.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkj82cjka.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpkj82cjka.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpkj82cjka.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpkj82cjka.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmwzoqksp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmwzoqksp.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpmwzoqksp.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpmwzoqksp.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgi8cq8kn.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpgi8cq8kn.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpgi8cq8kn.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpgi8cq8kn.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9opvda_7.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp9opvda_7.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp9opvda_7.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp9opvda_7.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz0kh9cpf.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpz0kh9cpf.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpz0kh9cpf.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpz0kh9cpf.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbim1v74a.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpbim1v74a.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpbim1v74a.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpbim1v74a.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqi8wlbkf.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpqi8wlbkf.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpqi8wlbkf.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpqi8wlbkf.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt3nkvu_m.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpt3nkvu_m.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpt3nkvu_m.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpt3nkvu_m.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmv5t1c0v.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpmv5t1c0v.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpmv5t1c0v.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpmv5t1c0v.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprz1mdyk_.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmprz1mdyk_.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmprz1mdyk_.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmprz1mdyk_.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsscpjgcr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpsscpjgcr.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpsscpjgcr.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpsscpjgcr.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_djpil0e.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp_djpil0e.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp_djpil0e.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp_djpil0e.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppyk7x2kn.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmppyk7x2kn.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmppyk7x2kn.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmppyk7x2kn.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp10uf3o1y.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp10uf3o1y.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp10uf3o1y.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp10uf3o1y.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptd2fwvmp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmptd2fwvmp.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmptd2fwvmp.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmptd2fwvmp.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqab8ki14.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpqab8ki14.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpqab8ki14.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpqab8ki14.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdrjf8s8a.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpdrjf8s8a.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpdrjf8s8a.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpdrjf8s8a.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc20deq0z.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpc20deq0z.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpc20deq0z.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpc20deq0z.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    digits = str(x)\n    digits = digits[-shift:] + digits[:shift]\n\
    \    return digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) ==\
    \ '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n\
    \    assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\n\
    def test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz1m1opnv.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpz1m1opnv.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpz1m1opnv.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return \"\".join([str(int(d))\
    \ for d in reversed(x)])\n    else:\n        return \"\".join([str(int(d)) for\
    \ d in x])\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n\
    \    assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n  \
    \  assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\n\
    def test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe4uily76.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpe4uily76.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpe4uily76.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpe4uily76.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk9616wrh.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpk9616wrh.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpk9616wrh.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpk9616wrh.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfkujv450.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpfkujv450.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpfkujv450.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpfkujv450.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n    \
    \    digits = digits[::-1]\n    return digits[shift:] + digits[:shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2zdo41j1.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp2zdo41j1.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp2zdo41j1.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuf6k4iw6.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpuf6k4iw6.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpuf6k4iw6.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpuf6k4iw6.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpahslg6jz.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpahslg6jz.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpahslg6jz.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpahslg6jz.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpukam1h2r.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpukam1h2r.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpukam1h2r.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpukam1h2r.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1lzb52dp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp1lzb52dp.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp1lzb52dp.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp1lzb52dp.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp97hst7ut.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp97hst7ut.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp97hst7ut.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp97hst7ut.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz83863js.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpz83863js.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpz83863js.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpz83863js.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpat9ltx4z.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpat9ltx4z.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpat9ltx4z.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpat9ltx4z.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpla5xli38.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpla5xli38.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpla5xli38.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpla5xli38.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpofkrdjqn.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpofkrdjqn.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpofkrdjqn.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpofkrdjqn.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsty3pad_.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpsty3pad_.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpsty3pad_.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpsty3pad_.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm1ptyq16.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpm1ptyq16.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpm1ptyq16.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpm1ptyq16.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl3bnua5e.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpl3bnua5e.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpl3bnua5e.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpl3bnua5e.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxo0crh5g.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpxo0crh5g.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpxo0crh5g.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpxo0crh5g.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo7n2fesl.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpo7n2fesl.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpo7n2fesl.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpo7n2fesl.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxa08r8kk.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpxa08r8kk.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpxa08r8kk.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpxa08r8kk.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnctq76xc.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpnctq76xc.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpnctq76xc.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpnctq76xc.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbeeq3etz.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpbeeq3etz.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpbeeq3etz.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpbeeq3etz.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmuy872_f.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmuy872_f.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpmuy872_f.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpmuy872_f.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm6ng0zdv.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpm6ng0zdv.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpm6ng0zdv.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpm6ng0zdv.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpefpzmk48.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpefpzmk48.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpefpzmk48.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpefpzmk48.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return \"\".join([str(int(d))\
    \ for d in reversed(x)])\n    else:\n        return \"\".join([str(int(d)) for\
    \ d in x])\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n\
    \    assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n  \
    \  assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\n\
    def test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzjabucq3.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpzjabucq3.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpzjabucq3.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpzjabucq3.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_f0wuqko.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp_f0wuqko.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp_f0wuqko.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp_f0wuqko.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n    \
    \    shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk9q62g_q.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpk9q62g_q.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpk9q62g_q.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjeppikbz.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpjeppikbz.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpjeppikbz.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpjeppikbz.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmc9ogbi5.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpmc9ogbi5.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpmc9ogbi5.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpmc9ogbi5.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqrv2hhi2.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpqrv2hhi2.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpqrv2hhi2.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpqrv2hhi2.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n    \
    \    digits = digits[::-1]\n    return digits[shift:] + digits[:shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3z3_ie8h.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp3z3_ie8h.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp3z3_ie8h.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfibhalbt.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpfibhalbt.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpfibhalbt.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpfibhalbt.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbb_okeo3.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpbb_okeo3.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpbb_okeo3.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpbb_okeo3.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeo8jfjxp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpeo8jfjxp.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpeo8jfjxp.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpeo8jfjxp.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfru68ej0.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpfru68ej0.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpfru68ej0.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpfru68ej0.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n    \
    \    return digits[::-1]\n    else:\n        return digits[shift:] + digits[:shift]\n\
    \n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcgk2sq1y.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpcgk2sq1y.py\", line 25,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpcgk2sq1y.py\", line\
    \ 18, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1acd6jrx.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp1acd6jrx.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp1acd6jrx.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp1acd6jrx.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4de5ls76.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4de5ls76.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp4de5ls76.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp4de5ls76.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0rjkboja.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp0rjkboja.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp0rjkboja.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp0rjkboja.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy1o_nosy.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpy1o_nosy.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpy1o_nosy.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpy1o_nosy.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplfyva2h9.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmplfyva2h9.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmplfyva2h9.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmplfyva2h9.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6e4tgne2.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp6e4tgne2.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp6e4tgne2.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp6e4tgne2.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0l0muis2.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp0l0muis2.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp0l0muis2.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp0l0muis2.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n    \
    \    digits = digits[::-1]\n    return digits + str(int(digits[shift:]) + int(digits[:shift]))\n\
    \n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyceo3egd.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpyceo3egd.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpyceo3egd.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe3lmfjye.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpe3lmfjye.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpe3lmfjye.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpe3lmfjye.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkcuzg7ex.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpkcuzg7ex.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpkcuzg7ex.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpkcuzg7ex.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpku0233tc.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpku0233tc.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpku0233tc.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpku0233tc.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp74hxpdgh.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp74hxpdgh.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp74hxpdgh.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp74hxpdgh.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps1_kdpmb.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmps1_kdpmb.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmps1_kdpmb.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmps1_kdpmb.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7igk9bmq.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp7igk9bmq.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp7igk9bmq.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp7igk9bmq.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpogfjyw5h.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpogfjyw5h.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpogfjyw5h.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpogfjyw5h.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp062v7gv0.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp062v7gv0.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp062v7gv0.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp062v7gv0.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplevmxy4e.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmplevmxy4e.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmplevmxy4e.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmplevmxy4e.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp90khdp8u.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp90khdp8u.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp90khdp8u.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp90khdp8u.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n    \
    \    digits = digits[::-1]\n    return digits[shift:] + digits[:shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp065x5u3q.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp065x5u3q.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp065x5u3q.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n    \
    \    digits = digits[::-1]\n    return digits[shift:] + digits[:shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqffkzqzs.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpqffkzqzs.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpqffkzqzs.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9busxua0.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp9busxua0.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp9busxua0.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp9busxua0.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2h6szlxl.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp2h6szlxl.py\", line 24,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp2h6szlxl.py\", line\
    \ 17, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp2h6szlxl.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpndy226eb.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpndy226eb.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpndy226eb.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpndy226eb.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpldb06rx_.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpldb06rx_.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpldb06rx_.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpldb06rx_.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n  \
    \  \"12\"\n    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n \
    \   return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfowx89c8.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpfowx89c8.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpfowx89c8.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpfowx89c8.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception

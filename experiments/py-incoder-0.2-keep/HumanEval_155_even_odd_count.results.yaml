name: HumanEval_155_even_odd_count
language: python
results:
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpote4hysu.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpote4hysu.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpote4hysu.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ /= 10\n    return even_count, odd_count\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkg3ltu_e.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpkg3ltu_e.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpkg3ltu_e.py\", line\
    \ 21, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        if num % 2 == 0:\n            even +=\
    \ 1\n        else:\n            odd += 1\n        num //= 10\n    return (even,\
    \ odd)\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert\
    \ candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1n2ysge1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp1n2ysge1.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp1n2ysge1.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ //= 10\n    return even_count, odd_count\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzjo0izb3.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpzjo0izb3.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpzjo0izb3.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return (even, odd)\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdnzhmn0l.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpdnzhmn0l.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpdnzhmn0l.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvuugst6t.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpvuugst6t.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpvuugst6t.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        if num % 2 == 0:\n            even +=\
    \ 1\n        else:\n            odd += 1\n        num //= 10\n    return even,\
    \ odd\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert\
    \ candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp07cvgnv.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpp07cvgnv.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpp07cvgnv.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    \n    while num > 0:\n        if num % 2 == 0:\n            even\
    \ += 1\n        else:\n            odd += 1\n        num //= 10\n    return even,\
    \ odd\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert\
    \ candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbj2vd_5a.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpbj2vd_5a.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpbj2vd_5a.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjs3v58b8.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpjs3v58b8.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpjs3v58b8.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return (even_count, odd_count)\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_r9_rxv.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp4_r9_rxv.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp4_r9_rxv.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ //= 10\n    return even_count, odd_count\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnpniz58q.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpnpniz58q.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpnpniz58q.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ //= 10\n    return even_count, odd_count\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp83hsa8jq.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp83hsa8jq.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp83hsa8jq.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdkrhnowj.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpdkrhnowj.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpdkrhnowj.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return (even, odd)\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf3_dgodc.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpf3_dgodc.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpf3_dgodc.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq0agw_gm.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpq0agw_gm.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpq0agw_gm.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        num = num // 10\n        if\
    \ num % 2 == 0:\n            even_count += 1\n        else:\n            odd_count\
    \ += 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ocw7gez.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp9ocw7gez.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp9ocw7gez.py\", line\
    \ 21, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num = num // 10\n    return (even_count, odd_count)\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5vg4ysvb.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp5vg4ysvb.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp5vg4ysvb.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeckguzjn.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpeckguzjn.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpeckguzjn.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        if num % 2 == 0:\n            even +=\
    \ 1\n        else:\n            odd += 1\n        num /= 10\n    return even,\
    \ odd\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert\
    \ candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzpobv6qq.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpzpobv6qq.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpzpobv6qq.py\", line\
    \ 21, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ //= 10\n    return even_count, odd_count\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpspfa0eek.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpspfa0eek.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpspfa0eek.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    \n    while num > 0:\n        digit = num % 10\n        if digit\
    \ % 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return (even, odd)\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpy6klomtb.py\", line 21\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbcw23mkt.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpbcw23mkt.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpbcw23mkt.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvpw16arm.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpvpw16arm.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpvpw16arm.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpskabzyuc.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpskabzyuc.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpskabzyuc.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk3s_hujx.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3s_hujx.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpk3s_hujx.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num = num // 10\n    return even_count, odd_count\n\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn19z3n00.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpn19z3n00.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpn19z3n00.py\", line\
    \ 24, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgfk7wx35.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpgfk7wx35.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpgfk7wx35.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return (even, odd)\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr4jq5v3x.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpr4jq5v3x.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpr4jq5v3x.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyt8gctyw.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpyt8gctyw.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpyt8gctyw.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num = num // 10\n    return even_count, odd_count\n\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqdms_ab0.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpqdms_ab0.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpqdms_ab0.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsctsbe4h.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpsctsbe4h.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpsctsbe4h.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ //= 10\n    return even_count, odd_count\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsf8ko3s_.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpsf8ko3s_.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpsf8ko3s_.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpez1aevl0.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpez1aevl0.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpez1aevl0.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr3a1ccrk.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpr3a1ccrk.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpr3a1ccrk.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ //= 10\n    return even_count, odd_count\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpaa9b4glo.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpaa9b4glo.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpaa9b4glo.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptkixtbbx.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmptkixtbbx.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmptkixtbbx.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num = num // 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjoah3d7u.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpjoah3d7u.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpjoah3d7u.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num = num // 10\n    return even_count, odd_count\n\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6mrdl8a6.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp6mrdl8a6.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp6mrdl8a6.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl85cnvty.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpl85cnvty.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpl85cnvty.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz7fnr7ee.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpz7fnr7ee.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpz7fnr7ee.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpameooet2.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpameooet2.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpameooet2.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    \n    while num > 0:\n        digit = num % 10\n        if digit\
    \ % 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return (even, odd)\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6da8tl1o.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp6da8tl1o.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp6da8tl1o.py\", line\
    \ 23, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp47ycd0gf.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp47ycd0gf.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp47ycd0gf.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ //= 10\n    return (even_count, odd_count)\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpylrwil61.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpylrwil61.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpylrwil61.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return (even, odd)\n\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6ft1j9z2.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp6ft1j9z2.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp6ft1j9z2.py\", line\
    \ 24, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5l8ekgen.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp5l8ekgen.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp5l8ekgen.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ //= 10\n    return (even_count, odd_count)\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3tvlyin0.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp3tvlyin0.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp3tvlyin0.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num = num // 10\n    return even_count, odd_count\n\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk0kydgid.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpk0kydgid.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpk0kydgid.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6otd8ryv.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp6otd8ryv.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp6otd8ryv.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9k4gttgo.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp9k4gttgo.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp9k4gttgo.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num = num // 10\n    return (even_count, odd_count)\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm_v1awfu.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpm_v1awfu.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpm_v1awfu.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ = num // 10\n    return even_count, odd_count\n\ndef check(candidate):\n   \
    \ assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv4911wlv.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpv4911wlv.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpv4911wlv.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuggngucw.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpuggngucw.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpuggngucw.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjdc81eh9.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpjdc81eh9.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpjdc81eh9.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num = num // 10\n    return even_count, odd_count\n\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ntsry84.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp9ntsry84.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp9ntsry84.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return (even, odd)\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw6imfio_.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpw6imfio_.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpw6imfio_.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzz2cr2ia.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpzz2cr2ia.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpzz2cr2ia.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz82qngnr.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpz82qngnr.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpz82qngnr.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyz1xl_9m.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpyz1xl_9m.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpyz1xl_9m.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2omkwhn.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmph2omkwhn.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmph2omkwhn.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj1q6425e.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpj1q6425e.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpj1q6425e.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_z9oyjzf.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp_z9oyjzf.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp_z9oyjzf.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8mvprf9d.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp8mvprf9d.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp8mvprf9d.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmbbvo1_9.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpmbbvo1_9.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpmbbvo1_9.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ /= 10\n    return even_count, odd_count\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp83wb3ta0.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp83wb3ta0.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp83wb3ta0.py\", line\
    \ 21, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ //= 10\n    return even_count, odd_count\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxl550r9b.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpxl550r9b.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpxl550r9b.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return (even, odd)\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp902_4z6k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp902_4z6k.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp902_4z6k.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ //= 10\n    return (even_count, odd_count)\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnpynk6gn.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpnpynk6gn.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpnpynk6gn.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return (even, odd)\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppu61hlq9.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmppu61hlq9.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmppu61hlq9.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv8skm13x.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpv8skm13x.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpv8skm13x.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ //= 10\n    return even_count, odd_count\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6iiuxo82.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp6iiuxo82.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp6iiuxo82.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt2ybping.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpt2ybping.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpt2ybping.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ //= 10\n    return even_count, odd_count\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7t0gtxi_.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp7t0gtxi_.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp7t0gtxi_.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        if num % 2 == 0:\n            even +=\
    \ 1\n        else:\n            odd += 1\n        num /= 10\n    return even,\
    \ odd\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert\
    \ candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt7a4biun.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpt7a4biun.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpt7a4biun.py\", line\
    \ 21, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ = num // 10\n    return even_count, odd_count\n\n\ndef check(candidate):\n \
    \   assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgoscnhze.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpgoscnhze.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpgoscnhze.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num = num // 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr_a4o6ql.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpr_a4o6ql.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpr_a4o6ql.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcqvdrx4a.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpcqvdrx4a.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpcqvdrx4a.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvzeqridj.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpvzeqridj.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpvzeqridj.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8ns8vogy.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp8ns8vogy.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp8ns8vogy.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ = num // 10\n    return even_count, odd_count\n\ndef check(candidate):\n   \
    \ assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnbvyyhvu.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpnbvyyhvu.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpnbvyyhvu.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp01nqg52r.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp01nqg52r.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp01nqg52r.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return (even, odd)\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5po5xg_e.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp5po5xg_e.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp5po5xg_e.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    \n    while num > 0:\n        digit = num % 10\n \
    \       if digit % 2 == 0:\n            even_count += 1\n        else:\n     \
    \       odd_count += 1\n        num = num // 10\n    \n    return even_count,\
    \ odd_count\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert\
    \ candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp64urlfd_.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp64urlfd_.py\", line 34,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp64urlfd_.py\", line\
    \ 25, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ //= 10\n    return even_count, odd_count\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgztohhzv.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpgztohhzv.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpgztohhzv.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp52it3phm.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp52it3phm.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp52it3phm.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4o5jyawi.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp4o5jyawi.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp4o5jyawi.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqy_yu8pq.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpqy_yu8pq.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpqy_yu8pq.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        num = num // 10\n        if\
    \ num % 2 == 0:\n            even_count += 1\n        else:\n            odd_count\
    \ += 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4hoomiy2.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp4hoomiy2.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp4hoomiy2.py\", line\
    \ 21, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbalngp6o.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpbalngp6o.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpbalngp6o.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpujqf1z9w.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpujqf1z9w.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpujqf1z9w.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp38ozao6a.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp38ozao6a.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp38ozao6a.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num = num // 10\n    return (even, odd)\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpndpl823r.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpndpl823r.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpndpl823r.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvp0qcvqn.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpvp0qcvqn.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpvp0qcvqn.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        if num % 2 == 0:\n            even +=\
    \ 1\n        else:\n            odd += 1\n        num //= 10\n    return even,\
    \ odd\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert\
    \ candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjvo0gbe5.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpjvo0gbe5.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpjvo0gbe5.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return (even_count, odd_count)\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphrjxvu7d.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmphrjxvu7d.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmphrjxvu7d.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num = num // 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph4tubw4g.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmph4tubw4g.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmph4tubw4g.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        if num % 2 == 0:\n            even +=\
    \ 1\n        else:\n            odd += 1\n        num = num // 10\n    return\
    \ even, odd\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert\
    \ candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5a5l8jf0.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp5a5l8jf0.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp5a5l8jf0.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    \n    while num > 0:\n        if num % 2 == 0:\n            even\
    \ += 1\n        else:\n            odd += 1\n        num //= 10\n    \n    return\
    \ (even, odd)\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n  \
    \  assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n   \
    \ assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3, 3)\n\
    \    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2, 3)\n\
    \    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyvf1nmta.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpyvf1nmta.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpyvf1nmta.py\", line\
    \ 24, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num = num // 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy6lflyu4.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpy6lflyu4.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpy6lflyu4.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe1svek0z.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpe1svek0z.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpe1svek0z.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num = num // 10\n    return even_count, odd_count\n\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnoytjw2t.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpnoytjw2t.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpnoytjw2t.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkeb88vtx.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpkeb88vtx.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpkeb88vtx.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return (even_count, odd_count)\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdn06pj9i.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpdn06pj9i.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpdn06pj9i.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpitzwhly0.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpitzwhly0.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpitzwhly0.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ /= 10\n    return even_count, odd_count\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0jq9fgv8.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp0jq9fgv8.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp0jq9fgv8.py\", line\
    \ 21, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num = num // 10\n    return even_count, odd_count\n\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_buoliyy.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp_buoliyy.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp_buoliyy.py\", line\
    \ 24, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpej5g64la.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpej5g64la.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpej5g64la.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return (even_count, odd_count)\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6nd44br1.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp6nd44br1.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp6nd44br1.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbo0cftel.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpbo0cftel.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpbo0cftel.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2i23sjqm.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp2i23sjqm.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp2i23sjqm.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ //= 10\n    return even_count, odd_count\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz7yf8u8k.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpz7yf8u8k.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpz7yf8u8k.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp66owe7xs.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp66owe7xs.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp66owe7xs.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        if num % 2 == 0:\n            even +=\
    \ 1\n        else:\n            odd += 1\n        num //= 10\n    return even,\
    \ odd\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert\
    \ candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjj1i_xjk.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpjj1i_xjk.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpjj1i_xjk.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1a0_zbds.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp1a0_zbds.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp1a0_zbds.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    \n    while num > 0:\n        digit = num % 10\n        if digit\
    \ % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    \
    \    num = num // 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpoi4281dn.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpoi4281dn.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpoi4281dn.py\", line\
    \ 24, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    \n    if num < 0:\n        return (0, 0)\n    \n \
    \   while num > 0:\n        digit = num % 10\n        if digit % 2 == 0:\n   \
    \         even_count += 1\n        else:\n            odd_count += 1\n       \
    \ num = num // 10\n    \n    return (even_count, odd_count)\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp30i2ak9t.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmp30i2ak9t.py\", line 37,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp30i2ak9t.py\", line\
    \ 28, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    \n    while num > 0:\n        digit = num % 10\n \
    \       if digit % 2 == 0:\n            even_count += 1\n        else:\n     \
    \       odd_count += 1\n        num //= 10\n    \n    return even_count, odd_count\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpll8j_rvi.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpll8j_rvi.py\", line 34,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpll8j_rvi.py\", line\
    \ 25, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        odd_count = odd_count + 1\n\
    \        if num % 2 == 0:\n            even_count = even_count + 1\n        num\
    \ = num // 10\n    return (even_count, odd_count)\n\ndef check(candidate):\n \
    \   assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj8xznoi2.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpj8xznoi2.py\", line 30,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpj8xznoi2.py\", line\
    \ 21, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    \n    while num > 0:\n        if num % 2 == 0:\n            even\
    \ += 1\n        else:\n            odd += 1\n        num //= 10\n    return (even,\
    \ odd)\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert\
    \ candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpitq5wsfm.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpitq5wsfm.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpitq5wsfm.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptj6ydpos.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmptj6ydpos.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmptj6ydpos.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    \n    while num > 0:\n        digit = num % 10\n \
    \       if digit % 2 == 0:\n            even_count += 1\n        else:\n     \
    \       odd_count += 1\n        num //= 10\n    return (even_count, odd_count)\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpafvn9ffj.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpafvn9ffj.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpafvn9ffj.py\", line\
    \ 24, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num = num // 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfwk6qzoa.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpfwk6qzoa.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpfwk6qzoa.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num = num // 10\n    return (even, odd)\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpurm0x4q8.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpurm0x4q8.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpurm0x4q8.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ //= 10\n    return even_count, odd_count\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw79us4bx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpw79us4bx.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpw79us4bx.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7iq8l1ay.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp7iq8l1ay.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp7iq8l1ay.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmrj30tzi.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpmrj30tzi.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpmrj30tzi.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr6u5p74u.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpr6u5p74u.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpr6u5p74u.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ //= 10\n    return (even_count, odd_count)\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2u1fx4k.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpr2u1fx4k.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpr2u1fx4k.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ = num // 10\n    return even_count, odd_count\n\ndef check(candidate):\n   \
    \ assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuxfzj07g.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpuxfzj07g.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpuxfzj07g.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3_n4_uyv.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp3_n4_uyv.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp3_n4_uyv.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        odd_count += 1\n        num\
    \ //= 10\n    if num == 0:\n        even_count = 1\n    return (even_count, odd_count)\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvv83rx86.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpvv83rx86.py\", line 30,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpvv83rx86.py\", line\
    \ 20, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyyeqejum.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpyyeqejum.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpyyeqejum.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ = num // 10\n    return even_count, odd_count\n\ndef check(candidate):\n   \
    \ assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf9nxsmks.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpf9nxsmks.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpf9nxsmks.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwg0fypy7.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpwg0fypy7.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpwg0fypy7.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ //= 10\n    return even_count, odd_count\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfdoyjiu5.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpfdoyjiu5.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpfdoyjiu5.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return (even_count, odd_count)\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxcp62r03.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpxcp62r03.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpxcp62r03.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2n99jvrz.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp2n99jvrz.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp2n99jvrz.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    \n    while num > 0:\n        digit = num % 10\n        if digit\
    \ % 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return (even, odd)\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpct2op9k9.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpct2op9k9.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpct2op9k9.py\", line\
    \ 23, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n            num /= 2\n        else:\n            odd_count\
    \ += 1\n            num /= 2\n    return even_count, odd_count\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3dylhg9u.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp3dylhg9u.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp3dylhg9u.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyoabyt5v.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpyoabyt5v.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpyoabyt5v.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptx5i9t_v.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmptx5i9t_v.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmptx5i9t_v.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph7i8r4_i.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmph7i8r4_i.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmph7i8r4_i.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    \n    while num > 0:\n        digit = num % 10\n        if digit\
    \ % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    \
    \    num = num // 10\n    \n    return even, odd\n\ndef check(candidate):\n  \
    \  assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7icwd1ad.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp7icwd1ad.py\", line 34,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp7icwd1ad.py\", line\
    \ 25, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num = num // 10\n    return even_count, odd_count\n\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvwchfsz6.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpvwchfsz6.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpvwchfsz6.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmvkvstih.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpmvkvstih.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpmvkvstih.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpilpacq55.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpilpacq55.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpilpacq55.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbgr5r1t5.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpbgr5r1t5.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpbgr5r1t5.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppxa2bp6i.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmppxa2bp6i.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmppxa2bp6i.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb5w4pz38.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpb5w4pz38.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpb5w4pz38.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    \n    while num > 0:\n        digit = num % 10\n \
    \       if digit % 2 == 0:\n            even_count += 1\n        else:\n     \
    \       odd_count += 1\n        num //= 10\n    \n    return even_count, odd_count\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyacnh6x5.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpyacnh6x5.py\", line 34,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpyacnh6x5.py\", line\
    \ 25, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num = num // 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpioj1839k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpioj1839k.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpioj1839k.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8g4j5aje.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp8g4j5aje.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp8g4j5aje.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnm2i26sa.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpnm2i26sa.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpnm2i26sa.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpblso16jj.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpblso16jj.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpblso16jj.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd2n8mnvx.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpd2n8mnvx.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpd2n8mnvx.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4b700uhj.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp4b700uhj.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp4b700uhj.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num = num // 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnj0l4wb9.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpnj0l4wb9.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpnj0l4wb9.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        num = num // 10\n        if\
    \ num % 2 == 0:\n            even_count += 1\n        else:\n            odd_count\
    \ += 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppdzp71fa.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmppdzp71fa.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmppdzp71fa.py\", line\
    \ 21, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ //= 10\n    return even_count, odd_count\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplu2k_pl3.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmplu2k_pl3.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmplu2k_pl3.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7vgvysh9.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp7vgvysh9.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp7vgvysh9.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxwegmr7s.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpxwegmr7s.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpxwegmr7s.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8l_lsgf_.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp8l_lsgf_.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp8l_lsgf_.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpck3j84i3.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpck3j84i3.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpck3j84i3.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4zv7rqh5.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp4zv7rqh5.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp4zv7rqh5.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5c_l8ewi.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp5c_l8ewi.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp5c_l8ewi.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num = num // 10\n    return even_count, odd_count\n\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr70is4k1.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpr70is4k1.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpr70is4k1.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num = num // 10\n    return (even, odd)\n\ndef check(candidate):\n  \
    \  assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_z9ajy0m.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp_z9ajy0m.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp_z9ajy0m.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwbrg_ptb.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpwbrg_ptb.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpwbrg_ptb.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ //= 10\n    return even_count, odd_count\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfkcyi7ll.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpfkcyi7ll.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpfkcyi7ll.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ //= 10\n    return even_count, odd_count\n\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcahtwg0q.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpcahtwg0q.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpcahtwg0q.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbpj9iqt3.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpbpj9iqt3.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpbpj9iqt3.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpueefwhld.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpueefwhld.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpueefwhld.py\", line\
    \ 24, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw8s7hyls.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpw8s7hyls.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpw8s7hyls.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ //= 10\n    return even_count, odd_count\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7nn6svgw.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp7nn6svgw.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp7nn6svgw.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphlzy9ksg.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmphlzy9ksg.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmphlzy9ksg.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpitr4hsl9.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpitr4hsl9.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpitr4hsl9.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        if num % 2 == 0:\n            even +=\
    \ 1\n        else:\n            odd += 1\n        num /= 10\n    return (even,\
    \ odd)\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert\
    \ candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8j2ajftv.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp8j2ajftv.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp8j2ajftv.py\", line\
    \ 21, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num = num // 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8kx4l0dv.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp8kx4l0dv.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp8kx4l0dv.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ //= 10\n    return even_count, odd_count\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp17pojbli.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp17pojbli.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp17pojbli.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7vdafahx.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp7vdafahx.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp7vdafahx.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_ydmopdq.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp_ydmopdq.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp_ydmopdq.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps18ec08g.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps18ec08g.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmps18ec08g.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjvm6xxjx.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpjvm6xxjx.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpjvm6xxjx.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp894x3_ad.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp894x3_ad.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp894x3_ad.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo3hb4nfl.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpo3hb4nfl.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpo3hb4nfl.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return (even_count, odd_count)\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprplu2oj0.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmprplu2oj0.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmprplu2oj0.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    \n    while num > 0:\n        if num % 2 == 0:\n            even\
    \ += 1\n        else:\n            odd += 1\n        num /= 10\n    \n    return\
    \ (even, odd)\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n  \
    \  assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n   \
    \ assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3, 3)\n\
    \    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2, 3)\n\
    \    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmn7k0zal.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpmn7k0zal.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpmn7k0zal.py\", line\
    \ 23, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ //= 10\n    return even_count, odd_count\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb6e9unl1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpb6e9unl1.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpb6e9unl1.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    \n    while num > 0:\n        digit = num % 10\n        if digit\
    \ % 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num = num // 10\n    \n    return even, odd\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6eas1ukm.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp6eas1ukm.py\", line 34,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp6eas1ukm.py\", line\
    \ 24, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ //= 10\n    return (even_count, odd_count)\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp023g87tj.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp023g87tj.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp023g87tj.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv8gpnzn4.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpv8gpnzn4.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpv8gpnzn4.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1ellba57.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp1ellba57.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp1ellba57.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += digit\n        else:\n            odd += digit\n\
    \        num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbqf4zgca.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpbqf4zgca.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpbqf4zgca.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    \n    while num > 0:\n        digit = num % 10\n        if digit\
    \ % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    \
    \    num //= 10\n    \n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkbme_bh5.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpkbme_bh5.py\", line 34,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpkbme_bh5.py\", line\
    \ 25, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        if num % 2 == 0:\n       \
    \     even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ //= 10\n    return (even_count, odd_count)\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp67gp9zzj.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp67gp9zzj.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp67gp9zzj.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        digit = num % 10\n       \
    \ if digit % 2 == 0:\n            even_count += 1\n        else:\n           \
    \ odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdwxmze6u.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpdwxmze6u.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpdwxmze6u.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    while num > 0:\n        digit = num % 10\n        if digit %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n      \
    \  num //= 10\n    return (even, odd)\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_y9s1tun.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp_y9s1tun.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp_y9s1tun.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    \n    while num > 0:\n        digit = num % 10\n        if digit\
    \ % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    \
    \    num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpczeot9uz.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpczeot9uz.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpczeot9uz.py\", line\
    \ 24, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    \n    while num > 0:\n        digit = num % 10\n \
    \       if digit % 2 == 0:\n            even_count += 1\n        else:\n     \
    \       odd_count += 1\n        num = num // 10\n    \n    return even_count,\
    \ odd_count\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert\
    \ candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3dmw9wfe.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp3dmw9wfe.py\", line 34,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp3dmw9wfe.py\", line\
    \ 25, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0:\n        num = num // 10\n        if\
    \ num % 2 == 0:\n            even_count += 1\n        else:\n            odd_count\
    \ += 1\n    return even_count, odd_count\n\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0ckf9109.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp0ckf9109.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp0ckf9109.py\", line\
    \ 22, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  exit_code: -1
  status: Exception

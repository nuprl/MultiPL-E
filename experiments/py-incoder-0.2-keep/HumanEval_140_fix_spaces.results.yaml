name: HumanEval_140_fix_spaces
language: python
results:
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphqmqlpdt.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmphqmqlpdt.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmphqmqlpdt.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmphqmqlpdt.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text).strip('-')\n\ndef check(candidate):\n    assert candidate('Example') ==\
    \ 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert\
    \ candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9atamhr9.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp9atamhr9.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp9atamhr9.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp9atamhr9.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text).strip('-')\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqnhli8gs.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpqnhli8gs.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpqnhli8gs.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpqnhli8gs.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    tokens = text.split()\n\
    \    \n    if len(tokens) == 1:\n        return text\n    \n    spaces = \"\"\n\
    \    \n    for token in tokens:\n        if token.strip() == \"\":\n         \
    \   continue\n        \n        if token.strip() == \"_\":\n            spaces\
    \ += \"_\"\n        else:\n            spaces += \" \"\n    \n    return spaces.replace(\"\
    _\", \"-\")\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdppdfwit.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpdppdfwit.py\", line 40,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpdppdfwit.py\", line 34,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5o3tbw4t.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp5o3tbw4t.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp5o3tbw4t.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp5o3tbw4t.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqyh6706y.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpqyh6706y.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpqyh6706y.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpqyh6706y.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text).strip('-')\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprmlp7xcf.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmprmlp7xcf.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmprmlp7xcf.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmprmlp7xcf.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text).strip('-')\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    return re.sub(r'\\s+',\
    \ '_', text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq722ghg_.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpq722ghg_.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpq722ghg_.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpq722ghg_.py\"\
    , line 13, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    return re.sub(' +',\
    \ '_', text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpryk02ecz.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpryk02ecz.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpryk02ecz.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpryk02ecz.py\"\
    , line 13, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphb6_zkry.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmphb6_zkry.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmphb6_zkry.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmphb6_zkry.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpibwzueon.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpibwzueon.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpibwzueon.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpibwzueon.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', ' ', text).strip()\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpibe1p367.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpibe1p367.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpibe1p367.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpibe1p367.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', ' ', text).strip()\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    words = text.split()\n\
    \    \n    # Replace all spaces with underscores\n    for i in range(len(words)):\n\
    \        words[i] = words[i].replace(\" \", \"_\")\n    \n    # Replace all consecutive\
    \ spaces with -\n    for i in range(len(words) - 1):\n        if words[i] == words[i\
    \ + 1]:\n            words[i] = \"-\"\n    \n    return \" \".join(words)\n\n\n\
    def check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph3cn2ldf.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmph3cn2ldf.py\", line 35,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmph3cn2ldf.py\", line 29,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf_ab9zze.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpf_ab9zze.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpf_ab9zze.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpf_ab9zze.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3762jbn2.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp3762jbn2.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp3762jbn2.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp3762jbn2.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphu2y6ahz.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmphu2y6ahz.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmphu2y6ahz.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmphu2y6ahz.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', ' ', text).strip()\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp15uv3ivu.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp15uv3ivu.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp15uv3ivu.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp15uv3ivu.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', ' ', text).strip()\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    return re.sub(' +',\
    \ '_', text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9a9z0tuf.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp9a9z0tuf.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp9a9z0tuf.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp9a9z0tuf.py\"\
    , line 13, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1gplf5mb.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp1gplf5mb.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp1gplf5mb.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp1gplf5mb.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8j9d8kkm.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp8j9d8kkm.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp8j9d8kkm.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp8j9d8kkm.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    fixed_text = text.replace(\"\
    \ \", \"_\")\n    \n    fixed_text = fixed_text.replace(\"  \", \"_\")\n    \n\
    \    fixed_text = fixed_text.replace(\"  \", \" \")\n    \n    return fixed_text\n\
    </cell>\n<cell>\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpx2p36f_u.py\", line 20\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwxabo4f_.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpwxabo4f_.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpwxabo4f_.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpwxabo4f_.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbiz48hmd.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpbiz48hmd.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpbiz48hmd.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpbiz48hmd.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnx339hh.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpfnx339hh.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpfnx339hh.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpfnx339hh.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnetox2vg.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpnetox2vg.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpnetox2vg.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpnetox2vg.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    return re.sub(' +',\
    \ '_', text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmr7kd87x.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmr7kd87x.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpmr7kd87x.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpmr7kd87x.py\"\
    , line 13, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    words = text.split()\n\
    \    \n    # Replace all spaces with underscores\n    for i in range(len(words)):\n\
    \        words[i] = words[i].replace(\" \", \"_\")\n    \n    # Replace consecutive\
    \ spaces with -\n    words = [word.replace(\" \", \"-\") for word in words]\n\
    \    \n    return \" \".join(words)\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpig36nhq_.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpig36nhq_.py\", line 33,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpig36nhq_.py\", line 27,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    words = text.split()\n\
    \    \n    # Replace all spaces with underscores\n    for i in range(len(words)):\n\
    \        words[i] = words[i].replace(\" \", \"_\")\n    \n    # Replace consecutive\
    \ spaces with -\n    for i in range(len(words) - 1):\n        if words[i] == words[i\
    \ + 1]:\n            words[i] = words[i].replace(words[i], \"\")\n    \n    return\
    \ \" \".join(words)\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpneg_t6y2.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpneg_t6y2.py\", line 35,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpneg_t6y2.py\", line 29,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    return re.sub(r\"\\\
    s+\", \"_\", text)\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwb5_5jq5.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpwb5_5jq5.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpwb5_5jq5.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpwb5_5jq5.py\"\
    , line 13, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppv87_io9.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmppv87_io9.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmppv87_io9.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmppv87_io9.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzhct13cx.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpzhct13cx.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpzhct13cx.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpzhct13cx.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    # Replace all spaces\
    \ with underscores\n    text = re.sub('\\s+', '_', text)\n    \n    # Replace\
    \ consecutive spaces with -\n    text = re.sub(' +', '-', text)\n    \n    return\
    \ text\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppdkgfpdf.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmppdkgfpdf.py\", line 30,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmppdkgfpdf.py\", line 23,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmppdkgfpdf.py\"\
    , line 14, in fix_spaces\n    text = re.sub('\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsta5d4ke.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpsta5d4ke.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpsta5d4ke.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpsta5d4ke.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    tokens = text.split()\n\
    \    \n    # Replace all spaces with underscores\n    for i in range(len(tokens)):\n\
    \        tokens[i] = tokens[i].replace(\" \", \"_\")\n    \n    # Replace consecutive\
    \ spaces with -\n    for i in range(len(tokens) - 1):\n        if tokens[i] ==\
    \ \" \" and tokens[i + 1] == \" \":\n            tokens[i] = \"-\"\n    \n   \
    \ return \" \".join(tokens)\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplg3secxs.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmplg3secxs.py\", line 35,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmplg3secxs.py\", line 29,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy94y1g8f.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpy94y1g8f.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpy94y1g8f.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpy94y1g8f.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpelnejb8g.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpelnejb8g.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpelnejb8g.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpelnejb8g.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpambpyq1n.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpambpyq1n.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpambpyq1n.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpambpyq1n.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    # Replace all spaces\
    \ with underscores\n    text = text.replace(\" \", \"_\")\n    \n    # Replace\
    \ consecutive spaces with -\n    text_split = text.split()\n    if len(text_split)\
    \ > 1:\n        text_split[0] = text_split[0].replace(\" \", \"-\")\n        text\
    \ = \" \".join(text_split)\n    \n    return text\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpffxtf8b1.py\", line 23\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph4ooq7wc.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmph4ooq7wc.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmph4ooq7wc.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmph4ooq7wc.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk_27sum6.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpk_27sum6.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpk_27sum6.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpk_27sum6.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv6p2rd1m.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpv6p2rd1m.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpv6p2rd1m.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpv6p2rd1m.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text).strip('-')\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcdn_6anh.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpcdn_6anh.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpcdn_6anh.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpcdn_6anh.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text).strip('-')\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    # Replace all spaces\
    \ with underscores\n    text = text.replace(\" \", \"_\")\n    \n    # Replace\
    \ consecutive spaces with -\n    count = 1\n    while count < len(text):\n   \
    \     if text[count] == \" \":\n            text = text.replace(\" \", \"-\")\n\
    \            count += 1\n        else:\n            count += 1\n    \n    return\
    \ text\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpkzw4vz_9.py\", line 26\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxc7mmisn.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpxc7mmisn.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpxc7mmisn.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpxc7mmisn.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2cxpup2w.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp2cxpup2w.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp2cxpup2w.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp2cxpup2w.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpze9igxl4.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpze9igxl4.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpze9igxl4.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpze9igxl4.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_5mxk3lz.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp_5mxk3lz.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp_5mxk3lz.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp_5mxk3lz.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa_247wi0.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpa_247wi0.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpa_247wi0.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpa_247wi0.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpngy1zqvb.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpngy1zqvb.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpngy1zqvb.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpngy1zqvb.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqukicvdi.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpqukicvdi.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpqukicvdi.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpqukicvdi.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdgviq8y3.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpdgviq8y3.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpdgviq8y3.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpdgviq8y3.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmwsvnqa_.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmwsvnqa_.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpmwsvnqa_.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpmwsvnqa_.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    words = text.split()\n\
    \    \n    fixed_words = []\n    \n    for word in words:\n        \n        fixed_word\
    \ = word\n        \n        if len(word) > 1:\n            \n            fixed_word\
    \ = \"\"\n            \n            for char in word:\n                \n    \
    \            if char == \" \":\n                    \n                    fixed_word\
    \ += \"_\"\n                    \n                else:\n                    \n\
    \                    fixed_word += char\n                    \n            fixed_words.append(fixed_word)\n\
    \            \n        else:\n            \n            fixed_words.append(word)\n\
    \            \n    return \" \".join(fixed_words)\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeqcahlu9.py\", line\
    \ 54, in <module>\n    test_check()\n  File \"/tmp/tmpeqcahlu9.py\", line 52,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpeqcahlu9.py\", line 46,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp73m7xk8s.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp73m7xk8s.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp73m7xk8s.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp73m7xk8s.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2bqvnsml.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp2bqvnsml.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp2bqvnsml.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp2bqvnsml.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text).strip('-')\n\ndef check(candidate):\n    assert candidate('Example') ==\
    \ 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert\
    \ candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprej995gm.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmprej995gm.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmprej995gm.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmprej995gm.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text).strip('-')\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd802_zkm.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpd802_zkm.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpd802_zkm.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpd802_zkm.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    # Replace all spaces\
    \ with underscores\n    text = text.replace(\" \", \"_\")\n    \n    # Replace\
    \ consecutive spaces with -\n    count = 1\n    while count < len(text):\n   \
    \     if text[count] == \" \":\n            text = text.replace(\" \", \"-\")\n\
    \            count += 1\n        else:\n            count += 1\n    \n    return\
    \ text\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu_lyxjaw.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpu_lyxjaw.py\", line 36,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpu_lyxjaw.py\", line 32,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnp0smk1l.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpnp0smk1l.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpnp0smk1l.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpnp0smk1l.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    return re.sub(' +',\
    \ '_', text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpujkzige1.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpujkzige1.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpujkzige1.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpujkzige1.py\"\
    , line 13, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', ' ', text).strip()\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbzz31hy8.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpbzz31hy8.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpbzz31hy8.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpbzz31hy8.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', ' ', text).strip()\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb_jipmsy.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpb_jipmsy.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpb_jipmsy.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpb_jipmsy.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdi1a10e1.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpdi1a10e1.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpdi1a10e1.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpdi1a10e1.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjg0hp_q7.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpjg0hp_q7.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpjg0hp_q7.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpjg0hp_q7.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    fixed_text = text.replace(\"\
    \ \", \"_\")\n    \n    fixed_text = fixed_text.replace(\"  \", \"_\")\n    \n\
    \    fixed_text = fixed_text.replace(\" -\", \"_\")\n    \n    return fixed_text\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl65byunr.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpl65byunr.py\", line 30,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpl65byunr.py\", line 26,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprnc1pxl5.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmprnc1pxl5.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmprnc1pxl5.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmprnc1pxl5.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', ' ', text)\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp06nz6p41.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp06nz6p41.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp06nz6p41.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp06nz6p41.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', ' ', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpat07dit4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpat07dit4.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpat07dit4.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpat07dit4.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiakzintj.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpiakzintj.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpiakzintj.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpiakzintj.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpoe842s8m.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpoe842s8m.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpoe842s8m.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpoe842s8m.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2_5gt9de.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp2_5gt9de.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp2_5gt9de.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp2_5gt9de.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    return re.sub(' +',\
    \ ' ', text).strip()\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7a4smcv8.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp7a4smcv8.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp7a4smcv8.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp7a4smcv8.py\"\
    , line 13, in fix_spaces\n    return re.sub(' +', ' ', text).strip()\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', ' ', text).strip()\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3jk0lxrl.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp3jk0lxrl.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp3jk0lxrl.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp3jk0lxrl.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', ' ', text).strip()\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf7o0dg2l.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpf7o0dg2l.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpf7o0dg2l.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpf7o0dg2l.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp96142r8j.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp96142r8j.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp96142r8j.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp96142r8j.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbz947oul.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpbz947oul.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpbz947oul.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpbz947oul.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpquuygplp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpquuygplp.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpquuygplp.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpquuygplp.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    return re.sub(' +',\
    \ '_', text).replace('_ -', '_')\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkg02nrnw.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpkg02nrnw.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpkg02nrnw.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpkg02nrnw.py\"\
    , line 13, in fix_spaces\n    return re.sub(' +', '_', text).replace('_ -', '_')\n\
    NameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxk4vussm.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpxk4vussm.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpxk4vussm.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpxk4vussm.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9gj1azr9.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp9gj1azr9.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp9gj1azr9.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp9gj1azr9.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    return re.sub(r'\\s+',\
    \ '_', text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf5y9dwid.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpf5y9dwid.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpf5y9dwid.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpf5y9dwid.py\"\
    , line 13, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    words = text.split()\n\
    \    \n    fixed_text = \"\"\n    \n    for word in words:\n        fixed_text\
    \ += word + \"_\"\n    \n    if len(fixed_text.split()) > 2:\n        fixed_text\
    \ = fixed_text.replace(\"_\", \"-\")\n    \n    return fixed_text\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp785ao7hu.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp785ao7hu.py\", line 34,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp785ao7hu.py\", line 27,\
    \ in check\n    assert candidate('Example') == 'Example'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj3gsohg8.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpj3gsohg8.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpj3gsohg8.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpj3gsohg8.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpei9_o0_g.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpei9_o0_g.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpei9_o0_g.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpei9_o0_g.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    return re.sub(' +',\
    \ '_', text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuue50vf7.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpuue50vf7.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpuue50vf7.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpuue50vf7.py\"\
    , line 13, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    fixed_text = text.replace(\"\
    \ \", \"_\")\n    \n    if len(fixed_text.split()) > 1:\n        fixed_text =\
    \ fixed_text.replace(\" \", \"-\")\n    \n    return fixed_text\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5afpajaq.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp5afpajaq.py\", line 29,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp5afpajaq.py\", line 25,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp225yhyyb.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp225yhyyb.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp225yhyyb.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp225yhyyb.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    return re.sub(' +',\
    \ '_', text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplwy7248a.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmplwy7248a.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmplwy7248a.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmplwy7248a.py\"\
    , line 13, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpynbcejdo.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpynbcejdo.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpynbcejdo.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpynbcejdo.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    words = text.split()\n\
    \    \n    if len(words) == 1:\n        return text\n    \n    words = [w.replace('\
    \ ', '_') for w in words]\n    \n    if len(words) > 2:\n        words = [w.replace('\
    \ ', '-') for w in words]\n    \n    return ' '.join(words)\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0mrgzqrc.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp0mrgzqrc.py\", line 34,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp0mrgzqrc.py\", line 28,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    # Replace all spaces\
    \ with underscores\n    text = text.replace(\" \", \"_\")\n    \n    # Replace\
    \ consecutive spaces with -\n    text_split = text.split()\n    text_split = [\n\
    \        word if word != \" \" else \"_\"\n        for word in text_split\n  \
    \  ]\n    \n    return \" \".join(text_split)\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpyeedc2iu.py\", line 24\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwtx0txq3.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpwtx0txq3.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpwtx0txq3.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpwtx0txq3.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    # Replace all spaces\
    \ with underscores\n    text = text.replace(\" \", \"_\")\n    \n    # Replace\
    \ consecutive spaces with -\n    text = re.sub(r\"\\s{2,}\", \"-\", text)\n  \
    \  \n    return text\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpupdod0gw.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpupdod0gw.py\", line 30,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpupdod0gw.py\", line 23,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpupdod0gw.py\"\
    , line 17, in fix_spaces\n    text = re.sub(r\"\\s{2,}\", \"-\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7ddpx8xp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp7ddpx8xp.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp7ddpx8xp.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp7ddpx8xp.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeh1a0202.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpeh1a0202.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpeh1a0202.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpeh1a0202.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', ' ', text).strip()\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy702gjw8.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpy702gjw8.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpy702gjw8.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpy702gjw8.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', ' ', text).strip()\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    return re.sub(' +',\
    \ ' ', text).strip()\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmparehn9zx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmparehn9zx.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmparehn9zx.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmparehn9zx.py\"\
    , line 13, in fix_spaces\n    return re.sub(' +', ' ', text).strip()\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', ' ', text).strip()\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpooej4px_.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpooej4px_.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpooej4px_.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpooej4px_.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', ' ', text).strip()\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    return re.sub(' +',\
    \ ' ', text).strip()\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdywlqjoc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpdywlqjoc.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpdywlqjoc.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpdywlqjoc.py\"\
    , line 13, in fix_spaces\n    return re.sub(' +', ' ', text).strip()\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', ' ', text).strip()\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp25ib90c2.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp25ib90c2.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp25ib90c2.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp25ib90c2.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', ' ', text).strip()\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6srpunq2.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp6srpunq2.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp6srpunq2.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp6srpunq2.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmxscmavw.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpmxscmavw.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpmxscmavw.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpmxscmavw.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp86_xqdzr.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp86_xqdzr.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp86_xqdzr.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp86_xqdzr.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvv6viiq4.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpvv6viiq4.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpvv6viiq4.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpvv6viiq4.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8n48m4e_.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp8n48m4e_.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp8n48m4e_.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp8n48m4e_.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ani5_ny.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp9ani5_ny.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp9ani5_ny.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp9ani5_ny.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyou7epuc.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpyou7epuc.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpyou7epuc.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpyou7epuc.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo2xqlym1.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpo2xqlym1.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpo2xqlym1.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpo2xqlym1.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', ' ', text).strip()\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo3kp_l9l.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpo3kp_l9l.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpo3kp_l9l.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpo3kp_l9l.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', ' ', text).strip()\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    return re.sub(' +',\
    \ '_', text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_174av3z.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp_174av3z.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp_174av3z.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp_174av3z.py\"\
    , line 13, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsolts027.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpsolts027.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpsolts027.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpsolts027.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8hx3dvwb.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp8hx3dvwb.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp8hx3dvwb.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp8hx3dvwb.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp91sf67d8.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp91sf67d8.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp91sf67d8.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp91sf67d8.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    return re.sub(' +',\
    \ '_', text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm72v57ba.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpm72v57ba.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpm72v57ba.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpm72v57ba.py\"\
    , line 13, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmqwd46px.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmqwd46px.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpmqwd46px.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpmqwd46px.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', ' ', text).strip()\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpforg5ttb.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpforg5ttb.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpforg5ttb.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpforg5ttb.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', ' ', text).strip()\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpoich4ek0.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpoich4ek0.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpoich4ek0.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpoich4ek0.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcidj0ult.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpcidj0ult.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpcidj0ult.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpcidj0ult.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text).strip('-')\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyguhsu50.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpyguhsu50.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpyguhsu50.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpyguhsu50.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text).strip('-')\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjp9wdaw8.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpjp9wdaw8.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpjp9wdaw8.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpjp9wdaw8.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjznjlfq2.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpjznjlfq2.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpjznjlfq2.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpjznjlfq2.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', ' ', text).strip()\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphl_rgebv.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmphl_rgebv.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmphl_rgebv.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmphl_rgebv.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', ' ', text).strip()\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    words = text.split()\n\
    \    \n    fixed_text = []\n    \n    for word in words:\n        \n        fixed_text.append(word)\n\
    \        \n        if len(word) > 1:\n            \n            fixed_text.append(word[0])\n\
    \            \n            fixed_text.append(word[1:])\n            \n       \
    \     fixed_text.append(word[0])\n            \n        else:\n            \n\
    \            fixed_text.append(word)\n            \n    return \" \".join(fixed_text)\n\
    </cell>\n<cell>\nfix_spaces(\"Example\")\n</cell>\n<cell>\nfix_spaces(\"Example\
    \ 1\")\n</cell>\n<cell>\nfix_spaces(\"Example 2\")\n</cell>\n<cell>\nfix_spaces(\"\
    Example   3\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ and returns the string with all spaces replaced with underscores, and all consecutive\
    \ spaces replaced with dashes.\n\nfix_dashes(\"Example\") == \"Example\"\nfix_dashes(\"\
    Example 1\") == \"Example_1\"\nfix_dashes(\" Example 2\") == \"-Example_2\"\n\
    fix_dashes(\" Example   3\") == \"-Example-3\"\nfix_dashes(\"Example 4\") == \"\
    Example_4\"\nfix_dashes(\"Example 5 \") == \"Example-5\"\nfix_dashes(\"Example\
    \ 6 \") == \"Example-6\"\nfix_dashes(\"Example 7 \") == \"Example-7\"\nfix_dashes(\"\
    Example 8 \") == \"Example-8\"\nfix_dashes(\"Example 9 \") == \"Example-9\"\n\
    fix_dashes(\"Example 10\") == \"Example-10\"\nfix_dashes(\"Example 11\") == \"\
    Example-11\"\nfix_dashes(\"Example 12\") == \"Example-12\"\nfix_dashes(\"Example\
    \ 13\") == \"Example-13\"\nfix_dashes(\"Example 14\") == \"Example-14\"\nfix_dashes(\"\
    Example 15\") == \"Example-15\"\nfix_dashes(\"Example 16\") == \"Example-16\"\n\
    fix_dashes(\"Example 17\") == \"Example-17\"\nfix_dashes(\"Example 18\") == \"\
    Example-18\"\nfix_dashes(\"Example 19\") == \"Example-19\"\nfix_dashes(\"Example\
    \ 20\") == \"Example-20\"\nfix_dashes(\"Example 21\") == \"Example-21\"\nfix_dashes(\"\
    Example 22\") == \"Example-22\"\nfix_dashes(\"Example 23\") == \"Example-23\"\n\
    fix_dashes(\"Example 24\") == \"Example-24\"\nfix_dashes(\"Example 25\") == \"\
    Example-25\"\nfix_dashes(\"Example 26\") == \"Example-26\"\nfix_dashes(\"Example\
    \ 27\") == \"Example-27\"\nfix_dashes(\"Example 28\") == \"Example-28\"\nfix_dashes(\"\
    Example 29\") == \"Example-29\"\nfix_dashes(\"Example \ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmp97fzm9q3.py\", line 34\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesh4sxq6.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesh4sxq6.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpesh4sxq6.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpesh4sxq6.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf9kxkon_.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpf9kxkon_.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpf9kxkon_.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpf9kxkon_.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmploi9xt20.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmploi9xt20.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmploi9xt20.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmploi9xt20.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf42grw35.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpf42grw35.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpf42grw35.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpf42grw35.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbgt00q5b.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpbgt00q5b.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpbgt00q5b.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpbgt00q5b.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfhdtp9h4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpfhdtp9h4.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpfhdtp9h4.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpfhdtp9h4.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    # Replace all spaces\
    \ with underscores\n    text = re.sub(' +', '_', text)\n    \n    # Replace consecutive\
    \ spaces with -\n    text = re.sub(' +', '-', text)\n    \n    return text\n</cell>\n\
    <cell>\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpsvd51j58.py\", line 20\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    return re.sub(' +',\
    \ '_', text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_n90vmtq.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp_n90vmtq.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp_n90vmtq.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp_n90vmtq.py\"\
    , line 13, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj5iefpwb.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpj5iefpwb.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpj5iefpwb.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpj5iefpwb.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprvf6sy19.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmprvf6sy19.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmprvf6sy19.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmprvf6sy19.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplcgyknqd.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmplcgyknqd.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmplcgyknqd.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmplcgyknqd.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy1tyu_k7.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpy1tyu_k7.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpy1tyu_k7.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpy1tyu_k7.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt297e0ko.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpt297e0ko.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpt297e0ko.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpt297e0ko.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    # Replace all spaces\
    \ with underscores\n    text = re.sub('\\s+', '_', text)\n    \n    # Replace\
    \ consecutive spaces with -\n    text = re.sub(' +', '-', text)\n    \n    return\
    \ text\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqk1iccok.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpqk1iccok.py\", line 30,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpqk1iccok.py\", line 23,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpqk1iccok.py\"\
    , line 14, in fix_spaces\n    text = re.sub('\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    words = text.split()\n\
    \    \n    fixed_text = []\n    \n    for word in words:\n        fixed_text.append(word)\n\
    \        \n        if word != \" \":\n            fixed_text.append(\" \")\n \
    \           \n        if len(fixed_text) > 2:\n            fixed_text.pop()\n\
    \            \n    return \"\".join(fixed_text)\n</cell>\n<cell>\nfix_spaces(\"\
    Example\")\n</cell>\n<cell>\nfix_spaces(\"Example 1\")\n</cell>\n<cell>\nfix_spaces(\"\
    \  Example 2\")\n</cell>\n<cell>\nfix_spaces(\"  Example   3\")\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a string and returns a list of all the\
    \ words in the string. \nIt should ignore non-word characters (numbers, punctuation,\
    \ etc.). \nIt should ignore leading and trailing whitespace. \nIt should ignore\
    \ extra whitespace. \nIt should ignore leading and trailing punctuation. \nIt\
    \ should ignore leading and trailing apostrophes. \nIt should ignore multiple\
    \ spaces.\n\n\n</text>\n<cell>\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmp0n9p4ncs.py\", line 27\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text).strip('-')\n\ndef check(candidate):\n    assert candidate('Example') ==\
    \ 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert\
    \ candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpndo2iakl.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpndo2iakl.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpndo2iakl.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpndo2iakl.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text).strip('-')\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    return re.sub(' +',\
    \ ' ', text).strip()\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl0jiesov.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpl0jiesov.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpl0jiesov.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpl0jiesov.py\"\
    , line 13, in fix_spaces\n    return re.sub(' +', ' ', text).strip()\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9wvkktru.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp9wvkktru.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp9wvkktru.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp9wvkktru.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    return re.sub(' +',\
    \ '_', text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl4gydqrc.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpl4gydqrc.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpl4gydqrc.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpl4gydqrc.py\"\
    , line 13, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd2rzb_m6.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpd2rzb_m6.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpd2rzb_m6.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpd2rzb_m6.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptyzrndcg.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmptyzrndcg.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmptyzrndcg.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmptyzrndcg.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7xixfr4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpb7xixfr4.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpb7xixfr4.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpb7xixfr4.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', ' ', text)\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfyy7951d.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpfyy7951d.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpfyy7951d.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpfyy7951d.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', ' ', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3i9l9gpy.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp3i9l9gpy.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp3i9l9gpy.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp3i9l9gpy.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    fixed_text = text.replace(\"\
    \ \", \"_\")\n    \n    fixed_text = fixed_text.replace(\"  \", \"_\")\n    \n\
    \    return fixed_text\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0ylijidc.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp0ylijidc.py\", line 27,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp0ylijidc.py\", line 23,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    fixed_text = text.replace(\"\
    \ \", \"_\")\n    \n    if len(fixed_text.split()) > 2:\n        fixed_text =\
    \ fixed_text.replace(\" \", \"-\")\n    \n    return fixed_text\n</cell>\n<cell>\n\
    def check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpkv6p7l84.py\", line 19\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcnm1qd0i.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpcnm1qd0i.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpcnm1qd0i.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpcnm1qd0i.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    fixed_text = text.replace(\"\
    \ \", \"_\")\n    \n    if len(fixed_text.split()) > 1:\n        fixed_text =\
    \ fixed_text.replace(\" \", \"-\")\n    \n    return fixed_text\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl9qh_tdu.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpl9qh_tdu.py\", line 29,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpl9qh_tdu.py\", line 25,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    fixed_text = text.replace(\"\
    \ \", \"_\")\n    \n    if len(fixed_text.split()) > 1:\n        fixed_text =\
    \ fixed_text.replace(\" \", \"-\")\n    \n    return fixed_text\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzhvat7qw.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpzhvat7qw.py\", line 29,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpzhvat7qw.py\", line 25,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxd8ed3lu.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpxd8ed3lu.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpxd8ed3lu.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpxd8ed3lu.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpexu9exjg.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpexu9exjg.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpexu9exjg.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpexu9exjg.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    words = text.split()\n\
    \    \n    fixed_text = \"\"\n    \n    for word in words:\n        \n       \
    \ fixed_text += word.replace(\" \", \"_\")\n        \n        if len(fixed_text)\
    \ > 2:\n            fixed_text += \"-\"\n            \n    return fixed_text\n\
    </cell>\n<cell>\nfix_spaces(\"Example\")\n</cell>\n<cell>\nfix_spaces(\"Example\
    \ 1\")\n</cell>\n<cell>\nfix_spaces(\"Example 2\")\n</cell>\n<cell>\nfix_spaces(\"\
    Example   3\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ as input and returns the string with all the spaces replaced by underscores,\
    \ and all the consecutive spaces replaced by dashes.\n\n\n</text>\n<cell>\ndef\
    \ check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmp0x7hhcsp.py\", line 25\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text).strip('-')\n\ndef check(candidate):\n    assert candidate('Example') ==\
    \ 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert\
    \ candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvikttzzv.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpvikttzzv.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpvikttzzv.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpvikttzzv.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text).strip('-')\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6kxrrt9m.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp6kxrrt9m.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp6kxrrt9m.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp6kxrrt9m.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvfla6vt2.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpvfla6vt2.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpvfla6vt2.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpvfla6vt2.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    # Replace all spaces\
    \ with underscores\n    text = re.sub('\\s+', '_', text)\n    \n    # If the text\
    \ has more than 2 consecutive spaces, \n    # then replace all consecutive spaces\
    \ with -\n    \n    # If the text has more than 2 consecutive spaces, \n    #\
    \ then replace all consecutive spaces with -\n    if len(text) > 2:\n        text\
    \ = re.sub('\\s+', '-', text)\n    \n    return text\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg8y6d5t4.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpg8y6d5t4.py\", line 35,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpg8y6d5t4.py\", line 28,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpg8y6d5t4.py\"\
    , line 14, in fix_spaces\n    text = re.sub('\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    fixed_text = text.replace(\"\
    \ \", \"_\")\n    \n    if len(fixed_text.split()) > 1:\n        fixed_text =\
    \ fixed_text.replace(\" \", \"-\")\n    \n    return fixed_text\n</cell>\n<cell>\n\
    def check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmp8g2j4d82.py\", line 19\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    return re.sub(' +',\
    \ ' ', text).strip()\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr384ceye.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpr384ceye.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpr384ceye.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpr384ceye.py\"\
    , line 13, in fix_spaces\n    return re.sub(' +', ' ', text).strip()\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    words = text.split()\n\
    \    \n    # Replace all spaces with underscores\n    for i in range(len(words)):\n\
    \        words[i] = words[i].replace(\" \", \"_\")\n    \n    # Replace consecutive\
    \ spaces with -\n    words = [word.replace(\" \", \"-\") for word in words]\n\
    \    \n    return \" \".join(words)\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo142pwna.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpo142pwna.py\", line 33,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpo142pwna.py\", line 27,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8n1gpr5q.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp8n1gpr5q.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp8n1gpr5q.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp8n1gpr5q.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    return re.sub(' +',\
    \ '_', text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyww_bz86.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpyww_bz86.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpyww_bz86.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpyww_bz86.py\"\
    , line 13, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    # Replace all spaces\
    \ with underscores\n    text = text.replace(\" \", \"_\")\n    \n    # Replace\
    \ consecutive spaces with -\n    text_split = text.split()\n    \n    if len(text_split)\
    \ > 1:\n        \n        # Replace all consecutive spaces with -\n        text_split\
    \ = [x.replace(\" \", \"-\") for x in text_split]\n        \n        # Join the\
    \ list back into a string\n        text = \" \".join(text_split)\n        \n \
    \   return text\n\n\ndef check(candidate):\n    assert candidate('Example') ==\
    \ 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert\
    \ candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3qof3o1x.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp3qof3o1x.py\", line 38,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp3qof3o1x.py\", line 34,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqaiwb8kf.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpqaiwb8kf.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpqaiwb8kf.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpqaiwb8kf.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4gumdsqp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4gumdsqp.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp4gumdsqp.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp4gumdsqp.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfi7m3l17.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpfi7m3l17.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpfi7m3l17.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpfi7m3l17.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    return re.sub(r'\\s+',\
    \ '_', text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwg1wbgww.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpwg1wbgww.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpwg1wbgww.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpwg1wbgww.py\"\
    , line 13, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    tokens = text.split()\n\
    \    \n    i = 0\n    while i < len(tokens):\n        if tokens[i] == \" \":\n\
    \            tokens[i] = \"_\"\n            i += 1\n        elif i + 1 < len(tokens)\
    \ and tokens[i] == \" \" and tokens[i + 1] == \" \":\n            tokens[i] =\
    \ \"_\"\n            i += 1\n        elif i + 2 < len(tokens) and tokens[i] ==\
    \ \" \" and tokens[i + 1] == \" \" and tokens[i + 2] == \" \":\n            tokens[i]\
    \ = \"_\"\n            i += 2\n        else:\n            i += 1\n    \n    return\
    \ \" \".join(tokens)\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp87nzh60s.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmp87nzh60s.py\", line 40,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp87nzh60s.py\", line 34,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprdjdk4m9.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmprdjdk4m9.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmprdjdk4m9.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmprdjdk4m9.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq1o3f0bh.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpq1o3f0bh.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpq1o3f0bh.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpq1o3f0bh.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    # Replace all spaces\
    \ with underscores\n    text = text.replace(\" \", \"_\")\n    \n    # If the\
    \ text has more than 2 consecutive spaces\n    # then replace all consecutive\
    \ spaces with -\n    while \"  \" in text:\n        text = text.replace(\"  \"\
    , \"-\")\n    \n    return text\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvwn3xqn6.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpvwn3xqn6.py\", line 32,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpvwn3xqn6.py\", line 28,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    words = text.split()\n\
    \    \n    if len(words) == 1:\n        return text\n    \n    words = [w.replace(\"\
    \ \", \"_\") for w in words]\n    \n    if len(words) > 2:\n        words = [w.replace(\"\
    \ \", \"-\") for w in words]\n    \n    return \" \".join(words)\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi6g0hach.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpi6g0hach.py\", line 34,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpi6g0hach.py\", line 28,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnweb4pau.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpnweb4pau.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpnweb4pau.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpnweb4pau.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    return re.sub(' +',\
    \ ' ', text).strip()\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjed0oqta.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpjed0oqta.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpjed0oqta.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpjed0oqta.py\"\
    , line 13, in fix_spaces\n    return re.sub(' +', ' ', text).strip()\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe0v1xmum.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpe0v1xmum.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpe0v1xmum.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpe0v1xmum.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmwtb0hwz.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmwtb0hwz.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpmwtb0hwz.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpmwtb0hwz.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', ' ', text).strip()\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpswfoom_w.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpswfoom_w.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpswfoom_w.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpswfoom_w.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', ' ', text).strip()\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpln22sw5y.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpln22sw5y.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpln22sw5y.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpln22sw5y.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgcffvtr2.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpgcffvtr2.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpgcffvtr2.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpgcffvtr2.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8ud65lym.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp8ud65lym.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp8ud65lym.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp8ud65lym.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2llc7ix7.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp2llc7ix7.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp2llc7ix7.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp2llc7ix7.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpljgd205k.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpljgd205k.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpljgd205k.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpljgd205k.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7tvrbz03.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp7tvrbz03.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp7tvrbz03.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp7tvrbz03.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', ' ', text).strip()\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpaxhirj1j.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpaxhirj1j.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpaxhirj1j.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpaxhirj1j.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', ' ', text).strip()\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    # Replace all spaces\
    \ with underscores\n    text = text.replace(\" \", \"_\")\n    \n    # If the\
    \ string has more than 2 consecutive spaces\n    # then replace all consecutive\
    \ spaces with -\n    \n    if len(text) > 2:\n        text = text.replace(\" \"\
    , \"-\")\n    \n    return text\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp89az9je1.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp89az9je1.py\", line 33,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp89az9je1.py\", line 29,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text).replace('_\
    \ -', '_')\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_ueww4ei.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp_ueww4ei.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp_ueww4ei.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp_ueww4ei.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text).replace('_ -', '_')\n\
    NameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7j11op20.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp7j11op20.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp7j11op20.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp7j11op20.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpix88xlda.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpix88xlda.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpix88xlda.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpix88xlda.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp07qoldtg.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp07qoldtg.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp07qoldtg.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp07qoldtg.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfg9oohvw.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpfg9oohvw.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpfg9oohvw.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpfg9oohvw.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    return re.sub(r'\\s+',\
    \ '_', text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptv6pyffd.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmptv6pyffd.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmptv6pyffd.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmptv6pyffd.py\"\
    , line 13, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    words = text.split()\n\
    \    \n    # Replace all spaces with underscores\n    for i in range(len(words)):\n\
    \        words[i] = words[i].replace(\" \", \"_\")\n    \n    # Replace consecutive\
    \ spaces with -\n    words = [word.replace(\" \", \"-\") for word in words]\n\
    \    \n    return \" \".join(words)\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpldggy5t_.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpldggy5t_.py\", line 33,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpldggy5t_.py\", line 27,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    words = text.split()\n\
    \    \n    if len(words) == 1:\n        return text\n    \n    spaces = 0\n  \
    \  \n    for word in words:\n        if word == \" \":\n            spaces +=\
    \ 1\n        else:\n            spaces = 0\n        \n        if spaces > 2:\n\
    \            word = \"-\"\n        \n        text = text.replace(word, \"\")\n\
    \    \n    return text\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv3ooazj4.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpv3ooazj4.py\", line 42,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpv3ooazj4.py\", line 36,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    \n    words = text.split()\n\
    \    \n    # replace all spaces with underscores\n    for i in range(len(words)):\n\
    \        words[i] = words[i].strip()\n        words[i] = words[i].replace(\" \"\
    , \"_\")\n    \n    # remove consecutive spaces\n    words = [w.replace(\" \"\
    , \"\") for w in words]\n    \n    # remove leading and trailing underscores\n\
    \    words = [w.replace(\"_\", \"\") for w in words]\n    \n    return \" \".join(words)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsn2fow6v.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpsn2fow6v.py\", line 37,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpsn2fow6v.py\", line 31,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '_',\
    \ text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw3qeqf5v.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpw3qeqf5v.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpw3qeqf5v.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpw3qeqf5v.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6diyj3_n.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp6diyj3_n.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp6diyj3_n.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp6diyj3_n.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '_', text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx54h6umh.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpx54h6umh.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpx54h6umh.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpx54h6umh.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    _\", text)\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpktxqmkgg.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpktxqmkgg.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpktxqmkgg.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpktxqmkgg.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception

name: HumanEval_16_count_distinct_characters
language: python
results:
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character not in string.lower():\n            distinct_characters\
    \ += 1\n    return distinct_characters\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpor94zgac.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpor94zgac.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpor94zgac.py\"\
    , line 17, in check\n    assert candidate('abcde') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf6ywmkpy.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpf6ywmkpy.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpf6ywmkpy.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for char in string:\n   \
    \     if char.isupper():\n            distinct_characters += 1\n        elif char.islower():\n\
    \            distinct_characters += 1\n        elif char.isdigit():\n        \
    \    distinct_characters += 1\n    return distinct_characters\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8bmbmbwc.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp8bmbmbwc.py\", line 27,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp8bmbmbwc.py\"\
    , line 22, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi1n6lav4.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpi1n6lav4.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpi1n6lav4.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwxlbn9r1.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpwxlbn9r1.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpwxlbn9r1.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc0n6sxa4.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpc0n6sxa4.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpc0n6sxa4.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpco_eoajh.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpco_eoajh.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpco_eoajh.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpivewsg42.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpivewsg42.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpivewsg42.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph3sg7f5b.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmph3sg7f5b.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmph3sg7f5b.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    characters = set(string)\n    return len(characters)\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abcde')\
    \ == 5\n    assert candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa')\
    \ == 1\n    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n\
    \    check(count_distinct_characters)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgbqcvxi5.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpgbqcvxi5.py\", line 20,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpgbqcvxi5.py\"\
    , line 15, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character not in string.lower():\n            distinct_characters\
    \ += 1\n    return distinct_characters\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1a9nvo0s.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp1a9nvo0s.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp1a9nvo0s.py\"\
    , line 17, in check\n    assert candidate('abcde') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsoztq2qi.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpsoztq2qi.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpsoztq2qi.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5zy0h3k6.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp5zy0h3k6.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp5zy0h3k6.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4cozgg3e.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp4cozgg3e.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp4cozgg3e.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqon9hn4_.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpqon9hn4_.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpqon9hn4_.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp575afpa_.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp575afpa_.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp575afpa_.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character not in string.lower():\n            distinct_characters\
    \ += 1\n    return distinct_characters\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpea0a2uy7.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpea0a2uy7.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpea0a2uy7.py\"\
    , line 17, in check\n    assert candidate('abcde') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsqx0wrkg.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpsqx0wrkg.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpsqx0wrkg.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7op5x3n7.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp7op5x3n7.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp7op5x3n7.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuesckg4d.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpuesckg4d.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpuesckg4d.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppys74rlh.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmppys74rlh.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmppys74rlh.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character not in string.lower():\n            distinct_characters\
    \ += 1\n    return distinct_characters\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplbnmpz5p.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmplbnmpz5p.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmplbnmpz5p.py\"\
    , line 17, in check\n    assert candidate('abcde') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4424y8v5.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp4424y8v5.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp4424y8v5.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp13yheus6.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp13yheus6.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp13yheus6.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character.isalpha():\n            distinct_characters += 1\n    return\
    \ distinct_characters\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm1u96x97.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpm1u96x97.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpm1u96x97.py\"\
    , line 18, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcj8w0p50.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpcj8w0p50.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpcj8w0p50.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    characters = set(string)\n    return len(characters)\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abcde')\
    \ == 5\n    assert candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa')\
    \ == 1\n    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n\
    \    check(count_distinct_characters)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3osurwkt.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp3osurwkt.py\", line 20,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp3osurwkt.py\"\
    , line 15, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfwr8wmy0.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpfwr8wmy0.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpfwr8wmy0.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_87ydpm_.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp_87ydpm_.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp_87ydpm_.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for char in string:\n   \
    \     if char.isalpha():\n            distinct_characters += 1\n    return distinct_characters\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abcde')\
    \ == 5\n    assert candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa')\
    \ == 1\n    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n\
    \    check(count_distinct_characters)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm98qd9ae.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpm98qd9ae.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpm98qd9ae.py\"\
    , line 18, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptxxd5a38.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmptxxd5a38.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmptxxd5a38.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp764_k8rt.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp764_k8rt.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp764_k8rt.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfvs6viq0.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpfvs6viq0.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpfvs6viq0.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3_y8p078.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp3_y8p078.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp3_y8p078.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6nxqmjgz.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp6nxqmjgz.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp6nxqmjgz.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character.isupper():\n            distinct_characters += 1\n     \
    \   elif character.islower():\n            distinct_characters += 1\n        elif\
    \ character.isdigit():\n            distinct_characters += 1\n    return distinct_characters\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abcde')\
    \ == 5\n    assert candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa')\
    \ == 1\n    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n\
    \    check(count_distinct_characters)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkblav087.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpkblav087.py\", line 27,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpkblav087.py\"\
    , line 22, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character not in string.lower():\n            distinct_characters\
    \ += 1\n    return distinct_characters\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiogj6tba.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpiogj6tba.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpiogj6tba.py\"\
    , line 17, in check\n    assert candidate('abcde') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5bzoz2tu.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp5bzoz2tu.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp5bzoz2tu.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6ou6we2v.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp6ou6we2v.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp6ou6we2v.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1kie9rvp.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp1kie9rvp.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp1kie9rvp.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3apaxkg4.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp3apaxkg4.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp3apaxkg4.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp27yyrae0.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp27yyrae0.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp27yyrae0.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmsoem_qb.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpmsoem_qb.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpmsoem_qb.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfu8hqvba.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpfu8hqvba.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpfu8hqvba.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpct65cqy5.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpct65cqy5.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpct65cqy5.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7u5yseq6.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp7u5yseq6.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp7u5yseq6.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk7yprql_.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpk7yprql_.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpk7yprql_.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character not in string.lower():\n            distinct_characters\
    \ += 1\n    return distinct_characters\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdfqynp_w.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpdfqynp_w.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpdfqynp_w.py\"\
    , line 17, in check\n    assert candidate('abcde') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5g93r045.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp5g93r045.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp5g93r045.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyg2ayy4l.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpyg2ayy4l.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpyg2ayy4l.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    count = 1\n    for char in string:\n        if char.isupper():\n\
    \            count += 1\n        else:\n            count += 2\n    return count\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abcde')\
    \ == 5\n    assert candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa')\
    \ == 1\n    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n\
    \    check(count_distinct_characters)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjar7788n.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpjar7788n.py\", line 25,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpjar7788n.py\"\
    , line 18, in check\n    assert candidate('') == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdb7pkysv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpdb7pkysv.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpdb7pkysv.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwa7kf776.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpwa7kf776.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpwa7kf776.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpojoott8m.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpojoott8m.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpojoott8m.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for char in string:\n   \
    \     if char.isalpha():\n            distinct_characters += 1\n    return distinct_characters\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abcde')\
    \ == 5\n    assert candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa')\
    \ == 1\n    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n\
    \    check(count_distinct_characters)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3ea19bqi.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp3ea19bqi.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp3ea19bqi.py\"\
    , line 18, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1dsbk52q.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp1dsbk52q.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp1dsbk52q.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppmjr392z.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmppmjr392z.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmppmjr392z.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5h94bf6n.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp5h94bf6n.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp5h94bf6n.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm9b89wnx.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpm9b89wnx.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpm9b89wnx.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4ghacg5c.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp4ghacg5c.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp4ghacg5c.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp68o1l4dn.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp68o1l4dn.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp68o1l4dn.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character not in string.lower():\n            distinct_characters\
    \ += 1\n    return distinct_characters\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp17z8cc2v.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp17z8cc2v.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp17z8cc2v.py\"\
    , line 17, in check\n    assert candidate('abcde') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphrmx7mxn.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmphrmx7mxn.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmphrmx7mxn.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsmcq395c.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpsmcq395c.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpsmcq395c.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjnvighn8.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpjnvighn8.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpjnvighn8.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuxgw3fms.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpuxgw3fms.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpuxgw3fms.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpev4jn7d5.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpev4jn7d5.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpev4jn7d5.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1qbq_ken.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp1qbq_ken.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp1qbq_ken.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa8zsgb7c.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpa8zsgb7c.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpa8zsgb7c.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3eso12l0.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp3eso12l0.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp3eso12l0.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg2rlvlzn.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpg2rlvlzn.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpg2rlvlzn.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzjuohc4x.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpzjuohc4x.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpzjuohc4x.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character not in string.lower():\n            distinct_characters\
    \ += 1\n    return distinct_characters\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2i7na3o3.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp2i7na3o3.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp2i7na3o3.py\"\
    , line 17, in check\n    assert candidate('abcde') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character not in string.lower():\n            distinct_characters\
    \ += 1\n    return distinct_characters\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnlftv_e.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmptnlftv_e.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmptnlftv_e.py\"\
    , line 17, in check\n    assert candidate('abcde') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character not in string.lower():\n            distinct_characters\
    \ += 1\n    return distinct_characters\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqro5cwke.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpqro5cwke.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpqro5cwke.py\"\
    , line 17, in check\n    assert candidate('abcde') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7n0ue7fi.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp7n0ue7fi.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp7n0ue7fi.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6jpkukz_.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp6jpkukz_.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp6jpkukz_.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps35sxxr8.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmps35sxxr8.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmps35sxxr8.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    count = 0\n    for char in string:\n        if char.isupper():\n\
    \            count += 1\n        elif char.islower():\n            count += 1\n\
    \        else:\n            count += 1\n    return count\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb1ss1zst.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpb1ss1zst.py\", line 27,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpb1ss1zst.py\"\
    , line 22, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character.isalpha():\n            distinct_characters += 1\n    return\
    \ distinct_characters\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0co3usbj.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp0co3usbj.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp0co3usbj.py\"\
    , line 18, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8j52lhgn.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp8j52lhgn.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp8j52lhgn.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyk47j1_o.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpyk47j1_o.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpyk47j1_o.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu3gntl7w.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpu3gntl7w.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpu3gntl7w.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character not in string.lower():\n            distinct_characters\
    \ += 1\n    return distinct_characters\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpah_azo5i.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpah_azo5i.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpah_azo5i.py\"\
    , line 17, in check\n    assert candidate('abcde') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzf6k_sz2.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpzf6k_sz2.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpzf6k_sz2.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_3ndbacw.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp_3ndbacw.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp_3ndbacw.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgk7u6aou.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpgk7u6aou.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpgk7u6aou.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf60rrt8b.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpf60rrt8b.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpf60rrt8b.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp24vzy54r.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp24vzy54r.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp24vzy54r.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    characters = set()\n    for character in string:\n   \
    \     characters.add(character)\n    return len(characters)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy5mhqep4.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpy5mhqep4.py\", line 22,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpy5mhqep4.py\"\
    , line 17, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpthtff8sk.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpthtff8sk.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpthtff8sk.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnti6jy5j.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpnti6jy5j.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpnti6jy5j.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character not in string.lower():\n            distinct_characters\
    \ += 1\n    return distinct_characters\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdjozq0il.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpdjozq0il.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpdjozq0il.py\"\
    , line 17, in check\n    assert candidate('abcde') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa2t2_lwc.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpa2t2_lwc.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpa2t2_lwc.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvxfaf2f1.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpvxfaf2f1.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpvxfaf2f1.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmnls2b62.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpmnls2b62.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpmnls2b62.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp672l5u_u.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp672l5u_u.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp672l5u_u.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_c2kj2_v.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp_c2kj2_v.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp_c2kj2_v.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character not in string.lower():\n            distinct_characters\
    \ += 1\n    return distinct_characters\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppvf7nkh0.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmppvf7nkh0.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmppvf7nkh0.py\"\
    , line 17, in check\n    assert candidate('abcde') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    count = 0\n    for c in string:\n        if c.isalpha():\n\
    \            count += 1\n    return count\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpndka51jf.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpndka51jf.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpndka51jf.py\"\
    , line 18, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character not in string.lower():\n            distinct_characters\
    \ += 1\n    return distinct_characters\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxl_saup1.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpxl_saup1.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpxl_saup1.py\"\
    , line 17, in check\n    assert candidate('abcde') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp22dsv6cn.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp22dsv6cn.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp22dsv6cn.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdbj31c4g.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpdbj31c4g.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpdbj31c4g.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    count = 0\n    for c in string:\n        if c.isupper():\n\
    \            count += 1\n        elif c.islower():\n            count += 1\n \
    \       else:\n            count += 1\n    return count\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8ab3c5fi.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp8ab3c5fi.py\", line 27,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp8ab3c5fi.py\"\
    , line 22, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1_5b9xxk.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp1_5b9xxk.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp1_5b9xxk.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphoj9j46s.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmphoj9j46s.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmphoj9j46s.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    count = 0\n    for char in string:\n        if char.isupper():\n\
    \            count += 1\n        elif char.islower():\n            count += 1\n\
    \    return count\n\n\ndef check(candidate):\n    assert candidate('') == 0\n\
    \    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE') ==\
    \ 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry jERRY\
    \ JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcunbys9b.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpcunbys9b.py\", line 25,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpcunbys9b.py\"\
    , line 20, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb25m2x1b.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpb25m2x1b.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpb25m2x1b.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzrjtyepk.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpzrjtyepk.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpzrjtyepk.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character not in string.lower():\n            distinct_characters\
    \ += 1\n    return distinct_characters\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphclq6_hy.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmphclq6_hy.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmphclq6_hy.py\"\
    , line 17, in check\n    assert candidate('abcde') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    count = 0\n    for c in string:\n        if c.isupper():\n\
    \            count += 1\n        elif c.islower():\n            count += 1\n \
    \       else:\n            count += 1\n    return count\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp74hdl3ui.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp74hdl3ui.py\", line 27,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp74hdl3ui.py\"\
    , line 22, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    count = 0\n    for char in string:\n        if char.isupper():\n\
    \            count += 1\n        elif char.islower():\n            count += 1\n\
    \    return count\n\n\ndef check(candidate):\n    assert candidate('') == 0\n\
    \    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE') ==\
    \ 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry jERRY\
    \ JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjn_e4bc8.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpjn_e4bc8.py\", line 25,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpjn_e4bc8.py\"\
    , line 20, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjy3zqrnx.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpjy3zqrnx.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpjy3zqrnx.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm_n4ydri.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpm_n4ydri.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpm_n4ydri.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2opj3j47.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp2opj3j47.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp2opj3j47.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp5hy2bqr.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpp5hy2bqr.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpp5hy2bqr.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt_silgxl.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpt_silgxl.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpt_silgxl.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptxjnpcp8.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmptxjnpcp8.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmptxjnpcp8.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwgrtnl16.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpwgrtnl16.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpwgrtnl16.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn88rk4aa.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpn88rk4aa.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpn88rk4aa.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw9lq58e8.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpw9lq58e8.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpw9lq58e8.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyrvqredv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpyrvqredv.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpyrvqredv.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp93fgh3sy.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp93fgh3sy.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp93fgh3sy.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_6chyd_8.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp_6chyd_8.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp_6chyd_8.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0brlvam4.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp0brlvam4.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp0brlvam4.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0qbrb4at.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp0qbrb4at.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp0qbrb4at.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    count = 0\n    for char in string:\n        if char.isalpha():\n\
    \            count += 1\n    return count\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprf4doepr.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmprf4doepr.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmprf4doepr.py\"\
    , line 18, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7krnfmzi.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp7krnfmzi.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp7krnfmzi.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdgzxlzih.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpdgzxlzih.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpdgzxlzih.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    characters = set(string)\n    return len(characters)\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abcde')\
    \ == 5\n    assert candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa')\
    \ == 1\n    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n\
    \    check(count_distinct_characters)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprcaq4zy4.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmprcaq4zy4.py\", line 20,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmprcaq4zy4.py\"\
    , line 15, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character not in string.lower():\n            distinct_characters\
    \ += 1\n    return distinct_characters\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe41e37ak.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpe41e37ak.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpe41e37ak.py\"\
    , line 17, in check\n    assert candidate('abcde') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkz5yp65b.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpkz5yp65b.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpkz5yp65b.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplr33aq2g.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmplr33aq2g.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmplr33aq2g.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplwoaeimu.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmplwoaeimu.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmplwoaeimu.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc4ec6n9l.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpc4ec6n9l.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpc4ec6n9l.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm3rs315t.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpm3rs315t.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpm3rs315t.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character not in string.lower():\n            distinct_characters\
    \ += 1\n    return distinct_characters\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa1pxv8sq.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpa1pxv8sq.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpa1pxv8sq.py\"\
    , line 17, in check\n    assert candidate('abcde') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvlmm2c5s.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpvlmm2c5s.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpvlmm2c5s.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe9ceqjt1.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpe9ceqjt1.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpe9ceqjt1.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnox__mjd.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpnox__mjd.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpnox__mjd.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0g_z1gyy.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp0g_z1gyy.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp0g_z1gyy.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpemfeymu6.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpemfeymu6.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpemfeymu6.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character not in string.lower():\n            distinct_characters\
    \ += 1\n    return distinct_characters\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7qgk7nxd.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp7qgk7nxd.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp7qgk7nxd.py\"\
    , line 17, in check\n    assert candidate('abcde') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character not in string.lower():\n            distinct_characters\
    \ += 1\n    return distinct_characters\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl7000ykw.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpl7000ykw.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpl7000ykw.py\"\
    , line 17, in check\n    assert candidate('abcde') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkl77aroh.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpkl77aroh.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpkl77aroh.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxoisjmdk.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpxoisjmdk.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpxoisjmdk.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6jemuplo.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp6jemuplo.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp6jemuplo.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv0zmd9jg.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpv0zmd9jg.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpv0zmd9jg.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbnsi1uc_.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpbnsi1uc_.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpbnsi1uc_.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character not in string.lower():\n            distinct_characters\
    \ += 1\n    return distinct_characters\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps4qrpg2g.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmps4qrpg2g.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmps4qrpg2g.py\"\
    , line 17, in check\n    assert candidate('abcde') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    count = 0\n    for c in string:\n        if c.isupper():\n\
    \            count += 1\n        elif c.islower():\n            count += 1\n \
    \       elif c.isdigit():\n            count += 1\n    return count\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptiawcvcy.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmptiawcvcy.py\", line 27,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmptiawcvcy.py\"\
    , line 22, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp17x95imb.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp17x95imb.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp17x95imb.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    characters = set()\n    for char in string:\n        characters.add(char)\n\
    \    return len(characters)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnclygux8.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpnclygux8.py\", line 22,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpnclygux8.py\"\
    , line 17, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwrvqv0kc.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpwrvqv0kc.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpwrvqv0kc.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7jioruea.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp7jioruea.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp7jioruea.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdcjz_2xk.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpdcjz_2xk.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpdcjz_2xk.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplj9gry7q.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmplj9gry7q.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmplj9gry7q.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn01vd48a.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpn01vd48a.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpn01vd48a.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwfw59z8j.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpwfw59z8j.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpwfw59z8j.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character not in string.lower():\n            distinct_characters\
    \ += 1\n    return distinct_characters\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp409ukauz.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp409ukauz.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp409ukauz.py\"\
    , line 17, in check\n    assert candidate('abcde') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpep2zmsra.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpep2zmsra.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpep2zmsra.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    count = 0\n    for char in string:\n        if char.isalpha():\n\
    \            count += 1\n    return count\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbp8lhqcm.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpbp8lhqcm.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpbp8lhqcm.py\"\
    , line 18, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm2jagao5.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpm2jagao5.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpm2jagao5.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo0w9su4m.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpo0w9su4m.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpo0w9su4m.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgysrho_6.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpgysrho_6.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpgysrho_6.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character not in string.lower():\n            distinct_characters\
    \ += 1\n    return distinct_characters\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4f44g_lk.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4f44g_lk.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp4f44g_lk.py\"\
    , line 17, in check\n    assert candidate('abcde') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphya6gnqd.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmphya6gnqd.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmphya6gnqd.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn7r43_rp.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpn7r43_rp.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpn7r43_rp.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character not in string.lower():\n            distinct_characters\
    \ += 1\n    return distinct_characters\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp53zwd1cx.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp53zwd1cx.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp53zwd1cx.py\"\
    , line 17, in check\n    assert candidate('abcde') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfoct8b86.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpfoct8b86.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpfoct8b86.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvi72o4io.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpvi72o4io.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpvi72o4io.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeqjw4lb2.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpeqjw4lb2.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpeqjw4lb2.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7ablht_g.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp7ablht_g.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp7ablht_g.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character not in string.lower():\n            distinct_characters\
    \ += 1\n    return distinct_characters\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp68wpeu85.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp68wpeu85.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp68wpeu85.py\"\
    , line 17, in check\n    assert candidate('abcde') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb5ht956z.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpb5ht956z.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpb5ht956z.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe9tljuc_.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpe9tljuc_.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpe9tljuc_.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5d80b__1.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp5d80b__1.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp5d80b__1.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf21f9rm_.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpf21f9rm_.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpf21f9rm_.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character not in string.lower():\n            distinct_characters\
    \ += 1\n    return distinct_characters\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp20ptsx7v.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp20ptsx7v.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp20ptsx7v.py\"\
    , line 17, in check\n    assert candidate('abcde') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp05_6bw6e.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp05_6bw6e.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp05_6bw6e.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4jc2uv83.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp4jc2uv83.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp4jc2uv83.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm61y0mkk.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpm61y0mkk.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpm61y0mkk.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    count = 0\n    for c in string:\n        if c.isalpha():\n\
    \            count += 1\n    return count\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdx_t4eae.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpdx_t4eae.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpdx_t4eae.py\"\
    , line 18, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdvxmrmvd.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpdvxmrmvd.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpdvxmrmvd.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg31kx6c1.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpg31kx6c1.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpg31kx6c1.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp417ybngb.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp417ybngb.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp417ybngb.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpphre4w38.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpphre4w38.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpphre4w38.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphmdwfhbh.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmphmdwfhbh.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmphmdwfhbh.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4zg10w7x.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp4zg10w7x.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp4zg10w7x.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    distinct_characters = 0\n    for character in string:\n\
    \        if character not in string.lower():\n            distinct_characters\
    \ += 1\n    return distinct_characters\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyrrq_ftb.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpyrrq_ftb.py\", line 23,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpyrrq_ftb.py\"\
    , line 17, in check\n    assert candidate('abcde') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr_zs_qw2.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpr_zs_qw2.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpr_zs_qw2.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp700xcfwd.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp700xcfwd.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp700xcfwd.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp25gomqcw.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp25gomqcw.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp25gomqcw.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpho3b9i82.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpho3b9i82.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpho3b9i82.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuetu38d1.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpuetu38d1.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpuetu38d1.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp47ebfzf8.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp47ebfzf8.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmp47ebfzf8.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyzkbyaad.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpyzkbyaad.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpyzkbyaad.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlvsoesp.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpmlvsoesp.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpmlvsoesp.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    characters = set()\n    for char in string:\n        characters.add(char)\n\
    \    return len(characters)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE')\
    \ == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry\
    \ jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphgxxv7qm.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmphgxxv7qm.py\", line 22,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmphgxxv7qm.py\"\
    , line 17, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnddqcxbd.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpnddqcxbd.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpnddqcxbd.py\"\
    , line 14, in check\n    assert candidate('abcdecadeCADE') == 5\nAssertionError\n"
  exit_code: -1
  status: Exception

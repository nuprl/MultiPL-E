{
  "name": "HumanEval_57_monotonic",
  "language": "jl",
  "prompt": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n",
  "tests": "using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i+1] <= l[i] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpv3tbydlt.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpv3tbydlt.jl:1\nin expression starting at /tmp/tmpv3tbydlt.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i+1] <= l[i] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpv3tbydlt.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpv3tbydlt.jl:1\nin expression starting at /tmp/tmpv3tbydlt.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293473,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5gi7iozb.jl:13\nin expression starting at /tmp/tmp5gi7iozb.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.sort(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs,\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0d20fila.jl:13\nin expression starting at /tmp/tmp0d20fila.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.sort(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs,\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0d20fila.jl:13\nin expression starting at /tmp/tmp0d20fila.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpvk913pb5.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvk913pb5.jl:1\nin expression starting at /tmp/tmpvk913pb5.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs,\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2oktkgyq.jl:13\nin expression starting at /tmp/tmp2oktkgyq.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\n\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptsp44oi_.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptsp44oi_.jl:1\nin expression starting at /tmp/tmptsp44oi_.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1y_uc61i.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1y_uc61i.jl:1\nin expression starting at /tmp/tmp1y_uc61i.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293473,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5gi7iozb.jl:13\nin expression starting at /tmp/tmp5gi7iozb.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\n\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptsp44oi_.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptsp44oi_.jl:1\nin expression starting at /tmp/tmptsp44oi_.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293473,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5gi7iozb.jl:13\nin expression starting at /tmp/tmp5gi7iozb.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpvk913pb5.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvk913pb5.jl:1\nin expression starting at /tmp/tmpvk913pb5.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1y_uc61i.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1y_uc61i.jl:1\nin expression starting at /tmp/tmp1y_uc61i.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpeyaxilep.jl:13\nin expression starting at /tmp/tmpeyaxilep.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i+1] <= l[i] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpv3tbydlt.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpv3tbydlt.jl:1\nin expression starting at /tmp/tmpv3tbydlt.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293473,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5gi7iozb.jl:13\nin expression starting at /tmp/tmp5gi7iozb.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i+1] <= l[i] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpv3tbydlt.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpv3tbydlt.jl:1\nin expression starting at /tmp/tmpv3tbydlt.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\n\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptsp44oi_.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptsp44oi_.jl:1\nin expression starting at /tmp/tmptsp44oi_.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(l.sub, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293473,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5gi7iozb.jl:13\nin expression starting at /tmp/tmp5gi7iozb.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i+1] <= l[i] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpv3tbydlt.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpv3tbydlt.jl:1\nin expression starting at /tmp/tmpv3tbydlt.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.sort(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs,\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0d20fila.jl:13\nin expression starting at /tmp/tmp0d20fila.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1y_uc61i.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1y_uc61i.jl:1\nin expression starting at /tmp/tmp1y_uc61i.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i+1] <= l[i] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpv3tbydlt.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpv3tbydlt.jl:1\nin expression starting at /tmp/tmpv3tbydlt.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i+1] <= l[i] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpv3tbydlt.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpv3tbydlt.jl:1\nin expression starting at /tmp/tmpv3tbydlt.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(l.min, l.map(l.max, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpeyaxilep.jl:13\nin expression starting at /tmp/tmpeyaxilep.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpvk913pb5.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvk913pb5.jl:1\nin expression starting at /tmp/tmpvk913pb5.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\n\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptsp44oi_.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptsp44oi_.jl:1\nin expression starting at /tmp/tmptsp44oi_.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i+1] <= l[i] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpv3tbydlt.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpv3tbydlt.jl:1\nin expression starting at /tmp/tmpv3tbydlt.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i+1] <= l[i] for i in range(len(l)-1))\n\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp534sg074.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp534sg074.jl:1\nin expression starting at /tmp/tmp534sg074.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps0j28gxb.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps0j28gxb.jl:1\nin expression starting at /tmp/tmps0j28gxb.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs, l.sort(l.map(l.abs,\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2oktkgyq.jl:13\nin expression starting at /tmp/tmp2oktkgyq.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing(l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(l.abs, l.map(l.sign, l.map(\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp85e7gyp0.jl:13\nin expression starting at /tmp/tmp85e7gyp0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return l.all(l.is_increasing | l.is_decreasing)\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n",
      "timestamp": 1664293472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu87fjycj.jl:9 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu87fjycj.jl:1\nin expression starting at /tmp/tmpu87fjycj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "HumanEval_81_numerical_letter_grade",
  "language": "jl",
  "prompt": "\"\"\"It is the last week of the semester and the teacher has to give the grades\n    to students. The teacher has been making her own algorithm for grading.\n    The only problem is, she has lost the code she used for grading.\n    She has given you a vector of GPAs for some students and you have to write \n    a function that can output a vector of letter grades using the following table:\n             GPA       |    Letter grade\n              4.0                A+\n            > 3.7                A \n            > 3.3                A- \n            > 3.0                B+\n            > 2.7                B \n            > 2.3                B-\n            > 2.0                C+\n            > 1.7                C\n            > 1.3                C-\n            > 1.0                D+ \n            > 0.7                D \n            > 0.0                D-\n              0.0                E\n    \n\n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String} \n",
  "tests": "using Test\n\n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\nend\n",
  "completions": [
    "    \"\"\"\n    The function takes a vector of numeric grades and returns a vector of letter grades.\n    \"\"\"\n    # Your code here\n    \n    return grades",
    "    # Your code here\n    return grades",
    "    # Your code here\n    grades = sorted(grades, reverse=True)\n    grades = grades[0:3]\n    grades.append(\"E\")\n    grades = [str(round(x, 2)) for x in grades]\n    return grades",
    "    \"\"\"\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]",
    "    \n    # Your code here\n    \n    return grades\n",
    "    \"\"\"\n    The function should return a vector of letter grades for the given GPA vector.\n    The function should use the following table to convert the GPA to a letter grade:\n    \n    GPA       |    Letter grade\n              4.0                A+\n            > 3.7                A \n            > 3.3                A- \n            > 3.0                B+\n            > 2.7                B \n            > 2.3                B-\n            > 2.0                C+\n            > 1.7                C\n            > 1.3                C-\n            > 1.0                D+ \n            > 0.7                D \n            > 0.0                D-\n              0.0                E\n    \n    The function should return a vector of letter grades for the given GPA vector.\n    The function should use the following table to convert the GPA to a letter grade:\n    \n    GPA       |    Letter grade\n              4.0                A+\n            > 3.7                A \n            > 3.3                A- \n            > 3.0                B+\n            > 2.7                B \n            > 2.3                B-\n            > 2.0                C+\n            > 1.7                C\n            > 1.3                C-\n            > 1.0                D+ \n            > 0.7                D \n            > 0.0                D-\n              0.0                E\n    \n    The function should return a vector of letter grades for the given GPA vector.\n    The function should use the following table to convert the GPA to a letter grade:\n    \n    GPA       |    Letter grade\n              4.0                A+\n            > 3.7                A \n            > 3.3                A- \n            > 3.0                B+\n            > 2.7                B \n            > 2.3                B-\n            > 2.0                C+\n            > 1.7                C\n            > 1.3                C-\n            > 1.0                D+ \n            > 0.7                D \n            > 0.0                D-\n              0.0                E\n    \n    The function should return a vector of letter grades for the given GPA vector.\n    The function",
    "    \"\"\"\n    The function takes a vector of numeric grades and returns a vector of \n    letter grades. The function should use the following table to convert \n    numeric grades to letter grades:\n    \n    GPA       |    Letter grade\n              4.0                A+\n            > 3.7                A \n            > 3.3                A- \n            > 3.0                B+\n            > 2.7                B \n            > 2.3                B-\n            > 2.0                C+\n            > 1.7                C\n            > 1.3                C-\n            > 1.0                D+ \n            > 0.7                D \n            > 0.0                D-\n              0.0                E\n    \n    The function should return a vector of strings.\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]\n",
    "    # Your code here\n    return",
    "    # Your code here\n    return",
    "    return [\n        if (grades[i] >= 4.0) then \"A+\" else\n        if (grades[i] >= 3.7) then \"A\" else\n        if (grades[i] >= 3.3) then \"A-\" else\n        if (grades[i] >= 3.0) then \"B+\" else\n        if (grades[i] >= 2.7) then \"B\" else\n        if (grades[i] >= 2.3) then \"B-\" else\n        if (grades[i] >= 2.0) then \"C+\" else\n        if (grades[i] >= 1.7) then \"C\" else\n        if (grades[i] >= 1.3) then \"C-\" else\n        if (grades[i] >= 1.0) then \"D+\" else\n        if (grades[i] >= 0.7) then \"D\" else\n        if (grades[i] >= 0.0) then \"D-\" else\n        \"E\"\n        ]",
    "    \"\"\"\n    The function takes a vector of numeric grades and returns a vector of \n    letter grades. The grades are given in the following order:\n    \n    4.0 -> A+\n    3.7 -> A\n    3.3 -> A-\n    3.0 -> B+\n    2.7 -> B\n    2.3 -> B-\n    2.0 -> C+\n    1.7 -> C\n    1.3 -> C-\n    1.0 -> D+\n    0.7 -> D\n    0.0 -> D-\n    0.0 -> E\n    \n    The function should return a vector of strings.\n    \"\"\"\n    return [\"A+\" if grade >= 4.0 else \"A\" if grade >= 3.7 else \"A-\" if grade >= 3.3 else \"B+\" if grade >= 3.0 else \"B\" if grade >= 2.7 else \"B-\" if grade >= 2.3 else \"C+\" if grade >= 2.0 else \"C\" if grade >= 1.7 else \"C-\" if grade >= 1.3 else \"D+\" if grade >= 1.0 else \"D\" if grade >= 0.7 else \"D-\" if grade >= 0.0 else \"E\" for grade in grades]",
    "    return [\n        if (grades[i] >= 4.0) then \"A+\" else\n        if (grades[i] >= 3.7) then \"A\" else\n        if (grades[i] >= 3.3) then \"A-\" else\n        if (grades[i] >= 3.0) then \"B+\" else\n        if (grades[i] >= 2.7) then \"B\" else\n        if (grades[i] >= 2.3) then \"B-\" else\n        if (grades[i] >= 2.0) then \"C+\" else\n        if (grades[i] >= 1.7) then \"C\" else\n        if (grades[i] >= 1.3) then \"C-\" else\n        if (grades[i] >= 1.0) then \"D+\" else\n        if (grades[i] >= 0.7) then \"D\" else\n        if (grades[i] >= 0.0) then \"D-\" else\n        \"E\"\n    ]",
    "    return [\n        \"A+\" if grades[0] >= 4.0 else\n        \"A\" if grades[0] >= 3.7 else\n        \"A-\" if grades[0] >= 3.3 else\n        \"B+\" if grades[0] >= 3.0 else\n        \"B\" if grades[0] >= 2.7 else\n        \"B-\" if grades[0] >= 2.3 else\n        \"C+\" if grades[0] >= 2.0 else\n        \"C\" if grades[0] >= 1.7 else\n        \"C-\" if grades[0] >= 1.3 else\n        \"D+\" if grades[0] >= 1.0 else\n        \"D\" if grades[0] >= 0.7 else\n        \"D-\" if grades[0] >= 0.3 else\n        \"E\" if grades[0] == 0.0 else\n        \"F\"\n    ]\n",
    "    \"\"\"\n    The function takes a vector of numeric grades and returns a vector of \n    letter grades. The function should use the following table to convert \n    numeric grades to letter grades:\n    \n    GPA       |    Letter grade\n              4.0                A+\n            > 3.7                A \n            > 3.3                A- \n            > 3.0                B+\n            > 2.7                B \n            > 2.3                B-\n            > 2.0                C+\n            > 1.7                C\n            > 1.3                C-\n            > 1.0                D+ \n            > 0.7                D \n            > 0.0                D-\n              0.0                E\n    \n    The function should return a vector of letter grades.\n    \"\"\"\n    \n    # Your code here\n    \n    return grades\n",
    "    return [\n        if (grades[i] >= 4.0) then \"A+\" else\n        if (grades[i] >= 3.7) then \"A\" else\n        if (grades[i] >= 3.3) then \"A-\" else\n        if (grades[i] >= 3.0) then \"B+\" else\n        if (grades[i] >= 2.7) then \"B\" else\n        if (grades[i] >= 2.3) then \"B-\" else\n        if (grades[i] >= 2.0) then \"C+\" else\n        if (grades[i] >= 1.7) then \"C\" else\n        if (grades[i] >= 1.3) then \"C-\" else\n        if (grades[i] >= 1.0) then \"D+\" else\n        if (grades[i] >= 0.7) then \"D\" else\n        if (grades[i] >= 0.0) then \"D-\" else\n        \"E\"\n        ]\n",
    "    \n    # Your code here\n    \n    return grades\n",
    "    \"\"\"\n    Letters are the following:\n        A+\n        A\n        A-\n        B+\n        B\n        B-\n        C+\n        C\n        C-\n        D+\n        D\n        D-\n        E\n    \"\"\"\n    \n    # Your code here\n    \n    return grades\n",
    "    return [\n        \"A+\" if grades[0] >= 4.0 else\n        \"A\" if grades[0] >= 3.7 else\n        \"A-\" if grades[0] >= 3.3 else\n        \"B+\" if grades[0] >= 3.0 else\n        \"B\" if grades[0] >= 2.7 else\n        \"B-\" if grades[0] >= 2.3 else\n        \"C+\" if grades[0] >= 2.0 else\n        \"C\" if grades[0] >= 1.7 else\n        \"C-\" if grades[0] >= 1.3 else\n        \"D+\" if grades[0] >= 1.0 else\n        \"D\" if grades[0] >= 0.7 else\n        \"D-\" if grades[0] >= 0.3 else\n        \"E\" if grades[0] >= 0.0 else\n        \"F\"\n    ]",
    "    \"\"\"\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] == 0.0 else\n        \"N/A\"\n        for i in range(len(grades))\n    ]\n",
    "    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n",
    "    return\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
    "    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n",
    "    \n    # Your code here\n    \n    return grades\n",
    "    return\n    \n    # Your code here\n    \n    return",
    "    # Your code here\n    grades = sorted(grades, reverse=True)\n    if grades[0] > 4.0:\n        return [\"A+\"]\n    elif grades[0] > 3.7:\n        return [\"A\"]\n    elif grades[0] > 3.3:\n        return [\"A-\"]\n    elif grades[0] > 3.0:\n        return [\"B+\"]\n    elif grades[0] > 2.7:\n        return [\"B\"]\n    elif grades[0] > 2.3:\n        return [\"B-\"]\n    elif grades[0] > 2.0:\n        return [\"C+\"]\n    elif grades[0] > 1.7:\n        return [\"C\"]\n    elif grades[0] > 1.3:\n        return [\"C-\"]\n    elif grades[0] > 1.0:\n        return [\"D+\"]\n    elif grades[0] > 0.7:\n        return [\"D\"]\n    elif grades[0] > 0.0:\n        return [\"D-\"]\n    else:\n        return [\"E\"]\n",
    "    # Your code here\n    grades = sorted(grades, reverse=True)\n    if grades[0] < 3.0:\n        return [\"E\"]\n    if grades[0] < 2.0:\n        return [\"D-\", \"D\"]\n    if grades[0] < 1.0:\n        return [\"C-\", \"C\"]\n    if grades[0] < 0.7:\n        return [\"B-\", \"B\"]\n    if grades[0] < 0.3:\n        return [\"A-\", \"A\"]\n    return [\"A+\", \"A\"]\n",
    "    # Your code here\n    grades = sorted(grades)\n    grades = grades[::-1]\n    grades = [str(round(x, 2)) for x in grades]\n    grades = [x if x != '0.0' else 'E' for x in grades]\n    return grades",
    "    # Your code here\n    return",
    "    \"\"\"\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"N/A\"\n        for i in range(len(grades))\n    ]",
    "    \"\"\"\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"N/A\"\n        for i in range(len(grades))\n    ]",
    "    return\n    \n    # Your code here\n    \n    return\n    \n    \ndef grade_equation(grades::Vector{Float64})::Vector{String} \n    return numerical_letter_grade(grades)\n    \n    \nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()\n",
    "    # Your code here\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]\n",
    "    \n    # Your code here\n    \n    return grades",
    "    # Your code here\n    return",
    "    return [\n        if (grades[i] >= 4.0) then \"A+\" else\n        if (grades[i] >= 3.7) then \"A\" else\n        if (grades[i] >= 3.3) then \"A-\" else\n        if (grades[i] >= 3.0) then \"B+\" else\n        if (grades[i] >= 2.7) then \"B\" else\n        if (grades[i] >= 2.3) then \"B-\" else\n        if (grades[i] >= 2.0) then \"C+\" else\n        if (grades[i] >= 1.7) then \"C\" else\n        if (grades[i] >= 1.3) then \"C-\" else\n        if (grades[i] >= 1.0) then \"D+\" else\n        if (grades[i] >= 0.7) then \"D\" else\n        if (grades[i] >= 0.0) then \"D-\" else\n        \"E\"\n        ]\n",
    "    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]\n",
    "    # Your code here\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]\n",
    "    return\n    \n    # Your code here\n    \n    return\n    \n    \ndef grade_equation(grades::Vector{Float64})::Vector{String} \n    return numerical_letter_grade(grades)\n    \n    \nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()\n",
    "    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n",
    "    \"\"\"\n    Letters are defined as follows:\n        A+ = 4.0\n        A = 3.7\n        A- = 3.3\n        B+ = 3.0\n        B = 2.7\n        B- = 2.3\n        C+ = 2.0\n        C = 1.7\n        C- = 1.3\n        D+ = 1.0\n        D = 0.7\n        D- = 0.0\n        E = 0.0\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.0 else\n        \"E\" if grades[i] >= 0.0 else\n        \"N/A\"\n    ]",
    "    # TODO: implement the function\n    \n    # Your code here\n    pass",
    "    # Your code here\n    \n    return grades",
    "    \"\"\"\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] < 0.0 else\n        \"F\"\n    ]\n",
    "    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]",
    "    # Your code here\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]\n",
    "    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]",
    "    return [\n        if (grades[i] >= 4.0) then \"A+\" else\n        if (grades[i] >= 3.7) then \"A\" else\n        if (grades[i] >= 3.3) then \"A-\" else\n        if (grades[i] >= 3.0) then \"B+\" else\n        if (grades[i] >= 2.7) then \"B\" else\n        if (grades[i] >= 2.3) then \"B-\" else\n        if (grades[i] >= 2.0) then \"C+\" else\n        if (grades[i] >= 1.7) then \"C\" else\n        if (grades[i] >= 1.3) then \"C-\" else\n        if (grades[i] >= 1.0) then \"D+\" else\n        if (grades[i] >= 0.7) then \"D\" else\n        if (grades[i] >= 0.0) then \"D-\" else\n        \"E\"\n        ]\n",
    "    # Your code here\n    return",
    "    # Your code here\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]\n",
    "    \"\"\"\n    Returns a vector of letter grades for the given GPA vector.\n    \"\"\"\n    return",
    "    \"\"\"\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n        for i in range(len(grades))\n    ]",
    "    \"\"\"\n    The function should return a vector of letter grades.\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]",
    "    # Your code here\n    return grades",
    "    # Your code here\n    \n    # Your code here\n    return grades\n    \n    \ndef grade_equation(grades::Vector{Float64})::Vector{String} \n    # Your code here\n    \n    # Your code here\n    return grades\n",
    "    return [\n        if(grades[i] > 3.7) then \"A\" else\n        if(grades[i] > 3.3) then \"A-\" else\n        if(grades[i] > 3.0) then \"B\" else\n        if(grades[i] > 2.7) then \"B-\" else\n        if(grades[i] > 2.3) then \"C\" else\n        if(grades[i] > 2.0) then \"C-\" else\n        if(grades[i] > 1.7) then \"D\" else\n        if(grades[i] > 1.3) then \"D-\" else\n        if(grades[i] > 1.0) then \"E\" else\n        \"F\"\n        for i in range(0, len(grades))\n    ]",
    "    return\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
    "    \"\"\"\n    The function should return a vector of letter grades.\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]\n",
    "    \"\"\"\n    Letters are: A+, A, A-, B+, B, B-, C+, C, C-, D+, D, D-, E\n    \"\"\"\n    \n    # Your code here\n    \n    return grades\n",
    "    \n    # Your code here\n    \n    return grades",
    "    # Your code here\n    \n    # Your code here\n    return grades\n    \n    \ndef grade_equation(grades::Vector{Float64})::Vector{String} \n    # Your code here\n    \n    # Your code here\n    return grades\n",
    "    \"\"\"\n    \"\"\"\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] == 0.0 else\n        \"N/A\"\n        for i in range(len(grades))\n    ]",
    "    # Your code here\n    \n    # Your code here\n    \n    return grades",
    "    # Your code here\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]\n",
    "    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n",
    "    # Your code here\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]\n",
    "    \"\"\"\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] < 0.3 else\n        \"F\"\n        for i in range(len(grades))\n    ]",
    "    # Your code here\n    \n    # Your code here\n    \n    return grades\n",
    "    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]\n",
    "    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]",
    "    # Your code here\n    return grades",
    "    return [\n        if (grades[i] >= 4.0) then \"A+\" else\n        if (grades[i] >= 3.7) then \"A\" else\n        if (grades[i] >= 3.3) then \"A-\" else\n        if (grades[i] >= 3.0) then \"B+\" else\n        if (grades[i] >= 2.7) then \"B\" else\n        if (grades[i] >= 2.3) then \"B-\" else\n        if (grades[i] >= 2.0) then \"C+\" else\n        if (grades[i] >= 1.7) then \"C\" else\n        if (grades[i] >= 1.3) then \"C-\" else\n        if (grades[i] >= 1.0) then \"D+\" else\n        if (grades[i] >= 0.7) then \"D\" else\n        if (grades[i] >= 0.0) then \"D-\" else\n        \"E\"\n    ]",
    "    return [\n        if (grades[i] >= 4.0) then \"A+\" else\n        if (grades[i] >= 3.7) then \"A\" else\n        if (grades[i] >= 3.3) then \"A-\" else\n        if (grades[i] >= 3.0) then \"B+\" else\n        if (grades[i] >= 2.7) then \"B\" else\n        if (grades[i] >= 2.3) then \"B-\" else\n        if (grades[i] >= 2.0) then \"C+\" else\n        if (grades[i] >= 1.7) then \"C\" else\n        if (grades[i] >= 1.3) then \"C-\" else\n        if (grades[i] >= 1.0) then \"D+\" else\n        if (grades[i] >= 0.7) then \"D\" else\n        if (grades[i] >= 0.0) then \"D-\" else\n        \"E\"\n    ]",
    "    \"\"\"\n    \"\"\"\n    >>> numerical_letter_grade([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]",
    "    \"\"\"\n    The function takes a vector of floats and returns a vector of strings.\n    The strings are the numerical grades.\n    \"\"\"\n    \n    # Your code here\n    \n    return grades",
    "    \"\"\"\n    The function takes a vector of grades and returns a vector of letter grades.\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]",
    "    \n    # Your code here\n    \n    return grades",
    "    # Your code here\n    \n    # Your code here\n    return grades\n    \n    \ndef grade_equation(grades::Vector{Float64})::Vector{String} \n    # Your code here\n    \n    # Your code here\n    return grades\n",
    "    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]",
    "    # Your code here\n    return",
    "    \n    # Create a table with the letter grades and the GPA\n    letter_grades = [\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"E\"]\n    \n    # Create a table with the GPA and the letter grade\n    gpa_letter_grades = zip(grades, letter_grades)\n    \n    # Sort the table by GPA\n    gpa_letter_grades.sort(key=lambda x: x[0])\n    \n    # Create a new table with the letter grades and the GPA\n    new_gpa_letter_grades = []\n    \n    # Iterate over the sorted table\n    for i in range(len(gpa_letter_grades)):\n        \n        # Get the GPA and the letter grade\n        gpa = gpa_letter_grades[i][0]\n        letter_grade = gpa_letter_grades[i][1]\n        \n        # If the GPA is greater than or equal to 4.0, the letter grade is A+\n        if gpa >= 4.0:\n            new_gpa_letter_grades.append(letter_grade)\n        \n        # If the GPA is greater than or equal to 3.7, the letter grade is A\n        elif gpa >= 3.7:\n            new_gpa_letter_grades.append(letter_grade)\n        \n        # If the GPA is greater than or equal to 3.3, the letter grade is A-\n        elif gpa >= 3.3:\n            new_gpa_letter_grades.append(letter_grade)\n        \n        # If the GPA is greater than or equal to 3.0, the letter grade is B+\n        elif gpa >= 3.0:\n            new_gpa_letter_grades.append(letter_grade)\n        \n        # If the GPA is greater than or equal to 2.7, the letter grade is B\n        elif gpa >= 2.7:\n            new_gpa_letter_grades.append(letter_grade)\n        \n        # If the GPA is greater than or equal to 2.3, the letter grade is B-\n",
    "    return\n    \n    # Your code here\n    \n    return\n    \n    \ndef grade_equation(grades::Vector{Float64})::Vector{String} \n    return numerical_letter_grade(grades)\n    \n    \nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()\n",
    "    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]\n",
    "    \"\"\"\n    The function takes in a vector of numeric grades and returns a vector of \n    letter grades. The grades are given in the following table:\n             GPA       |    Letter grade\n              4.0                A+\n            > 3.7                A \n            > 3.3                A- \n            > 3.0                B+\n            > 2.7                B \n            > 2.3                B-\n            > 2.0                C+\n            > 1.7                C\n            > 1.3                C-\n            > 1.0                D+ \n            > 0.7                D \n            > 0.0                D-\n              0.0                E\n    \n    The function should return a vector of letter grades.\n    \"\"\"\n    \n    # Your code here\n    return grades\n",
    "    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n",
    "    \"\"\"\n    The function takes a vector of numeric grades and returns a vector of \n    letter grades.\n    \"\"\"\n    \n    # Your code here\n    \n    return grades",
    "    # Your code here\n    return\n",
    "    \"\"\"\n    The function should return a vector of strings that represents the letter grades\n    for the given vector of grades. The grades are given as a vector of floats.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order as the students.\n    The grades are not necessarily in the same order",
    "    # Your code here\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]\n",
    "    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]\n",
    "    \"\"\"\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]",
    "    # Your code here\n    grades = sorted(grades)\n    grades = [str(round(g, 2)) for g in grades]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n",
    "    \"\"\"\n    The function takes a vector of numeric grades and returns a vector of \n    letter grades. The grades are given in the following order:\n        GPA       |    Letter grade\n              4.0                A+\n            > 3.7                A \n            > 3.3                A- \n            > 3.0                B+\n            > 2.7                B \n            > 2.3                B-\n            > 2.0                C+\n            > 1.7                C\n            > 1.3                C-\n            > 1.0                D+ \n            > 0.7                D \n            > 0.0                D-\n              0.0                E\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.0 else\n        \"E\" if grades[i] == 0.0 else\n        \"F\"\n    ]\n",
    "    # Your code here\n    return grades.map(lambda x: \"A+\" if x >= 4.0 else \"A\" if x >= 3.7 else \"A-\" if x >= 3.3 else \"B+\" if x >= 3.0 else \"B\" if x >= 2.7 else \"B-\" if x >= 2.3 else \"C+\" if x >= 2.0 else \"C\" if x >= 1.7 else \"C-\" if x >= 1.3 else \"D+\" if x >= 1.0 else \"D\" if x >= 0.7 else \"D-\" if x >= 0.0 else \"E\")\n",
    "    # Your code here\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]\n",
    "    # Your code here\n    return",
    "    # Your code here\n    \n    # Your code here\n    \n    return grades\n",
    "    return\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
    "    # Your code here\n    return",
    "    # Your code here\n    return",
    "    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n",
    "    # Your code here\n    \n    # Your code here\n    \n    return grades",
    "    return [\n        if (grades[i] >= 4.0) then \"A+\" else\n        if (grades[i] >= 3.7) then \"A\" else\n        if (grades[i] >= 3.3) then \"A-\" else\n        if (grades[i] >= 3.0) then \"B+\" else\n        if (grades[i] >= 2.7) then \"B\" else\n        if (grades[i] >= 2.3) then \"B-\" else\n        if (grades[i] >= 2.0) then \"C+\" else\n        if (grades[i] >= 1.7) then \"C\" else\n        if (grades[i] >= 1.3) then \"C-\" else\n        if (grades[i] >= 1.0) then \"D+\" else\n        if (grades[i] >= 0.7) then \"D\" else\n        if (grades[i] >= 0.0) then \"D-\" else\n        \"E\"\n    ]",
    "    # Your code here\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]\n",
    "    \"\"\"\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n        for i in range(len(grades))\n    ]\n",
    "    # TODO: Implement the function\n    \n    # Your code here\n    \n    return grades\n",
    "    return\n    \n    # Your code here\n    \n    return",
    "    return\n    \n    # Your code here\n    \n    return",
    "    return [\n        if (grades[i] >= 4.0) then \"A+\" else\n        if (grades[i] >= 3.7) then \"A\" else\n        if (grades[i] >= 3.3) then \"A-\" else\n        if (grades[i] >= 3.0) then \"B+\" else\n        if (grades[i] >= 2.7) then \"B\" else\n        if (grades[i] >= 2.3) then \"B-\" else\n        if (grades[i] >= 2.0) then \"C+\" else\n        if (grades[i] >= 1.7) then \"C\" else\n        if (grades[i] >= 1.3) then \"C-\" else\n        if (grades[i] >= 1.0) then \"D+\" else\n        if (grades[i] >= 0.7) then \"D\" else\n        if (grades[i] >= 0.0) then \"D-\" else\n        \"E\"\n    ]\n",
    "    \"\"\"\n    Letters are: A+, A, A-, B+, B, B-, C+, C, C-, D+, D, D-, E\n    \"\"\"\n    \n    # Your code here\n    \n    return grades",
    "    # Your code here\n    return grades",
    "    # Your code here\n    return grades.map(lambda x: \"A+\" if x >= 4.0 else \"A\" if x >= 3.7 else \"A-\" if x >= 3.3 else \"B+\" if x >= 3.0 else \"B\" if x >= 2.7 else \"B-\" if x >= 2.3 else \"C+\" if x >= 2.0 else \"C\" if x >= 1.7 else \"C-\" if x >= 1.3 else \"D+\" if x >= 1.0 else \"D\" if x >= 0.7 else \"D-\" if x >= 0.0 else \"E\" if x == 0.0 else \"E\")\n",
    "    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n",
    "    return\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
    "    # Your code here\n    \n    # Your code here\n    return grades",
    "    # Your code here\n    return",
    "    # Your code here\n    \n    # Your code here\n    return grades",
    "    # Your code here\n    return",
    "    # Your code here\n    \n    return grades\n",
    "    # Your code here\n    \n    # Your code here\n    return grades",
    "    \"\"\"\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n        for i in range(len(grades))\n    ]\n",
    "    # Your code here\n    \n    return grades",
    "    return [\n        if (grades[i] >= 4.0) then \"A+\" else\n        if (grades[i] >= 3.7) then \"A\" else\n        if (grades[i] >= 3.3) then \"A-\" else\n        if (grades[i] >= 3.0) then \"B+\" else\n        if (grades[i] >= 2.7) then \"B\" else\n        if (grades[i] >= 2.3) then \"B-\" else\n        if (grades[i] >= 2.0) then \"C+\" else\n        if (grades[i] >= 1.7) then \"C\" else\n        if (grades[i] >= 1.3) then \"C-\" else\n        if (grades[i] >= 1.0) then \"D+\" else\n        if (grades[i] >= 0.7) then \"D\" else\n        if (grades[i] >= 0.0) then \"D-\" else\n        \"E\"\n    ]\n",
    "    \"\"\"\n    Letters are:\n        A+, A, A-, B+, B, B-, C+, C, C-, D+, D, D-, E\n    \"\"\"\n    # Your code here\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] < 0.3 else\n        \"N/A\"\n        for i in range(len(grades))\n    ]\n",
    "    # Your code here\n    \n    # Your code here\n    \n    return grades",
    "    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n",
    "    \"\"\"\n    The function takes a vector of numeric grades and returns a vector of \n    letter grades.\n    \"\"\"\n    # Your code here\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]\n",
    "    return\n    \n    # Your code here\n    \n    return\n    \n    \ndef grade_equation(grades::Vector{Float64})::Vector{String} \n    return numerical_letter_grade(grades)\n    \n    \nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()\n",
    "    # Your code here\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]\n",
    "    \"\"\"\n    The function takes a vector of numeric grades and returns a vector of letter grades.\n    \"\"\"\n    \n    # Your code here\n    \n    return grades\n    \ndef grade_equation(grades::Vector{Float64})::Vector{String} \n    \"\"\"\n    The function takes a vector of numeric grades and returns a vector of letter grades.\n    \"\"\"\n    \n    # Your code here\n    \n    return grades\n",
    "    \"\"\"\n    This function takes a vector of numeric grades and returns a vector of \n    letter grades.\n    \"\"\"\n    # Your code here\n    return [\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"E\"]\n",
    "    return [\n        if (grades[i] >= 4.0) then \"A+\" else\n        if (grades[i] >= 3.7) then \"A\" else\n        if (grades[i] >= 3.3) then \"A-\" else\n        if (grades[i] >= 3.0) then \"B+\" else\n        if (grades[i] >= 2.7) then \"B\" else\n        if (grades[i] >= 2.3) then \"B-\" else\n        if (grades[i] >= 2.0) then \"C+\" else\n        if (grades[i] >= 1.7) then \"C\" else\n        if (grades[i] >= 1.3) then \"C-\" else\n        if (grades[i] >= 1.0) then \"D+\" else\n        if (grades[i] >= 0.7) then \"D\" else\n        if (grades[i] >= 0.0) then \"D-\" else\n        \"E\"\n    ]",
    "    \"\"\"\n    The function should return a vector of letter grades.\n    \n    The grades are given as a vector of floats.\n    \n    The function should return a vector of strings.\n    \n    The vector should be of the same length as the input vector.\n    \n    The function should use the following table to convert the grades to \n    letter grades:\n    \n    GPA       |    Letter grade\n              4.0                A+\n            > 3.7                A \n            > 3.3                A- \n            > 3.0                B+\n            > 2.7                B \n            > 2.3                B-\n            > 2.0                C+\n            > 1.7                C\n            > 1.3                C-\n            > 1.0                D+ \n            > 0.7                D \n            > 0.0                D-\n              0.0                E\n    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.0 else\n        \"E\" if grades[i] == 0.0 else\n        \"N/A\"\n        for i in range(len(grades))\n    ]",
    "    \"\"\"\n    The function should return a vector of letter grades for the given vector of\n    GPA. The grades should be in the following order:\n        GPA       |    Letter grade\n            4.0                A+\n            > 3.7                A \n            > 3.3                A- \n            > 3.0                B+\n            > 2.7                B \n            > 2.3                B-\n            > 2.0                C+\n            > 1.7                C\n            > 1.3                C-\n            > 1.0                D+ \n            > 0.7                D \n            > 0.0                D-\n            0.0                E\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"E\"\n        for i in range(len(grades))\n    ]",
    "    return\n    \n    # Your code here\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
    "    # Your code here\n    return grades.map(lambda x: \"A+\" if x >= 4.0 else \"A\" if x >= 3.7 else \"A-\" if x >= 3.3 else \"B+\" if x >= 3.0 else \"B\" if x >= 2.7 else \"B-\" if x >= 2.3 else \"C+\" if x >= 2.0 else \"C\" if x >= 1.7 else \"C-\" if x >= 1.3 else \"D+\" if x >= 1.0 else \"D\" if x >= 0.7 else \"D-\" if x >= 0.0 else \"E\" if x >= 0.0 else \"E\")\n",
    "    # Your code here\n    \n    # Your code here\n    \n    return grades",
    "    \"\"\"\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]",
    "    # Your code here\n    \n    # Your code here\n    return grades\n    \n    \ndef grade_equation(grades::Vector{Float64})::Vector{String} \n    # Your code here\n    \n    # Your code here\n    return grades\n    \n    \nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()\n",
    "    \"\"\"\n    The function should return a vector of strings that represent the letter grades.\n    The grades are given in a vector of floats.\n    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]",
    "    \"\"\"\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] == 0.0 else\n        \"F\"\n        for i in range(len(grades))\n    ]",
    "    # Your code here\n    \n    # Your code here\n    \n    return grades",
    "    # Your code here\n    return grades.map(lambda x: \"A+\" if x >= 4.0 else \"A\" if x >= 3.7 else \"A-\" if x >= 3.3 else \"B+\" if x >= 3.0 else \"B\" if x >= 2.7 else \"B-\" if x >= 2.3 else \"C+\" if x >= 2.0 else \"C\" if x >= 1.7 else \"C-\" if x >= 1.3 else \"D+\" if x >= 1.0 else \"D\" if x >= 0.7 else \"D-\" if x >= 0.0 else \"E\" if x >= 0.0 else \"E\")\n",
    "    return [\n        if (grades[i] >= 4.0) then \"A+\" else\n        if (grades[i] >= 3.7) then \"A\" else\n        if (grades[i] >= 3.3) then \"A-\" else\n        if (grades[i] >= 3.0) then \"B+\" else\n        if (grades[i] >= 2.7) then \"B\" else\n        if (grades[i] >= 2.3) then \"B-\" else\n        if (grades[i] >= 2.0) then \"C+\" else\n        if (grades[i] >= 1.7) then \"C\" else\n        if (grades[i] >= 1.3) then \"C-\" else\n        if (grades[i] >= 1.0) then \"D+\" else\n        if (grades[i] >= 0.7) then \"D\" else\n        if (grades[i] >= 0.0) then \"D-\" else\n        \"E\"\n        ]",
    "    \"\"\"\n    The function takes a vector of floats and returns a vector of strings.\n    The strings are the letter grades.\n    \"\"\"\n    \n    # Your code here\n    \n    return grades",
    "    \"\"\"\n    \"\"\"\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"N/A\"\n        for i in range(len(grades))\n    ]",
    "    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]\n",
    "    \"\"\"\n    The function should return a vector of strings with the letter grades.\n    The grades are given as a vector of floats.\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]\n",
    "    \"\"\"\n    The function should return a vector of strings. Each string should be a \n    letter grade. The grades should be in the following order:\n    A+, A, A-, B+, B, B-, C+, C, C-, D+, D, D-, E\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"N/A\"\n    ]\n",
    "    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]\n",
    "    # Your code here\n    grades = sorted(grades)\n    if grades[0] < 3.7:\n        return [\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"E\"]\n    else:\n        return [\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"E\"]\n",
    "    return [\n        if (grades[i] >= 4.0) then \"A+\" else\n        if (grades[i] >= 3.7) then \"A\" else\n        if (grades[i] >= 3.3) then \"A-\" else\n        if (grades[i] >= 3.0) then \"B+\" else\n        if (grades[i] >= 2.7) then \"B\" else\n        if (grades[i] >= 2.3) then \"B-\" else\n        if (grades[i] >= 2.0) then \"C+\" else\n        if (grades[i] >= 1.7) then \"C\" else\n        if (grades[i] >= 1.3) then \"C-\" else\n        if (grades[i] >= 1.0) then \"D+\" else\n        if (grades[i] >= 0.7) then \"D\" else\n        if (grades[i] >= 0.0) then \"D-\" else\n        \"E\"\n    ]",
    "    # Your code here\n    return",
    "    return [\n        if (grades[i] >= 4.0) then \"A+\" else\n        if (grades[i] >= 3.7) then \"A\" else\n        if (grades[i] >= 3.3) then \"A-\" else\n        if (grades[i] >= 3.0) then \"B+\" else\n        if (grades[i] >= 2.7) then \"B\" else\n        if (grades[i] >= 2.3) then \"B-\" else\n        if (grades[i] >= 2.0) then \"C+\" else\n        if (grades[i] >= 1.7) then \"C\" else\n        if (grades[i] >= 1.3) then \"C-\" else\n        if (grades[i] >= 1.0) then \"D+\" else\n        if (grades[i] >= 0.7) then \"D\" else\n        if (grades[i] >= 0.0) then \"D-\" else\n        \"E\"\n        ]",
    "    return\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
    "    # Your code here\n    return grades.map(lambda x: \"A+\" if x >= 4.0 else \"A\" if x >= 3.7 else \"A-\" if x >= 3.3 else \"B+\" if x >= 3.0 else \"B\" if x >= 2.7 else \"B-\" if x >= 2.3 else \"C+\" if x >= 2.0 else \"C\" if x >= 1.7 else \"C-\" if x >= 1.3 else \"D+\" if x >= 1.0 else \"D\" if x >= 0.7 else \"D-\" if x >= 0.0 else \"E\" if x == 0.0 else \"E\")\n",
    "    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]",
    "    return\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
    "    return [\n        if(grades[i] >= 4.0) then \"A+\" else\n        if(grades[i] >= 3.7) then \"A\" else\n        if(grades[i] >= 3.3) then \"A-\" else\n        if(grades[i] >= 3.0) then \"B+\" else\n        if(grades[i] >= 2.7) then \"B\" else\n        if(grades[i] >= 2.3) then \"B-\" else\n        if(grades[i] >= 2.0) then \"C+\" else\n        if(grades[i] >= 1.7) then \"C\" else\n        if(grades[i] >= 1.3) then \"C-\" else\n        if(grades[i] >= 1.0) then \"D+\" else\n        if(grades[i] >= 0.7) then \"D\" else\n        if(grades[i] >= 0.0) then \"D-\" else\n        \"E\"\n    ]",
    "    \"\"\"\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n        for i in range(len(grades))\n    ]\n",
    "    \"\"\"\n    The function should return a vector of letter grades using the following table:\n             GPA       |    Letter grade\n              4.0                A+\n            > 3.7                A \n            > 3.3                A- \n            > 3.0                B+\n            > 2.7                B \n            > 2.3                B-\n            > 2.0                C+\n            > 1.7                C\n            > 1.3                C-\n            > 1.0                D+ \n            > 0.7                D \n            > 0.0                D-\n              0.0                E\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.0 else\n        \"E\" if grades[i] >= 0.0 else\n        \"E\"\n        for i in range(len(grades))\n    ]\n",
    "    return [\n        if (grades[i] >= 4.0) then \"A+\" else\n        if (grades[i] >= 3.7) then \"A\" else\n        if (grades[i] >= 3.3) then \"A-\" else\n        if (grades[i] >= 3.0) then \"B+\" else\n        if (grades[i] >= 2.7) then \"B\" else\n        if (grades[i] >= 2.3) then \"B-\" else\n        if (grades[i] >= 2.0) then \"C+\" else\n        if (grades[i] >= 1.7) then \"C\" else\n        if (grades[i] >= 1.3) then \"C-\" else\n        if (grades[i] >= 1.0) then \"D+\" else\n        if (grades[i] >= 0.7) then \"D\" else\n        if (grades[i] >= 0.0) then \"D-\" else\n        \"E\"\n    ]\n",
    "    return\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
    "    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n",
    "    \"\"\"\n    :param grades: A vector of numeric grades.\n    :return: A vector of letter grades.\n    \"\"\"\n    # Your code here\n    pass",
    "    # Your code here\n    return grades",
    "    # Your code here\n    return grades",
    "    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]\n",
    "    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]",
    "    \"\"\"\n    The function takes a vector of numeric grades and returns a vector of letter grades.\n    \"\"\"\n    return",
    "    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n",
    "    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]",
    "    return [\n        if (grades[i] >= 4.0) then \"A+\" else\n        if (grades[i] >= 3.7) then \"A\" else\n        if (grades[i] >= 3.3) then \"A-\" else\n        if (grades[i] >= 3.0) then \"B+\" else\n        if (grades[i] >= 2.7) then \"B\" else\n        if (grades[i] >= 2.3) then \"B-\" else\n        if (grades[i] >= 2.0) then \"C+\" else\n        if (grades[i] >= 1.7) then \"C\" else\n        if (grades[i] >= 1.3) then \"C-\" else\n        if (grades[i] >= 1.0) then \"D+\" else\n        if (grades[i] >= 0.7) then \"D\" else\n        if (grades[i] >= 0.0) then \"D-\" else\n        \"E\"\n    ]",
    "    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n",
    "    \"\"\"\n    The function takes a vector of numeric grades and returns a vector of \n    letter grades.\n    \"\"\"\n    # Your code here\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] == 0.0 else\n        \"N/A\"\n        for i in range(len(grades))\n    ]\n",
    "    \"\"\"\n    The function takes a vector of grades and returns a vector of letter grades.\n    The function should use the following table to convert the GPA to a letter grade:\n    \n    GPA       |    Letter grade\n              4.0                A+\n            > 3.7                A \n            > 3.3                A- \n            > 3.0                B+\n            > 2.7                B \n            > 2.3                B-\n            > 2.0                C+\n            > 1.7                C\n            > 1.3                C-\n            > 1.0                D+ \n            > 0.7                D \n            > 0.0                D-\n              0.0                E\n    \n    The function should return a vector of letter grades.\n    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\n    \n    # Your code here\n    \n    return grades\n",
    "    # TODO: implement your function\n    return",
    "    # Your code here\n    grades = sorted(grades, reverse=True)\n    grades = [str(round(g, 2)) for g in grades]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g != \"\"]\n    grades = [g for g in grades if g",
    "    # Your code here\n    return grades.map(lambda x: \"A+\" if x > 3.7 else \"A\" if x > 3.3 else \"A-\" if x > 2.7 else \"B+\" if x > 2.3 else \"B\" if x > 2.0 else \"C+\" if x > 1.7 else \"C\" if x > 1.3 else \"C-\" if x > 1.0 else \"D+\" if x > 0.7 else \"D\" if x > 0.3 else \"D-\" if x > 0.0 else \"E\" if x > -0.3 else \"E\" if x > -0.7 else \"E\" if x > -1.3 else \"E\" if x > -1.7 else \"E\" if x > -2.3 else \"E\" if x > -2.7 else \"E\" if x > -3.3 else \"E\" if x > -3.7 else \"E\" if x > -4.0 else \"E\")\n",
    "    \"\"\"\n    Returns a vector of letter grades for the given vector of numeric grades.\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]",
    "    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]",
    "    # Your code here\n    \n    # Your code here\n    \n    return grades",
    "    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n",
    "    # Your code here\n    return grades",
    "    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n",
    "    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]",
    "    \"\"\"\n    The function should return a vector of letter grades using the following table:\n             GPA       |    Letter grade\n              4.0                A+\n            > 3.7                A \n            > 3.3                A- \n            > 3.0                B+\n            > 2.7                B \n            > 2.3                B-\n            > 2.0                C+\n            > 1.7                C\n            > 1.3                C-\n            > 1.0                D+ \n            > 0.7                D \n            > 0.0                D-\n              0.0                E\n    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.0 else\n        \"E\" if grades[i] == 0.0 else\n        \"N/A\"\n        for i in range(len(grades))\n    ]\n",
    "    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n    ]\n",
    "    # Your code here\n    return grades\n",
    "    # Your code here\n    return [\n        'A+' if grades[i] >= 4.0 else\n        'A' if grades[i] >= 3.7 else\n        'A-' if grades[i] >= 3.3 else\n        'B+' if grades[i] >= 3.0 else\n        'B' if grades[i] >= 2.7 else\n        'B-' if grades[i] >= 2.3 else\n        'C+' if grades[i] >= 2.0 else\n        'C' if grades[i] >= 1.7 else\n        'C-' if grades[i] >= 1.3 else\n        'D+' if grades[i] >= 1.0 else\n        'D' if grades[i] >= 0.7 else\n        'D-' if grades[i] >= 0.3 else\n        'E' if grades[i] >= 0.0 else\n        'F'\n    ]\n",
    "    \"\"\"\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\n    return [\n        \"A+\" if grades[i] >= 4.0 else\n        \"A\" if grades[i] >= 3.7 else\n        \"A-\" if grades[i] >= 3.3 else\n        \"B+\" if grades[i] >= 3.0 else\n        \"B\" if grades[i] >= 2.7 else\n        \"B-\" if grades[i] >= 2.3 else\n        \"C+\" if grades[i] >= 2.0 else\n        \"C\" if grades[i] >= 1.7 else\n        \"C-\" if grades[i] >= 1.3 else\n        \"D+\" if grades[i] >= 1.0 else\n        \"D\" if grades[i] >= 0.7 else\n        \"D-\" if grades[i] >= 0.3 else\n        \"E\" if grades[i] >= 0.0 else\n        \"F\"\n        for i in range(len(grades))\n    ]",
    "    # Your code here\n    return grades.map(lambda x: \"A+\" if x > 4.0 else \"A\" if x > 3.7 else \"A-\" if x > 3.3 else \"B+\" if x > 3.0 else \"B\" if x > 2.7 else \"B-\" if x > 2.3 else \"C+\" if x > 2.0 else \"C\" if x > 1.7 else \"C-\" if x > 1.3 else \"D+\" if x > 1.0 else \"D\" if x > 0.7 else \"D-\" if x > 0.0 else \"E\" if x > 0.0 else \"E\")\n",
    "    # Your code here\n    \n    # Your code here\n    \n    return grades",
    "    # Check if the input is a vector\n    if not isinstance(grades, Vector):\n        raise TypeError(\"The input must be a vector\")\n    # Check if the input is a vector of floats\n    if not all(isinstance(grade, float) for grade in grades):\n        raise TypeError(\"The input must be a vector of floats\")\n    # Check if the input is a vector of floats with at least one element\n    if len(grades) == 0:\n        raise ValueError(\"The input must be a vector with at least one element\")\n    # Check if the input is a vector of floats with at least two elements\n    if len(grades) == 1:\n        raise ValueError(\"The input must be a vector with at least two elements\")\n    # Check if the input is a vector of floats with at least three elements\n    if len(grades) == 2:\n        raise ValueError(\"The input must be a vector with at least three elements\")\n    # Check if the input is a vector of floats with at least four elements\n    if len(grades) == 3:\n        raise ValueError(\"The input must be a vector with at least four elements\")\n    # Check if the input is a vector of floats with at least five elements\n    if len(grades) == 4:\n        raise ValueError(\"The input must be a vector with at least five elements\")\n    # Check if the input is a vector of floats with at least six elements\n    if len(grades) == 5:\n        raise ValueError(\"The input must be a vector with at least six elements\")\n    # Check if the input is a vector of floats with at least seven elements\n    if len(grades) == 6:\n        raise ValueError(\"The input must be a vector with at least seven elements\")\n    # Check if the input is a vector of floats with at least eight elements\n    if len(grades) == 7:\n        raise ValueError(\"The input must be a vector with at least eight elements\")\n    # Check if the input is a vector of floats with at least nine elements\n    if len(grades) == 8:\n        raise ValueError(\"The input must be a vector with at least nine elements\")\n    # Check if the input is a vector of floats with at least ten elements\n    if len(grades) == 9:\n        ",
    "    # Your code here\n    \n    # Your code here\n    return grades\n    \ndef grade_equation(grades::Vector{Float64})::Vector{String} \n    # Your code here\n    \n    # Your code here\n    return grades",
    "    # Your code here\n    \n    # Your code here\n    return\n",
    "    # Your code here\n    return grades.map(lambda x: \"A+\" if x >= 4.0 else \"A\" if x >= 3.7 else \"A-\" if x >= 3.3 else \"B+\" if x >= 3.0 else \"B\" if x >= 2.7 else \"B-\" if x >= 2.3 else \"C+\" if x >= 2.0 else \"C\" if x >= 1.7 else \"C-\" if x >= 1.3 else \"D+\" if x >= 1.0 else \"D\" if x >= 0.7 else \"D-\" if x >= 0.3 else \"E\" if x >= 0.0 else \"E\")\n",
    "    \n    # Your code here\n    \n    return grades",
    "    # Your code here\n    return grades.map(lambda x: \"A+\" if x > 4.0 else \"A\" if x > 3.7 else \"A-\" if x > 3.3 else \"B+\" if x > 3.0 else \"B\" if x > 2.7 else \"B-\" if x > 2.3 else \"C+\" if x > 2.0 else \"C\" if x > 1.7 else \"C-\" if x > 1.3 else \"D+\" if x > 1.0 else \"D\" if x > 0.7 else \"D-\" if x > 0.0 else \"E\" if x > 0.0 else \"E\")\n",
    "    # Your code here\n    return",
    "    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n    # Your code here\n    \n"
  ],
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ]
}
{
  "name": "HumanEval_121_solution",
  "language": "jl",
  "prompt": "\"\"\"Given a non-empty vector of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    >>> solution([5, 8, 7, 1])\n    12\n    >>> solution([3, 3, 3, 3, 3])\n    9\n    >>> solution([30, 13, 24, 321])\n    0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n",
  "tests": "using Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n",
  "completions": [
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(lst[i] for i in range(len(lst)) if i % 2 == 0)\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(lst[i] for i in range(len(lst)) if i % 2 == 0)\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(lst[i] for i in range(len(lst)) if i % 2 == 0)\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    if len(lst) == 0:\n        return 0\n    \n    s = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            continue\n        s += lst[i]\n    return s\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    if len(lst) == 0:\n        return 0\n    \n    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            continue\n        sum += lst[i]\n    return sum\n",
    "    if len(lst) == 0:\n        return 0\n    \n    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            continue\n        sum += lst[i]\n    return sum\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    if len(lst) == 0:\n        return 0\n    \n    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            sum += lst[i]\n    return sum\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(lst[i] for i in range(len(lst)) if i % 2 == 0)\n",
    "    if len(lst) == 0:\n        return 0\n    \n    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            continue\n        sum += lst[i]\n    return sum\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    if len(lst) == 0:\n        return 0\n    \n    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            continue\n        sum += lst[i]\n    return sum\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(lst[i] for i in range(len(lst)) if i % 2 == 0)\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(lst[i] for i in range(len(lst)) if i % 2 == 0)\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    if len(lst) == 0:\n        return 0\n    return sum(lst[i] for i in range(len(lst)) if i % 2 == 0)\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    if len(lst) == 0:\n        return 0\n    \n    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            sum += lst[i]\n    return sum\n",
    "    if len(lst) == 0:\n        return 0\n    \n    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            sum += lst[i]\n    return sum\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(lst[i] for i in range(len(lst)) if i % 2 == 0)\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(lst[i] for i in range(len(lst)) if i % 2 == 0)\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(lst[i] for i in range(len(lst)) if i % 2 == 0)\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(lst[i] for i in range(len(lst)) if i % 2 == 0)\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(lst[i] for i in range(len(lst)) if i % 2 == 0)\n",
    "    if len(lst) == 0:\n        return 0\n    \n    return sum(lst[i] for i in range(len(lst)) if i % 2 == 0)\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    if len(lst) == 0:\n        return 0\n    \n    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            sum += lst[i]\n    return sum\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(lst[i] for i in range(len(lst)) if i % 2 == 0)\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(lst[i] for i in range(len(lst)) if i % 2 == 0)\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    if len(lst) == 0:\n        return 0\n    \n    sum = 0\n    for i in range(0, len(lst), 2):\n        sum += lst[i]\n    return sum\n",
    "    if len(lst) == 0:\n        return 0\n    \n    s = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            continue\n        s += lst[i]\n    return s\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    if len(lst) == 0:\n        return 0\n    \n    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            sum += lst[i]\n    return sum\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    if len(lst) == 0:\n        return 0\n    \n    sum = 0\n    for i in range(0, len(lst), 2):\n        sum += lst[i]\n    return sum\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    if len(lst) == 0:\n        return 0\n    \n    return sum(lst[i] for i in range(len(lst)) if i % 2 == 0)\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    if len(lst) == 0:\n        return 0\n    \n    return sum(lst[i] for i in range(len(lst)) if i % 2 == 0)\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    if len(lst) == 0:\n        return 0\n    \n    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            continue\n        sum += lst[i]\n    return sum\n",
    "    return sum(lst[i] for i in range(len(lst)) if i % 2 == 0)\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    if len(lst) == 0:\n        return 0\n    \n    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            continue\n        sum += lst[i]\n    return sum\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    if len(lst) == 0:\n        return 0\n    \n    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            continue\n        sum += lst[i]\n    return sum\n",
    "    if len(lst) == 0:\n        return 0\n    \n    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            continue\n        sum += lst[i]\n    return sum\n",
    "    if len(lst) == 0:\n        return 0\n    \n    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            continue\n        sum += lst[i]\n    return sum\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    if len(lst) == 0:\n        return 0\n    \n    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            continue\n        sum += lst[i]\n    return sum\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    if len(lst) == 0:\n        return 0\n    \n    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            sum += lst[i]\n    return sum\n",
    "    if len(lst) == 0:\n        return 0\n    \n    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            continue\n        sum += lst[i]\n    return sum\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    if len(lst) == 0:\n        return 0\n    return sum(lst[i] for i in range(len(lst)) if i % 2 == 0)\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1 and x % 2 != 0, lst))\n",
    "    return sum(filter(lambda x: x % 2 == 1, lst))\n",
    "    return sum(lst[i] for i in range(len(lst)) if i % 2 == 0)\n",
    "    return sum(lst[i] for i in range(len(lst)) if i % 2 == 0)\n"
  ],
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ]
}
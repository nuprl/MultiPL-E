name: HumanEval_155_even_odd_count
language: d
results:
- program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    assert(num !=\
    \ 0, \"The input cannot be zero.\");\n    num = abs(num);\n    Tuple!(long, long)\
    \ counts = tuple(0, 0);\n    while (num > 0) {\n        if (num % 2 == 0) {\n\
    \            ++counts[0];\n        } else {\n            ++counts[1];\n      \
    \  }\n        num /= 10;\n    }\n    return counts;\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp80eac2ll.d(13): The input cannot be\
    \ zero.\\n----------------\\n??:? _d_assert_msg [0x4294be]\\n??:? std.typecons.Tuple!(long,\
    \ long).Tuple tmp80eac2ll.even_odd_count(long) [0x428533]\\n??:? void tmp80eac2ll.__unittest_L26_C1()\
    \ [0x428801]\\n??:? void tmp80eac2ll.__modtest() [0x428f3c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42df4f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42ce5e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x431785]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x431c34]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x431711]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42ce35]\\n??:? runModuleUnitTests [0x42dd25]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4299f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42997b]\\n??:? _d_run_main [0x4298e6]\\n??:? main [0x428f4f]\\\
    n??:? __libc_start_main [0x94f03554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long)\
    \ tp = tuple(0, 0);\n    while(num)\n    {\n        if(abs(num % 10) % 2 == 0)\n\
    \            tp[0]++;\n        else\n            tp[1]++;\n        num /= 10;\n\
    \    }\n    return tp;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp33zrihdq.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42946d]\\n??:? void tmp33zrihdq.__unittest_L24_C1()\
    \ [0x4287da]\\n??:? void tmp33zrihdq.__modtest() [0x428ed8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42de17]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42cd26]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43164d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x431afc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4315d9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42ccfd]\\n??:? runModuleUnitTests [0x42dbed]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4298bc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x429843]\\n??:? _d_run_main [0x4297ae]\\n??:? main [0x428eeb]\\\
    n??:? __libc_start_main [0xe984a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    auto num_digits\
    \ = num.abs.to!string.length;\n    long even_digits = 0, odd_digits = 0;\n   \
    \ foreach(i; 0..num_digits)\n    {\n        if (num.abs.to!string[i].to!long %\
    \ 2 == 0)\n            even_digits++;\n        else\n            odd_digits++;\n\
    \    }\n    return tuple(even_digits, odd_digits);\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp69zhg9y1.d(13): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp69zhg9y1.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    num = abs(num);\n    while(num > 0)\n    {\n        if(num\
    \ % 2 == 0)\n            even++;\n        else\n            odd++;\n        num\
    \ /= 10;\n    }\n    return tuple(even, odd);\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkrgaakvg.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428bc5]\\n??:? void tmpkrgaakvg.__unittest_L26_C1()\
    \ [0x428286]\\n??:? void tmpkrgaakvg.__modtest() [0x428630]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42d4f3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42c402]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430d29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4311d8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430cb5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42c3d9]\\n??:? runModuleUnitTests [0x42d2c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x429014]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428f9b]\\n??:? _d_run_main [0x428f06]\\n??:? main [0x428643]\\\
    n??:? __libc_start_main [0xd5a40554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n  // the number of\
    \ even, odd digits\n  auto tup = tuple(0L, 0L);\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpooh663hq.d(15): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpooh663hq.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    auto evenCount\
    \ = 0L;\n    auto oddCount = 0L;\n    foreach(digit; num.digits()) \n    {\n \
    \       if (digit % 2 == 0) evenCount++;\n        else oddCount++;\n    }\n  \
    \  return tuple(evenCount, oddCount);\n}\n \n/*\nGiven an array of integers. Return\
    \ the array of number of even and odd digits respectively.\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplpn2ojx9.d(23): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplpn2ojx9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    enum evenDigits\
    \ = 0;\n    enum oddDigits = 0;\n    foreach(char c; num.to!string())\n    {\n\
    \        if(c.to!int % 2 == 0)\n            evenDigits++;\n        else\n    \
    \        oddDigits++;\n    }\n    return tuple(evenDigits, oddDigits);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp485fcebe.d(15): Error: no property `to` for type `long`\\n/tmp/tmp485fcebe.d(22):\
    \ Error: cannot implicitly convert expression `tuple(0, 0)` of type `Tuple!(int,\
    \ int)` to `Tuple!(long, long)`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp485fcebe.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while (num != 0) {\n        if ((num & 1) == 0) even++;\n    \
    \    else odd++;\n        num /= 10;\n    }\n    return tuple(even, odd);\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0nflffwx.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428b45]\\n??:? void tmp0nflffwx.__unittest_L21_C1()\
    \ [0x42821e]\\n??:? void tmp0nflffwx.__modtest() [0x4285b0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42d473]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42c382]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430ca9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x431158]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430c35]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42c359]\\n??:? runModuleUnitTests [0x42d249]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428f94]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428f1b]\\n??:? _d_run_main [0x428e86]\\n??:? main [0x4285c3]\\\
    n??:? __libc_start_main [0x5cb1a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tauto evens, odds;\n\
    \twhile (num)\n\t{\n\t\tif (num % 2 == 0)\n\t\t\tevens++;\n\t\telse\n\t\t\todds++;\n\
    \t\tnum /= 10;\n\t}\n\treturn tuple(evens, odds);\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnea7sioz.d(13): Error: no identifier for declarator `evens`\\\
    n/tmp/tmpnea7sioz.d(13): Error: found `,` instead of statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnea7sioz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n  long even_count\
    \ = 0;\n  long odd_count = 0;\n  long n = abs(num);\n  while(n != 0)\n  {\n  \
    \  long digit = n % 10;\n    if(digit % 2 == 0)\n    {\n      even_count++;\n\
    \    }\n    else\n    {\n      odd_count++;\n    }\n    n /= 10;\n  }\n  return\
    \ tuple(even_count, odd_count);\n}\n \n \nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3_paki4k.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428bcd]\\n??:? void tmp3_paki4k.__unittest_L33_C1()\
    \ [0x42828a]\\n??:? void tmp3_paki4k.__modtest() [0x428634]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42d4fb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42c40a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430d31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4311e0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430cbd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42c3e1]\\n??:? runModuleUnitTests [0x42d2d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42901c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428fa3]\\n??:? _d_run_main [0x428f0e]\\n??:? main [0x428647]\\\
    n??:? __libc_start_main [0xf4051554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\t  auto neg = sign(num);\n\
    \t  num = abs(num);\n\t  auto e = 0, o = 0;\n\t  foreach(digit; num.digits)\n\t\
    \  {\n\t\t  if(digit % 2 == 0)\n\t\t\t  e++;\n\t\t  else\n\t\t\t  o++;\n\t  }\n\
    \t  if(neg == -1)\n\t\t  return tuple(e, o);\n\t  else\n\t\t  return tuple(o,\
    \ e);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprjkgxtmi.d(13): Error: undefined identifier `sign`, did you mean\
    \ template `sgn(F)(F x)`?\\n/tmp/tmprjkgxtmi.d(16): Error: no property `digits`\
    \ for type `long`\\n/tmp/tmprjkgxtmi.d(24): Error: cannot implicitly convert expression\
    \ `tuple(e, o)` of type `Tuple!(int, int)` to `Tuple!(long, long)`\\n/tmp/tmprjkgxtmi.d(26):\
    \ Error: cannot implicitly convert expression `tuple(o, e)` of type `Tuple!(int,\
    \ int)` to `Tuple!(long, long)`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmprjkgxtmi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tsize_t even = 0;\n\
    \tsize_t odd = 0;\n\tnum = abs(num);\n\twhile(num != 0)\n\t{\n\t\tif(num % 2 ==\
    \ 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t\tnum /= 10;\n\t}\n\treturn tuple(even,\
    \ odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwyn9qata.d(24): Error: cannot implicitly convert expression `tuple(even,\
    \ odd)` of type `Tuple!(ulong, ulong)` to `Tuple!(long, long)`\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwyn9qata.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long)\
    \ result = tuple(0, 0);\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnconjnrw.d(14): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnconjnrw.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    auto count_digits\
    \ = (num &gt; 0 ? num : -num).stringof.length;\n    return tuple(count_digits/2,\
    \ ceil(count_digits/2));\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7h0n89_4.d(13): Error: found `;` when expecting `)`\\n/tmp/tmp7h0n89_4.d(13):\
    \ Error: semicolon expected following auto declaration, not `0`\\n/tmp/tmp7h0n89_4.d(13):\
    \ Error: found `)` when expecting `;` following statement\\nFailed: [\"dmd\",\
    \ \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7h0n89_4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    //Initialize the\
    \ return value\n    Tuple!(long, long) res;\n    res.length = 2;\n    //Base case\n\
    \    if (num == 0)\n    {\n        res.fields[0] = 0;\n        res.fields[1] =\
    \ 0;\n        return res;\n    }\n    //Recursive step\n    else\n    {\n    \
    \    if (num % 2 == 0)\n        {\n            res = even_odd_count(num / 10);\n\
    \            res.fields[0]++;\n            return res;\n        }\n        else\n\
    \        {\n            res = even_odd_count(num / 10);\n            res.fields[1]++;\n\
    \            return res;\n        }\n    }\n}\n/*\nGiven a list of integers. return\
    \ a list that has the sums of digits at even and odd indices respectively.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg032gznl.d(40): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg032gznl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even_count,\
    \ odd_count;\n    even_count = odd_count = 0;\n    foreach(c; to!string(num).dup)\n\
    \    {\n        if(isdigit(c))\n        {\n            long digit = c.integer;\n\
    \            if(digit % 2 == 0)\n                even_count++;\n            else\n\
    \                odd_count++;\n        }\n    }\n    return tuple(even_count,\
    \ odd_count);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsj6d2__b.d(15): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpsj6d2__b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    enum evenCount\
    \ = 0, oddCount = 0;\n    while(num != 0)\n    {\n        auto digit = num % 10;\n\
    \        if(digit % 2 == 0) evenCount++;\n        else oddCount++;\n        num\
    \ /= 10;\n    }\n    return tuple(evenCount, oddCount);\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu_6lj71f.d(17): Error: cannot modify constant `0`\\n/tmp/tmpu_6lj71f.d(18):\
    \ Error: cannot modify constant `0`\\n/tmp/tmpu_6lj71f.d(21): Error: cannot implicitly\
    \ convert expression `tuple(0, 0)` of type `Tuple!(int, int)` to `Tuple!(long,\
    \ long)`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_6lj71f.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    num = abs(num);\n    while(num>0) \n    {\n        if (num % 2\
    \ == 0) \n        {\n            even++;\n        }\n        else \n        {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return tuple(even,\
    \ odd);\n}\n/*\nGiven a string. return the longest prefix that is present at the\
    \ beginning of all the words in the string.\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphoum_rk8.d(29): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphoum_rk8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    Tuple!(long, long)\
    \ ans = tuple(0, 0);\n    while (num != 0) \n    {\n        if (num % 2 == 0)\
    \ \n        {\n            ans[0]++;\n        }\n        else \n        {\n  \
    \          ans[1]++;\n        }\n        num /= 10;\n    }\n    return ans;\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpz34qa04y.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x429415]\\n??:? void tmpz34qa04y.__unittest_L28_C1()\
    \ [0x42879a]\\n??:? void tmpz34qa04y.__modtest() [0x428e80]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ddbf]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42ccce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4315f5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x431aa4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x431581]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42cca5]\\n??:? runModuleUnitTests [0x42db95]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x429864]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4297eb]\\n??:? _d_run_main [0x429756]\\n??:? main [0x428e93]\\\
    n??:? __libc_start_main [0xecad8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n  long even_sum =\
    \ 0, odd_sum = 0;\n  if (num < 0) num = -num;\n  while (num > 0)\n  {\n    if\
    \ (num % 2 == 0)\n      even_sum++;\n    else\n      odd_sum++;\n    num /= 10;\n\
    \  }\n  return tuple(even_sum, odd_sum);\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprb3b4l9q.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428b65]\\n??:? void tmprb3b4l9q.__unittest_L25_C1()\
    \ [0x42823a]\\n??:? void tmprb3b4l9q.__modtest() [0x4285cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42d493]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42c3a2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430cc9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x431178]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430c55]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42c379]\\n??:? runModuleUnitTests [0x42d269]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428fb4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428f3b]\\n??:? _d_run_main [0x428ea6]\\n??:? main [0x4285df]\\\
    n??:? __libc_start_main [0x28372554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception

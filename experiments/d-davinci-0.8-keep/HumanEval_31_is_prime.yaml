name: HumanEval_31_is_prime
language: d
prompt: "import std.math;\n/*\nReturn true if a given number is prime, and false otherwise.\n\
  \    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
  \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n \
  \   >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \n*/\nbool is_prime(long\
  \ n) \n"
tests: "unittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
  \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n\
  \    assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n \
  \   assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L)\
  \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n\
  \    assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
  \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
completions: ["{\n    if (n < 2) return false;\n    if (n == 2) return true;\n   \
    \ if (n % 2 == 0) return false;\n    long max = cast(long) (sqrt(n) + 1);\n  \
    \  for (long i = 3; i < max; i += 2)\n    {\n        if (n % i == 0)\n       \
    \     return false;\n    }\n    return true;\n}", "{\n    if (n <= 1) \n     \
    \   return false;\n    if (n <= 3) \n        return true;\n    if (n % 2 == 0\
    \ || n % 3 == 0) \n        return false;\n    for (int i = 5; i * i <= n; i =\
    \ i + 6) \n        if (n % i == 0 || n % (i + 2) == 0) \n            return false;\n\
    \    return true;\n}\n/*\nModify the above function so that it is more efficient.\n\
    \    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \n*/", "{\n\
    \    if (n < 2)\n        return false;\n    if (n == 2)\n        return true;\n\
    \    if (!(n & 1))\n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        if (!(n % i))\n            return false;\n    return true;\n\
    }", "{\n    if (n <= 1) return false;\n    if (n <= 3) return true;\n    if (n\
    \ % 2 == 0 || n % 3 == 0) return false;\n    \n    for (long i = 5; i * i <= n;\
    \ i = i + 6)\n        if (n % i == 0 || n % (i + 2) == 0)\n            return\
    \ false;\n    \n    return true;\n}", "{\n\tbool prime = true;\n\tfor (int i =\
    \ 2; i < sqrt(n); i++)\n\t{\n\t\tif ((n % i) == 0)\n\t\t{\n\t\t\tprime = false;\n\
    \t\t\tbreak;\n\t\t}\n\t}\n\treturn prime;\n}", "{\n    if (n <= 1)\n    {\n  \
    \      return false;\n    }\n    else if (n < 4)\n    {\n        return true;\n\
    \    }\n    else if (n % 2 == 0)\n    {\n        return false;\n    }\n    else\
    \ if (n < 9)\n    {\n        return true;\n    }\n    else if (n % 3 == 0)\n \
    \   {\n        return false;\n    }\n    else\n    {\n        long r = (long)\
    \ (sqrt(n));\n        long f = 5;\n        while (f <= r)\n        {\n       \
    \     if (n % f == 0)\n            {\n                return false;\n        \
    \    }\n            if (n % (f + 2) == 0)\n            {\n                return\
    \ false;\n            }\n            f += 6;\n        }\n        return true;\n\
    \    }\n}", "{\n  // Note that this function is slow, not optimized and not correct\
    \ for some\n  // cases. However, it is sufficient for the purpose of these exercises.\n\
    \  if (n <= 1)\n      return false;\n  else if (n <= 3)\n      return true;\n\
    \  else if (n % 2 == 0 || n % 3 == 0)\n      return false;\n  else\n  {\n    \
    \  for (int i = 5; i <= sqrt(n); i += 6)\n      {\n          if (n % i == 0 ||\
    \ n % (i + 2) == 0)\n              return false;\n      }\n      return true;\n\
    \  }\n}", "{\n    for (long i = 2; i <= sqrt(n); i++) \n    {\n        if (n %\
    \ i == 0)\n            return false;\n    }\n    return true;\n}", "{\n    if\
    \ (n<=1)\n        return false;\n    else if (n <= 3)\n        return true;\n\
    \    else if (n%2 == 0 || n%3 == 0)\n        return false;\n    \n    long i =\
    \ 5;\n    while (i*i <= n)\n    {\n        if (n%i == 0 || n%(i+2) == 0)\n   \
    \         return false;\n        i += 6;\n    }\n    return true;\n}", "{\n  \
    \  if (n <= 1) return false;\n    if (n == 2) return true;\n    if (n % 2 == 0)\
    \ return false;\n    foreach (i; 2 .. min(n, sqrt(n) + 1))\n    {\n        if\
    \ (n % i == 0) return false;\n    }\n    return true;\n}", "{\n    if (n == 1)\
    \ \n    {\n        return false;\n    }\n    long s = sqrt(n);\n    for (long\
    \ i = 2; i <= s; i++) \n    {\n        if (n % i == 0) \n        {\n         \
    \   return false;\n        }\n    }\n    return true;\n}", "{\n    if (n == 2)\
    \ \n        return true;\n    if (n < 2 || n % 2 == 0) \n        return false;\n\
    \    for (long i = 3; i <= sqrt(n); i += 2) \n        if (n % i == 0) \n     \
    \       return false;\n    return true;\n}", "{\n    if (n == 1)\n    {\n    \
    \    return false;\n    }\n    if (n == 2)\n    {\n        return true;\n    }\n\
    \    long last = sqrt(n);\n    for (long i = 2; i <= last; i++)\n    {\n     \
    \   if (n % i == 0)\n        {\n            return false;\n        }\n    }\n\
    \    return true;\n}", "{\n    if (n <= 1)\n        return false;\n    if (n ==\
    \ 2)\n        return true;\n    if (n%2 == 0)\n        return false;\n    for\
    \ (long i = 3; i <= sqrt(n); i += 2)\n    {\n        if (n%i == 0)\n         \
    \   return false;\n    }\n    return true;\n}", "{\n    if (n <= 1)\n        return\
    \ false;\n    for (long i = 2; i < sqrt(n) + 1; i++)\n    {\n        if (n % i\
    \ == 0)\n            return false;\n    }\n    return true;\n}", "{\n    if (n\
    \ == 2)\n        return true;\n    if (n <= 1 || n % 2 == 0)\n        return false;\n\
    \    for (int i = 3; i <= sqrt(n); i += 2)\n        if (n % i == 0)\n        \
    \    return false;\n    return true;\n}", "{\n    // print(\"n %d\\n\", n);\n\
    \    if (n<2)\n    {\n        return false;\n    }\n    // else if (n==2)\n  \
    \  // {\n    //     return true;\n    // }\n    else if (n%2==0)\n    {\n    \
    \    return false;\n    }\n    else\n    {\n        long max = (long)sqrt(n);\n\
    \        for (long i=3; i<=max; i+=2)\n        {\n            if (n%i==0)\n  \
    \          {\n                return false;\n            }\n        }\n      \
    \  return true;\n    }\n}", "{\n  if (n == 1) return false;\n  if (n == 2) return\
    \ true;\n  if (n % 2 == 0) return false;\n  long m = long(sqrt(n));\n  for (long\
    \ i = 3; i <= m; i += 2) \n  {\n    if (n % i == 0) \n    {\n      return false;\n\
    \    }\n  }\n  return true;\n}", "{\n    if (n < 2)\n        return false;\n \
    \   for (long i = 2; i <= (long)sqrt(n); i++)\n    {\n        if (n % i == 0)\n\
    \            return false;\n    }\n    return true;\n}", "{\n    foreach (i; 2..(int)\
    \ sqrt(n) + 1)\n    {\n        if (n % i == 0)\n        {\n            return\
    \ false;\n        }\n    }\n    return true;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

name: HumanEval_161_solve
language: d
results:
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(mutable char c; s)\n    {\n        switch(c)\n        {\n       \
    \     case 'a'..'z':\n                c = to!char(c ^ 1<<5);\n               \
    \ break;\n            case 'A'..'Z':\n                c = to!char(c ^ 1<<5);\n\
    \                break;\n            default:\n                break;\n      \
    \  }\n        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi0r0p5zj.d(18): Error: no identifier for declarator `mutable`\\\
    n/tmp/tmpi0r0p5zj.d(18): Error: found `char` when expecting `;`\\n/tmp/tmpi0r0p5zj.d(18):\
    \ Error: found `;` when expecting `)`\\n/tmp/tmpi0r0p5zj.d(18): Error: found `)`\
    \ when expecting `;` following statement\\n/tmp/tmpi0r0p5zj.d(22): Error: found\
    \ `..` when expecting `:`\\n/tmp/tmpi0r0p5zj.d(22): Error: found `:` when expecting\
    \ `;` following statement\\n/tmp/tmpi0r0p5zj.d(25): Error: found `..` when expecting\
    \ `:`\\n/tmp/tmpi0r0p5zj.d(25): Error: found `:` when expecting `;` following\
    \ statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi0r0p5zj.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string res = \"\";\n \
    \   foreach(c; s)\n    {\n        res ~= isAlpha(c) ? to!string(c) == toUpper(c)\
    \ ? toLower(c) : toUpper(c) : c;\n    }\n    return res.length == 0 ? std.algorithm.reverse(s)\
    \ : res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpinli7iv1.d(20): Error: undefined identifier `isAlpha`\\n/tmp/tmpinli7iv1.d(20):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpinli7iv1.d(20): Error: undefined identifier `toUpper`\\n/tmp/tmpinli7iv1.d(20):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmpinli7iv1.d(20): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpinli7iv1.d(22): Error: undefined identifier `algorithm`\
    \ in package `std`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpinli7iv1.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(i; 0 .. s.length)\n    {\n        if(std.uni.isAlpha(s[i]))\n   \
    \     {\n            if(s[i] >= 'a' && s[i] <= 'z')\n            {\n         \
    \       result ~=  to!string(to!char(s[i] - 'a' + 'A'));\n            }\n    \
    \        else if(s[i] >= 'A' && s[i] <= 'Z')\n            {\n                result\
    \ ~=  to!string(to!char(s[i] - 'A' + 'a'));\n            }\n        }\n      \
    \  else\n        {\n            result ~= s[i];\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1fnitmgx.d(20): Error: undefined identifier `uni` in package\
    \ `std`\\n/tmp/tmp1fnitmgx.d(24): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmp1fnitmgx.d(28): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1fnitmgx.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    auto result = \"\";\n\
    \    foreach(c; s)\n    {\n        if (std.regex.Regex.isUnicodeLetter(c))\n \
    \       {\n            if (std.regex.Regex.isUnicodeUpper(c))\n              \
    \  result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n\
    \        }\n        else\n            result ~= c;\n    }\n    if (std.algorithm.isUnary!(a\
    \ => std.regex.Regex.isUnicodeLetter(a))(s))\n        return result.idup.retro;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8_blxep8.d(20): Error: undefined identifier `regex` in package\
    \ `std`\\n/tmp/tmp8_blxep8.d(22): Error: undefined identifier `regex` in package\
    \ `std`\\n/tmp/tmp8_blxep8.d(23): Error: undefined identifier `toLower`\\n/tmp/tmp8_blxep8.d(25):\
    \ Error: undefined identifier `toUpper`\\n/tmp/tmp8_blxep8.d(30): Error: undefined\
    \ identifier `algorithm` in package `std`\\n/tmp/tmp8_blxep8.d(31): Error: no\
    \ property `retro` for type `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp8_blxep8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.length == 0) return s;\n    foreach(c; s)\n    {\n        if (c.isLetter)\n\
    \        {\n            result ~= c.swapcase;\n        }\n        else\n     \
    \   {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4s60nhgh.d(21): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp4s60nhgh.d(23): Error: no property `swapcase` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4s60nhgh.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    //...\n    string revStr\
    \ = \"\";\n    bool contains_letter = false;\n    foreach(c; s)\n    {\n     \
    \   if(!(c >= 'a' && c <= 'z') && !(c >= 'A' && c <= 'Z'))\n        {\n      \
    \      revStr ~= c;\n        }\n        else\n        {\n            if(c >= 'a'\
    \ && c <= 'z')\n            {\n                revStr ~= to!string(c - 'a' + 'A');\n\
    \            }\n            else\n            {\n                revStr ~= to!string(c\
    \ - 'A' + 'a');\n            }\n            contains_letter = true;\n        }\n\
    \    }\n    if(contains_letter)\n    {\n        return revStr;\n    }\n    else\n\
    \    {\n        string rev=\"\";\n        for(size_t i = 0; i < revStr.length;\
    \ i++)\n        {\n            rev ~= revStr[revStr.length - i - 1];\n       \
    \ }\n        return rev;\n    }\n    \n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm3mm8trd.d(30): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmpm3mm8trd.d(34): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm3mm8trd.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string str1=\"\";\n  \
    \  string str2=\"\";\n    string str3=\"\";\n    for(int i=0;i<s.length;i++)\n\
    \    {\n        if(isAlpha(s[i]))\n        {\n            if(isUpper(s[i]))\n\
    \            {\n            str1+=tolower(s[i]);\n            }\n            else\n\
    \            {\n                str1+=toupper(s[i]);\n            }\n        }\n\
    \        else\n        {\n            str2+=s[i];\n        }\n    }\n    str3=str1+str2;\n\
    \    if(str3.length!=0)\n    {\n    return str3;\n    }\n    else\n    {\n   \
    \     return s;\n    }\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9p5h4bh1.d(22): Error: undefined identifier `isAlpha`\\n/tmp/tmp9p5h4bh1.d(24):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp9p5h4bh1.d(26): Error: undefined\
    \ identifier `tolower`\\n/tmp/tmp9p5h4bh1.d(30): Error: undefined identifier `toupper`\\\
    n/tmp/tmp9p5h4bh1.d(35): Error: slice `str2` is not mutable\\n/tmp/tmp9p5h4bh1.d(38):\
    \ Error: invalid array operation `str1 + str2` (possible missing [])\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9p5h4bh1.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string res;\n    for(auto\
    \ elem : s)\n    {\n        if(elem.isUpper())\n            res ~= elem.toLower();\n\
    \        else if(elem.isLower())\n            res ~= elem.toUpper();\n       \
    \ else\n            res ~= elem;\n    }\n    return res.dup.reverse;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphaanljxq.d(18): Error: no identifier for declarator `elem`\\\
    n/tmp/tmphaanljxq.d(18): Error: expression expected, not `:`\\n/tmp/tmphaanljxq.d(18):\
    \ Error: found `s` when expecting `;` following `for` condition\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphaanljxq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    foreach(i;0..s.length)\n    {\n        if(isAlpha(s[i]))\n        {\n   \
    \         if(isUpper(s[i]))\n            {\n                result ~= toLower(s[i]);\n\
    \            }\n            else\n            {\n                result ~= toUpper(s[i]);\n\
    \            }\n        }\n        else\n        {\n            result ~= s[i];\n\
    \        }\n    }\n    if(result == s)\n    {\n        return std.algorithm.reverse(result);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n \
    \   assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") ==\
    \ \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_rizkb8s.d(20): Error: undefined identifier `isAlpha`\\n/tmp/tmp_rizkb8s.d(22):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp_rizkb8s.d(24): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp_rizkb8s.d(28): Error: undefined identifier `toUpper`\\\
    n/tmp/tmp_rizkb8s.d(38): Error: undefined identifier `algorithm` in package `std`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_rizkb8s.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.isEmpty) return s;\n\
    \    string result = \"\";\n    foreach(i, char c; s)\n    {\n        if(isalpha(c))\n\
    \        {\n            if(isupper(c))\n                result ~= tolower(c);\n\
    \            else\n                result ~= toupper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz4pg1wh_.d(17): Error: no property `isEmpty` for type `string`\\\
    n/tmp/tmpz4pg1wh_.d(21): Error: undefined identifier `isalpha`\\n/tmp/tmpz4pg1wh_.d(23):\
    \ Error: undefined identifier `isupper`\\n/tmp/tmpz4pg1wh_.d(24): Error: undefined\
    \ identifier `tolower`\\n/tmp/tmpz4pg1wh_.d(26): Error: undefined identifier `toupper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz4pg1wh_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string ret = \"\";\n \
    \   foreach(i,c;s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n\
    \                ret ~= toLower(c);\n            else\n                ret ~=\
    \ toUpper(c);\n        }\n        else\n            ret ~= c;\n    }\n    return\
    \ ret;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7hql1qlz.d(20): Error: undefined identifier `isAlpha`\\n/tmp/tmp7hql1qlz.d(22):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp7hql1qlz.d(23): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp7hql1qlz.d(25): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7hql1qlz.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    if (s.findFirst(\"[a-zA-Z]\") == -1) return reverse(s);\n    for (int i =\
    \ 0; i < s.length; i++)\n    {\n        if (isUpper(s[i])) result ~= toLower(s[i]);\n\
    \        else if (isLower(s[i])) result ~= toUpper(s[i]);\n        else result\
    \ ~= s[i];\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpemi4wo3d.d(18): Error: no property `findFirst` for type `string`\\\
    n/tmp/tmpemi4wo3d.d(18): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\n/tmp/tmpemi4wo3d.d(21):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpemi4wo3d.d(21): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpemi4wo3d.d(22): Error: undefined identifier `isLower`\\\
    n/tmp/tmpemi4wo3d.d(22): Error: undefined identifier `toUpper`\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpemi4wo3d.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    int l = s.length;\n  \
    \  if(l == 0) return s;\n    if(!isAlpha(s[0])){\n        if(s[0] == '-' || s[0]\
    \ == '+'){\n            s = s[0] ~ reverse(s[1..$]);\n        }else{\n       \
    \     s = reverse(s);\n        }\n    }else{\n        auto rev = reverse(s);\n\
    \        string res;\n        foreach(i, c; rev){\n            if(isAlpha(c)){\n\
    \                res ~= toLower(c);\n            }else{\n                res ~=\
    \ c;\n            }\n        }\n        s = res;\n    }\n    return s;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9obzms_f.d(17): Error: cannot implicitly convert expression `s.length`\
    \ of type `ulong` to `int`\\n/tmp/tmp9obzms_f.d(19): Error: undefined identifier\
    \ `isAlpha`\\n/tmp/tmp9obzms_f.d(21): Error: template `std.typecons.reverse` cannot\
    \ deduce function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\n/tmp/tmp9obzms_f.d(23):\
    \ Error: template `std.typecons.reverse` cannot deduce function from argument\
    \ types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\n/tmp/tmp9obzms_f.d(26):\
    \ Error: template `std.typecons.reverse` cannot deduce function from argument\
    \ types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp9obzms_f.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string res;\n    size_t\
    \ n = s.length;\n    foreach(ch; s)\n    {\n        if(isAlpha(ch))\n        {\n\
    \            res ~= (isUpper(ch) ? toLower(ch) : toUpper(ch));\n        }\n  \
    \      else\n        {\n            res ~= ch;\n        }\n    }\n    if(res.length\
    \ == 0)\n    {\n        return s.reverse;\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp83s1l0vk.d(21): Error: undefined identifier `isAlpha`\\n/tmp/tmp83s1l0vk.d(23):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp83s1l0vk.d(23): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp83s1l0vk.d(23): Error: undefined identifier `toUpper`\\\
    n/tmp/tmp83s1l0vk.d(32): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp83s1l0vk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    //string result = \"\"\
    ;\n    /*\n    for(int i = 0; i < s.length; i++)\n    {\n        if (isalpha(s[i]))\n\
    \        {\n            if (isupper(s[i]))\n            {\n                result\
    \ ~= tolower(s[i]);\n            }\n            else\n            {\n        \
    \        result ~= toupper(s[i]);\n            }\n        }\n        else\n  \
    \      {\n            result ~= s[i];\n        }\n    }\n    */\n    //return\
    \ result;\n    char[] result = new char[](s.length);\n    bool exist = false;\n\
    \    for(int i = 0; i < s.length; i++)\n    {\n        if (isalpha(s[i]))\n  \
    \      {\n            if (isupper(s[i]))\n            {\n                result[i]\
    \ = tolower(s[i]);\n            }\n            else\n            {\n         \
    \       result[i] = toupper(s[i]);\n            }\n            exist = true;\n\
    \        }\n        else\n        {\n            result[i] = s[i];\n        }\n\
    \    }\n    if (exist)\n    {\n        return result.idup;\n    }\n    else\n\
    \    {\n        return result.dup.reverse.idup;\n    }\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3_lx451v.d(43): Error: undefined identifier `isalpha`\\n/tmp/tmp3_lx451v.d(45):\
    \ Error: undefined identifier `isupper`\\n/tmp/tmp3_lx451v.d(47): Error: undefined\
    \ identifier `tolower`\\n/tmp/tmp3_lx451v.d(51): Error: undefined identifier `toupper`\\\
    n/tmp/tmp3_lx451v.d(66): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp3_lx451v.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string a;\n    if (s.length==0)\n\
    \        return s;\n    foreach(ch;s)\n    {\n        if (ch.isLetter)\n     \
    \   {\n            if (ch.isUpper)\n                a~=ch.toLower;\n         \
    \   else\n                a~=ch.toUpper;\n        }\n        else\n          \
    \  a~=ch;\n    }\n    return a;\n}\n/* best\nauto solve(string s) \n{\n  auto\
    \ flip = (char ch) {\n    if (ch.isLetter)\n      return ch.isUpper ? ch.toLower\
    \ : ch.toUpper;\n    return ch;\n  };\n  return s.length == 0 ? s : s.map!flip.reversed.to!string;\n\
    }\n*/\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoj9fuo6a.d(22): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpoj9fuo6a.d(24): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpoj9fuo6a.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpoj9fuo6a.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoj9fuo6a.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string result = \"\";\n\
    \    bool letter = false;\n    for(int i = 0; i < s.length; i++)\n    {\n    \
    \    if(isalpha(s[i]))\n        {\n            letter = true;\n            result\
    \ ~= s[i];\n        }\n        else\n        {\n            result ~= s[i];\n\
    \        }\n    }\n    if(letter)\n    {\n        return result.toupper;\n   \
    \ }\n    else\n    {\n        return result.reversed;\n    }\n}\nunittest\n{\n\
    \    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n\
    \    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8xoa60y6.d(21): Error: undefined identifier `isalpha`\\n/tmp/tmp8xoa60y6.d(33):\
    \ Error: no property `toupper` for type `string`\\n/tmp/tmp8xoa60y6.d(37): Error:\
    \ no property `reversed` for type `string`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmp8xoa60y6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if(s.length > 0)\n   \
    \ {\n        string t = \"\";\n        for(in i = 0; i < s.length; i++)\n    \
    \    {\n            if(s[i] >= 'a' && s[i] <= 'z')\n            {\n          \
    \      t ~= to!string(toUpper(s[i]));\n            }\n            else if(s[i]\
    \ >= 'A' && s[i] <= 'Z')\n            {\n                t ~= to!string(toLower(s[i]));\n\
    \            }\n            else\n            {\n                t ~= s[i];\n\
    \            }\n        }\n        return t;\n    }\n    else\n    {\n       \
    \ return s;\n    }\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi_9jievk.d(20): Error: found `in` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi_9jievk.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \n  if (s.length != 0)\n\
    \  {\n    char[] chars = s.dup;\n    foreach (i,ch; s)\n    {\n      if (isLetter(ch))\n\
    \      {\n        if (isUpper(ch))\n          chars[i] = toLower(ch);\n      \
    \  else\n          chars[i] = toUpper(ch);\n      }\n    }\n    return chars.join();\n\
    \  }\n  else\n    return s.dup.reversed.join();\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppfnfmv46.d(23): Error: undefined identifier `isLetter`\\n/tmp/tmppfnfmv46.d(25):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmppfnfmv46.d(26): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmppfnfmv46.d(28): Error: undefined identifier `toUpper`\\\
    n/tmp/tmppfnfmv46.d(31): Error: no property `join` for type `char[]`\\n/tmp/tmppfnfmv46.d(34):\
    \ Error: no property `reversed` for type `char[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmppfnfmv46.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\"\
    ) = \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    string ret = \"\";\n \
    \   foreach(c; s)\n    {\n        if (c >= 'a' && c <= 'z')\n            ret ~=\
    \ (char)(c - ('a' - 'A'));\n        else if (c >= 'A' && c <= 'Z')\n         \
    \   ret ~= (char)(c + ('a' - 'A'));\n        else\n            ret ~= c;\n   \
    \ }\n    return ret;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9n1im4sn.d(21): Error: C style cast illegal, use `cast(char)(c\
    \ - (\\'a\\' - \\'A\\'))`\\n/tmp/tmp9n1im4sn.d(23): Error: C style cast illegal,\
    \ use `cast(char)(c + (\\'a\\' - \\'A\\'))`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp9n1im4sn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError

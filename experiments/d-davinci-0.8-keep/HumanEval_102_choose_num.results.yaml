name: HumanEval_102_choose_num
language: d
results:
- program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13,\
    \ 12) = -1\n    \n*/\nlong choose_num(long x, long y) \n{\n    /*\n    long greatest\
    \ = max(x, y);\n    long least = min(x, y);\n    while(least <= greatest)\n  \
    \  {\n        if(least % 2 == 0)\n        {\n            return least;\n     \
    \   }\n        else\n        {\n            least += 1;\n        }\n    }\n  \
    \  return -1;\n    */\n    long greatest = max(x, y);\n    long least = min(x,\
    \ y);\n    for(long i = greatest; i >= least; i--)\n    {\n        if(i % 2 ==\
    \ 0)\n        {\n            return i;\n        }\n    }\n    return -1;\n}\n\
    unittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L)\
    \ == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7xs82x7x.d(31): Error: undefined identifier `max`, did you mean\
    \ function `fmax`?\\n/tmp/tmp7xs82x7x.d(32): Error: undefined identifier `min`,\
    \ did you mean function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp7xs82x7x.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13,\
    \ 12) = -1\n    \n*/\nlong choose_num(long x, long y) \n{\n    if(x < 0 || y <\
    \ 0) \n    {\n        assert(0);\n    }\n    if(x > y) \n    {\n        assert(0);\n\
    \    }\n    long result = y - (y % 2) + (y % 2 == 0 ? 0 : -1);\n    return (result\
    \ >= x) ? result : -1;\n}\nunittest\n{\n    alias candidate = choose_num;\n\n\
    \    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpuqa0jl9h.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427f29]\\n??:? void tmpuqa0jl9h.__unittest_L26_C1()\
    \ [0x427ad1]\\n??:? void tmpuqa0jl9h.__modtest() [0x427bf8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc4f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aae2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc75]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430124]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fc01]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aab9]\\n??:? runModuleUnitTests [0x42ba25]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428378]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282ff]\\n??:? _d_run_main [0x42826a]\\n??:? main [0x427c0b]\\\
    n??:? __libc_start_main [0x430a8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13,\
    \ 12) = -1\n    \n*/\nlong choose_num(long x, long y) \n{\n    if (x > y)\n  \
    \  {\n        return -1;\n    }\n    if (x % 2 == 0)\n    {\n        return x;\n\
    \    }\n    else\n    {\n        return x + 1;\n    }\n}\nunittest\n{\n    alias\
    \ candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpyzk5qp2x.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e05]\\n??:? void tmpyzk5qp2x.__unittest_L28_C1()\
    \ [0x427a61]\\n??:? void tmpyzk5qp2x.__modtest() [0x427b88]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb2b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb51]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a995]\\n??:? runModuleUnitTests [0x42b901]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428254]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281db]\\n??:? _d_run_main [0x428146]\\n??:? main [0x427b9b]\\\
    n??:? __libc_start_main [0x51170554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13,\
    \ 12) = -1\n    \n*/\nlong choose_num(long x, long y) \n{\n    long i;\n    if\
    \ (x % 2 == 0)\n        i = x;\n    else\n        i = x + 1;\n    while (i < y)\n\
    \    {\n        if (i % 2 == 0)\n            return i;\n        i += 2;\n    }\n\
    \    return -1;\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp745bqx2r.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e3d]\\n??:? void tmp745bqx2r.__unittest_L28_C1()\
    \ [0x427a99]\\n??:? void tmp745bqx2r.__modtest() [0x427bc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb63]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb89]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9cd]\\n??:? runModuleUnitTests [0x42b939]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42828c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428213]\\n??:? _d_run_main [0x42817e]\\n??:? main [0x427bd3]\\\
    n??:? __libc_start_main [0x604b0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13,\
    \ 12) = -1\n    \n*/\nlong choose_num(long x, long y) \n{\n    if (x > y)\n  \
    \  {\n        return -1;\n    }\n    int a = x % 2;\n    int b = y % 2;\n    if\
    \ (a == 1 && b == 1)\n    {\n        return -1;\n    }\n    else if (a == 1 &&\
    \ b == 0)\n    {\n        return x + 1;\n    }\n    else if (a == 0 && b == 1)\n\
    \    {\n        return -1;\n    }\n    else if (a == 0 && b == 0)\n    {\n   \
    \     return y;\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\n\
    \    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpobnixxec.d(13): Error: function `tmpobnixxec.choose_num` no `return\
    \ exp;` or `assert(0);` at end of function\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpobnixxec.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13,\
    \ 12) = -1\n    \n*/\nlong choose_num(long x, long y) \n{\n    static if (is(typeof(x\
    \ > y)))\n    {\n        if(x > y) return -1;\n    }\n    else static if (is(typeof(x\
    \ < y)))\n    {\n        if(x < y) return -1;\n    }\n    if(x < 2 || y < 2) return\
    \ -1;\n    if(x % 2 == 0)\n    {\n        return x;\n    }\n    else return choose_num(x\
    \ + 1, y);\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwxwyt_tk.d(34): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e1d]\\n??:? void tmpwxwyt_tk.__unittest_L30_C1()\
    \ [0x427a79]\\n??:? void tmpwxwyt_tk.__modtest() [0x427ba0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb43]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9d6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb69]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9ad]\\n??:? runModuleUnitTests [0x42b919]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42826c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281f3]\\n??:? _d_run_main [0x42815e]\\n??:? main [0x427bb3]\\\
    n??:? __libc_start_main [0xaeca554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13,\
    \ 12) = -1\n    \n*/\nlong choose_num(long x, long y) \n{\n    // This solution\
    \ is just for demonstrating the use of if-else.\n    // Please note that there\
    \ is a much more efficient solution using\n    // bitwise operators.\n    if (x\
    \ > y)\n        return -1;\n    if (x % 2 == 0)\n        return x;\n    if (x\
    \ % 2 == 1)\n        return x + 1;\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3uj47ex6.d(13): Error: function `tmp3uj47ex6.choose_num` no `return\
    \ exp;` or `assert(0);` at end of function\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmp3uj47ex6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13,\
    \ 12) = -1\n    \n*/\nlong choose_num(long x, long y) \n{\n    if ( x < 0 || y\
    \ < 0)\n    {\n        return -1;\n    }\n    if (x > y)\n    {\n        return\
    \ -1;\n    }\n    long r = (x + y) % 2 == 0 ? (x + y) / 2: (x + y + 1) / 2;\n\
    \    return r;\n}\n/*\nThis function takes a positive number n and returns the\
    \ sum of the\n    squares of all positive numbers that are less than n.\nunittest\n\
    {\n    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiyt6isjy.d(26): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiyt6isjy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13,\
    \ 12) = -1\n    \n*/\nlong choose_num(long x, long y) \n{\n    if(x > y)\n   \
    \ {\n        return -1;\n    }\n    else if(x <= y)\n    {\n        int k = cast(int)max(x,\
    \ y);\n        while((k % 2) != 0)\n        {\n            k = k - 1;\n      \
    \  }\n        return k;\n    }\n    return -1;\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqfoce9sk.d(21): Error: undefined identifier `max`, did you mean\
    \ function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqfoce9sk.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13,\
    \ 12) = -1\n    \n*/\nlong choose_num(long x, long y) \n{\n    assert(x > 0);\n\
    \    assert(y > 0);\n    long res = -1;\n    if (x % 2 == 0)\n    {\n        res\
    \ = x;\n    }\n    else if (x + 1 <= y)\n    {\n        res = x + 1;\n    }\n\
    \    return res;\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwt_3d91t.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427f21]\\n??:? void tmpwt_3d91t.__unittest_L28_C1()\
    \ [0x427ac5]\\n??:? void tmpwt_3d91t.__modtest() [0x427bec]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc47]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aada]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc6d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43011c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbf9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aab1]\\n??:? runModuleUnitTests [0x42ba1d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428370]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282f7]\\n??:? _d_run_main [0x428262]\\n??:? main [0x427bff]\\\
    n??:? __libc_start_main [0xe15fc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13,\
    \ 12) = -1\n    \n*/\nlong choose_num(long x, long y) \n{\n    if (x % 2 == 0)\n\
    \    {\n        return x > y ? y : x;\n    } else\n    {\n        if (x == y)\n\
    \        {\n            return -1;\n        } else\n        {\n            return\
    \ choose_num(x + 1, y);\n        }\n    }\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1qt2hdcu.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e15]\\n??:? void tmp1qt2hdcu.__unittest_L29_C1()\
    \ [0x427a6d]\\n??:? void tmp1qt2hdcu.__modtest() [0x427b94]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb3b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb61]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faed]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9a5]\\n??:? runModuleUnitTests [0x42b911]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428264]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281eb]\\n??:? _d_run_main [0x428156]\\n??:? main [0x427ba7]\\\
    n??:? __libc_start_main [0x75744554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13,\
    \ 12) = -1\n    \n*/\nlong choose_num(long x, long y) \n{\n  long r = min(x, y);\n\
    \  return r % 2 == 0 ? r : r - 1;\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpshpbrn7d.d(15): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpshpbrn7d.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13,\
    \ 12) = -1\n    \n*/\nlong choose_num(long x, long y) \n{\n    long z = max(x,\
    \ y);\n    long res = x <= y ? x : y;\n    while (z >= res)\n    {\n        if\
    \ (z % 2 == 0)\n            return z;\n        z--;\n    }\n    return -1;\n}\n\
    unittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L)\
    \ == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9ir3qa68.d(15): Error: undefined identifier `max`, did you mean\
    \ function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9ir3qa68.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13,\
    \ 12) = -1\n    \n*/\nlong choose_num(long x, long y) \n{\n    long retval = -1;\n\
    \    if(x < y){\n        if(x % 2 == 0)\n            retval = x;\n        else\n\
    \            retval = x + 1;\n    }\n    else if(x > y){\n        if(y % 2 ==\
    \ 0)\n            retval = y;\n        else\n            retval = y + 1;\n   \
    \ }\n    else{\n        if(x % 2 == 0)\n            retval = x;\n    }\n    return\
    \ retval;\n}\n/*\nThis function takes an integer n, and returns its square root\n\
    \    rounded to the nearest integer. If the square root of n is not a whole\n\
    \    number, then the function should return -1.\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprjmlmf82.d(34): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprjmlmf82.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13,\
    \ 12) = -1\n    \n*/\nlong choose_num(long x, long y) \n{\n    // use case or\
    \ if else\n    return y%2 == 0 ? y : y%2 == 1 ? choose_num(x, y-1) : -1;\n}\n\
    unittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L)\
    \ == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfcms6kha.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e0d]\\n??:? void tmpfcms6kha.__unittest_L18_C1()\
    \ [0x427a91]\\n??:? void tmpfcms6kha.__modtest() [0x427b8c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb33]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9c6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb59]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430008]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fae5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a99d]\\n??:? runModuleUnitTests [0x42b909]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42825c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281e3]\\n??:? _d_run_main [0x42814e]\\n??:? main [0x427b9f]\\\
    n??:? __libc_start_main [0xc8231554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13,\
    \ 12) = -1\n    \n*/\nlong choose_num(long x, long y) \n{ \n    long answer =\
    \ 0;\n    int X = x % 2;\n    int Y = y % 2;\n    if(X == 0 && Y == 0)\n    {\n\
    \        return y;\n    }\n    else if(X == 1 && Y == 1)\n    {\n        long\
    \ second = y-1;\n        if(second < x)\n        {\n            return -1;\n \
    \       }\n        else\n        {\n            return second;\n        }\n  \
    \  }\n    else if(X == 1 && Y == 0)\n    {\n        long second = y-2;\n     \
    \   if(second < x)\n        {\n            return -1;\n        }\n        else\n\
    \        {\n            return second;\n        }\n    }\n    else if(X == 0 &&\
    \ Y == 1)\n    {\n        long second = y-1;\n        if(second < x)\n       \
    \ {\n            return -1;\n        }\n        else\n        {\n            return\
    \ second;\n        }\n    }\n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    return answer;\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpof0b4kuo.d(75): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpof0b4kuo.__unittest_L69_C1()\
    \ [0x427b47]\\n??:? void tmpof0b4kuo.__modtest() [0x427c18]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c2b]\\\
    n??:? __libc_start_main [0x32de554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13,\
    \ 12) = -1\n    \n*/\nlong choose_num(long x, long y) \n{\n  immutable long z\
    \ = cast(long)((x + y) / 2.0);\n  if ( (z % 2 == 0) && (z >= x) && (z <= y) )\n\
    \  {\n    return z;\n  }\n  else\n  {\n    if (x == y)\n    {\n      return -1;\n\
    \    }\n    else\n    {\n      immutable long w = choose_num(x, z);\n      if\
    \ (w == -1)\n      {\n        return choose_num(z + 1, y);\n      }\n      else\n\
    \      {\n        return w;\n      }\n    }\n  }\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpi_6l1v4s.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e5d]\\n??:? void tmpi_6l1v4s.__unittest_L40_C1()\
    \ [0x427ab9]\\n??:? void tmpi_6l1v4s.__modtest() [0x427be0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fba9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9ed]\\n??:? runModuleUnitTests [0x42b959]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282ac]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428233]\\n??:? _d_run_main [0x42819e]\\n??:? main [0x427bf3]\\\
    n??:? __libc_start_main [0x1c21f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13,\
    \ 12) = -1\n    \n*/\nlong choose_num(long x, long y) \n{\n    assert(x >= 0 &&\
    \ y >= 0);\n    if (x > y) return -1;\n    return max(y & ~1, x & ~1);\n}\n/*\n\
    \    Write a function that takes a string as input and returns that string\n \
    \   with all the 'a's replaced with the character 'z'. Note that this should\n\
    \    be done in-place.\nunittest\n{\n    alias candidate = choose_num;\n\n   \
    \ assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbt5vxvy6.d(19): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbt5vxvy6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13,\
    \ 12) = -1\n    \n*/\nlong choose_num(long x, long y) \n{\n    return typeof(x)(max(min(filter!(a\
    \ => a % 2 == 0)([x, y])), max(filter!(a => a % 2 == 0)([x, y]))));\n}\nunittest\n\
    {\n    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn3qo0s5z.d(15): Error: undefined identifier `max`, did you mean\
    \ function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn3qo0s5z.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13,\
    \ 12) = -1\n    \n*/\nlong choose_num(long x, long y) \n{\n\tlong n = 0;\n\tif(x\
    \ > y)\n\t{\n\t\treturn -1;\n\t}\n\telse if (x % 2 == 0)\n\t{\n\t\tn = x;\n\t\
    }\n\telse if (x % 2 != 0)\n\t{\n\t\tn = x + 1;\n\t}\n\telse if (n > y)\n\t{\n\t\
    \treturn -1;\n\t}\n\treturn n;\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp51pj6kb8.d(38): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e45]\\n??:? void tmp51pj6kb8.__unittest_L34_C1()\
    \ [0x427a9d]\\n??:? void tmp51pj6kb8.__modtest() [0x427bc4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb6b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb91]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9d5]\\n??:? runModuleUnitTests [0x42b941]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428294]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42821b]\\n??:? _d_run_main [0x428186]\\n??:? main [0x427bd7]\\\
    n??:? __libc_start_main [0xb4b79554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception

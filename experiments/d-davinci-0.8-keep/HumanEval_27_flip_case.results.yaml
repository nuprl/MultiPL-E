name: HumanEval_27_flip_case
language: d
results:
- program: "import std.typecons;\nimport std.math;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result;\n\
    \    foreach(i, c; string) \n    {\n        if (i % 2 == 0) \n        {\n    \
    \        result ~= toUpper(c);\n        } \n        else \n        {\n       \
    \     result ~= toLower(c);\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjtvqu2b7.d(11): Error: `string` is used as a type\\n/tmp/tmpjtvqu2b7.d(16):\
    \ Error: undefined identifier `toUpper`\\n/tmp/tmpjtvqu2b7.d(20): Error: undefined\
    \ identifier `toLower`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpjtvqu2b7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string ret;\n\
    \    foreach(ch; string) \n    {\n        ret ~= isUpper(ch) ? toLower(ch) : toUpper(ch);\n\
    \    }\n    return ret;\n}\n/*\n For a given string, return the summed ASCII values\
    \ of the string.\n    >>> summed_ascii('abc')\n    291\n    >>> summed_ascii('Hello')\n\
    \    532\n    \n*/\nsize_t summed_ascii(string string) \n{\n    size_t ret = 0;\n\
    \    foreach(ch; string) \n    {\n        ret += ord(ch);\n    }\n    return ret;\n\
    }\n/*\n Returns the reverse of a given string.\n    >>> reverse('Hello')\n   \
    \ 'olleH'\n    >>> reverse('abc')\n    'cba'\n    \n*/\nstring reverse(string\
    \ string) \n{\n    return string.dup.reverse;\n}\n/*\n Returns the middle character\
    \ of a given string.\n If there are an even number of characters, return the right-most.\n\
    \    >>> middle('Hello')\n    'l'\n    >>> middle('abcdefg')\n    'e'\n    \n\
    */\nchar middle(string string) \n{\n    size_t half = string.length / 2;\n   \
    \ return string[half];\n}\n/*\n For a given string, return true if the string\
    \ is a palindrome, and false otherwise.\n    >>> is_palindrome('racecar')\n  \
    \  True\n    >>> is_palindrome('hello')\n    False\n    \n*/\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphqoijy5c.d(11): Error: `string` is used as a type\\n/tmp/tmphqoijy5c.d(14):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmphqoijy5c.d(14): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmphqoijy5c.d(14): Error: undefined identifier `toUpper`\\\
    n/tmp/tmphqoijy5c.d(31): Error: undefined identifier `ord`\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphqoijy5c.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    return string.map!(ch\
    \ => (ch.isUpper() ? ch.toLower() : ch.toUpper()));\n}\n/*\nTake the first n alphabetically\
    \ sorted elements from a list.\nIf n is greater than or equal to the length of\
    \ list, return the list.\nIf n is less than zero, return an empty list.\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy7yhdo11.d(13): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy7yhdo11.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string ret;\n\
    \    foreach(c; string) \n    {\n        if(c.isUpper)\n            ret ~= c.toLower;\n\
    \        else if(c.isLower)\n            ret ~= c.toUpper;\n        else\n   \
    \         ret ~= c;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr40hfdcl.d(11): Error: `string` is used as a type\\n/tmp/tmpr40hfdcl.d(14):\
    \ Error: no property `isUpper` for type `immutable(char)`\\n/tmp/tmpr40hfdcl.d(15):\
    \ Error: no property `toLower` for type `immutable(char)`\\n/tmp/tmpr40hfdcl.d(16):\
    \ Error: no property `isLower` for type `immutable(char)`\\n/tmp/tmpr40hfdcl.d(17):\
    \ Error: no property `toUpper` for type `immutable(char)`\\nFailed: [\"dmd\",\
    \ \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr40hfdcl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n\tforeach(c; string)\n\
    \t{\n\t\tif(isAlpha(c))\n\t\t{\n\t\t\tif(isUpper(c))\n\t\t\t{\n\t\t\t\tc = toLower(c);\n\
    \t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc = toUpper(c);\n\t\t\t}\n\t\t}\n\t}\n\t\
    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb8k65bny.d(13): Error: undefined identifier `isAlpha`\\n/tmp/tmpb8k65bny.d(15):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpb8k65bny.d(17): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpb8k65bny.d(21): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb8k65bny.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n\tforeach(immutable\
    \ char c; string)\n\t{\n\t\tif(isUpper(c))\n\t\t\tstring ~= toLower(c);\n\t\t\
    else if(isLower(c))\n\t\t\tstring ~= toUpper(c);\n\t\telse\n\t\t\tstring ~= c;\n\
    \t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\"\
    );\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp35w1sotw.d(13): Error: undefined identifier `isUpper`\\n/tmp/tmp35w1sotw.d(14):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmp35w1sotw.d(15): Error: undefined\
    \ identifier `isLower`\\n/tmp/tmp35w1sotw.d(16): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp35w1sotw.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string flipped\
    \ = \"\";\n    for (auto c : string) \n    {\n        if (c.isUpper()) \n    \
    \    {\n            flipped ~= c.toLower();\n        } \n        else \n     \
    \   {\n            flipped ~= c.toUpper();\n        }\n    }\n    return flipped;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmz5o2s98.d(12): Error: no identifier for declarator `c`\\n/tmp/tmpmz5o2s98.d(12):\
    \ Error: expression expected, not `:`\\n/tmp/tmpmz5o2s98.d(12): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpmz5o2s98.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n  return (string.map!(ch\
    \ => ch.isUpper ? ch.toLower : ch.toUpper)).retro;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz5dore2z.d(11): Error: template identifier `map` is not a member\
    \ of variable `tmpz5dore2z.flip_case.string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpz5dore2z.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    char[] result\
    \ = new char[string.length];\n    for (int i = 0; i < string.length; i++) \n \
    \   {\n        result[i] = isLower(string[i]) ? toupper(string[i]) : tolower(string[i]);\n\
    \    }\n    return result.toStringz();\n}\nstring s = \"Hello\";\nwriteln(flip_case(s));\n\
    unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") ==\
    \ \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpozzexuix.d(19): Error: unexpected `(` in declarator\\n/tmp/tmpozzexuix.d(19):\
    \ Error: function declaration without return type. (Note that constructors are\
    \ always named `this`)\\n/tmp/tmpozzexuix.d(19): Error: no identifier for declarator\
    \ `writeln(flip_case(s))`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\",\
    \ \"/tmp/tmpozzexuix.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string new_string;\n\
    \    for (int i = 0; i < string.length; i++) \n    {\n        auto c = string[i];\n\
    \        if(isUpper(c)) \n        {\n            new_string ~= toLower(c);\n \
    \       } \n        else \n        {\n            new_string ~= toUpper(c);\n\
    \        }\n    }\n    return new_string;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp909tim_n.d(11): Error: `string` is used as a type\\n/tmp/tmp909tim_n.d(15):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp909tim_n.d(17): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp909tim_n.d(21): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp909tim_n.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    import std.string;\n\
    \    return string.map!(\"to!(char)(to!int(a) ^ 32)\")(\"a\");\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8jko3_e1.d(12): Error: no property `map` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8jko3_e1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    auto new_string\
    \ = string.dup;\n    for (size_t i = 0; i < new_string.length; i++)\n    {\n \
    \       new_string[i] = isalpha(new_string[i]) ? toggle(new_string[i]) : new_string[i];\n\
    \    }\n    return new_string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7sz3plo5.d(14): Error: undefined identifier `isalpha`\\n/tmp/tmp7sz3plo5.d(14):\
    \ Error: undefined identifier `toggle`\\n/tmp/tmp7sz3plo5.d(16): Error: cannot\
    \ implicitly convert expression `new_string` of type `char[]` to `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7sz3plo5.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    foreach(immutable\
    \ ref c; string) {\n        if(isAlpha(c))\n            c = toLower(c);\n    \
    \    else\n            c = toUpper(c);\n    }\n    return string;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpluge3vxc.d(12): Error: undefined identifier `isAlpha`\\n/tmp/tmpluge3vxc.d(13):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmpluge3vxc.d(15): Error: undefined\
    \ identifier `toUpper`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpluge3vxc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    foreach(char letter; string)\n    {\n        result ~= islower(letter)\
    \ ? toupper(letter) : tolower(letter);\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp89q9j_gz.d(11): Error: `string` is used as a type\\n/tmp/tmp89q9j_gz.d(14):\
    \ Error: undefined identifier `islower`\\n/tmp/tmp89q9j_gz.d(14): Error: undefined\
    \ identifier `toupper`\\n/tmp/tmp89q9j_gz.d(14): Error: undefined identifier `tolower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp89q9j_gz.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    char[] s2 = new\
    \ char[string.length];\n    foreach(size_t i, c; string) {\n        if(isLower(c))\n\
    \            s2[i] = toUpper(c);\n        else if(isUpper(c))\n            s2[i]\
    \ = toLower(c);\n        else\n            s2[i] = c;\n    }\n    return to!string(s2);\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpskymgail.d(13): Error: undefined identifier `isLower`\\n/tmp/tmpskymgail.d(14):\
    \ Error: undefined identifier `toUpper`\\n/tmp/tmpskymgail.d(15): Error: undefined\
    \ identifier `isUpper`\\n/tmp/tmpskymgail.d(16): Error: undefined identifier `toLower`\\\
    n/tmp/tmpskymgail.d(20): Error: template instance `to!string` template `to` is\
    \ not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpskymgail.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string new_string\
    \ = \"\";\n    foreach(character; string)\n    {\n        if(isUpper(character))\n\
    \        {\n            new_string ~= lower(character);\n        }\n        else\n\
    \        {\n            new_string ~= upper(character);\n        }\n    }\n  \
    \  return new_string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\"\
    );\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7hspn08m.d(11): Error: `string` is used as a type\\n/tmp/tmp7hspn08m.d(14):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp7hspn08m.d(16): Error: undefined\
    \ identifier `lower`\\n/tmp/tmp7hspn08m.d(20): Error: undefined identifier `upper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7hspn08m.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n\tstring result;\n\
    \tforeach(chr; string) \n\t{\n\t\tresult ~= cast(char) (((chr >= 'a' && chr <=\
    \ 'z') ? chr - 32 : chr)\n\t\t\t\t\t\t\t\t\t\t+ ((chr >= 'A' && chr <= 'Z') ?\
    \ chr + 32 : chr));\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpldgeq8i2.d(11): Error: `string` is used as a type\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpldgeq8i2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    foreach(c; string) \n    {\n        if(c.isUpper) \n        {\n\
    \            result ~= c.toLower;\n        } \n        else \n        {\n    \
    \        result ~= c.toUpper;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp641dtl1e.d(11): Error: `string` is used as a type\\n/tmp/tmp641dtl1e.d(14):\
    \ Error: no property `isUpper` for type `immutable(char)`\\n/tmp/tmp641dtl1e.d(16):\
    \ Error: no property `toLower` for type `immutable(char)`\\n/tmp/tmp641dtl1e.d(20):\
    \ Error: no property `toUpper` for type `immutable(char)`\\nFailed: [\"dmd\",\
    \ \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp641dtl1e.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n  string result =\
    \ \"\";\n  foreach(ch; string) \n  {\n    result ~= isUpper(ch) ? toLower(ch)\
    \ : toUpper(ch);\n  }\n  return result;\n}\nunittest\n{\n    alias candidate =\
    \ flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptg6bgit5.d(11): Error: `string` is used as a type\\n/tmp/tmptg6bgit5.d(14):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmptg6bgit5.d(14): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmptg6bgit5.d(14): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptg6bgit5.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{ \n    immutable result\
    \ = \"\"; \n    immutable stringLength = string.length; \n    foreach(immutable\
    \ i; 0..stringLength) \n    { \n        immutable c = string[i]; \n        immutable\
    \ s = c.toString(); \n        immutable isupper = c.isUpper; \n        immutable\
    \ islower = c.isLower; \n        if(isupper) \n        { \n            result\
    \ ~= c.toLower; \n        } \n        else if(islower) \n        { \n        \
    \    result ~= c.toUpper; \n        } \n        else \n        { \n          \
    \  result ~= c; \n        } \n    } \n    return result; \n} \nunittest\n{\n \
    \   alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n   \
    \ assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent\
    \ delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw1by0sup.d(16): Error: no property `toString` for type `immutable(char)`\\\
    n/tmp/tmpw1by0sup.d(17): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpw1by0sup.d(18): Error: no property `isLower` for type `immutable(char)`\\\
    n/tmp/tmpw1by0sup.d(21): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpw1by0sup.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpw1by0sup.d(29): Error: cannot modify `immutable` expression `result`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw1by0sup.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError

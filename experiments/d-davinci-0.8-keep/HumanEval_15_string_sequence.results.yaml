name: HumanEval_15_string_sequence
language: d
results:
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    import std.string;\n    import std.range;\n    auto sequence = iota(0,\
    \ n + 1);\n    return join(map!(to!string)(sequence));\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppx11sf88.d(15): Error: template instance `map!(to!string)` template\
    \ `map` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmppx11sf88.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n\tstring result = \"\";\n\tfor (size_t i = 0; i <= n; i++)\n\t{\n\t\t\
    result += \" \" + to!string(i);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmdi71rmg.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmdi71rmg.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0..n + 1) \n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw225adqg.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw225adqg.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    import std.array;\n    import std.algorithm;\n    import std.string;\n\
    \    auto s = iota(0, n+1).map!(to!string).join(\" \");\n    return s;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz_lnu7nr.d(15): Error: undefined identifier `iota`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz_lnu7nr.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s += to!string(i);\n        if (i < n) s += \" \";\n    }\n    return s;\n\
    }\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6icyw17h.d(15): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmp6icyw17h.d(16): Error: slice `s` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6icyw17h.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    return string_sequence_r(n, \"\");\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw7g4dhtk.d(12): Error: undefined identifier `string_sequence_r`,\
    \ did you mean function `string_sequence`?\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpw7g4dhtk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (int i = 0; i <= n; i++)\n    {\n\
    \        result = result ~ i.to!string;\n        if (i != n)\n            result\
    \ = result ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9n29cpjl.d(15): Error: no property `to` for type `int`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9n29cpjl.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = to!string(n);\n    for (long i = n - 1; i >= 0; i--)\n\
    \    {\n        s = to!string(i) ~ \" \" ~ s;\n    }\n    return s;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpovm6obdd.d(12): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpovm6obdd.d(15): Error: template instance `to!string`\
    \ template `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpovm6obdd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    long i;\n    string result = \"\";\n    for (i = 0; i <= n; i +=\
    \ 1)\n    {\n        result += i;\n        if (i != n) \n        {\n         \
    \   result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1892wb5x.d(16): Error: incompatible types for `(result) += (i)`:\
    \ `string` and `long`\\n/tmp/tmp1892wb5x.d(19): Error: slice `result` is not mutable\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1892wb5x.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    return n == 0 ? \"0\" : n <= 10 ? n.to!string() : string_sequence(n-1)\
    \ ~ \" \" ~ n.to!string();\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeg_rq8zb.d(12): Error: no property `to` for type `long`\\n/tmp/tmpeg_rq8zb.d(12):\
    \ Error: no property `to` for type `long`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpeg_rq8zb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i += 1) \n    {\n\
    \        if (i > 0)\n            s += \" \";\n        s += to!string(i);\n   \
    \ }\n    return s;\n}\n/*\n Count the number of odd numbers in an array of integers.\n\
    \    >>> count_odds([2, 3, 4, 5, 7, 10])\n    3\n    >>> count_odds([-4, 0, 2,\
    \ 4, 8])\n    0\n    >>> count_odds([2])\n    0\n*/\nsize_t count_odds(size_t[]\
    \ a)\n{\n    size_t count = 0;\n    foreach (size_t x; a)\n    {\n        if (x\
    \ % 2 == 1)\n            count += 1;\n    }\n    return count;\n}\n/*\n Find a\
    \ string that is the longest common substring of two strings.\n    >>> longest_common_substring(\"\
    abc\", \"xyz\")\n    \"\"\n    >>> longest_common_substring(\"xabxcdxxefxgx\"\
    , \"1ab2cd34ef5g6\")\n    \"abcd\"\n    >>> longest_common_substring(\"12ab34cd56ef\"\
    , \"ab12cd34ef56\")\n    \"12cd34ef\"\n*/\nstring longest_common_substring(string\
    \ a, string b)\n{\n    string longest = \"\";\n    foreach (size_t i; 0 .. a.length)\n\
    \    {\n        foreach (size_t j; i + 1 .. a.length)\n        {\n           \
    \ string sub = a[i .. j];\n            if (b.count(sub) && sub.length > longest.length)\n\
    \                longest = sub;\n        }\n    }\n    return longest;\n}\n/*\n\
    \ Print the size of each tuple in an array of tuples\n    >>> print_tuple_size([(1,),\
    \ (1, 2), (1, 2, 3)])\n    1\n    2\n    3\n*/\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv55bas33.d(16): Error: slice `s` is not mutable\\n/tmp/tmpv55bas33.d(17):\
    \ Error: template instance `to!string` template `to` is not defined\\n/tmp/tmpv55bas33.d(57):\
    \ Error: no property `count` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpv55bas33.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    return n == 0 ? \"0\" : string_sequence(n - 1) ~ \" \" ~ n;\n}\n\
    unittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppkfgwzql.d(12): Error: incompatible types for `(string_sequence(n\
    \ - 1L) ~ \" \") ~ (n)`: `string` and `long`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmppkfgwzql.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string ret = \"\";\n    foreach (long i; 0..n+1) {\n        ret\
    \ ~= to!string(i) ~ \" \";\n    }\n    return ret;\n}\n/*\n Return a string containing\
    \ space-delimited numbers starting from n upto 0 inclusive.\n    >>> string_sequence_reversed(0)\n\
    \    '0'\n    >>> string_sequence_reversed(5)\n    '5 4 3 2 1 0'\n*/\nstring string_sequence_reversed(long\
    \ n) \n{\n    string ret = \"\";\n    foreach (long i; n..-1) {\n        ret ~=\
    \ to!string(i) ~ \" \";\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxjeqp4cu.d(14): Error: template instance `to!string` template\
    \ `to` is not defined\\n/tmp/tmpxjeqp4cu.d(29): Error: template instance `to!string`\
    \ template `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpxjeqp4cu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string ret;\n    ret~=(string) n;\n    return ret;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0rbqi68t.d(13): Error: C style cast illegal, use `cast(string)n`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0rbqi68t.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    long i = 0;\n    while (i <= n)\n    {\n   \
    \     result ~= to!string(i);\n        result ~= \" \";\n        i++;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n\
    \    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphgh0py_9.d(16): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphgh0py_9.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    char[] buf = new char[256];\n    auto p = buf.ptr;\n    while (1)\n\
    \    {\n        p = mx_formatNum(p, n);\n        if (n == 0)\n            break;\n\
    \        p[0] = ' ';\n        p++;\n        n--;\n    }\n    return buf[0..(p\
    \ - buf.ptr)];\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n   \
    \ assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n\
    \    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9viyahhp.d(16): Error: undefined identifier `mx_formatNum`\\\
    n/tmp/tmp9viyahhp.d(23): Error: cannot implicitly convert expression `buf[0..cast(ulong)((p\
    \ - cast(char*)buf) / 1L)]` of type `char[]` to `string`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp9viyahhp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (int i; 0 .. n+1) \n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa4jblcmh.d(13): Error: cannot implicitly convert expression `n\
    \ + 1L` of type `long` to `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpa4jblcmh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (int i = 0; i <= n; i++)\n    {\n      \
    \  if (result != \"\")\n            result += \" \";\n        result += to!string(i);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmperg98byn.d(16): Error: slice `result` is not mutable\\n/tmp/tmperg98byn.d(17):\
    \ Error: template instance `to!string` template `to` is not defined\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmperg98byn.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n\tstring t;\n\tfor (int i = 0; i <= n; i++) \n\t{\n\t\tt ~= i;\n\t\t\
    if (i != n) \n\t\t{\n\t\t\tt ~= \" \";\n\t\t}\n\t}\n\treturn t;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2390u8ui.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427f9d]\\n??:? void tmp2390u8ui.__unittest_L23_C1()\
    \ [0x427be9]\\n??:? void tmp2390u8ui.__modtest() [0x427d1c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c9d7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b8e6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43020d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4306bc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430199]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b8bd]\\n??:? runModuleUnitTests [0x42c7ad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4283ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428373]\\n??:? _d_run_main [0x4282de]\\n??:? main [0x427d2f]\\\
    n??:? __libc_start_main [0x7746d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n   \
    \ >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    // implement this function\n    string s = \"\";\n    for (int i\
    \ = 0; i <= n; i++)\n    {\n        s += to!string(i) + \" \";\n    }\n    return\
    \ s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdnzbuztn.d(16): Error: template instance `to!string` template\
    \ `to` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdnzbuztn.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError

name: HumanEval_51_remove_vowels
language: d
results:
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string res = \"\";\n   \
    \ foreach(char c; text) {\n        if ((c == 'a') || (c == 'e') || (c == 'i')\
    \ || (c == 'o') || (c == 'u')) {\n        } else {\n            res ~= c;\n  \
    \      }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5clz89gf.d(38): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428065]\\n??:? void tmp5clz89gf.__unittest_L28_C1()\
    \ [0x427c9f]\\n??:? void tmp5clz89gf.__modtest() [0x427de4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c6fb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b60a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42ffe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430490]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42ff6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b5e1]\\n??:? runModuleUnitTests [0x42c4d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4284b4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42843b]\\n??:? _d_run_main [0x4283a6]\\n??:? main [0x427df7]\\\
    n??:? __libc_start_main [0x1216c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    text = text.toLower();\n\
    \    string vowels = \"aeiou\";\n    for (int i = 0; i < text.length; i++) \n\
    \    {\n        for (int j = 0; j < vowels.length; j++) \n        {\n        \
    \    if (text[i] == vowels[j]) \n            {\n                text = text.erase(i,\
    \ 1);\n                i--;\n                break;\n            }\n        }\n\
    \    }\n    return text;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3mjfr909.d(35): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3mjfr909.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text) \n    {\n        if(!(c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u'))\n        {\n            result ~= c;\n       \
    \ }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1h7b95xl.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428075]\\n??:? void tmp1h7b95xl.__unittest_L29_C1()\
    \ [0x427cb3]\\n??:? void tmp1h7b95xl.__modtest() [0x427df8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c70b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b61a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fff1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4304a0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42ff7d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b5f1]\\n??:? runModuleUnitTests [0x42c4e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4284c4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42844b]\\n??:? _d_run_main [0x4283b6]\\n??:? main [0x427e0b]\\\
    n??:? __libc_start_main [0xadb55554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{ \n    text = toLower(text);\n\
    \    uint size = text.length;\n    string result;\n    char[size] text_char_array\
    \ = text;\n    char[size] result_char_array;\n    uint i = 0;\n    foreach(char\
    \ ch; text_char_array)\n    {\n        if(ch != 'a' && ch != 'e' && ch != 'i'\
    \ && ch != 'o' && ch != 'u')\n        {\n            result_char_array[i] = ch;\n\
    \            i++;\n        }\n    }\n    result = result_char_array.idup;\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpguhaop71.d(19): Error: undefined identifier `toLower`\\n/tmp/tmpguhaop71.d(20):\
    \ Error: cannot implicitly convert expression `text.length` of type `ulong` to\
    \ `uint`\\n/tmp/tmpguhaop71.d(22): Error: variable `size` cannot be read at compile\
    \ time\\n/tmp/tmpguhaop71.d(23): Error: variable `size` cannot be read at compile\
    \ time\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpguhaop71.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    auto new_text = text.dup;\n\
    \    foreach(vowel; ['a', 'A', 'e', 'E', 'i', 'I', 'o', 'O', 'u', 'U']) {\n  \
    \      new_text = new_text.replace(vowel);\n    }\n    return new_text;\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsx95h0fb.d(21): Error: no property `replace` for type `char[]`\\\
    n/tmp/tmpsx95h0fb.d(23): Error: cannot implicitly convert expression `new_text`\
    \ of type `char[]` to `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpsx95h0fb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{ \n    int i;\n    string result;\n\
    \    for (i = 0; i < text.length; i++) {\n        if (text[i] == 'a' || text[i]\
    \ == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u' || text[i] == 'A'\
    \ || text[i] == 'E' || text[i] == 'I' || text[i] == 'O' || text[i] == 'U') {\n\
    \            continue;\n        }\n        result ~= text[i];\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result;\n    foreach(ch;\
    \ text) \n    {\n        if(ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' ||\
    \ ch == 'u' || ch == 'A' || ch == 'E' || ch == 'I' || ch == 'O' || ch == 'U')\
    \ \n        {\n            continue;\n        }\n        result ~= ch;\n    }\n\
    \    return result;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7l1jx539.d(30): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7l1jx539.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{ \n    import std.string : remove;\
    \ \n    return text.remove(\"[aeiouAEIOU]\"); \n} \nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfs0wy7xe.d(19): Error: module `std.string` import `remove` not\
    \ found\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfs0wy7xe.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string no_vowels = \"\"\
    ;\n    foreach(c; text) \n    {\n        if(c != 'a' && c != 'e' && c != 'i' &&\
    \ c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c !=\
    \ 'U') \n        {\n            no_vowels ~= c;\n        }\n    }\n    return\
    \ no_vowels;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\n   \
    \ assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\")\
    \ == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4ftp5_yk.d(29): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ftp5_yk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string removed_vowels;\n\
    \    foreach(i, v; text)\n    {\n        if(v != 'a' && v != 'e' && v != 'i' &&\
    \ v != 'o' && v != 'u' && v != 'A' && v != 'E' && v != 'I' && v != 'O' && v !=\
    \ 'U')\n        {\n            removed_vowels ~= v;\n        }\n    }\n    return\
    \ removed_vowels;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{ \n    // remove vowels\n    return\
    \ text.toUpper().replace(\"A\", \"\").replace(\"E\", \"\").replace(\"I\", \"\"\
    ).replace(\"O\", \"\").replace(\"U\", \"\");\n}\n/*\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm8c89mgj.d(22): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm8c89mgj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    auto len = text.length;\n\
    \    string result;\n    foreach(c; text)\n    {\n        if(c == 'a' || c ==\
    \ 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I'\
    \ || c == 'O' || c == 'U')\n        {\n            continue;\n        }\n    \
    \    else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmss9k82u.d(34): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmss9k82u.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    // Todo: Remove vowels and\
    \ return text without vowels\n    return \"\";\n}\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8p0_s9h0.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427fb5]\\n??:? void tmp8p0_s9h0.__unittest_L22_C1()\
    \ [0x427b0e]\\n??:? void tmp8p0_s9h0.__modtest() [0x427d38]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc5f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42ab6e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc85]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430134]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fc11]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42ab45]\\n??:? runModuleUnitTests [0x42ba35]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428404]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42838b]\\n??:? _d_run_main [0x4282f6]\\n??:? main [0x427d4b]\\\
    n??:? __libc_start_main [0x9ae9c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    char vowels[] = \"aeiouAEIOU\"\
    ;\n    text = replaceAll(text, vowels, \"\");\n    return text;\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpifmyxcbf.d(19): Deprecation: instead of C-style syntax, use D-style\
    \ syntax `char[] vowels`\\n/tmp/tmpifmyxcbf.d(19): Error: cannot implicitly convert\
    \ expression `\"aeiouAEIOU\"` of type `string` to `char[]`\\n/tmp/tmpifmyxcbf.d(20):\
    \ Error: undefined identifier `replaceAll`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpifmyxcbf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result;\n    foreach(c;\
    \ text)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c ==\
    \ 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n\
    \            //skip\n        }\n        else\n        {\n            result ~=\
    \ c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    foreach(char c; text)\n    {\n        if(c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    int i;\n    int text_length\
    \ = text.length;\n    string result;\n    int counter = 0;\n    for (i = 0; i\
    \ < text_length; i++)\n    {\n        if (text[i] != 'a' && text[i] != 'A' &&\
    \ text[i] != 'e' && text[i] != 'E' && text[i] != 'o' && text[i] != 'O' && text[i]\
    \ != 'i' && text[i] != 'I' && text[i] != 'u' && text[i] != 'U')\n        {\n \
    \           result = result + text[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvmfhjoom.d(20): Error: cannot implicitly convert expression `text.length`\
    \ of type `ulong` to `int`\\n/tmp/tmpvmfhjoom.d(27): Error: incompatible types\
    \ for `(result) + (text[cast(ulong)i])`: `string` and `immutable(char)`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvmfhjoom.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n  return text.replace(\"a\"\
    , \"\").replace(\"A\", \"\").replace(\"e\", \"\").replace(\"E\", \"\").replace(\"\
    i\", \"\").replace(\"I\", \"\").replace(\"o\", \"\").replace(\"O\", \"\").replace(\"\
    u\", \"\").replace(\"U\", \"\");\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvjf8kd_z.d(19): Error: no property `replace` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvjf8kd_z.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result = \"\";\n\
    \    bool vowel;\n    foreach(char c; text)\n    {\n        vowel = false;\n \
    \       foreach(char v; \"aeiou\")\n        {\n            if(c == v)\n      \
    \      {\n                vowel = true;\n                break;\n            }\n\
    \        }\n        if(!vowel)\n        {\n            result ~= c;\n        }\n\
    \    }\n    return result;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprdrtakm6.d(39): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprdrtakm6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>>\
    \ remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n\
    \    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n\
    \    \n*/\nstring remove_vowels(string text) \n{\n    string result;\n    foreach(const\
    \ char c; text)\n    {\n        if (!is_vowel(c))\n        {\n            result\
    \ ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7g0b5n8c.d(22): Error: undefined identifier `is_vowel`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7g0b5n8c.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError

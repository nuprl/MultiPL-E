name: HumanEval_65_circular_shift
language: d
results:
- program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n    \"\
    12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string s =\
    \ to!string(x);\n    return (shift <= s.length) ? s[shift .. $] ~ s[0 .. shift\
    \ - 1] : s[$ .. 0];\n}\nunittest\n{\n    alias candidate = circular_shift;\n\n\
    \    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) ==\
    \ \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuz2krrpj.d(15): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpuz2krrpj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n    \"\
    12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string result;\n\
    \    x = abs(x);\n    shift = abs(shift);\n    while (x) {\n        result ~=\
    \ x % 10;\n        x /= 10;\n    }\n    if (shift > result.length) {\n       \
    \ return result.reverse;\n    }\n    return result[shift .. $] ~ result[0 .. shift\
    \ - 1];\n}\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7gtu8he8.d(19): Error: cannot append type `long` to type `string`\\\
    n/tmp/tmp7gtu8he8.d(23): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp7gtu8he8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n    \"\
    12\"\n    \n*/\nstring circular_shift(long x, long shift) \n    long digits =\
    \ log10(x);\n    shift = shift % (digits + 1);\n    return format(\"%0.*d\", digits\
    \ + 1, x);\n}\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_8r8_ua8.d(14): Error: semicolon expected following function\
    \ declaration\\n/tmp/tmp_8r8_ua8.d(15): Error: no identifier for declarator `shift`\\\
    n/tmp/tmp_8r8_ua8.d(15): Error: declaration expected, not `=`\\n/tmp/tmp_8r8_ua8.d(16):\
    \ Error: declaration expected, not `return`\\n/tmp/tmp_8r8_ua8.d(17): Error: unrecognized\
    \ declaration\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8r8_ua8.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n    \"\
    12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    auto arr =\
    \ to!(char[])(x).array;\n    if (arr.length <= shift) \n    {\n        return\
    \ arr.reverse.idup;\n    }\n    return format(\"%.*s%.*s\", arr[shift..$].length,\
    \ arr[shift..$],\n                  arr[0..shift].length, arr[0..shift]);\n}\n\
    /*\nRepeatedly circular shift the digits of the integer x until the digits are\
    \ in\n    order, return the number of shifts it took.\n    >>> repeated_circular_shift(123)\n\
    \    3\n    >>> repeated_circular_shift(121)\n    1\n*/\nsize_t repeated_circular_shift(long\
    \ x) \n{\n    auto arr = to!(char[])(x).array;\n    auto arr2 = arr.dup;\n   \
    \ size_t count = 0;\n    while (arr != arr2.sort) \n    {\n        arr = circular_shift(to!long(arr.idup),\
    \ 1).to!(char[]).array;\n        count++;\n    }\n    return count;\n}\n/*\nCompute\
    \ the sum of sqrts of the shifted numbers.\n    >>> sum_sqrt_shifted(12345)\n\
    \    9.888543819998317\n*/\ndouble sum_sqrt_shifted(long x) \n{\n    double sum\
    \ = 0;\n    for (size_t i = 0; i < repeated_circular_shift(x); i++) \n    {\n\
    \        sum += sqrt(x);\n        x = to!long(circular_shift(x, 1));\n    }\n\
    \    return sum;\n}\n/*\nCheck if this is a prime number.\n    >>> is_prime(2)\n\
    \    true\n    >>> is_prime(3)\n    true\n    >>> is_prime(4)\n    false\n*/\n\
    unittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplf0xzbmg.d(15): Error: template instance `to!(char[])` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmplf0xzbmg.d(20): Error: undefined\
    \ identifier `format`\\n/tmp/tmplf0xzbmg.d(33): Error: template instance `to!(char[])`\
    \ template `to` is not defined, did you mean No?\\n/tmp/tmplf0xzbmg.d(53): Error:\
    \ `std.math.sqrt` called with argument types `(long)` matches both:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):\
    \     `std.math.sqrt(float x)`\\nand:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):\
    \     `std.math.sqrt(real x)`\\n/tmp/tmplf0xzbmg.d(54): Error: template instance\
    \ `to!long` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplf0xzbmg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n    \"\
    12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    return to!string(x).rotateRight(shift);\n\
    }\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu8pw4f_c.d(15): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpu8pw4f_c.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n    \"\
    12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n\treturn x.text.rotate(shift);\n\
    }\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj7_e2lb0.d(15): Error: no property `text` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj7_e2lb0.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n    \"\
    12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string digitStr\
    \ = to!string(x);\n    if (shift > digitStr.length) \n    {\n        return reverse(digitStr);\n\
    \    }\n    else \n    {\n        return digitStr[shift..$] ~ digitStr[0..shift-1];\n\
    \    }\n}\n/*\nTest if x is a circular prime in bases <= base.\n    >>> is_circular_prime(197,\
    \ 10)\n    True\n    >>> is_circular_prime(197, 2)\n    False\n    >>> is_circular_prime(7,\
    \ 10)\n    True\n    >>> is_circular_prime(11, 10)\n    True\n    >>> is_circular_prime(13,\
    \ 10)\n    True\n*/\nunittest\n{\n    alias candidate = circular_shift;\n\n  \
    \  assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"\
    12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L, 1L)\
    \ == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphjv5y1d1.d(15): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmphjv5y1d1.d(18): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmphjv5y1d1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n    \"\
    12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    enum digits\
    \ = digits(x);\n    return digits[shift .. $] ~ digits[0 .. shift];\n}\nunittest\n\
    {\n    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) ==\
    \ \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7g8mycvf.d(15): Error: undefined identifier `digits`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7g8mycvf.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n    \"\
    12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string digitstr\
    \ = to!string(x);\n    long n = digitstr.length;\n    shift = shift % n;\n   \
    \ if (shift == 0)\n        return digitstr;\n    string front = digitstr[0..$-shift];\n\
    \    string back = digitstr[$-shift..$];\n    return front ~ back;\n}\n//bool\
    \ is_prime(long n) {\n//    if (n < 2)\n//        return false;\n//    if (n %\
    \ 2 == 0)\n//        return n == 2;\n//    long i = 3;\n//    long lim = cast(long)sqrt(n);\n\
    //    while (i <= lim) {\n//        if (n % i == 0)\n//            return false;\n\
    //        i += 2;\n//    }\n//    return true;\n//}\n/*\nDecode the string S as\
    \ a path to a file/directory, return the\n    full path to that file/directory.\n\
    \    I.e. resolve the '..' and '.' in the path.\n    >>> decode_path(\"/a/b/../c\"\
    )\n    \"/a/c\"\n    >>> decode_path(\"/a/b/../c/../d\")\n    \"/a/d\"\n    >>>\
    \ decode_path(\"/a/b/c/d/../../../e\")\n    \"/e\"\n    >>> decode_path(\"a/b/c/d/../../../e\"\
    )\n    \"a/e\"\n    >>> decode_path(\"a/b/c/d/../../../../e\")\n    \"../e\"\n\
    \    >>> decode_path(\"a/b/c/d/../../../../../e\")\n    \"../../e\"\n    >>> decode_path(\"\
    a/b/c/d/../../../../../../e\")\n    \"../../../e\"\n    >>> decode_path(\"a/b/c/d/../../../../../../../e\"\
    )\n    \"../../../../e\"\n    >>> decode_path(\"../../../../../../../../../../../../../../e\"\
    )\n    \"../../../../../../../../../../../../../../e\"\n    >>> decode_\nunittest\n\
    {\n    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) ==\
    \ \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqrg6obq1.d(38): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqrg6obq1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n    \"\
    12\"\n    \n*/\nstring circular_shift(long x, long shift) \n    {\n    auto shiftStr\
    \ = to!string(x);\n    return to!string(shiftStr[$-shift .. $] ~ shiftStr[0 ..\
    \ $-shift]);\n    }\n/*\nCount the number of bits set in the integer n.\n    >>>\
    \ count_bits(5)\n    2\n    >>> count_bits(0)\n    0\n    >>> count_bits(1)\n\
    \    1\n    >>> count_bits(2)\n    1\n    >>> count_bits(3)\n    2\n    >>> count_bits(7)\n\
    \    3\n*/\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4rwpd35_.d(15): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmp4rwpd35_.d(16): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4rwpd35_.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n    \"\
    12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    enum digits\
    \ = (int)std.string.format(\"%Ld\", x).length;\n    if (shift >= digits)\n   \
    \     return std.string.format(\"%Ld\", x).dup.reverse;\n    long[] rest = new\
    \ long[digits];\n    for (int i = 0; i < digits; i++)\n    {\n        rest[i]\
    \ = x % 10;\n        x /= 10;\n    }\n    long[] first = rest[digits - shift ..\
    \ digits];\n    rest = rest[0 .. digits - shift];\n    rest = first ~ rest;\n\
    \    return std.string.format(\"%Ld\", rest.join.interpretAs!long).dup;\n}\nunittest\n\
    {\n    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) ==\
    \ \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzyh2zv__.d(15): Error: C style cast illegal, use `cast(int)std.string.format(\"\
    %Ld\", x).length`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzyh2zv__.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n    \"\
    12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string s =\
    \ to!string(x);\n    shift %= s.length;\n    auto shifted = s[shift .. $];\n \
    \   shifted ~= s[0 .. shift];\n    return shifted;\n}\n/*\nReturn the digit at\
    \ index n of the integer x.\n    >>> digit_at(1234, 0)\n    4\n    >>> digit_at(1234,\
    \ 1)\n    3\n    >>> digit_at(1234, 2)\n    2\n    >>> digit_at(1234, 3)\n   \
    \ 1\n*/\nlong digit_at(long x, long n) \n{\n    return x % 10;\n}\nunittest\n\
    {\n    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) ==\
    \ \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplmn19zvf.d(15): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmplmn19zvf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n    \"\
    12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string s =\
    \ to!string(x);\n    if (shift > s.length)\n        return reverse(s);\n    return\
    \ s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate = circular_shift;\n\
    \n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) ==\
    \ \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpk5twzp58.d(15): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmpk5twzp58.d(17): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpk5twzp58.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n    \"\
    12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    // FIXME: doesn't\
    \ work for negative numbers, need\n    // to fix algorithm\n    auto digits =\
    \ appender!string();\n    x = abs(x);\n    shift = abs(shift);\n    for (long\
    \ i = 0; i < shift; i++)\n    {\n        long last = x % 10;\n        x /= 10;\n\
    \        digits.put(x);\n        x = last * pow(10, int(digits.length));\n   \
    \ }\n    return to!string(digits.data);\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppwspuwe7.d(17): Error: template instance `appender!string` template\
    \ `appender` is not defined\\n/tmp/tmppwspuwe7.d(27): Error: template instance\
    \ `to!string` template `to` is not defined, did you mean No?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppwspuwe7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n    \"\
    12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    long nDigits\
    \ = log10(x).floor;\n    string result = format(\"%d\", x);\n    shift %= nDigits;\n\
    \    if (shift == 0) \n        return result;\n    reverse(result);\n    string\
    \ head = result[$-shift..$];\n    string tail = result[0..$-shift-1];\n    reverse(head);\n\
    \    reverse(tail);\n    return head ~ tail;\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcpktyjoa.d(15): Error: cannot implicitly convert expression `floor(log10(cast(real)x))`\
    \ of type `real` to `long`\\n/tmp/tmpcpktyjoa.d(16): Error: undefined identifier\
    \ `format`\\n/tmp/tmpcpktyjoa.d(20): Error: template `std.typecons.reverse` cannot\
    \ deduce function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\n/tmp/tmpcpktyjoa.d(23):\
    \ Error: template `std.typecons.reverse` cannot deduce function from argument\
    \ types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\n/tmp/tmpcpktyjoa.d(24):\
    \ Error: template `std.typecons.reverse` cannot deduce function from argument\
    \ types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpcpktyjoa.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n    \"\
    12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n  string s = to!string(x);\n\
    \  shift %= s.length;\n  return s[shift..$] ~ s[0..shift];\n}\nunittest\n{\n \
    \   alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"\
    001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_lzhwrkp.d(15): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp_lzhwrkp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n    \"\
    12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n  long n = numDigits(x);\n\
    \  string xString = to!string(x);\n  if (shift >= n)\n    return xString[shift\
    \ - n .. n - 1].reverse;\n  else\n    return xString[shift .. n - 1] ~ xString[0\
    \ .. shift - 1];\n}\n \n/*\n  Returns the number of digits in x.\n    >>> numDigits(0)\n\
    \    1\n    >>> numDigits(10)\n    2\n    >>> numDigits(123)\n    3\n*/\nlong\
    \ numDigits(long x) \n{\n  long n = 1;\n  while (x / 10 > 0) \n  {\n    x /= 10;\n\
    \    n++;\n  }\n  return n;\n}\n \nunittest\n{\n    alias candidate = circular_shift;\n\
    \n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) ==\
    \ \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbyz2_mb2.d(16): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmpbyz2_mb2.d(18): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpbyz2_mb2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n    \"\
    12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    auto v = string(to!string(x));\n\
    \    for (;shift >= v.length; shift -= v.length)\n    {\n        v = reverse(v);\n\
    \    }\n    return v[shift..$] ~ v[0..shift];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkt_eo6pn.d(15): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpkt_eo6pn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n    \"\
    12\"\n    \n*/\nstring circular_shift(long x, long shift) \nin {\n    assert(shift\
    \ >= 0);\n}\nbody {\n    if (shift == 0) return to!string(x);\n    auto str =\
    \ to!string(x);\n    if (shift >= str.length) return str.dup.reverse;\n    return\
    \ str[shift..$] ~ str[0..shift-1];\n}\nunittest\n{\n    alias candidate = circular_shift;\n\
    \n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) ==\
    \ \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm8v6266x.d(18): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmpm8v6266x.d(19): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm8v6266x.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n    \"\
    12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    long size =\
    \ digit_count(x);\n    long[] r = new long[size];\n    long[] rr = new long[size];\n\
    \    long i = 0;\n    while (x != 0) \n    {\n        r[i] = x % 10;\n       \
    \ x /= 10;\n        i++;\n    }\n    for (i = 0; i < size; i++) \n    {\n    \
    \    rr[(i + shift) % size] = r[i];\n    }\n    string result = \"\";\n    for\
    \ (i = 0; i < size; i++) \n    {\n        result ~= (to!string(rr[i]));\n    }\n\
    \    return result;\n}\n/*\n    A node for the graph.\n    The nodes are integers\
    \ that are shifted right\n    by the specified amount.\n    Each node is connected\
    \ to the next node \n    and all nodes in between that are divisible by 3.\n*/\n\
    class Node \n{\n    long id;\n    long value;\n    long shift;\n    string name;\n\
    \    bool visited;\n    Node[] edges;\n    this(long x, long shift) \n    {\n\
    \        this.value = x;\n        this.shift = shift;\n        this.name = (to!string(x));\n\
    \        this.id = x;\n        this.visited = false;\n        this.edges = new\
    \ Node[];\n    }\n    void add_edge(Node n) \n    {\n        edges ~= n;\n   \
    \ }\n    void create_edges(Node[] nodes) \n    {\n        bool found = false;\n\
    \        foreach (Node n; nodes) \n        {\n            if (this.value % 3 ==\
    \ 0 && n.value % 3 == 0) \n            {\n                this.add_edge(n);\n\
    \                found = true;\n            }\n            if (n.value == this.value\
    \ + 1) \n            {\n                if (found) \n                {\n     \
    \               return;\n                }\n                this.add_edge(n);\n\
    \            }\n        }\n    }\n    long get_id() \n    {\n        return this.id;\n\
    \   \nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu543adv8.d(88): Error: found `unittest` instead of statement\\\
    n/tmp/tmpu543adv8.d(98): Error: `}` expected following members in `class` declaration\
    \ at /tmp/tmpu543adv8.d(43)\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpu543adv8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError

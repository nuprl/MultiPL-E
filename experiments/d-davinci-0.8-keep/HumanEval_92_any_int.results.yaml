name: HumanEval_92_any_int
language: d
results:
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (cast(int)x == cast(int)y + cast(int)z) ||\n    (cast(int)y\
    \ == cast(int)x + cast(int)z) ||\n    (cast(int)z == cast(int)x + cast(int)y);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfo1uwk5h.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ed5]\\n??:? void tmpfo1uwk5h.__unittest_L28_C1()\
    \ [0x427c3f]\\n??:? void tmpfo1uwk5h.__modtest() [0x427c54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbfb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa8e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa65]\\n??:? runModuleUnitTests [0x42b9d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428324]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282ab]\\n??:? _d_run_main [0x428216]\\n??:? main [0x427c67]\\\
    n??:? __libc_start_main [0x9d9c2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (is(typeof(x) == int && typeof(y) == int && typeof(z) ==\
    \ int))\n    {\n        if (x == y + z || y == x + z || z == x + y)\n        {\n\
    \            return true;\n        }\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpum_0gckk.d(24): Error: found `&&` when expecting `)`\\n/tmp/tmpum_0gckk.d(24):\
    \ Error: found `typeof` when expecting `)`\\n/tmp/tmpum_0gckk.d(24): Error: found\
    \ `&&` when expecting `.` following int\\n/tmp/tmpum_0gckk.d(24): Error: found\
    \ `typeof` when expecting identifier following `int`.\\n/tmp/tmpum_0gckk.d(24):\
    \ Error: found `==` when expecting `;` following statement\\n/tmp/tmpum_0gckk.d(24):\
    \ Error: no identifier for declarator `int`\\n/tmp/tmpum_0gckk.d(24): Error: found\
    \ `)` instead of statement\\n/tmp/tmpum_0gckk.d(30): Error: unrecognized declaration\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpum_0gckk.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    float sum = x + y + z;\n    if(x == y + z)\n        return\
    \ true;\n    else if(y == x + z)\n        return true;\n    else if(z == x + y)\n\
    \        return true;\n    else\n        return false;\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp54blgzcc.d(40): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427eed]\\n??:? void tmp54blgzcc.__unittest_L34_C1()\
    \ [0x427af8]\\n??:? void tmp54blgzcc.__modtest() [0x427c70]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc13]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aaa6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc39]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbc5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa7d]\\n??:? runModuleUnitTests [0x42b9e9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42833c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282c3]\\n??:? _d_run_main [0x42822e]\\n??:? main [0x427c83]\\\
    n??:? __libc_start_main [0x72d9a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return x.isNaN == false && y.isNaN == false && z.isNaN ==\
    \ false && (x == y + z || x == y - z || x == z - y || z == y + x || z == y - x\
    \ || z == x - y || y == x + z || y == x - z || y == z - x);\n}\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpy3xtl3cp.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428065]\\n??:? void tmpy3xtl3cp.__unittest_L26_C1()\
    \ [0x427c30]\\n??:? void tmpy3xtl3cp.__modtest() [0x427de8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bd8b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42ac1e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fdb1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430260]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fd3d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42abf5]\\n??:? runModuleUnitTests [0x42bb61]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4284b4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42843b]\\n??:? _d_run_main [0x4283a6]\\n??:? main [0x427dfb]\\\
    n??:? __libc_start_main [0x4a405554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && is(typeof(cast(int)x)\
    \ == int) && is(typeof(cast(int)y) == int) && is(typeof(cast(int)z) == int);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqxlkmt8m.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427edd]\\n??:? void tmpqxlkmt8m.__unittest_L26_C1()\
    \ [0x427ae4]\\n??:? void tmpqxlkmt8m.__modtest() [0x427c5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa96]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbb5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa6d]\\n??:? runModuleUnitTests [0x42b9d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42832c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282b3]\\n??:? _d_run_main [0x42821e]\\n??:? main [0x427c6f]\\\
    n??:? __libc_start_main [0xc1468554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return int(x) + int(y) == int(z) || int(x) + int(z) == int(y)\
    \ || int(y) + int(z) == int(x);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbwfme2qr.d(24): Error: cannot implicitly convert expression `x`\
    \ of type `float` to `int`\\n/tmp/tmpbwfme2qr.d(24): Error: cannot implicitly\
    \ convert expression `y` of type `float` to `int`\\n/tmp/tmpbwfme2qr.d(24): Error:\
    \ cannot implicitly convert expression `z` of type `float` to `int`\\n/tmp/tmpbwfme2qr.d(24):\
    \ Error: cannot implicitly convert expression `x` of type `float` to `int`\\n/tmp/tmpbwfme2qr.d(24):\
    \ Error: cannot implicitly convert expression `z` of type `float` to `int`\\n/tmp/tmpbwfme2qr.d(24):\
    \ Error: cannot implicitly convert expression `y` of type `float` to `int`\\n/tmp/tmpbwfme2qr.d(24):\
    \ Error: cannot implicitly convert expression `y` of type `float` to `int`\\n/tmp/tmpbwfme2qr.d(24):\
    \ Error: cannot implicitly convert expression `z` of type `float` to `int`\\n/tmp/tmpbwfme2qr.d(24):\
    \ Error: cannot implicitly convert expression `x` of type `float` to `int`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbwfme2qr.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (is(typeof(x)) && is(typeof(y)) && is(typeof(z))) &&\
    \ (x == y + z || y == x + z || z == x + y);\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8eymqern.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427edd]\\n??:? void tmp8eymqern.__unittest_L26_C1()\
    \ [0x427ae4]\\n??:? void tmp8eymqern.__modtest() [0x427c5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa96]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbb5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa6d]\\n??:? runModuleUnitTests [0x42b9d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42832c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282b3]\\n??:? _d_run_main [0x42821e]\\n??:? main [0x427c6f]\\\
    n??:? __libc_start_main [0x15dc3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    float x1 = floor(x);\n    float y1 = floor(y);\n    float\
    \ z1 = floor(z);\n    \n    float sum1 = x1 + y1;\n    float sum2 = x1 + z1;\n\
    \    float sum3 = y1 + z1;\n    \n    return ( (x1 == sum2 || x1 == sum3) || (y1\
    \ == sum1 || y1 == sum3) || (z1 == sum1 || z1 == sum2));\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpodpj3_pr.d(33): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpodpj3_pr.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return floor(x) == x && floor(y) == y && floor(z) == z &&\
    \ (x + y == z || x + z == y || y + z == x);\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpt6q_kvnt.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4280c5]\\n??:? void tmpt6q_kvnt.__unittest_L26_C1()\
    \ [0x427e2f]\\n??:? void tmpt6q_kvnt.__modtest() [0x427e44]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bf2f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42adc2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42ff55]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430404]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fee1]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42ad99]\\n??:? runModuleUnitTests [0x42bd05]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428514]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42849b]\\n??:? _d_run_main [0x428406]\\n??:? main [0x427e57]\\\
    n??:? __libc_start_main [0x3bbc9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    auto t = tuple(x, y, z);\n    auto a = t[0];\n    auto b =\
    \ t[1];\n    auto c = t[2];\n    auto x = cast(int) a;\n    auto y = cast(int)\
    \ b;\n    auto z = cast(int) c;\n    return( a == b + c || b == a + c || c ==\
    \ a + b );\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7zq_7z4i.d(32): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zq_7z4i.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n  return is(typeof(x) == int)&&is(typeof(y) == int)&&is(typeof(z)\
    \ == int)&&((x==y+z)||(y==x+z)||(z==x+y));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8xrugj7_.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp8xrugj7_.__unittest_L26_C1()\
    \ [0x427a38]\\n??:? void tmp8xrugj7_.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x5705d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && x == cast(int)x\
    \ && y == cast(int)y && z == cast(int)z;\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpde6k2nxk.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427f1d]\\n??:? void tmpde6k2nxk.__unittest_L26_C1()\
    \ [0x427c87]\\n??:? void tmpde6k2nxk.__modtest() [0x427c9c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc43]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aad6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc69]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430118]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbf5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aaad]\\n??:? runModuleUnitTests [0x42ba19]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42836c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282f3]\\n??:? _d_run_main [0x42825e]\\n??:? main [0x427caf]\\\
    n??:? __libc_start_main [0x4227a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    // write your code here\n    if(isInteger(x+y)==true)\n  \
    \  {\n        if(x+y==z)\n        {\n            return true;\n        }\n   \
    \     else\n        {\n            return false;\n        }\n    }\n    else if(isInteger(x+z)==true)\n\
    \    {\n        if(x+z==y)\n        {\n            return true;\n        }\n \
    \       else\n        {\n            return false;\n        }\n    }\n    else\
    \ if(isInteger(y+z)==true)\n    {\n        if(y+z==x)\n        {\n           \
    \ return true;\n        }\n        else\n        {\n            return false;\n\
    \        }\n    }\n    else\n    {\n        return false;\n    }\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp39uiqhlu.d(25): Error: undefined identifier `isInteger`\\n/tmp/tmp39uiqhlu.d(36):\
    \ Error: undefined identifier `isInteger`\\n/tmp/tmp39uiqhlu.d(47): Error: undefined\
    \ identifier `isInteger`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp39uiqhlu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x - y == z || y - x == z || y - z == x || z - y ==\
    \ x || x - z == y || z - x == y) && is(typeof(x) == int) && is(typeof(y) == int)\
    \ && is(typeof(z) == int);\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkfp0or61.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427eb5]\\n??:? void tmpkfp0or61.__unittest_L26_C1()\
    \ [0x427a5c]\\n??:? void tmpkfp0or61.__modtest() [0x427c38]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbdb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa6e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc01]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb8d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa45]\\n??:? runModuleUnitTests [0x42b9b1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428304]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42828b]\\n??:? _d_run_main [0x4281f6]\\n??:? main [0x427c4b]\\\
    n??:? __libc_start_main [0xaeef0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z || y == x + z || z == x + y) && (is(typeof(x)\
    \ == int) && is(typeof(y) == int) && is(typeof(z) == int));\n}\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnzsu69dw.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e9d]\\n??:? void tmpnzsu69dw.__unittest_L26_C1()\
    \ [0x427a44]\\n??:? void tmpnzsu69dw.__modtest() [0x427c20]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbc3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa56]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430098]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa2d]\\n??:? runModuleUnitTests [0x42b999]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428273]\\n??:? _d_run_main [0x4281de]\\n??:? main [0x427c33]\\\
    n??:? __libc_start_main [0xa3b4a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    int a = cast(int)x;\n    int b = cast(int)y;\n    int c =\
    \ cast(int)z;\n    bool result = false;\n    if (a == b + c || a + b == c || a\
    \ + c == b)\n    {\n        result = true;\n    }\n    return result;\n    \n\
    \    \n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpyv0q1qhq.d(49): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ecd]\\n??:? void tmpyv0q1qhq.__unittest_L36_C1()\
    \ [0x427c37]\\n??:? void tmpyv0q1qhq.__modtest() [0x427c4c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa86]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300c8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fba5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa5d]\\n??:? runModuleUnitTests [0x42b9c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42831c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282a3]\\n??:? _d_run_main [0x42820e]\\n??:? main [0x427c5f]\\\
    n??:? __libc_start_main [0x528c0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    float sum = x + y + z;\n    if(x == sum - (y + z) || y ==\
    \ sum - (x + z) || z == sum - (x + y)){\n        return true;\n    }\n    return\
    \ false;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpe4y_b1kr.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427f05]\\n??:? void tmpe4y_b1kr.__unittest_L30_C1()\
    \ [0x427ade]\\n??:? void tmpe4y_b1kr.__modtest() [0x427c88]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc2b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aabe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc51]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa95]\\n??:? runModuleUnitTests [0x42ba01]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428354]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282db]\\n??:? _d_run_main [0x428246]\\n??:? main [0x427c9b]\\\
    n??:? __libc_start_main [0x8a5a5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x % 1 == 0 || y % 1 == 0 || z % 1 == 0) && (x == y\
    \ + z || y == x + z || z == x + y);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8payp8wm.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427f4d]\\n??:? void tmp8payp8wm.__unittest_L26_C1()\
    \ [0x427b54]\\n??:? void tmp8payp8wm.__modtest() [0x427ccc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc73]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42ab06]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc99]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430148]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fc25]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aadd]\\n??:? runModuleUnitTests [0x42ba49]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42839c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428323]\\n??:? _d_run_main [0x42828e]\\n??:? main [0x427cdf]\\\
    n??:? __libc_start_main [0x2eaa554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (is(typeof(x) == int) && is(typeof(y) == int) && is(typeof(z)\
    \ == int)) && \n           (x == y + z || y == x + z || z == x + y);\n}\n/*\n\
    \    Java solution\n    public class Challenge {\n\tpublic static boolean any_int(float\
    \ x, float y, float z) {\n\t\treturn (int)x == x && (int)y == y && (int)z == z\
    \ && (x + y == z || x + z == y || y + z == x);\n\t}\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptnvdwgp0.d(27): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptnvdwgp0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (isNumericString(x.to!string)) return false;\n    if (isNumericString(y.to!string))\
    \ return false;\n    if (isNumericString(z.to!string)) return false;\n    if ((x\
    \ + y == z) || (x + z == y) || (y + z == x)) return true;\n    return false;\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz1ubpzsp.d(24): Error: undefined identifier `isNumericString`\\\
    n/tmp/tmpz1ubpzsp.d(25): Error: undefined identifier `isNumericString`\\n/tmp/tmpz1ubpzsp.d(26):\
    \ Error: undefined identifier `isNumericString`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpz1ubpzsp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError

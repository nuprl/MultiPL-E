name: HumanEval_150_x_or_y
language: d
results:
- program: "import std.typecons;\nimport std.math;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15,\
    \ 8, 5) == 5\n    \n    \n*/\nlong x_or_y(long n, long x, long y) \n{\n   return\
    \ n.isPrime ? x : y;\n}\nunittest\n{\n    alias candidate = x_or_y;\n\n    assert(candidate(7L,\
    \ 34L, 12L) == 34L);\n    assert(candidate(15L, 8L, 5L) == 5L);\n    assert(candidate(3L,\
    \ 33L, 5212L) == 33L);\n    assert(candidate(1259L, 3L, 52L) == 3L);\n    assert(candidate(7919L,\
    \ -1L, 12L) == -1L);\n    assert(candidate(3609L, 1245L, 583L) == 583L);\n   \
    \ assert(candidate(91L, 56L, 129L) == 129L);\n    assert(candidate(6L, 34L, 1234L)\
    \ == 1234L);\n    assert(candidate(1L, 2L, 0L) == 0L);\n    assert(candidate(2L,\
    \ 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpym5uha_9.d(15): Error: no property `isPrime` for type `long`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpym5uha_9.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15,\
    \ 8, 5) == 5\n    \n    \n*/\nlong x_or_y(long n, long x, long y) \n{ \n  if (n<2)\n\
    \    return y;\n  else if (n == 2)\n    return x;\n  else\n  {\n    foreach (el;2..sqrt(n))\n\
    \    {\n      if (n%el == 0)\n        return y;\n    }\n    return x;\n  }\n \
    \ \n}\nunittest\n{\n    alias candidate = x_or_y;\n\n    assert(candidate(7L,\
    \ 34L, 12L) == 34L);\n    assert(candidate(15L, 8L, 5L) == 5L);\n    assert(candidate(3L,\
    \ 33L, 5212L) == 33L);\n    assert(candidate(1259L, 3L, 52L) == 3L);\n    assert(candidate(7919L,\
    \ -1L, 12L) == -1L);\n    assert(candidate(3609L, 1245L, 583L) == 583L);\n   \
    \ assert(candidate(91L, 56L, 129L) == 129L);\n    assert(candidate(6L, 34L, 1234L)\
    \ == 1234L);\n    assert(candidate(1L, 2L, 0L) == 0L);\n    assert(candidate(2L,\
    \ 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmq22egvu.d(21): Error: `std.math.sqrt` called with argument types\
    \ `(long)` matches both:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):\
    \     `std.math.sqrt(float x)`\\nand:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):\
    \     `std.math.sqrt(real x)`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpmq22egvu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15,\
    \ 8, 5) == 5\n    \n    \n*/\nlong x_or_y(long n, long x, long y) \n{\n    long\
    \ i;\n    enum bool isPrime = true;\n    for (i = 2; i <= n/2; i++)\n    {\n \
    \       if (n % i == 0)\n        {\n            isPrime = false;\n           \
    \ break;\n        }\n    }\n    if (isPrime)\n    {\n        return x;\n    }\n\
    \    else\n    {\n        return y;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = x_or_y;\n\n    assert(candidate(7L, 34L, 12L) == 34L);\n    assert(candidate(15L,\
    \ 8L, 5L) == 5L);\n    assert(candidate(3L, 33L, 5212L) == 33L);\n    assert(candidate(1259L,\
    \ 3L, 52L) == 3L);\n    assert(candidate(7919L, -1L, 12L) == -1L);\n    assert(candidate(3609L,\
    \ 1245L, 583L) == 583L);\n    assert(candidate(91L, 56L, 129L) == 129L);\n   \
    \ assert(candidate(6L, 34L, 1234L) == 1234L);\n    assert(candidate(1L, 2L, 0L)\
    \ == 0L);\n    assert(candidate(2L, 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprmyhc1qs.d(21): Error: cannot modify constant `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprmyhc1qs.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15,\
    \ 8, 5) == 5\n    \n    \n*/\nlong x_or_y(long n, long x, long y) \n{\n    \n\
    \    return n.isPrime ? x : y;\n    \n}\nunittest\n{\n    alias candidate = x_or_y;\n\
    \n    assert(candidate(7L, 34L, 12L) == 34L);\n    assert(candidate(15L, 8L, 5L)\
    \ == 5L);\n    assert(candidate(3L, 33L, 5212L) == 33L);\n    assert(candidate(1259L,\
    \ 3L, 52L) == 3L);\n    assert(candidate(7919L, -1L, 12L) == -1L);\n    assert(candidate(3609L,\
    \ 1245L, 583L) == 583L);\n    assert(candidate(91L, 56L, 129L) == 129L);\n   \
    \ assert(candidate(6L, 34L, 1234L) == 1234L);\n    assert(candidate(1L, 2L, 0L)\
    \ == 0L);\n    assert(candidate(2L, 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuckx0yap.d(16): Error: no property `isPrime` for type `long`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuckx0yap.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15,\
    \ 8, 5) == 5\n    \n    \n*/\nlong x_or_y(long n, long x, long y) \n{\n    int\
    \ divisor = 0;\n    foreach(i; 1..n)\n    {\n      if(n % i == 0)\n        divisor++;\n\
    \    }\n    return divisor == 2 ? x : y;\n}\n/*\n    std.math.isPrime is not used\
    \ because a prime number is a natural number \n    greater than 1 and not divisible\
    \ by any other number.\n    So no need to check if it's greater than 1.\n*/\n\
    unittest\n{\n    alias candidate = x_or_y;\n\n    assert(candidate(7L, 34L, 12L)\
    \ == 34L);\n    assert(candidate(15L, 8L, 5L) == 5L);\n    assert(candidate(3L,\
    \ 33L, 5212L) == 33L);\n    assert(candidate(1259L, 3L, 52L) == 3L);\n    assert(candidate(7919L,\
    \ -1L, 12L) == -1L);\n    assert(candidate(3609L, 1245L, 583L) == 583L);\n   \
    \ assert(candidate(91L, 56L, 129L) == 129L);\n    assert(candidate(6L, 34L, 1234L)\
    \ == 1234L);\n    assert(candidate(1L, 2L, 0L) == 0L);\n    assert(candidate(2L,\
    \ 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpf2tfaju9.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ead]\\n??:? void tmpf2tfaju9.__unittest_L28_C1()\
    \ [0x427a82]\\n??:? void tmpf2tfaju9.__modtest() [0x427c2c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbd3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa66]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa3d]\\n??:? runModuleUnitTests [0x42b9a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428283]\\n??:? _d_run_main [0x4281ee]\\n??:? main [0x427c3f]\\\
    n??:? __libc_start_main [0xf1d76554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15,\
    \ 8, 5) == 5\n    \n    \n*/\nlong x_or_y(long n, long x, long y) \n{\n    auto\
    \ fact = factorize(n);\n    int result;\n    int x = 10;\n    int y = 15;\n  \
    \  if(x > y)\n        result = x;\n    else\n        result = y;\n    return result;\n\
    }\nunittest\n{\n    alias candidate = x_or_y;\n\n    assert(candidate(7L, 34L,\
    \ 12L) == 34L);\n    assert(candidate(15L, 8L, 5L) == 5L);\n    assert(candidate(3L,\
    \ 33L, 5212L) == 33L);\n    assert(candidate(1259L, 3L, 52L) == 3L);\n    assert(candidate(7919L,\
    \ -1L, 12L) == -1L);\n    assert(candidate(3609L, 1245L, 583L) == 583L);\n   \
    \ assert(candidate(91L, 56L, 129L) == 129L);\n    assert(candidate(6L, 34L, 1234L)\
    \ == 1234L);\n    assert(candidate(1L, 2L, 0L) == 0L);\n    assert(candidate(2L,\
    \ 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsh9xdr7m.d(15): Error: undefined identifier `factorize`\\n/tmp/tmpsh9xdr7m.d(17):\
    \ Error: variable `x` is shadowing variable `tmpsh9xdr7m.x_or_y.x`\\n/tmp/tmpsh9xdr7m.d(18):\
    \ Error: variable `y` is shadowing variable `tmpsh9xdr7m.x_or_y.y`\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsh9xdr7m.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15,\
    \ 8, 5) == 5\n    \n    \n*/\nlong x_or_y(long n, long x, long y) \n{\n    import\
    \ std.math;\nunittest\n{\n    alias candidate = x_or_y;\n\n    assert(candidate(7L,\
    \ 34L, 12L) == 34L);\n    assert(candidate(15L, 8L, 5L) == 5L);\n    assert(candidate(3L,\
    \ 33L, 5212L) == 33L);\n    assert(candidate(1259L, 3L, 52L) == 3L);\n    assert(candidate(7919L,\
    \ -1L, 12L) == -1L);\n    assert(candidate(3609L, 1245L, 583L) == 583L);\n   \
    \ assert(candidate(91L, 56L, 129L) == 129L);\n    assert(candidate(6L, 34L, 1234L)\
    \ == 1234L);\n    assert(candidate(1L, 2L, 0L) == 0L);\n    assert(candidate(2L,\
    \ 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmxqo4a9y.d(16): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmxqo4a9y.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15,\
    \ 8, 5) == 5\n    \n    \n*/\nlong x_or_y(long n, long x, long y) \n{\n    int\
    \ isPrime = 1;\n    if (n < 2) return y;\n    foreach (i; [2 .. cast(int)sqrt(n)])\n\
    \    {\n        if (n % i == 0) \n        {\n            isPrime = 0;\n      \
    \      break;\n        }\n    }\n    if (isPrime)\n        return x;\n    else\
    \ \n        return y;\n}\nunittest\n{\n    alias candidate = x_or_y;\n\n    assert(candidate(7L,\
    \ 34L, 12L) == 34L);\n    assert(candidate(15L, 8L, 5L) == 5L);\n    assert(candidate(3L,\
    \ 33L, 5212L) == 33L);\n    assert(candidate(1259L, 3L, 52L) == 3L);\n    assert(candidate(7919L,\
    \ -1L, 12L) == -1L);\n    assert(candidate(3609L, 1245L, 583L) == 583L);\n   \
    \ assert(candidate(91L, 56L, 129L) == 129L);\n    assert(candidate(6L, 34L, 1234L)\
    \ == 1234L);\n    assert(candidate(1L, 2L, 0L) == 0L);\n    assert(candidate(2L,\
    \ 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvianbe0v.d(17): Error: found `..` when expecting `,`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvianbe0v.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15,\
    \ 8, 5) == 5\n    \n    \n*/\nlong x_or_y(long n, long x, long y) \n    if (n\
    \ <= 2) \n        return x;\n    else \n        return y;\nunittest\n{\n    alias\
    \ candidate = x_or_y;\n\n    assert(candidate(7L, 34L, 12L) == 34L);\n    assert(candidate(15L,\
    \ 8L, 5L) == 5L);\n    assert(candidate(3L, 33L, 5212L) == 33L);\n    assert(candidate(1259L,\
    \ 3L, 52L) == 3L);\n    assert(candidate(7919L, -1L, 12L) == -1L);\n    assert(candidate(3609L,\
    \ 1245L, 583L) == 583L);\n    assert(candidate(91L, 56L, 129L) == 129L);\n   \
    \ assert(candidate(6L, 34L, 1234L) == 1234L);\n    assert(candidate(1L, 2L, 0L)\
    \ == 0L);\n    assert(candidate(2L, 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx23ax3q_.d(14): Error: cannot use function constraints for non-template\
    \ functions. Use `static if` instead\\n/tmp/tmpx23ax3q_.d(14): Error: declaration\
    \ expected, not `if`\\n/tmp/tmpx23ax3q_.d(16): Error: declaration expected, not\
    \ `else`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx23ax3q_.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15,\
    \ 8, 5) == 5\n    \n    \n*/\nlong x_or_y(long n, long x, long y) \n{\n    return\
    \ n.isPrime ? x : y;\n}\nunittest\n{\n    alias candidate = x_or_y;\n\n    assert(candidate(7L,\
    \ 34L, 12L) == 34L);\n    assert(candidate(15L, 8L, 5L) == 5L);\n    assert(candidate(3L,\
    \ 33L, 5212L) == 33L);\n    assert(candidate(1259L, 3L, 52L) == 3L);\n    assert(candidate(7919L,\
    \ -1L, 12L) == -1L);\n    assert(candidate(3609L, 1245L, 583L) == 583L);\n   \
    \ assert(candidate(91L, 56L, 129L) == 129L);\n    assert(candidate(6L, 34L, 1234L)\
    \ == 1234L);\n    assert(candidate(1L, 2L, 0L) == 0L);\n    assert(candidate(2L,\
    \ 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf83rvmgv.d(15): Error: no property `isPrime` for type `long`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf83rvmgv.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15,\
    \ 8, 5) == 5\n    \n    \n*/\nlong x_or_y(long n, long x, long y) \n    //@ requires\
    \ true;\n    //@ ensures result == x || result == y;\n{\n    return (is_prime(n)\
    \ ? x : y);\n}\nunittest\n{\n    alias candidate = x_or_y;\n\n    assert(candidate(7L,\
    \ 34L, 12L) == 34L);\n    assert(candidate(15L, 8L, 5L) == 5L);\n    assert(candidate(3L,\
    \ 33L, 5212L) == 33L);\n    assert(candidate(1259L, 3L, 52L) == 3L);\n    assert(candidate(7919L,\
    \ -1L, 12L) == -1L);\n    assert(candidate(3609L, 1245L, 583L) == 583L);\n   \
    \ assert(candidate(91L, 56L, 129L) == 129L);\n    assert(candidate(6L, 34L, 1234L)\
    \ == 1234L);\n    assert(candidate(1L, 2L, 0L) == 0L);\n    assert(candidate(2L,\
    \ 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4x8pu_22.d(17): Error: undefined identifier `is_prime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4x8pu_22.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15,\
    \ 8, 5) == 5\n    \n    \n*/\nlong x_or_y(long n, long x, long y) \n{\n    return\
    \ isPrime(n) ? x : y;\n}\nunittest\n{\n    alias candidate = x_or_y;\n\n    assert(candidate(7L,\
    \ 34L, 12L) == 34L);\n    assert(candidate(15L, 8L, 5L) == 5L);\n    assert(candidate(3L,\
    \ 33L, 5212L) == 33L);\n    assert(candidate(1259L, 3L, 52L) == 3L);\n    assert(candidate(7919L,\
    \ -1L, 12L) == -1L);\n    assert(candidate(3609L, 1245L, 583L) == 583L);\n   \
    \ assert(candidate(91L, 56L, 129L) == 129L);\n    assert(candidate(6L, 34L, 1234L)\
    \ == 1234L);\n    assert(candidate(1L, 2L, 0L) == 0L);\n    assert(candidate(2L,\
    \ 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg_vu4a1k.d(15): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg_vu4a1k.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15,\
    \ 8, 5) == 5\n    \n    \n*/\nlong x_or_y(long n, long x, long y) \n{\n    import\
    \ std.conv;\n    if (to!bool(n)) return x;\n    if (to!bool(x)) return y;\n  \
    \  import std.math : isPrime;\n    return isPrime(n) ? x : y;\n}\nunittest\n{\n\
    \    alias candidate = x_or_y;\n\n    assert(candidate(7L, 34L, 12L) == 34L);\n\
    \    assert(candidate(15L, 8L, 5L) == 5L);\n    assert(candidate(3L, 33L, 5212L)\
    \ == 33L);\n    assert(candidate(1259L, 3L, 52L) == 3L);\n    assert(candidate(7919L,\
    \ -1L, 12L) == -1L);\n    assert(candidate(3609L, 1245L, 583L) == 583L);\n   \
    \ assert(candidate(91L, 56L, 129L) == 129L);\n    assert(candidate(6L, 34L, 1234L)\
    \ == 1234L);\n    assert(candidate(1L, 2L, 0L) == 0L);\n    assert(candidate(2L,\
    \ 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwlr60ttf.d(18): Error: module `std.math` import `isPrime` not\
    \ found\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwlr60ttf.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15,\
    \ 8, 5) == 5\n    \n    \n*/\nlong x_or_y(long n, long x, long y) \n{\n    bool\
    \ isPrime = false;\n    bool isNotPrime = false;\n    if (n == 1) {\n        isNotPrime\
    \ = true;\n    } else {\n        for (long i = 2; i <= sqrt(n); i++) {\n     \
    \       if (n % i == 0) {\n                isNotPrime = true;\n              \
    \  break;\n            }\n        }\n    }\n    if (isNotPrime) {\n        return\
    \ y;\n    } else {\n        return x;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = x_or_y;\n\n    assert(candidate(7L, 34L, 12L) == 34L);\n    assert(candidate(15L,\
    \ 8L, 5L) == 5L);\n    assert(candidate(3L, 33L, 5212L) == 33L);\n    assert(candidate(1259L,\
    \ 3L, 52L) == 3L);\n    assert(candidate(7919L, -1L, 12L) == -1L);\n    assert(candidate(3609L,\
    \ 1245L, 583L) == 583L);\n    assert(candidate(91L, 56L, 129L) == 129L);\n   \
    \ assert(candidate(6L, 34L, 1234L) == 1234L);\n    assert(candidate(1L, 2L, 0L)\
    \ == 0L);\n    assert(candidate(2L, 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwarogohe.d(20): Error: `std.math.sqrt` called with argument types\
    \ `(long)` matches both:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):\
    \     `std.math.sqrt(float x)`\\nand:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):\
    \     `std.math.sqrt(real x)`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpwarogohe.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15,\
    \ 8, 5) == 5\n    \n    \n*/\nlong x_or_y(long n, long x, long y) \n{\n    import\
    \ std.math;\n    return n.isPrime ? x : y;\n}\nunittest\n{\n    alias candidate\
    \ = x_or_y;\n\n    assert(candidate(7L, 34L, 12L) == 34L);\n    assert(candidate(15L,\
    \ 8L, 5L) == 5L);\n    assert(candidate(3L, 33L, 5212L) == 33L);\n    assert(candidate(1259L,\
    \ 3L, 52L) == 3L);\n    assert(candidate(7919L, -1L, 12L) == -1L);\n    assert(candidate(3609L,\
    \ 1245L, 583L) == 583L);\n    assert(candidate(91L, 56L, 129L) == 129L);\n   \
    \ assert(candidate(6L, 34L, 1234L) == 1234L);\n    assert(candidate(1L, 2L, 0L)\
    \ == 0L);\n    assert(candidate(2L, 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsssx3yn4.d(16): Error: no property `isPrime` for type `long`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsssx3yn4.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15,\
    \ 8, 5) == 5\n    \n    \n*/\nlong x_or_y(long n, long x, long y) \n{\n    return\
    \ n.isPrime() ? x : y;\n}\n/*\nA template function that computes the dot product\
    \ of two vectors.\nIt should return a value of T (if T is an arithmetic type)\
    \ or\nthe dot product as a std.complex.Complex!T.\nunittest\n{\n    alias candidate\
    \ = x_or_y;\n\n    assert(candidate(7L, 34L, 12L) == 34L);\n    assert(candidate(15L,\
    \ 8L, 5L) == 5L);\n    assert(candidate(3L, 33L, 5212L) == 33L);\n    assert(candidate(1259L,\
    \ 3L, 52L) == 3L);\n    assert(candidate(7919L, -1L, 12L) == -1L);\n    assert(candidate(3609L,\
    \ 1245L, 583L) == 583L);\n    assert(candidate(91L, 56L, 129L) == 129L);\n   \
    \ assert(candidate(6L, 34L, 1234L) == 1234L);\n    assert(candidate(1L, 2L, 0L)\
    \ == 0L);\n    assert(candidate(2L, 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvi273fnq.d(17): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvi273fnq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15,\
    \ 8, 5) == 5\n    \n    \n*/\nlong x_or_y(long n, long x, long y) \n{\n    bool\
    \ prime = true;\n    long i = 2;\n    while (i < int(sqrt(n)) + 1) {\n       \
    \ if (n % i == 0) {\n            prime = false;\n            break;\n        }\n\
    \        i++;\n    }\n    if (prime) {\n        return x;\n    } else {\n    \
    \    return y;\n    }\n}\nunittest\n{\n    alias candidate = x_or_y;\n\n    assert(candidate(7L,\
    \ 34L, 12L) == 34L);\n    assert(candidate(15L, 8L, 5L) == 5L);\n    assert(candidate(3L,\
    \ 33L, 5212L) == 33L);\n    assert(candidate(1259L, 3L, 52L) == 3L);\n    assert(candidate(7919L,\
    \ -1L, 12L) == -1L);\n    assert(candidate(3609L, 1245L, 583L) == 583L);\n   \
    \ assert(candidate(91L, 56L, 129L) == 129L);\n    assert(candidate(6L, 34L, 1234L)\
    \ == 1234L);\n    assert(candidate(1L, 2L, 0L) == 0L);\n    assert(candidate(2L,\
    \ 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplzgdy3zk.d(17): Error: `std.math.sqrt` called with argument types\
    \ `(long)` matches both:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):\
    \     `std.math.sqrt(float x)`\\nand:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):\
    \     `std.math.sqrt(real x)`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmplzgdy3zk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15,\
    \ 8, 5) == 5\n    \n    \n*/\nlong x_or_y(long n, long x, long y) \n{\n    import\
    \ core.stdc.math : abs;\n    auto isPrime = true;\n    auto start = abs(n) > 1\
    \ ? 2 : abs(n);\n    foreach(i; start..sqrt(abs(n)) + 1)\n    {\n        if(n\
    \ % i == 0)\n        {\n            isPrime = false;\n            break;\n   \
    \     }\n    }\n    return isPrime ? x : y;\n}\nunittest\n{\n    alias candidate\
    \ = x_or_y;\n\n    assert(candidate(7L, 34L, 12L) == 34L);\n    assert(candidate(15L,\
    \ 8L, 5L) == 5L);\n    assert(candidate(3L, 33L, 5212L) == 33L);\n    assert(candidate(1259L,\
    \ 3L, 52L) == 3L);\n    assert(candidate(7919L, -1L, 12L) == -1L);\n    assert(candidate(3609L,\
    \ 1245L, 583L) == 583L);\n    assert(candidate(91L, 56L, 129L) == 129L);\n   \
    \ assert(candidate(6L, 34L, 1234L) == 1234L);\n    assert(candidate(1L, 2L, 0L)\
    \ == 0L);\n    assert(candidate(2L, 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph0_w2_pm.d(15): Error: module `core.stdc.math` import `abs` not\
    \ found, did you mean function `core.stdc.math.fabs`?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmph0_w2_pm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15,\
    \ 8, 5) == 5\n    \n    \n*/\nlong x_or_y(long n, long x, long y) \n{\n  if(n\
    \ > 1)\n  {\n    foreach(long i; 2..n)\n    {\n        if(n % i == 0)\n      \
    \  {\n            return y;\n        }\n    }\n    return x;\n  }\n  else\n  {\n\
    \    return y;\n  }\n}\nunittest\n{\n    alias candidate = x_or_y;\n\n    assert(candidate(7L,\
    \ 34L, 12L) == 34L);\n    assert(candidate(15L, 8L, 5L) == 5L);\n    assert(candidate(3L,\
    \ 33L, 5212L) == 33L);\n    assert(candidate(1259L, 3L, 52L) == 3L);\n    assert(candidate(7919L,\
    \ -1L, 12L) == -1L);\n    assert(candidate(3609L, 1245L, 583L) == 583L);\n   \
    \ assert(candidate(91L, 56L, 129L) == 129L);\n    assert(candidate(6L, 34L, 1234L)\
    \ == 1234L);\n    assert(candidate(1L, 2L, 0L) == 0L);\n    assert(candidate(2L,\
    \ 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15,\
    \ 8, 5) == 5\n    \n    \n*/\nlong x_or_y(long n, long x, long y) \n{\n    bool\
    \ flg = true;\n    foreach(i; 2..) \n    {\n        if (n % i == 0) \n       \
    \ {\n            flg = false;\n            break;\n        }\n    }\n    return\
    \ (flg ? x : y);\n}\nunittest\n{\n    alias candidate = x_or_y;\n\n    assert(candidate(7L,\
    \ 34L, 12L) == 34L);\n    assert(candidate(15L, 8L, 5L) == 5L);\n    assert(candidate(3L,\
    \ 33L, 5212L) == 33L);\n    assert(candidate(1259L, 3L, 52L) == 3L);\n    assert(candidate(7919L,\
    \ -1L, 12L) == -1L);\n    assert(candidate(3609L, 1245L, 583L) == 583L);\n   \
    \ assert(candidate(91L, 56L, 129L) == 129L);\n    assert(candidate(6L, 34L, 1234L)\
    \ == 1234L);\n    assert(candidate(1L, 2L, 0L) == 0L);\n    assert(candidate(2L,\
    \ 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq5ibrbeo.d(16): Error: expression expected, not `)`\\n/tmp/tmpq5ibrbeo.d(17):\
    \ Error: found `{` when expecting `)`\\n/tmp/tmpq5ibrbeo.d(24): Error: declaration\
    \ expected, not `return`\\n/tmp/tmpq5ibrbeo.d(25): Error: unrecognized declaration\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq5ibrbeo.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError

name: HumanEval_101_words_string
language: d
results:
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You will be given a\
    \ string of words separated by commas or spaces. Your task is\n    to split the\
    \ string into words and return an array of the words.\n    \n    For example:\n\
    \    words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"]\n    words_string(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"]\n    \n*/\nstring[] words_string(string\
    \ s) \n{\n    return split(s, \" , \");\n}\nunittest\n{\n    alias candidate =\
    \ words_string;\n\n    assert(candidate(\"Hi, my name is John\") == [\"Hi\", \"\
    my\", \"name\", \"is\", \"John\"]);\n    assert(candidate(\"One, two, three, four,\
    \ five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n\
    \    assert(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]);\n    assert(candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]);\n    assert(candidate(\"\") == []);\n    assert(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq8oznjh6.d(15): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq8oznjh6.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You will be given a\
    \ string of words separated by commas or spaces. Your task is\n    to split the\
    \ string into words and return an array of the words.\n    \n    For example:\n\
    \    words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"]\n    words_string(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"]\n    \n*/\nstring[] words_string(string\
    \ s) \n{\n    return s.split(\"[, ]+\");\n}\nunittest\n{\n    alias candidate\
    \ = words_string;\n\n    assert(candidate(\"Hi, my name is John\") == [\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n    assert(candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]);\n    assert(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]);\n \
    \   assert(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"]);\n    assert(candidate(\"\") == []);\n\
    \    assert(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsits7xrv.d(15): Error: no property `split` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsits7xrv.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You will be given a\
    \ string of words separated by commas or spaces. Your task is\n    to split the\
    \ string into words and return an array of the words.\n    \n    For example:\n\
    \    words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"]\n    words_string(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"]\n    \n*/\nstring[] words_string(string\
    \ s) \n{\n    string[] words = s.split(\"[, ]\");\n    return words.filter!(a\
    \ => a.length != 0).array;\n}\nunittest\n{\n    alias candidate = words_string;\n\
    \n    assert(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]);\n    assert(candidate(\"One, two, three, four, five, six\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n    assert(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"]);\n    assert(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n    assert(candidate(\"\") == []);\n    assert(candidate(\"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxnx7gcy7.d(15): Error: no property `split` for type `string`\\\
    n/tmp/tmpxnx7gcy7.d(16): Error: no property `filter` for type `string[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxnx7gcy7.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You will be given a\
    \ string of words separated by commas or spaces. Your task is\n    to split the\
    \ string into words and return an array of the words.\n    \n    For example:\n\
    \    words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"]\n    words_string(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"]\n    \n*/\nstring[] words_string(string\
    \ s) \n{\n    string[] arr = new string[0];\n    foreach(i; 0 .. s.length)\n \
    \   {\n        if(s[i] == ' ' || s[i] == ',')\n        {\n            arr ~= s[0\
    \ .. i];\n            s = s[i + 1 .. $];\n            i = 0;\n        }\n    }\n\
    \    return arr;\n}\nunittest\n{\n    alias candidate = words_string;\n\n    assert(candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n   \
    \ assert(candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"]);\n    assert(candidate(\"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"]);\n    assert(candidate(\"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n\
    \    assert(candidate(\"\") == []);\n    assert(candidate(\"ahmed     , gamal\"\
    ) == [\"ahmed\", \"gamal\"]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmpunabsk_f.d(18): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x42913e]\\n??:? immutable(char)[][] tmpunabsk_f.words_string(immutable(char)[])\
    \ [0x427be0]\\n??:? void tmpunabsk_f.__unittest_L27_C1() [0x427cf9]\\n??:? void\
    \ tmpunabsk_f.__modtest() [0x4282f4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42e423]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x428de6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42b2d1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42b360]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42b25d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x428dbd]\\n??:? runModuleUnitTests [0x42e1f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x429550]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4294d7]\\n??:? _d_run_main [0x429442]\\n??:? main [0x428307]\\\
    n??:? __libc_start_main [0xce484554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You will be given a\
    \ string of words separated by commas or spaces. Your task is\n    to split the\
    \ string into words and return an array of the words.\n    \n    For example:\n\
    \    words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"]\n    words_string(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"]\n    \n*/\nstring[] words_string(string\
    \ s) \n{\n    return s.split;\n}\n/*\nunittest\n{\n    alias candidate = words_string;\n\
    \n    assert(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]);\n    assert(candidate(\"One, two, three, four, five, six\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n    assert(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"]);\n    assert(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n    assert(candidate(\"\") == []);\n    assert(candidate(\"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplsvrlqw2.d(17): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplsvrlqw2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You will be given a\
    \ string of words separated by commas or spaces. Your task is\n    to split the\
    \ string into words and return an array of the words.\n    \n    For example:\n\
    \    words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"]\n    words_string(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"]\n    \n*/\nstring[] words_string(string\
    \ s) \n{\n    return split(s);\n}\n/*\nunittest\n{\n    alias candidate = words_string;\n\
    \n    assert(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]);\n    assert(candidate(\"One, two, three, four, five, six\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n    assert(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"]);\n    assert(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n    assert(candidate(\"\") == []);\n    assert(candidate(\"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuibuue_t.d(17): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuibuue_t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You will be given a\
    \ string of words separated by commas or spaces. Your task is\n    to split the\
    \ string into words and return an array of the words.\n    \n    For example:\n\
    \    words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"]\n    words_string(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"]\n    \n*/\nstring[] words_string(string\
    \ s) \n{\n    return split(s);\n}\n/*\nunittest\n{\n    alias candidate = words_string;\n\
    \n    assert(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]);\n    assert(candidate(\"One, two, three, four, five, six\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n    assert(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"]);\n    assert(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n    assert(candidate(\"\") == []);\n    assert(candidate(\"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsw7gbdw4.d(17): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsw7gbdw4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You will be given a\
    \ string of words separated by commas or spaces. Your task is\n    to split the\
    \ string into words and return an array of the words.\n    \n    For example:\n\
    \    words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"]\n    words_string(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"]\n    \n*/\nstring[] words_string(string\
    \ s) \n{\n    return s.split(' ').split(',');\n}\nunittest\n{\n    alias candidate\
    \ = words_string;\n\n    assert(candidate(\"Hi, my name is John\") == [\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n    assert(candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]);\n    assert(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]);\n \
    \   assert(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"]);\n    assert(candidate(\"\") == []);\n\
    \    assert(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn0tvjeni.d(15): Error: no property `split` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn0tvjeni.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You will be given a\
    \ string of words separated by commas or spaces. Your task is\n    to split the\
    \ string into words and return an array of the words.\n    \n    For example:\n\
    \    words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"]\n    words_string(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"]\n    \n*/\nstring[] words_string(string\
    \ s) \n{\n    return split(s);\n}\n/*\nunittest\n{\n    alias candidate = words_string;\n\
    \n    assert(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]);\n    assert(candidate(\"One, two, three, four, five, six\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n    assert(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"]);\n    assert(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n    assert(candidate(\"\") == []);\n    assert(candidate(\"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_dasg5nw.d(17): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_dasg5nw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You will be given a\
    \ string of words separated by commas or spaces. Your task is\n    to split the\
    \ string into words and return an array of the words.\n    \n    For example:\n\
    \    words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"]\n    words_string(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"]\n    \n*/\nstring[] words_string(string\
    \ s) \n{\n    return split(s);\n}\nunittest\n{\n    alias candidate = words_string;\n\
    \n    assert(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]);\n    assert(candidate(\"One, two, three, four, five, six\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n    assert(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"]);\n    assert(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n    assert(candidate(\"\") == []);\n    assert(candidate(\"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmz0o3_02.d(15): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmz0o3_02.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You will be given a\
    \ string of words separated by commas or spaces. Your task is\n    to split the\
    \ string into words and return an array of the words.\n    \n    For example:\n\
    \    words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"]\n    words_string(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"]\n    \n*/\nstring[] words_string(string\
    \ s) \n{\n    immutable a = s.split;\n    return a;\n}\nunittest\n{\n    alias\
    \ candidate = words_string;\n\n    assert(candidate(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n    assert(candidate(\"One,\
    \ two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n    assert(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"]);\n    assert(candidate(\"One,, two, three, four, five, six,\") ==\
    \ [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n    assert(candidate(\"\
    \") == []);\n    assert(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"\
    ]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp13gwelpa.d(15): Error: no property `split` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp13gwelpa.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You will be given a\
    \ string of words separated by commas or spaces. Your task is\n    to split the\
    \ string into words and return an array of the words.\n    \n    For example:\n\
    \    words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"]\n    words_string(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"]\n    \n*/\nstring[] words_string(string\
    \ s) \n{\n    return s.split();\n}\nunittest\n{\n    alias candidate = words_string;\n\
    \n    assert(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]);\n    assert(candidate(\"One, two, three, four, five, six\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n    assert(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"]);\n    assert(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n    assert(candidate(\"\") == []);\n    assert(candidate(\"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppnkm6lho.d(15): Error: no property `split` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppnkm6lho.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You will be given a\
    \ string of words separated by commas or spaces. Your task is\n    to split the\
    \ string into words and return an array of the words.\n    \n    For example:\n\
    \    words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"]\n    words_string(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"]\n    \n*/\nstring[] words_string(string\
    \ s) \n{\n    string[] words;\n    auto n = 0;\n    foreach(i, c; s)\n    {\n\
    \        if(c == ' ' || c == ',')\n        {\n            words ~= s[0..i];\n\
    \            s = s[i+1..$];\n            n++;\n        }\n    }\n    words ~=\
    \ s;\n    return words;\n}\nunittest\n{\n    alias candidate = words_string;\n\
    \n    assert(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]);\n    assert(candidate(\"One, two, three, four, five, six\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n    assert(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"]);\n    assert(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n    assert(candidate(\"\") == []);\n    assert(candidate(\"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmpsvvqp5ys.d(21): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x42916e]\\n??:? immutable(char)[][] tmpsvvqp5ys.words_string(immutable(char)[])\
    \ [0x427c13]\\n??:? void tmpsvvqp5ys.__unittest_L29_C1() [0x427d29]\\n??:? void\
    \ tmpsvvqp5ys.__modtest() [0x428324]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42e3f7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x428e16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42b2a5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42b334]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42b231]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x428ded]\\n??:? runModuleUnitTests [0x42e1cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x429580]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x429507]\\n??:? _d_run_main [0x429472]\\n??:? main [0x428337]\\\
    n??:? __libc_start_main [0x5ebc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You will be given a\
    \ string of words separated by commas or spaces. Your task is\n    to split the\
    \ string into words and return an array of the words.\n    \n    For example:\n\
    \    words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"]\n    words_string(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"]\n    \n*/\nstring[] words_string(string\
    \ s) \n{\n    string[] res;\n    foreach(x; s.split(\",\").map!(a => a.trim()).filter!(a\
    \ => a != \"\"))\n    {\n        res ~= x;\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = words_string;\n\n    assert(candidate(\"Hi, my name is\
    \ John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n    assert(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]);\n    assert(candidate(\"Hi, my name\") == [\"Hi\", \"my\"\
    , \"name\"]);\n    assert(candidate(\"One,, two, three, four, five, six,\") ==\
    \ [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n    assert(candidate(\"\
    \") == []);\n    assert(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"\
    ]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplrrfwkmn.d(16): Error: no property `split` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplrrfwkmn.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You will be given a\
    \ string of words separated by commas or spaces. Your task is\n    to split the\
    \ string into words and return an array of the words.\n    \n    For example:\n\
    \    words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"]\n    words_string(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"]\n    \n*/\nstring[] words_string(string\
    \ s) \n{\n    return split(s);\n}\n/*\nunittest\n{\n    alias candidate = words_string;\n\
    \n    assert(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]);\n    assert(candidate(\"One, two, three, four, five, six\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n    assert(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"]);\n    assert(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n    assert(candidate(\"\") == []);\n    assert(candidate(\"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjumn4xyt.d(17): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjumn4xyt.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You will be given a\
    \ string of words separated by commas or spaces. Your task is\n    to split the\
    \ string into words and return an array of the words.\n    \n    For example:\n\
    \    words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"]\n    words_string(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"]\n    \n*/\nstring[] words_string(string\
    \ s) \n{\n    return split(s);\n}\n/*\nunittest\n{\n    alias candidate = words_string;\n\
    \n    assert(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]);\n    assert(candidate(\"One, two, three, four, five, six\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n    assert(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"]);\n    assert(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n    assert(candidate(\"\") == []);\n    assert(candidate(\"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq2cwljh2.d(17): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq2cwljh2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You will be given a\
    \ string of words separated by commas or spaces. Your task is\n    to split the\
    \ string into words and return an array of the words.\n    \n    For example:\n\
    \    words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"]\n    words_string(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"]\n    \n*/\nstring[] words_string(string\
    \ s) \n{\n    auto words = split(s, ' ');\n    words = words.replace(\",\", \"\
    \");\n    return words;\n}\nunittest\n{\n    alias candidate = words_string;\n\
    \n    assert(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]);\n    assert(candidate(\"One, two, three, four, five, six\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n    assert(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"]);\n    assert(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n    assert(candidate(\"\") == []);\n    assert(candidate(\"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcmvhcny9.d(15): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcmvhcny9.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You will be given a\
    \ string of words separated by commas or spaces. Your task is\n    to split the\
    \ string into words and return an array of the words.\n    \n    For example:\n\
    \    words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"]\n    words_string(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"]\n    \n*/\nstring[] words_string(string\
    \ s) \n{\n    return s.replace(\" \", \",\").split(\",\");\n}\nunittest\n{\n \
    \   alias candidate = words_string;\n\n    assert(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n    assert(candidate(\"One,\
    \ two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n    assert(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"]);\n    assert(candidate(\"One,, two, three, four, five, six,\") ==\
    \ [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n    assert(candidate(\"\
    \") == []);\n    assert(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"\
    ]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf2wvrcmv.d(15): Error: no property `replace` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf2wvrcmv.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You will be given a\
    \ string of words separated by commas or spaces. Your task is\n    to split the\
    \ string into words and return an array of the words.\n    \n    For example:\n\
    \    words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"]\n    words_string(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"]\n    \n*/\nstring[] words_string(string\
    \ s) \n{\n    return split(s, ' ');\n}\nunittest\n{\n    alias candidate = words_string;\n\
    \n    assert(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]);\n    assert(candidate(\"One, two, three, four, five, six\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n    assert(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"]);\n    assert(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n    assert(candidate(\"\") == []);\n    assert(candidate(\"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2bmvh15e.d(15): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2bmvh15e.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    You will be given a\
    \ string of words separated by commas or spaces. Your task is\n    to split the\
    \ string into words and return an array of the words.\n    \n    For example:\n\
    \    words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"]\n    words_string(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"]\n    \n*/\nstring[] words_string(string\
    \ s) \n{\n    auto result = s.split(\" \");\n    return result;\n}\nunittest\n\
    {\n    alias candidate = words_string;\n\n    assert(candidate(\"Hi, my name is\
    \ John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n    assert(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]);\n    assert(candidate(\"Hi, my name\") == [\"Hi\", \"my\"\
    , \"name\"]);\n    assert(candidate(\"One,, two, three, four, five, six,\") ==\
    \ [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n    assert(candidate(\"\
    \") == []);\n    assert(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"\
    ]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp23qnvgp_.d(15): Error: no property `split` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp23qnvgp_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
